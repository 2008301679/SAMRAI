#########################################################################
##
## This file is part of the SAMRAI distribution.  For full copyright 
## information, see COPYRIGHT and COPYING.LESSER. 
##
## Copyright:     (c) 1997-2013 Lawrence Livermore National Security, LLC
## Description:   README SAMRAI test package.
##
#########################################################################

The SAMRAI/source/test directory contains test codes that
verify correctness of various components in the library.  
All tests included here are run through our autotest suite
to assure accurate results.

The following summarizes the tests carried out in the 
different sub-directories:

applications:   
   Compile cases in the /source/applications directory
   with the local "AutoTester" class included.  The AutoTester
   class checks the state of various objects used in the 
   application at the end of the run and compares them to 
   the expected "correct" result entered in the input file.

   The Euler case carries out one additional test on the
   correctness of the Riemann problem.  Data files specify 
   the correct fluxes after a certain number of steps (to
   10 digits accuracy).  The solution can be verified by
   doing a "diff" on the output data file with these
   correct result files.

   Requires the testlib be built.

async_comm:
   Unit test of asynchronous communication.

   All test source code is contained in the SAMRAI/source/test/async_comm
   directory.

boundary:
   A set of tests to check the correctness of the routines to set various 
   physical boundary conditions supplied by the CartesianBoundaryUtilities
   classes in the Application Utilities package.

   All test source code is contained in the SAMRAI/source/test/boundary
   directory.

clustering:
   Unit test of Berger Rigoutsos algorithm.

   Requires the testlib be built.

communication:
   Performs a set of tests that invoke data transfer operations
   between patches using cell, face, node, and side datatypes.
   In addition to communication, this test verifies the accuracy
   of the interpolation (i.e. coarsen and refine) operations 
   carried out on these various datatypes.  The grid hierarchy 
   configuration and number of processors may be set through the 
   input file.  

   Requires the testlib be built.

dataaccess:
   Unit test of SAMRAI PatchData access via PatchData iterators and Indexes.

   All test source code is contained in the SAMRAI/source/test/dataaccess
   directory.

dataops:
   Tests various data operations with cell, face, node, side, and edge
   centerings across the hierarchy and for a variety of underlying datatypes.
   The operations set data on patches and test operations like linear_sum(),
   dot_product(), axmy(), etc. on the hierarchy.  The grid hierarchy is fixed.

   All test source code is contained in the SAMRAI/source/test/dataops
   directory.

dimension:
   Unit test of SAMRAI Dimension class.

   All test source code is contained in the SAMRAI/source/test/dimension
   directory.

dlbg:
   Test of the BergerRigoutsos algorithm and the Connectors generated by it.

   Requires the testlib be built.

FAC_adaptive:
   Test of FAC solver which uses true mesh adaptivity based on the evolution of
   the solution.  A variety of functionally defined boundary conditions are
   applied depending on which test is run.

   Requires the testlib be built.

FAC_nonadaptive:
   Unit test of FAC solver which uses pre-set user defined refined boxes.  The
   mesh is adaptive but not in a "real" sense.  Simple constant boundary
   conditions are used.

   All test source code is contained in the SAMRAI/source/test/FAC_nonadaptive
   directory.

fill_pattern:
   Unit test of SAMRAI fill patterns.

   All test source code is contained in the SAMRAI/source/test/fill_pattern
   directory.

hierarchy:
   A set of tests to check the correctness of the PatchHierarchy operations
   to make coarsened and refined versions of a given AMR patch hierarchy.

   All test source code is contained in the SAMRAI/source/test/hierarchy
   directory.

hypre:
   Unit test of CellPoissonHypreSolver.

   All test source code is contained in the SAMRAI/source/test/hypre directory.

indexdata:
   Unit test of IndexData.

   All test source code is contained in the SAMRAI/source/test/indexdata
   directory.

inputdb:
   A set of tests to check the correctness of the routines to read data
   from SAMRAI inut files defined in the tbox:InputDatabase class.

   All test source code is contained in the SAMRAI/source/test/inputdb
   directory.

LoadBalanceCorrectness:
   Requires the testlib be built.

logger:
   All test source code is contained in the SAMRAI/source/test/logger
   directory.

MappedBoxLevelConnectorUtilsTests:
   All test source code is contained in the
   SAMRAI/source/test/MappedBoxLevelConnectorUtilsTests directory.

mapped_box_set_iterators:
   Tests the iterators that are used on a BoxContainer.

   All test source code is contained in the
   SAMRAI/source/test/mapped_box_set_iterators directory.

MappingConnector:
   Tests the modify method in MappingConnector.
   
   All test source code is contained in the SAMRAI/source/test/MappingConnector
   directory.

mblkcomm:
   Performs tests of refine operations on multiblock configurations.
 
   All test source code is contained in the SAMRAI/source/test/mblkcomm
   directory.

MblkEuler:
   A test similar to the applications/Euler test but set up to work in
   a multiblock configuration.

   Requires the testlib be built.

MblkLinAdv:
   A test similar to the applications/LinAdv test but set up to work in
   a multiblock configuration.

   Requires the testlib be built.

mblktree:
   All test source code is contained in the SAMRAI/source/test/mblktree
   directory.

nonlinear:
   All test source code is contained in the SAMRAI/source/test/nonlinear
   directory.

patchbdrysum:
   A set of tests to check operations for summing node and edge data across
   shared points on the boundaries of patches in a SAMRAI patch hierarchy. 

   All test source code is contained in the SAMRAI/examples/patchbdrysum
   directory.

performance:
   Requires the testlib be built.

rank_group:
   Unit test of RankGroup class.

   All test source code is contained in the SAMRAI/examples/rank_group
   directory.

restartdb:
   All test source code is contained in the SAMRAI/examples/restartdb
   directory.

samrai_mpi:
   All test source code is contained in the SAMRAI/examples/samrai_mpi
   directory.

sparsedata:
   All test source code is contained in the SAMRAI/examples/sparsedata
   directory.

sundials:
   All test source code is contained in the SAMRAI/examples/sundials directory.

testlib:
   Not a test itself but a collection of classes and methods common to multiple
   tests.  There are no associated tests.

testtools:

timers:
   Tests use of timers, verifying nested structure, input,
   parallel usage, and restart capability.

   All test source code is contained in the SAMRAI/examples/timers directory.

transformation:
   All test source code is contained in the SAMRAI/examples/transformation
   directory.

variables:
   A set of tests to check operations provided by the SAMRAI VariableDatabase
   class.

   All test source code is contained in the SAMRAI/source/test/variables
   directory.

vector:
   Tests the SAMRAI vector classes. In particular, the SAMRAI-PETSc
   and SAMRAI-Kinsol vector interfaces.  Tests use a specific
   grid hierarchy layout and can only be tested on 1 or 2 processors.

   All test source code is contained in the SAMRAI/examples/vector directory.
