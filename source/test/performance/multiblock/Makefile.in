#########################################################################
##
## This file is part of the SAMRAI distribution.  For full copyright
## information, see COPYRIGHT and COPYING.LESSER.
##
## Copyright:     (c) 1997-2015 Lawrence Livermore National Security, LLC
## Description:   Multiblock performance tests.
##
#########################################################################

SAMRAI        = @top_srcdir@
SRCDIR        = @srcdir@
SUBDIR        = source/test/performance/multiblock
VPATH         = @srcdir@
TESTTOOLS     = ../../testtools
OBJECT        = ../../../..
REPORT        = $(OBJECT)/report.xml
TESTLIBDIR    = $(OBJECT)/source/test/testlib
TESTLIB       = $(TESTLIBDIR)/libSAMRAI_test$(LIB_SUFFIX)

default:      check

include $(OBJECT)/config/Makefile.config

CPPFLAGS_EXTRA= 

NUM_TESTS     = 0

TEST_NPROCS   = @TEST_NPROCS@

CXX_OBJS      = MblkGeometry.o main.o MblkLinAdv.o \
		SkeletonOutersideDoubleWeightedAverage.o

F_OBJS      = stufprobc.o trace1d.o trace2d.o trace3d.o grad2d.o grad3d.o flux2d.o flux3d.o fluxcorner3d.o stable2d.o stable3d.o init2d.o init3d.o

main:	$(CXX_OBJS) $(F_OBJS) $(LIBSAMRAIDEPEND) $(TESTLIB)
	(cd $(TESTLIBDIR) && $(MAKE) library) || exit 1
	$(CXX) $(CXXFLAGS) $(LDFLAGS) $(CXX_OBJS) $(F_OBJS) $(TESTLIB) \
	$(LIBSAMRAI) $(LDLIBS) -o $@

# Prevents "No rule to make target" error.  Built in the rule for main.
$(TESTLIB):

check:

checkcompile: main

checktest:
	$(RM) makecheck.logfile
	$(MAKE) check 2>&1 | $(TEE) makecheck.logfile
	$(TESTTOOLS)/testcount.sh $(TEST_NPROCS) $(NUM_TESTS) 0 makecheck.logfile
	$(RM) makecheck.logfile

examples:

perf2d:       main
	@for i in performance_inputs/*.2d.*input ; do \
	 $(OBJECT)/config/serpa-run $(TEST_NPROCS) \
	       ./main $${i}; \
	done

perf3d:       main
	@for i in performance_inputs/*.3d.*input ; do \
	 $(OBJECT)/config/serpa-run $(TEST_NPROCS) \
	       ./main $${i}; \
	done

perf:
	$(MAKE) perf2d
	$(MAKE) perf3d

everything:
	$(MAKE) checkcompile || exit 1
	$(MAKE) checktest
	$(MAKE) examples
	$(MAKE) perf

checkclean:
	$(CLEAN_COMMON_CHECK_FILES)
	$(RM) *.timing*

clean: checkclean
	$(CLEAN_COMMON_TEST_FILES)
	$(RM) main

redo:
	$(RM) main

include $(SRCDIR)/Makefile.depend

FORTRAN       = $(SRCDIR)/fortran
M4DIRS        = -DFORTDIR=$(FORTRAN) $(SAMRAI_M4_FLAGS)

init2d.o:       $(FORTRAN)/init2d.m4 $(PDAT_FORTDIR)/pdat_m4arrdim2d.i $(FORTRAN)/const.i $(FORTRAN)/probparams.i
	$(M4) $(M4DIRS) $(FORTRAN)/init2d.m4 > init2d.f
	$(F77) $(FFLAGS) -c init2d.f -o $@

init3d.o:       $(FORTRAN)/init3d.m4 $(PDAT_FORTDIR)/pdat_m4arrdim3d.i $(FORTRAN)/const.i $(FORTRAN)/probparams.i
	$(M4) $(M4DIRS) $(FORTRAN)/init3d.m4 > init3d.f
	$(F77) $(FFLAGS) -c init3d.f -o $@

flux2d.o:       $(FORTRAN)/flux2d.m4 $(PDAT_FORTDIR)/pdat_m4arrdim2d.i $(FORTRAN)/m4flux2d.i $(FORTRAN)/const.i $(FORTRAN)/probparams.i
	$(M4) $(M4DIRS) $(FORTRAN)/flux2d.m4 > flux2d.f
	$(F77) $(FFLAGS) -c flux2d.f -o $@

flux3d.o:       $(FORTRAN)/flux3d.m4 $(PDAT_FORTDIR)/pdat_m4arrdim3d.i $(FORTRAN)/m4flux3d.i $(FORTRAN)/const.i $(FORTRAN)/probparams.i
	$(M4) $(M4DIRS) $(FORTRAN)/flux3d.m4 > flux3d.f
	$(F77) $(FFLAGS) -c flux3d.f -o $@

grad2d.o:       $(FORTRAN)/grad2d.m4 $(PDAT_FORTDIR)/pdat_m4arrdim2d.i $(FORTRAN)/const.i $(FORTRAN)/probparams.i
	$(M4) $(M4DIRS) $(FORTRAN)/grad2d.m4 > grad2d.f
	$(F77) $(FFLAGS) -c grad2d.f -o $@

grad3d.o:       $(FORTRAN)/grad3d.m4 $(PDAT_FORTDIR)/pdat_m4arrdim3d.i $(FORTRAN)/const.i $(FORTRAN)/probparams.i
	$(M4) $(M4DIRS) $(FORTRAN)/grad3d.m4 > grad3d.f
	$(F77) $(FFLAGS) -c grad3d.f -o $@

trace1d.o:      $(FORTRAN)/trace1d.m4 $(FORTRAN)/const.i $(FORTRAN)/probparams.i
	$(M4) $(M4DIRS) $(FORTRAN)/trace1d.m4 > trace1d.f
	$(F77) $(FFLAGS) -c trace1d.f -o $@

trace2d.o:      $(FORTRAN)/trace2d.m4 $(PDAT_FORTDIR)/pdat_m4arrdim2d.i $(FORTRAN)/m4trace2d.i $(FORTRAN)/const.i $(FORTRAN)/probparams.i
	$(M4) $(M4DIRS) $(FORTRAN)/trace2d.m4 > trace2d.f
	$(F77) $(FFLAGS) -c trace2d.f -o $@

trace3d.o:      $(FORTRAN)/trace3d.m4 $(PDAT_FORTDIR)/pdat_m4arrdim3d.i $(FORTRAN)/m4trace3d.i $(FORTRAN)/const.i $(FORTRAN)/probparams.i
	$(M4) $(M4DIRS) $(FORTRAN)/trace3d.m4 > trace3d.f
	$(F77) $(FFLAGS) -c trace3d.f -o $@

stufprobc.o:    $(FORTRAN)/stufprobc.m4 $(FORTRAN)/probparams.i
	$(M4) $(M4DIRS) $(FORTRAN)/stufprobc.m4 > stufprobc.f
	$(F77) $(FFLAGS) -c stufprobc.f -o $@

stable2d.o:     $(FORTRAN)/stable2d.m4 $(PDAT_FORTDIR)/pdat_m4arrdim2d.i $(FORTRAN)/const.i
	$(M4) $(M4DIRS) $(FORTRAN)/stable2d.m4 > stable2d.f
	$(F77) $(FFLAGS) -c stable2d.f -o $@

stable3d.o:     $(FORTRAN)/stable3d.m4 $(PDAT_FORTDIR)/pdat_m4arrdim3d.i $(FORTRAN)/const.i
	$(M4) $(M4DIRS) $(FORTRAN)/stable3d.m4 > stable3d.f
	$(F77) $(FFLAGS) -c stable3d.f -o $@

fluxcorner3d.o: $(FORTRAN)/fluxcorner3d.m4 $(PDAT_FORTDIR)/pdat_m4arrdim3d.i $(FORTRAN)/m4fluxcorner3d.i $(FORTRAN)/const.i $(FORTRAN)/probparams.i
	$(M4) $(M4DIRS) $(FORTRAN)/fluxcorner3d.m4 > fluxcorner3d.f
	$(F77) $(FFLAGS) -c fluxcorner3d.f -o $@


