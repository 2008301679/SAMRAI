*****************************************************************************
  Copyright 1997-2013
  Lawrence Livermore National Security, LLC.
  All rights reserved.
*****************************************************************************

                     Release Notes for SAMRAI v3.7.0

     (notes for previous releases may be found in /SAMRAI/docs/release)

*****************************************************************************

Please direct any questions related to these notes to the SAMRAI development
team by sending email to samrai@llnl.gov.

LLNL users can use the discussion groups on the LLNL Sourceforge site:

https://sourceforge.llnl.gov/sf/discussion/do/listForums/projects.samrai/discussion

*****************************************************************************

Where to report Bugs
--------------------

If a bug is found in the SAMRAI library, we ask that you kindly report
it to us so that we may fix it.  LLNL users may report bugs using the
LLNL Sourceforge site if you have a sourceforge account:

https://sourceforge.llnl.gov/sf/tracker/do/listTrackers/projects.samrai/tracker

Bugs found by other users should send email to samrai-bugs@llnl.gov.

*****************************************************************************

----------------------------------------------------------------------------
                Significant bug fixes
----------------------------------------------------------------------------

1) The MappingConnector assignment operator now returns a non-const
   MappingConnector as it should.
     
*****************************************************************************

----------------------------------------------------------------------------
                Summary of what's new
-----------------------------------------------------------------------------

This section contains a summary of additions to SAMRAI.  More detailed
descriptions of items in the following list are provided below.

1) There is now a new configure option, --enable-threading, which will add
   the appropriate compiler directive to enable the parallelizer to generate
   multi-threaded code based on the OpenMP directives.  The construction of
   messages sent to other processors by the various bridge() and modify()
   methods in the OverlapConnectorAlgorithm and MappingConnectorAlgorithm
   respectively is now threaded.

2) It is now possible to run on problems with a global cell count in excess
   of 2G.

-----------------------------------------------------------------------------
                Summary of what's changed
-----------------------------------------------------------------------------

This section contains a summary of changes to SAMRAI.  More detailed
descriptions of items in the following list are provided below.

1) The efficiency_tolerance and combine_efficiency input parameters have
   been removed from GriddingAlgorithm and moved to BergerRigoutsos.  The
   corresponding args have been removed from findBoxesContainingTags().

2) Begining with Boost 1.53, the static_cast_tag and dynamic_cast_tag and
   the constructors using them have been removed from shared_ptr.  We have
   therefore eliminated our use of them and the macro, BOOST_CAST_TAG from
   the library.


*****************************************************************************

-----------------------------------------------------------------------------
                Details about what's new
-----------------------------------------------------------------------------

1) The --enable-threading configuration option should be used with caution.
   If used one should first ensure that their application is thread safe.
   Also, one should ensure that threading will provide a performance
   advantage on the target platform.  On some platforms we have seen
   significant performance degradation simply from enabling threading.

2) The global number of cells held by BoxLevel is now a long.

-----------------------------------------------------------------------------
                Details about what's changed
-----------------------------------------------------------------------------

1) The notions of efficiency_tolerance and combine_efficiency do not apply
   to box generators in general.  In SAMRAI the only box generator to which
   they apply is BergerRigoutsos.  Therefore the signature of the abstract
   box generator method, findBoxesContainingTags, has been changed to
   eliminate these args.  This method is called from GriddingAlgorithm which
   held these parameters so it no longer makes sense for the parameters to be
   associated with GriddingAlgorithm.  Instead they are associated with
   BergerRigoutsos and this class' findBoxesContainingTags simply uses them
   as needed.

2) If you have used the BOOST_CAST_TAG you will need to use the equivalent
   but less compact construct.  For example if you had:

   boost::shared_ptr<BaseClass> base = ...;
   ...
   boost::shared_ptr<DerivedClass> derived(base, BOOST_CAST_TAG);

   it will need to be replaced with:

   boost::shared_ptr<BaseClass> base = ...;
   ...
   boost::shared_ptr<DerivedClass> derived(
      BOOST_CAST<DerivedClass, BaseClass>(base));


=============================================================================
=============================================================================
