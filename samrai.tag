<?xml version='1.0' encoding='ISO-8859-1' standalone='yes' ?>
<tagfile>
  <compound kind="page">
    <name>main</name>
    <title>SAMRAI Source Code Documentation</title>
    <filename>main</filename>
    <docanchor file="main">using_samrai_dox</docanchor>
  </compound>
  <compound kind="file">
    <name>manual_femutils.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/dox/</path>
    <filename>manual__femutils_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>manual_hyperbolic.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/dox/</path>
    <filename>manual__hyperbolic_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>manual_implicit.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/dox/</path>
    <filename>manual__implicit_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>manual_method_of_lines.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/dox/</path>
    <filename>manual__method__of__lines_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>manual_time_refinement.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/dox/</path>
    <filename>manual__time__refinement_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>HyperbolicLevelIntegrator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>HyperbolicLevelIntegrator_8C</filename>
    <includes id="HyperbolicLevelIntegrator_8h" name="HyperbolicLevelIntegrator.h" local="yes" imported="no">SAMRAI/algs/HyperbolicLevelIntegrator.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceDataFactory_8h" name="FaceDataFactory.h" local="yes" imported="no">SAMRAI/pdat/FaceDataFactory.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <includes id="OutersideData_8h" name="OutersideData.h" local="yes" imported="no">SAMRAI/pdat/OutersideData.h</includes>
    <includes id="OutersideVariable_8h" name="OutersideVariable.h" local="yes" imported="no">SAMRAI/pdat/OutersideVariable.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideDataFactory_8h" name="SideDataFactory.h" local="yes" imported="no">SAMRAI/pdat/SideDataFactory.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="CoarsenSchedule_8h" name="CoarsenSchedule.h" local="yes" imported="no">SAMRAI/xfer/CoarsenSchedule.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="HyperbolicLevelIntegrator_8I" name="HyperbolicLevelIntegrator.I" local="yes" imported="no">SAMRAI/algs/HyperbolicLevelIntegrator.I</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>HyperbolicLevelIntegrator_8C.html</anchorfile>
      <anchor>03a6be448a3ccd3e1e11c96b9db348eb</anchor>
      <arglist>(upfluxsum1d, UPFLUXSUM1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HyperbolicLevelIntegrator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>HyperbolicLevelIntegrator_8h</filename>
    <includes id="HyperbolicPatchStrategy_8h" name="HyperbolicPatchStrategy.h" local="yes" imported="no">SAMRAI/algs/HyperbolicPatchStrategy.h</includes>
    <includes id="TimeRefinementLevelStrategy_8h" name="TimeRefinementLevelStrategy.h" local="yes" imported="no">SAMRAI/algs/TimeRefinementLevelStrategy.h</includes>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="VariableContext_8h" name="VariableContext.h" local="yes" imported="no">SAMRAI/hier/VariableContext.h</includes>
    <includes id="GriddingAlgorithm_8h" name="GriddingAlgorithm.h" local="yes" imported="no">SAMRAI/mesh/GriddingAlgorithm.h</includes>
    <includes id="StandardTagAndInitStrategy_8h" name="StandardTagAndInitStrategy.h" local="yes" imported="no">SAMRAI/mesh/StandardTagAndInitStrategy.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <includes id="CoarsenAlgorithm_8h" name="CoarsenAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/CoarsenAlgorithm.h</includes>
    <includes id="RefineAlgorithm_8h" name="RefineAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/RefineAlgorithm.h</includes>
    <includes id="RefineSchedule_8h" name="RefineSchedule.h" local="yes" imported="no">SAMRAI/xfer/RefineSchedule.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="Statistic_8h" name="Statistic.h" local="yes" imported="no">SAMRAI/tbox/Statistic.h</includes>
    <includes id="Statistician_8h" name="Statistician.h" local="yes" imported="no">SAMRAI/tbox/Statistician.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
    <class kind="class">SAMRAI::algs::HyperbolicLevelIntegrator</class>
    <member kind="define">
      <type>#define</type>
      <name>HLI_RECORD_STATS</name>
      <anchorfile>HyperbolicLevelIntegrator_8h.html</anchorfile>
      <anchor>ca00401a612f0254f83a75ffcaf62cbb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HyperbolicLevelIntegrator.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>HyperbolicLevelIntegrator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>HyperbolicPatchStrategy.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>HyperbolicPatchStrategy_8C</filename>
    <includes id="HyperbolicPatchStrategy_8h" name="HyperbolicPatchStrategy.h" local="yes" imported="no">SAMRAI/algs/HyperbolicPatchStrategy.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>HyperbolicPatchStrategy.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>HyperbolicPatchStrategy_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="VariableContext_8h" name="VariableContext.h" local="yes" imported="no">SAMRAI/hier/VariableContext.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <includes id="CoarsenPatchStrategy_8h" name="CoarsenPatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/CoarsenPatchStrategy.h</includes>
    <includes id="GriddingAlgorithm_8h" name="GriddingAlgorithm.h" local="yes" imported="no">SAMRAI/mesh/GriddingAlgorithm.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
    <class kind="class">SAMRAI::algs::HyperbolicPatchStrategy</class>
  </compound>
  <compound kind="file">
    <name>ImplicitEquationStrategy.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>ImplicitEquationStrategy_8C</filename>
    <includes id="ImplicitEquationStrategy_8h" name="ImplicitEquationStrategy.h" local="yes" imported="no">SAMRAI/algs/ImplicitEquationStrategy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>ImplicitEquationStrategy.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>ImplicitEquationStrategy_8h</filename>
    <includes id="SAMRAIVectorReal_8h" name="SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/SAMRAIVectorReal.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
    <class kind="class">SAMRAI::algs::ImplicitEquationStrategy</class>
  </compound>
  <compound kind="file">
    <name>ImplicitIntegrator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>ImplicitIntegrator_8C</filename>
    <includes id="ImplicitIntegrator_8h" name="ImplicitIntegrator.h" local="yes" imported="no">SAMRAI/algs/ImplicitIntegrator.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="ImplicitIntegrator_8I" name="ImplicitIntegrator.I" local="yes" imported="no">SAMRAI/algs/ImplicitIntegrator.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>ImplicitIntegrator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>ImplicitIntegrator_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <includes id="ImplicitEquationStrategy_8h" name="ImplicitEquationStrategy.h" local="yes" imported="no">SAMRAI/algs/ImplicitEquationStrategy.h</includes>
    <includes id="NonlinearSolverStrategy_8h" name="NonlinearSolverStrategy.h" local="yes" imported="no">SAMRAI/solv/NonlinearSolverStrategy.h</includes>
    <includes id="SAMRAIVectorReal_8h" name="SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/SAMRAIVectorReal.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="InputDatabase_8h" name="InputDatabase.h" local="yes" imported="no">SAMRAI/tbox/InputDatabase.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
    <class kind="class">SAMRAI::algs::ImplicitIntegrator</class>
  </compound>
  <compound kind="file">
    <name>ImplicitIntegrator.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>ImplicitIntegrator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>MblkPatchBoundaryNodeSum.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>MblkPatchBoundaryNodeSum_8C</filename>
    <includes id="MblkPatchBoundaryNodeSum_8h" name="MblkPatchBoundaryNodeSum.h" local="yes" imported="no">SAMRAI/algs/MblkPatchBoundaryNodeSum.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeDataFactory_8h" name="NodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/NodeDataFactory.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="OuternodeData_8h" name="OuternodeData.h" local="yes" imported="no">SAMRAI/pdat/OuternodeData.h</includes>
    <includes id="OuternodeDoubleConstantCoarsen_8h" name="OuternodeDoubleConstantCoarsen.h" local="yes" imported="no">SAMRAI/pdat/OuternodeDoubleConstantCoarsen.h</includes>
    <includes id="OuternodeSumTransactionFactory_8h" name="OuternodeSumTransactionFactory.h" local="yes" imported="no">SAMRAI/algs/OuternodeSumTransactionFactory.h</includes>
    <includes id="CoarsenAlgorithm_8h" name="CoarsenAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/CoarsenAlgorithm.h</includes>
    <includes id="RefineAlgorithm_8h" name="RefineAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/RefineAlgorithm.h</includes>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="MblkPatchBoundaryNodeSum_8I" name="MblkPatchBoundaryNodeSum.I" local="yes" imported="no">SAMRAI/algs/MblkPatchBoundaryNodeSum.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>MblkPatchBoundaryNodeSum.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>MblkPatchBoundaryNodeSum_8h</filename>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="CoarseFineBoundary_8h" name="CoarseFineBoundary.h" local="yes" imported="no">SAMRAI/hier/CoarseFineBoundary.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="RefineSchedule_8h" name="RefineSchedule.h" local="yes" imported="no">SAMRAI/xfer/RefineSchedule.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="OuternodeVariable_8h" name="OuternodeVariable.h" local="yes" imported="no">SAMRAI/pdat/OuternodeVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="CoarsenSchedule_8h" name="CoarsenSchedule.h" local="yes" imported="no">SAMRAI/xfer/CoarsenSchedule.h</includes>
    <includes id="RefineTransactionFactory_8h" name="RefineTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/RefineTransactionFactory.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
    <class kind="class">SAMRAI::algs::MblkPatchBoundaryNodeSum</class>
  </compound>
  <compound kind="file">
    <name>MblkPatchBoundaryNodeSum.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>MblkPatchBoundaryNodeSum_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>MethodOfLinesIntegrator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>MethodOfLinesIntegrator_8C</filename>
    <includes id="MethodOfLinesIntegrator_8h" name="MethodOfLinesIntegrator.h" local="yes" imported="no">SAMRAI/algs/MethodOfLinesIntegrator.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="MethodOfLinesIntegrator_8I" name="MethodOfLinesIntegrator.I" local="yes" imported="no">SAMRAI/algs/MethodOfLinesIntegrator.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>MethodOfLinesIntegrator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>MethodOfLinesIntegrator_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="CoarsenAlgorithm_8h" name="CoarsenAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/CoarsenAlgorithm.h</includes>
    <includes id="CoarsenSchedule_8h" name="CoarsenSchedule.h" local="yes" imported="no">SAMRAI/xfer/CoarsenSchedule.h</includes>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="GriddingAlgorithm_8h" name="GriddingAlgorithm.h" local="yes" imported="no">SAMRAI/mesh/GriddingAlgorithm.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="MethodOfLinesPatchStrategy_8h" name="MethodOfLinesPatchStrategy.h" local="yes" imported="no">SAMRAI/algs/MethodOfLinesPatchStrategy.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RefineAlgorithm_8h" name="RefineAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/RefineAlgorithm.h</includes>
    <includes id="RefineSchedule_8h" name="RefineSchedule.h" local="yes" imported="no">SAMRAI/xfer/RefineSchedule.h</includes>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <includes id="StandardTagAndInitStrategy_8h" name="StandardTagAndInitStrategy.h" local="yes" imported="no">SAMRAI/mesh/StandardTagAndInitStrategy.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="VariableContext_8h" name="VariableContext.h" local="yes" imported="no">SAMRAI/hier/VariableContext.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
    <class kind="class">SAMRAI::algs::MethodOfLinesIntegrator</class>
  </compound>
  <compound kind="file">
    <name>MethodOfLinesIntegrator.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>MethodOfLinesIntegrator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>MethodOfLinesPatchStrategy.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>MethodOfLinesPatchStrategy_8C</filename>
    <includes id="MethodOfLinesPatchStrategy_8h" name="MethodOfLinesPatchStrategy.h" local="yes" imported="no">SAMRAI/algs/MethodOfLinesPatchStrategy.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>MethodOfLinesPatchStrategy.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>MethodOfLinesPatchStrategy_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="VariableContext_8h" name="VariableContext.h" local="yes" imported="no">SAMRAI/hier/VariableContext.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CoarsenPatchStrategy_8h" name="CoarsenPatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/CoarsenPatchStrategy.h</includes>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
    <class kind="class">SAMRAI::algs::MethodOfLinesPatchStrategy</class>
  </compound>
  <compound kind="file">
    <name>OuteredgeSumTransaction.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>OuteredgeSumTransaction_8C</filename>
    <includes id="OuteredgeSumTransaction_8h" name="OuteredgeSumTransaction.h" local="yes" imported="no">SAMRAI/algs/OuteredgeSumTransaction.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="ArrayDataBasicOps_8h" name="ArrayDataBasicOps.h" local="yes" imported="no">SAMRAI/math/ArrayDataBasicOps.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <includes id="OuteredgeData_8h" name="OuteredgeData.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeData.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeSumTransaction.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>OuteredgeSumTransaction_8h</filename>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="RefineClasses_8h" name="RefineClasses.h" local="yes" imported="no">SAMRAI/xfer/RefineClasses.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
    <class kind="class">SAMRAI::algs::OuteredgeSumTransaction</class>
  </compound>
  <compound kind="file">
    <name>OuteredgeSumTransactionFactory.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>OuteredgeSumTransactionFactory_8C</filename>
    <includes id="OuteredgeSumTransactionFactory_8h" name="OuteredgeSumTransactionFactory.h" local="yes" imported="no">SAMRAI/algs/OuteredgeSumTransactionFactory.h</includes>
    <includes id="OuteredgeData_8h" name="OuteredgeData.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeData.h</includes>
    <includes id="OuteredgeSumTransaction_8h" name="OuteredgeSumTransaction.h" local="yes" imported="no">SAMRAI/algs/OuteredgeSumTransaction.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeSumTransactionFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>OuteredgeSumTransactionFactory_8h</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="RefineClasses_8h" name="RefineClasses.h" local="yes" imported="no">SAMRAI/xfer/RefineClasses.h</includes>
    <includes id="RefineTransactionFactory_8h" name="RefineTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/RefineTransactionFactory.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
    <class kind="class">SAMRAI::algs::OuteredgeSumTransactionFactory</class>
  </compound>
  <compound kind="file">
    <name>OuternodeSumTransaction.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>OuternodeSumTransaction_8C</filename>
    <includes id="OuternodeSumTransaction_8h" name="OuternodeSumTransaction.h" local="yes" imported="no">SAMRAI/algs/OuternodeSumTransaction.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="ArrayDataBasicOps_8h" name="ArrayDataBasicOps.h" local="yes" imported="no">SAMRAI/math/ArrayDataBasicOps.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="OuternodeData_8h" name="OuternodeData.h" local="yes" imported="no">SAMRAI/pdat/OuternodeData.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeSumTransaction.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>OuternodeSumTransaction_8h</filename>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="RefineClasses_8h" name="RefineClasses.h" local="yes" imported="no">SAMRAI/xfer/RefineClasses.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
    <class kind="class">SAMRAI::algs::OuternodeSumTransaction</class>
  </compound>
  <compound kind="file">
    <name>OuternodeSumTransactionFactory.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>OuternodeSumTransactionFactory_8C</filename>
    <includes id="OuternodeSumTransactionFactory_8h" name="OuternodeSumTransactionFactory.h" local="yes" imported="no">SAMRAI/algs/OuternodeSumTransactionFactory.h</includes>
    <includes id="OuternodeData_8h" name="OuternodeData.h" local="yes" imported="no">SAMRAI/pdat/OuternodeData.h</includes>
    <includes id="OuternodeSumTransaction_8h" name="OuternodeSumTransaction.h" local="yes" imported="no">SAMRAI/algs/OuternodeSumTransaction.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeSumTransactionFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>OuternodeSumTransactionFactory_8h</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="RefineClasses_8h" name="RefineClasses.h" local="yes" imported="no">SAMRAI/xfer/RefineClasses.h</includes>
    <includes id="RefineTransactionFactory_8h" name="RefineTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/RefineTransactionFactory.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
    <class kind="class">SAMRAI::algs::OuternodeSumTransactionFactory</class>
  </compound>
  <compound kind="file">
    <name>PatchBoundaryEdgeSum.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>PatchBoundaryEdgeSum_8C</filename>
    <includes id="PatchBoundaryEdgeSum_8h" name="PatchBoundaryEdgeSum.h" local="yes" imported="no">SAMRAI/algs/PatchBoundaryEdgeSum.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeDataFactory_8h" name="EdgeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/EdgeDataFactory.h</includes>
    <includes id="OuteredgeData_8h" name="OuteredgeData.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeData.h</includes>
    <includes id="OuteredgeSumTransactionFactory_8h" name="OuteredgeSumTransactionFactory.h" local="yes" imported="no">SAMRAI/algs/OuteredgeSumTransactionFactory.h</includes>
    <includes id="RefineAlgorithm_8h" name="RefineAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/RefineAlgorithm.h</includes>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="PatchBoundaryEdgeSum_8I" name="PatchBoundaryEdgeSum.I" local="yes" imported="no">SAMRAI/algs/PatchBoundaryEdgeSum.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>PatchBoundaryEdgeSum.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>PatchBoundaryEdgeSum_8h</filename>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="OuteredgeVariable_8h" name="OuteredgeVariable.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RefineSchedule_8h" name="RefineSchedule.h" local="yes" imported="no">SAMRAI/xfer/RefineSchedule.h</includes>
    <includes id="RefineTransactionFactory_8h" name="RefineTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/RefineTransactionFactory.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
    <class kind="class">SAMRAI::algs::PatchBoundaryEdgeSum</class>
  </compound>
  <compound kind="file">
    <name>PatchBoundaryEdgeSum.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>PatchBoundaryEdgeSum_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>PatchBoundaryNodeSum.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>PatchBoundaryNodeSum_8C</filename>
    <includes id="PatchBoundaryNodeSum_8h" name="PatchBoundaryNodeSum.h" local="yes" imported="no">SAMRAI/algs/PatchBoundaryNodeSum.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeDataFactory_8h" name="NodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/NodeDataFactory.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="OuternodeData_8h" name="OuternodeData.h" local="yes" imported="no">SAMRAI/pdat/OuternodeData.h</includes>
    <includes id="OuternodeDoubleConstantCoarsen_8h" name="OuternodeDoubleConstantCoarsen.h" local="yes" imported="no">SAMRAI/pdat/OuternodeDoubleConstantCoarsen.h</includes>
    <includes id="OuternodeSumTransactionFactory_8h" name="OuternodeSumTransactionFactory.h" local="yes" imported="no">SAMRAI/algs/OuternodeSumTransactionFactory.h</includes>
    <includes id="CoarsenAlgorithm_8h" name="CoarsenAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/CoarsenAlgorithm.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="RefineAlgorithm_8h" name="RefineAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/RefineAlgorithm.h</includes>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="PatchBoundaryNodeSum_8I" name="PatchBoundaryNodeSum.I" local="yes" imported="no">SAMRAI/algs/PatchBoundaryNodeSum.I</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>PatchBoundaryNodeSum_8C.html</anchorfile>
      <anchor>c219e1d20cd1da6009fa900afe089d93</anchor>
      <arglist>(nodeouternodesum2d, NODEOUTERNODESUM2D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PatchBoundaryNodeSum.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>PatchBoundaryNodeSum_8h</filename>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="CoarseFineBoundary_8h" name="CoarseFineBoundary.h" local="yes" imported="no">SAMRAI/hier/CoarseFineBoundary.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="OuternodeVariable_8h" name="OuternodeVariable.h" local="yes" imported="no">SAMRAI/pdat/OuternodeVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="CoarsenSchedule_8h" name="CoarsenSchedule.h" local="yes" imported="no">SAMRAI/xfer/CoarsenSchedule.h</includes>
    <includes id="RefineSchedule_8h" name="RefineSchedule.h" local="yes" imported="no">SAMRAI/xfer/RefineSchedule.h</includes>
    <includes id="RefineTransactionFactory_8h" name="RefineTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/RefineTransactionFactory.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
    <class kind="class">SAMRAI::algs::PatchBoundaryNodeSum</class>
  </compound>
  <compound kind="file">
    <name>PatchBoundaryNodeSum.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>PatchBoundaryNodeSum_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>TimeRefinementIntegrator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>TimeRefinementIntegrator_8C</filename>
    <includes id="TimeRefinementIntegrator_8h" name="TimeRefinementIntegrator.h" local="yes" imported="no">SAMRAI/algs/TimeRefinementIntegrator.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="TimeRefinementIntegrator_8I" name="TimeRefinementIntegrator.I" local="yes" imported="no">SAMRAI/algs/TimeRefinementIntegrator.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>TimeRefinementIntegrator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>TimeRefinementIntegrator_8h</filename>
    <includes id="TimeRefinementLevelStrategy_8h" name="TimeRefinementLevelStrategy.h" local="yes" imported="no">SAMRAI/algs/TimeRefinementLevelStrategy.h</includes>
    <includes id="GriddingAlgorithmStrategy_8h" name="GriddingAlgorithmStrategy.h" local="yes" imported="no">SAMRAI/mesh/GriddingAlgorithmStrategy.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
    <class kind="class">SAMRAI::algs::TimeRefinementIntegrator</class>
  </compound>
  <compound kind="file">
    <name>TimeRefinementIntegrator.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>TimeRefinementIntegrator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>TimeRefinementLevelStrategy.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>TimeRefinementLevelStrategy_8C</filename>
    <includes id="TimeRefinementLevelStrategy_8h" name="TimeRefinementLevelStrategy.h" local="yes" imported="no">SAMRAI/algs/TimeRefinementLevelStrategy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>TimeRefinementLevelStrategy.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/</path>
    <filename>TimeRefinementLevelStrategy_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="GriddingAlgorithmStrategy_8h" name="GriddingAlgorithmStrategy.h" local="yes" imported="no">SAMRAI/mesh/GriddingAlgorithmStrategy.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
    <class kind="class">SAMRAI::algs::TimeRefinementLevelStrategy</class>
  </compound>
  <compound kind="file">
    <name>BoundaryUtilityStrategy.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/appu/</path>
    <filename>BoundaryUtilityStrategy_8C</filename>
    <includes id="BoundaryUtilityStrategy_8h" name="BoundaryUtilityStrategy.h" local="yes" imported="no">SAMRAI/appu/BoundaryUtilityStrategy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
  </compound>
  <compound kind="file">
    <name>BoundaryUtilityStrategy.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/appu/</path>
    <filename>BoundaryUtilityStrategy_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
    <class kind="class">SAMRAI::appu::BoundaryUtilityStrategy</class>
  </compound>
  <compound kind="file">
    <name>CartesianBoundaryDefines.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/appu/</path>
    <filename>CartesianBoundaryDefines_8h</filename>
    <namespace>Bdry</namespace>
    <namespace>BdryLoc</namespace>
    <namespace>NodeBdyLoc2D</namespace>
    <namespace>EdgeBdyLoc3D</namespace>
    <namespace>NodeBdyLoc3D</namespace>
    <namespace>BdryCond</namespace>
    <member kind="variable">
      <type>const int</type>
      <name>NUM_1D_NODES</name>
      <anchorfile>CartesianBoundaryDefines_8h.html</anchorfile>
      <anchor>79181c6d0b6d7e44178476ed6f290272</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>NUM_2D_EDGES</name>
      <anchorfile>CartesianBoundaryDefines_8h.html</anchorfile>
      <anchor>958490e069ae71b19d610b5d3fad9d44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>NUM_2D_NODES</name>
      <anchorfile>CartesianBoundaryDefines_8h.html</anchorfile>
      <anchor>9df254d3ac6e4e97eb1c47e40a9cc0a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>NUM_3D_FACES</name>
      <anchorfile>CartesianBoundaryDefines_8h.html</anchorfile>
      <anchor>f00ae905d8ea08bf4c363b6a653bd62b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>NUM_3D_EDGES</name>
      <anchorfile>CartesianBoundaryDefines_8h.html</anchorfile>
      <anchor>72201b916d583901a79829ae190ca825</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>NUM_3D_NODES</name>
      <anchorfile>CartesianBoundaryDefines_8h.html</anchorfile>
      <anchor>098c0792072757b49df0229f7488ba33</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Type</name>
      <anchor>52c990a5e0784db2442f55637bf9ec3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNDEFINED</name>
      <anchor>52c990a5e0784db2442f55637bf9ec3b87794d61da5b437e4dbbb54735aa3103</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE3D</name>
      <anchor>52c990a5e0784db2442f55637bf9ec3b81d7711739c945d4d7fb5c8434c61e3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EDGE3D</name>
      <anchor>52c990a5e0784db2442f55637bf9ec3bc42ff0f5b96bc5a46c9ebd51053005ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NODE3D</name>
      <anchor>52c990a5e0784db2442f55637bf9ec3bdc8c230d2589ae50ae1226aac3b7f0a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EDGE2D</name>
      <anchor>52c990a5e0784db2442f55637bf9ec3b0678f089fa8d31093be940d29097da51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NODE2D</name>
      <anchor>52c990a5e0784db2442f55637bf9ec3b8d15f55d2df34a3c1db13ded8f3ecc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NODE1D</name>
      <anchor>52c990a5e0784db2442f55637bf9ec3b8b569395f6394b3bc0b44f0548e75be6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Type</name>
      <anchor>bb87b0aa85742a8675cb21995b759d13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO</name>
      <anchor>bb87b0aa85742a8675cb21995b759d13d30e6f712cc479009cc3b15e463554d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI</name>
      <anchor>bb87b0aa85742a8675cb21995b759d137d84bba3a075d7f5e78ae4cefa591c4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YLO</name>
      <anchor>bb87b0aa85742a8675cb21995b759d13cf9cab977e7b022f96158a63018198ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YHI</name>
      <anchor>bb87b0aa85742a8675cb21995b759d13b5f6518353096161edf6600c3005fda3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZLO</name>
      <anchor>bb87b0aa85742a8675cb21995b759d13e1afc80b918844c1b9a83b6c2789b313</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZHI</name>
      <anchor>bb87b0aa85742a8675cb21995b759d139fc63465d02195ccffe1820533d4fc8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Type</name>
      <anchor>8bd3d70bdda44686a0a23937c2c1b2af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YLO</name>
      <anchor>8bd3d70bdda44686a0a23937c2c1b2afad331534798408e811b946214061029d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YLO</name>
      <anchor>8bd3d70bdda44686a0a23937c2c1b2afaafc8044d343f9d33322f5ccedecdc97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YHI</name>
      <anchor>8bd3d70bdda44686a0a23937c2c1b2af61d8cb20da4fd1668705c60f56e66789</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YHI</name>
      <anchor>8bd3d70bdda44686a0a23937c2c1b2af310bfd15cadd4d9d399a51077b36ea7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Type</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YLO</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f7701e9dc84bbd5d8aa24260734c9c09eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YLO</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f768b32aa186a43825105b8fceeefb16ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YHI</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f715dd8a02a8a1ea7de8c5eba6c88c6bab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YHI</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f7937b5f552c923b6880ab3c73d388cced</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_ZLO</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f789ad9dcc27d8af018c6ce1ac2e3b6134</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_ZLO</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f79de6cb59c5ddacb63466b2878e147902</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_ZHI</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f75b951b0d3c8ae37a34a214241643e7b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_ZHI</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f7ea50d1fdf62b75ec3578f0b685ffa883</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YLO_ZLO</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f78c963d04b715711b246082cd9f451a4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YHI_ZLO</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f791119e9ff2b5079c03870fb70b410735</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YLO_ZHI</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f734d08bc49c23f6d5733e0c7f5cfe8759</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YHI_ZHI</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f7df8df9332de2f8c613f36d98d1bde5d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Type</name>
      <anchor>938a9fde6a5e5abcd2c5ea6742b47c07</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YLO_ZLO</name>
      <anchor>938a9fde6a5e5abcd2c5ea6742b47c07fd89e38840c6de5ffdc9ce51c2b2cec9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YLO_ZLO</name>
      <anchor>938a9fde6a5e5abcd2c5ea6742b47c07d8e5341643bc482b0b2e943646d40dbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YHI_ZLO</name>
      <anchor>938a9fde6a5e5abcd2c5ea6742b47c07e60cb39d59d888e22889129f53158c26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YHI_ZLO</name>
      <anchor>938a9fde6a5e5abcd2c5ea6742b47c07a8b8b944e4a905853137cad650e46165</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YLO_ZHI</name>
      <anchor>938a9fde6a5e5abcd2c5ea6742b47c07303e1ff01d18270f022641b83dfbc98f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YLO_ZHI</name>
      <anchor>938a9fde6a5e5abcd2c5ea6742b47c07c4b73466b72686556ed0bbfe5ed587fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YHI_ZHI</name>
      <anchor>938a9fde6a5e5abcd2c5ea6742b47c0789fc650d427ee6726365695894212890</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YHI_ZHI</name>
      <anchor>938a9fde6a5e5abcd2c5ea6742b47c0758281c3c011cbe774e01cd686a4dade4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Type</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6ef3d1ff2cb99f088dd675fc3869b3d5dce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REFLECT</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6efc640795181e834d1f1622dfd212b55fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIRICHLET</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6efcecfd335b109e4a3562ac85646f83fd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEUMANN</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6ef01f0c1539bff1dc9e4f38c7ce4e08cf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XFLOW</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6efcc8f13862d7855939becbad0dac032d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YFLOW</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6ef02ee0a0c2dd3303de1b2dd384ff555b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZFLOW</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6ef84e96ff1b920d0670692cf4050724c1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XREFLECT</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6efd1e3207e9bfd92726c298f1d80fa5c19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YREFLECT</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6ef3720981172ba0f340b448c01190785a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZREFLECT</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6ef0aa7648d872dbecab5dbc7a83b7ed123</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XDIRICHLET</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6ef9df91a0be611dac987a15ea40033ee23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YDIRICHLET</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6efc75bfbe5eef5c04e1db47057137de8ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZDIRICHLET</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6ef54b0000adab3b7b9ffeb42a39fe0cb32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XNEUMANN</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6efad29f0c31c337fb35164f15fa5487de0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YNEUMANN</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6ef8dad64347d7599fff79d8cb68cde11da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZNEUMANN</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6ef7dd412e354961cd6cf3f138f0784db0a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianBoundaryUtilities2.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/appu/</path>
    <filename>CartesianBoundaryUtilities2_8C</filename>
    <includes id="CartesianBoundaryUtilities2_8h" name="CartesianBoundaryUtilities2.h" local="yes" imported="no">SAMRAI/appu/CartesianBoundaryUtilities2.h</includes>
    <includes id="CartesianBoundaryDefines_8h" name="CartesianBoundaryDefines.h" local="yes" imported="no">SAMRAI/appu/CartesianBoundaryDefines.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="CellIndex_8h" name="CellIndex.h" local="yes" imported="no">SAMRAI/pdat/CellIndex.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianBoundaryUtilities2_8C.html</anchorfile>
      <anchor>dcce6f52b348791d673a490f1b31ab5e</anchor>
      <arglist>(stufcartbdryloc2d, STUFCARTBDRYLOC2D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianBoundaryUtilities2.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/appu/</path>
    <filename>CartesianBoundaryUtilities2_8h</filename>
    <includes id="BoundaryUtilityStrategy_8h" name="BoundaryUtilityStrategy.h" local="yes" imported="no">SAMRAI/appu/BoundaryUtilityStrategy.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
    <class kind="struct">SAMRAI::appu::CartesianBoundaryUtilities2</class>
  </compound>
  <compound kind="file">
    <name>CartesianBoundaryUtilities3.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/appu/</path>
    <filename>CartesianBoundaryUtilities3_8C</filename>
    <includes id="CartesianBoundaryUtilities3_8h" name="CartesianBoundaryUtilities3.h" local="yes" imported="no">SAMRAI/appu/CartesianBoundaryUtilities3.h</includes>
    <includes id="CartesianBoundaryDefines_8h" name="CartesianBoundaryDefines.h" local="yes" imported="no">SAMRAI/appu/CartesianBoundaryDefines.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="CellIndex_8h" name="CellIndex.h" local="yes" imported="no">SAMRAI/pdat/CellIndex.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianBoundaryUtilities3_8C.html</anchorfile>
      <anchor>f6d0ebf7a791cdcd062c53c1e8a2b269</anchor>
      <arglist>(stufcartbdryloc3d, STUFCARTBDRYLOC3D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianBoundaryUtilities3.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/appu/</path>
    <filename>CartesianBoundaryUtilities3_8h</filename>
    <includes id="BoundaryUtilityStrategy_8h" name="BoundaryUtilityStrategy.h" local="yes" imported="no">SAMRAI/appu/BoundaryUtilityStrategy.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
    <class kind="struct">SAMRAI::appu::CartesianBoundaryUtilities3</class>
  </compound>
  <compound kind="file">
    <name>manual_boundary.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/appu/dox/</path>
    <filename>manual__boundary_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
  </compound>
  <compound kind="file">
    <name>manual_plotting.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/appu/dox/</path>
    <filename>manual__plotting_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
  </compound>
  <compound kind="file">
    <name>VisDerivedDataStrategy.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/appu/</path>
    <filename>VisDerivedDataStrategy_8C</filename>
    <includes id="VisDerivedDataStrategy_8h" name="VisDerivedDataStrategy.h" local="yes" imported="no">SAMRAI/appu/VisDerivedDataStrategy.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
  </compound>
  <compound kind="file">
    <name>VisDerivedDataStrategy.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/appu/</path>
    <filename>VisDerivedDataStrategy_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
    <class kind="class">SAMRAI::appu::VisDerivedDataStrategy</class>
  </compound>
  <compound kind="file">
    <name>VisItDataWriter.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/appu/</path>
    <filename>VisItDataWriter_8C</filename>
    <includes id="VisItDataWriter_8h" name="VisItDataWriter.h" local="yes" imported="no">SAMRAI/appu/VisItDataWriter.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="BoxLevelConnectorUtils_8h" name="BoxLevelConnectorUtils.h" local="yes" imported="no">SAMRAI/hier/BoxLevelConnectorUtils.h</includes>
    <includes id="MultiblockBoxTree_8h" name="MultiblockBoxTree.h" local="yes" imported="no">SAMRAI/hier/MultiblockBoxTree.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="CellDataFactory_8h" name="CellDataFactory.h" local="yes" imported="no">SAMRAI/pdat/CellDataFactory.h</includes>
    <includes id="NodeDataFactory_8h" name="NodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/NodeDataFactory.h</includes>
    <includes id="CartesianGridGeometry_8h" name="CartesianGridGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianGridGeometry.h</includes>
    <includes id="VisItDataWriter_8I" name="VisItDataWriter.I" local="yes" imported="no">SAMRAI/appu/VisItDataWriter.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>VisItDataWriter_8C.html</anchorfile>
      <anchor>f55c96f4f9918fecee4cb6a5f8082f1d</anchor>
      <arglist>(cpfdat2buf3d, CPFDAT2BUF3D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>VisItDataWriter.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/appu/</path>
    <filename>VisItDataWriter_8h</filename>
    <includes id="VisDerivedDataStrategy_8h" name="VisDerivedDataStrategy.h" local="yes" imported="no">SAMRAI/appu/VisDerivedDataStrategy.h</includes>
    <includes id="VisMaterialsDataStrategy_8h" name="VisMaterialsDataStrategy.h" local="yes" imported="no">SAMRAI/appu/VisMaterialsDataStrategy.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="HDFDatabase_8h" name="HDFDatabase.h" local="yes" imported="no">SAMRAI/tbox/HDFDatabase.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
    <class kind="class">SAMRAI::appu::VisItDataWriter</class>
  </compound>
  <compound kind="file">
    <name>VisItDataWriter.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/appu/</path>
    <filename>VisItDataWriter_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
  </compound>
  <compound kind="file">
    <name>VisMaterialsDataStrategy.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/appu/</path>
    <filename>VisMaterialsDataStrategy_8C</filename>
    <includes id="VisMaterialsDataStrategy_8h" name="VisMaterialsDataStrategy.h" local="yes" imported="no">SAMRAI/appu/VisMaterialsDataStrategy.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
  </compound>
  <compound kind="file">
    <name>VisMaterialsDataStrategy.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/appu/</path>
    <filename>VisMaterialsDataStrategy_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
    <class kind="class">SAMRAI::appu::VisMaterialsDataStrategy</class>
  </compound>
  <compound kind="file">
    <name>CartesianCellComplexConservativeLinearRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianCellComplexConservativeLinearRefine_8C</filename>
    <includes id="CartesianCellComplexConservativeLinearRefine_8h" name="CartesianCellComplexConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellComplexConservativeLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianCellComplexConservativeLinearRefine_8C.html</anchorfile>
      <anchor>a41f142f0a55f6ee2e27b8f1db33d8cf</anchor>
      <arglist>(cartclinrefcellcplx1d, CARTCLINREFCELLCPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianCellComplexConservativeLinearRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianCellComplexConservativeLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianCellComplexConservativeLinearRefine</class>
  </compound>
  <compound kind="file">
    <name>CartesianCellComplexLinearRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianCellComplexLinearRefine_8C</filename>
    <includes id="CartesianCellComplexLinearRefine_8h" name="CartesianCellComplexLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellComplexLinearRefine.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianCellComplexLinearRefine_8C.html</anchorfile>
      <anchor>12f25a268aed3173c6743cb3f42586f9</anchor>
      <arglist>(cartlinrefcellcplx1d, CARTLINREFCELLCPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianCellComplexLinearRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianCellComplexLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianCellComplexLinearRefine</class>
  </compound>
  <compound kind="file">
    <name>CartesianCellComplexWeightedAverage.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianCellComplexWeightedAverage_8C</filename>
    <includes id="CartesianCellComplexWeightedAverage_8h" name="CartesianCellComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianCellComplexWeightedAverage.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianCellComplexWeightedAverage_8C.html</anchorfile>
      <anchor>be2126dab0d5caaecf58697db3457e42</anchor>
      <arglist>(cartwgtavgcellcplx1d, CARTWGTAVGCELLCPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianCellComplexWeightedAverage.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianCellComplexWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianCellComplexWeightedAverage</class>
  </compound>
  <compound kind="file">
    <name>CartesianCellDoubleConservativeLinearRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianCellDoubleConservativeLinearRefine_8C</filename>
    <includes id="CartesianCellDoubleConservativeLinearRefine_8h" name="CartesianCellDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianCellDoubleConservativeLinearRefine_8C.html</anchorfile>
      <anchor>7d65d78ec6d42035331fbc3bcda23638</anchor>
      <arglist>(cartclinrefcelldoub1d, CARTCLINREFCELLDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianCellDoubleConservativeLinearRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianCellDoubleConservativeLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianCellDoubleConservativeLinearRefine</class>
  </compound>
  <compound kind="file">
    <name>CartesianCellDoubleLinearRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianCellDoubleLinearRefine_8C</filename>
    <includes id="CartesianCellDoubleLinearRefine_8h" name="CartesianCellDoubleLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellDoubleLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianCellDoubleLinearRefine_8C.html</anchorfile>
      <anchor>37fb3ce6ec910031d96cc0c9626348cd</anchor>
      <arglist>(cartlinrefcelldoub1d, CARTLINREFCELLDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianCellDoubleLinearRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianCellDoubleLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianCellDoubleLinearRefine</class>
  </compound>
  <compound kind="file">
    <name>CartesianCellDoubleWeightedAverage.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianCellDoubleWeightedAverage_8C</filename>
    <includes id="CartesianCellDoubleWeightedAverage_8h" name="CartesianCellDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianCellDoubleWeightedAverage.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianCellDoubleWeightedAverage_8C.html</anchorfile>
      <anchor>e7a1c565828f4e5fa57daa59bc88627a</anchor>
      <arglist>(cartwgtavgcelldoub1d, CARTWGTAVGCELLDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianCellDoubleWeightedAverage.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianCellDoubleWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianCellDoubleWeightedAverage</class>
  </compound>
  <compound kind="file">
    <name>CartesianCellFloatConservativeLinearRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianCellFloatConservativeLinearRefine_8C</filename>
    <includes id="CartesianCellFloatConservativeLinearRefine_8h" name="CartesianCellFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellFloatConservativeLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianCellFloatConservativeLinearRefine_8C.html</anchorfile>
      <anchor>00918c5e5e568968bbcd9e5b7bfc24f7</anchor>
      <arglist>(cartclinrefcellflot1d, CARTCLINREFCELLFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianCellFloatConservativeLinearRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianCellFloatConservativeLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianCellFloatConservativeLinearRefine</class>
  </compound>
  <compound kind="file">
    <name>CartesianCellFloatLinearRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianCellFloatLinearRefine_8C</filename>
    <includes id="CartesianCellFloatLinearRefine_8h" name="CartesianCellFloatLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellFloatLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianCellFloatLinearRefine_8C.html</anchorfile>
      <anchor>d588d78f90c7b370564e23c1647c2cfa</anchor>
      <arglist>(cartlinrefcellflot1d, CARTLINREFCELLFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianCellFloatLinearRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianCellFloatLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianCellFloatLinearRefine</class>
  </compound>
  <compound kind="file">
    <name>CartesianCellFloatWeightedAverage.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianCellFloatWeightedAverage_8C</filename>
    <includes id="CartesianCellFloatWeightedAverage_8h" name="CartesianCellFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianCellFloatWeightedAverage.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianCellFloatWeightedAverage_8C.html</anchorfile>
      <anchor>495aaa98c75dfd907d16444f7e258e63</anchor>
      <arglist>(cartwgtavgcellflot1d, CARTWGTAVGCELLFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianCellFloatWeightedAverage.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianCellFloatWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianCellFloatWeightedAverage</class>
  </compound>
  <compound kind="file">
    <name>CartesianEdgeComplexWeightedAverage.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianEdgeComplexWeightedAverage_8C</filename>
    <includes id="CartesianEdgeComplexWeightedAverage_8h" name="CartesianEdgeComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeComplexWeightedAverage.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianEdgeComplexWeightedAverage_8C.html</anchorfile>
      <anchor>076239bb64831311be86523c6f8f1ed4</anchor>
      <arglist>(cartwgtavgedgecplx1d, CARTWGTAVGEDGECPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianEdgeComplexWeightedAverage.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianEdgeComplexWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianEdgeComplexWeightedAverage</class>
  </compound>
  <compound kind="file">
    <name>CartesianEdgeDoubleConservativeLinearRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianEdgeDoubleConservativeLinearRefine_8C</filename>
    <includes id="CartesianEdgeDoubleConservativeLinearRefine_8h" name="CartesianEdgeDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianEdgeDoubleConservativeLinearRefine_8C.html</anchorfile>
      <anchor>3c70763bca3b76cc6a1c549e37b1b037</anchor>
      <arglist>(cartclinrefedgedoub1d, CARTCLINREFEDGEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianEdgeDoubleConservativeLinearRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianEdgeDoubleConservativeLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianEdgeDoubleConservativeLinearRefine</class>
  </compound>
  <compound kind="file">
    <name>CartesianEdgeDoubleWeightedAverage.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianEdgeDoubleWeightedAverage_8C</filename>
    <includes id="CartesianEdgeDoubleWeightedAverage_8h" name="CartesianEdgeDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeDoubleWeightedAverage.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianEdgeDoubleWeightedAverage_8C.html</anchorfile>
      <anchor>b9923a0e6ba5eb08bca1e2113d778ec9</anchor>
      <arglist>(cartwgtavgedgedoub1d, CARTWGTAVGEDGEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianEdgeDoubleWeightedAverage.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianEdgeDoubleWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianEdgeDoubleWeightedAverage</class>
  </compound>
  <compound kind="file">
    <name>CartesianEdgeFloatConservativeLinearRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianEdgeFloatConservativeLinearRefine_8C</filename>
    <includes id="CartesianEdgeFloatConservativeLinearRefine_8h" name="CartesianEdgeFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeFloatConservativeLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianEdgeFloatConservativeLinearRefine_8C.html</anchorfile>
      <anchor>d5be6030cb2cd96a5cf60780b17bc848</anchor>
      <arglist>(cartclinrefedgeflot1d, CARTCLINREFEDGEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianEdgeFloatConservativeLinearRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianEdgeFloatConservativeLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianEdgeFloatConservativeLinearRefine</class>
  </compound>
  <compound kind="file">
    <name>CartesianEdgeFloatWeightedAverage.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianEdgeFloatWeightedAverage_8C</filename>
    <includes id="CartesianEdgeFloatWeightedAverage_8h" name="CartesianEdgeFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeFloatWeightedAverage.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianEdgeFloatWeightedAverage_8C.html</anchorfile>
      <anchor>74381cd17bbbfd6bd02603d9c60f80c9</anchor>
      <arglist>(cartwgtavgedgeflot1d, CARTWGTAVGEDGEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianEdgeFloatWeightedAverage.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianEdgeFloatWeightedAverage_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianEdgeFloatWeightedAverage</class>
  </compound>
  <compound kind="file">
    <name>CartesianFaceComplexWeightedAverage.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianFaceComplexWeightedAverage_8C</filename>
    <includes id="CartesianFaceComplexWeightedAverage_8h" name="CartesianFaceComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceComplexWeightedAverage.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianFaceComplexWeightedAverage_8C.html</anchorfile>
      <anchor>0f18041dac6467cacf06b982b5d7b09b</anchor>
      <arglist>(cartwgtavgfacecplx1d, CARTWGTAVGFACECPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianFaceComplexWeightedAverage.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianFaceComplexWeightedAverage_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianFaceComplexWeightedAverage</class>
  </compound>
  <compound kind="file">
    <name>CartesianFaceDoubleConservativeLinearRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianFaceDoubleConservativeLinearRefine_8C</filename>
    <includes id="CartesianFaceDoubleConservativeLinearRefine_8h" name="CartesianFaceDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianFaceDoubleConservativeLinearRefine_8C.html</anchorfile>
      <anchor>bd15b74e43688178e8a4e02ad1c660ae</anchor>
      <arglist>(cartclinreffacedoub1d, CARTCLINREFFACEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianFaceDoubleConservativeLinearRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianFaceDoubleConservativeLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianFaceDoubleConservativeLinearRefine</class>
  </compound>
  <compound kind="file">
    <name>CartesianFaceDoubleWeightedAverage.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianFaceDoubleWeightedAverage_8C</filename>
    <includes id="CartesianFaceDoubleWeightedAverage_8h" name="CartesianFaceDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceDoubleWeightedAverage.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianFaceDoubleWeightedAverage_8C.html</anchorfile>
      <anchor>e1886397a3d8c3d66088e7002d65f284</anchor>
      <arglist>(cartwgtavgfacedoub1d, CARTWGTAVGFACEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianFaceDoubleWeightedAverage.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianFaceDoubleWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianFaceDoubleWeightedAverage</class>
  </compound>
  <compound kind="file">
    <name>CartesianFaceFloatConservativeLinearRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianFaceFloatConservativeLinearRefine_8C</filename>
    <includes id="CartesianFaceFloatConservativeLinearRefine_8h" name="CartesianFaceFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceFloatConservativeLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianFaceFloatConservativeLinearRefine_8C.html</anchorfile>
      <anchor>3df76d8880ad3db3e5436f955e44c1a6</anchor>
      <arglist>(cartclinreffaceflot1d, CARTCLINREFFACEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianFaceFloatConservativeLinearRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianFaceFloatConservativeLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianFaceFloatConservativeLinearRefine</class>
  </compound>
  <compound kind="file">
    <name>CartesianFaceFloatWeightedAverage.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianFaceFloatWeightedAverage_8C</filename>
    <includes id="CartesianFaceFloatWeightedAverage_8h" name="CartesianFaceFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceFloatWeightedAverage.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianFaceFloatWeightedAverage_8C.html</anchorfile>
      <anchor>2942b2e83add8e27fa98bd65ca4e5775</anchor>
      <arglist>(cartwgtavgfaceflot1d, CARTWGTAVGFACEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianFaceFloatWeightedAverage.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianFaceFloatWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianFaceFloatWeightedAverage</class>
  </compound>
  <compound kind="file">
    <name>CartesianGridGeometry.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianGridGeometry_8C</filename>
    <includes id="CartesianGridGeometry_8h" name="CartesianGridGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianGridGeometry.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="SAMRAITransferOperatorRegistry_8h" name="SAMRAITransferOperatorRegistry.h" local="yes" imported="no">SAMRAI/geom/SAMRAITransferOperatorRegistry.h</includes>
    <includes id="CartesianCellComplexWeightedAverage_8h" name="CartesianCellComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianCellComplexWeightedAverage.h</includes>
    <includes id="CartesianCellDoubleWeightedAverage_8h" name="CartesianCellDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianCellDoubleWeightedAverage.h</includes>
    <includes id="CartesianCellFloatWeightedAverage_8h" name="CartesianCellFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianCellFloatWeightedAverage.h</includes>
    <includes id="CartesianCellComplexConservativeLinearRefine_8h" name="CartesianCellComplexConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellComplexConservativeLinearRefine.h</includes>
    <includes id="CartesianCellComplexLinearRefine_8h" name="CartesianCellComplexLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellComplexLinearRefine.h</includes>
    <includes id="CartesianCellDoubleConservativeLinearRefine_8h" name="CartesianCellDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianCellDoubleLinearRefine_8h" name="CartesianCellDoubleLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellDoubleLinearRefine.h</includes>
    <includes id="CartesianCellFloatConservativeLinearRefine_8h" name="CartesianCellFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellFloatConservativeLinearRefine.h</includes>
    <includes id="CartesianCellFloatLinearRefine_8h" name="CartesianCellFloatLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellFloatLinearRefine.h</includes>
    <includes id="CellComplexConstantRefine_8h" name="CellComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellComplexConstantRefine.h</includes>
    <includes id="CellDoubleConstantRefine_8h" name="CellDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellDoubleConstantRefine.h</includes>
    <includes id="CellFloatConstantRefine_8h" name="CellFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellFloatConstantRefine.h</includes>
    <includes id="CellIntegerConstantRefine_8h" name="CellIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellIntegerConstantRefine.h</includes>
    <includes id="CartesianEdgeComplexWeightedAverage_8h" name="CartesianEdgeComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeComplexWeightedAverage.h</includes>
    <includes id="CartesianEdgeDoubleWeightedAverage_8h" name="CartesianEdgeDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeDoubleWeightedAverage.h</includes>
    <includes id="CartesianEdgeFloatWeightedAverage_8h" name="CartesianEdgeFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeFloatWeightedAverage.h</includes>
    <includes id="CartesianEdgeDoubleConservativeLinearRefine_8h" name="CartesianEdgeDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianEdgeFloatConservativeLinearRefine_8h" name="CartesianEdgeFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeFloatConservativeLinearRefine.h</includes>
    <includes id="EdgeComplexConstantRefine_8h" name="EdgeComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeComplexConstantRefine.h</includes>
    <includes id="EdgeDoubleConstantRefine_8h" name="EdgeDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeDoubleConstantRefine.h</includes>
    <includes id="EdgeFloatConstantRefine_8h" name="EdgeFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeFloatConstantRefine.h</includes>
    <includes id="EdgeIntegerConstantRefine_8h" name="EdgeIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeIntegerConstantRefine.h</includes>
    <includes id="CartesianFaceComplexWeightedAverage_8h" name="CartesianFaceComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceComplexWeightedAverage.h</includes>
    <includes id="CartesianFaceDoubleWeightedAverage_8h" name="CartesianFaceDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceDoubleWeightedAverage.h</includes>
    <includes id="CartesianFaceFloatWeightedAverage_8h" name="CartesianFaceFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceFloatWeightedAverage.h</includes>
    <includes id="CartesianFaceDoubleConservativeLinearRefine_8h" name="CartesianFaceDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianFaceFloatConservativeLinearRefine_8h" name="CartesianFaceFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceFloatConservativeLinearRefine.h</includes>
    <includes id="FaceComplexConstantRefine_8h" name="FaceComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceComplexConstantRefine.h</includes>
    <includes id="FaceDoubleConstantRefine_8h" name="FaceDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceDoubleConstantRefine.h</includes>
    <includes id="FaceFloatConstantRefine_8h" name="FaceFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceFloatConstantRefine.h</includes>
    <includes id="FaceIntegerConstantRefine_8h" name="FaceIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceIntegerConstantRefine.h</includes>
    <includes id="NodeComplexInjection_8h" name="NodeComplexInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeComplexInjection.h</includes>
    <includes id="NodeDoubleInjection_8h" name="NodeDoubleInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeDoubleInjection.h</includes>
    <includes id="NodeFloatInjection_8h" name="NodeFloatInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeFloatInjection.h</includes>
    <includes id="NodeIntegerInjection_8h" name="NodeIntegerInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeIntegerInjection.h</includes>
    <includes id="CartesianNodeComplexLinearRefine_8h" name="CartesianNodeComplexLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianNodeComplexLinearRefine.h</includes>
    <includes id="CartesianNodeDoubleLinearRefine_8h" name="CartesianNodeDoubleLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianNodeDoubleLinearRefine.h</includes>
    <includes id="CartesianNodeFloatLinearRefine_8h" name="CartesianNodeFloatLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianNodeFloatLinearRefine.h</includes>
    <includes id="CartesianOuterfaceComplexWeightedAverage_8h" name="CartesianOuterfaceComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOuterfaceComplexWeightedAverage.h</includes>
    <includes id="CartesianOuterfaceDoubleWeightedAverage_8h" name="CartesianOuterfaceDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOuterfaceDoubleWeightedAverage.h</includes>
    <includes id="CartesianOuterfaceFloatWeightedAverage_8h" name="CartesianOuterfaceFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOuterfaceFloatWeightedAverage.h</includes>
    <includes id="OuterfaceComplexConstantRefine_8h" name="OuterfaceComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceComplexConstantRefine.h</includes>
    <includes id="OuterfaceDoubleConstantRefine_8h" name="OuterfaceDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceDoubleConstantRefine.h</includes>
    <includes id="OuterfaceFloatConstantRefine_8h" name="OuterfaceFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceFloatConstantRefine.h</includes>
    <includes id="OuterfaceIntegerConstantRefine_8h" name="OuterfaceIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceIntegerConstantRefine.h</includes>
    <includes id="OuternodeDoubleConstantCoarsen_8h" name="OuternodeDoubleConstantCoarsen.h" local="yes" imported="no">SAMRAI/pdat/OuternodeDoubleConstantCoarsen.h</includes>
    <includes id="CartesianOutersideDoubleWeightedAverage_8h" name="CartesianOutersideDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOutersideDoubleWeightedAverage.h</includes>
    <includes id="CartesianSideComplexWeightedAverage_8h" name="CartesianSideComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianSideComplexWeightedAverage.h</includes>
    <includes id="CartesianSideDoubleWeightedAverage_8h" name="CartesianSideDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianSideDoubleWeightedAverage.h</includes>
    <includes id="CartesianSideFloatWeightedAverage_8h" name="CartesianSideFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianSideFloatWeightedAverage.h</includes>
    <includes id="CartesianSideDoubleConservativeLinearRefine_8h" name="CartesianSideDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianSideDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianSideFloatConservativeLinearRefine_8h" name="CartesianSideFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianSideFloatConservativeLinearRefine.h</includes>
    <includes id="SideComplexConstantRefine_8h" name="SideComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideComplexConstantRefine.h</includes>
    <includes id="SideDoubleConstantRefine_8h" name="SideDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideDoubleConstantRefine.h</includes>
    <includes id="SideFloatConstantRefine_8h" name="SideFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideFloatConstantRefine.h</includes>
    <includes id="SideIntegerConstantRefine_8h" name="SideIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideIntegerConstantRefine.h</includes>
    <includes id="CellComplexLinearTimeInterpolateOp_8h" name="CellComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellComplexLinearTimeInterpolateOp.h</includes>
    <includes id="CellDoubleLinearTimeInterpolateOp_8h" name="CellDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="CellFloatLinearTimeInterpolateOp_8h" name="CellFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellFloatLinearTimeInterpolateOp.h</includes>
    <includes id="EdgeComplexLinearTimeInterpolateOp_8h" name="EdgeComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/EdgeComplexLinearTimeInterpolateOp.h</includes>
    <includes id="EdgeDoubleLinearTimeInterpolateOp_8h" name="EdgeDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/EdgeDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="EdgeFloatLinearTimeInterpolateOp_8h" name="EdgeFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/EdgeFloatLinearTimeInterpolateOp.h</includes>
    <includes id="FaceComplexLinearTimeInterpolateOp_8h" name="FaceComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceComplexLinearTimeInterpolateOp.h</includes>
    <includes id="FaceDoubleLinearTimeInterpolateOp_8h" name="FaceDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="FaceFloatLinearTimeInterpolateOp_8h" name="FaceFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceFloatLinearTimeInterpolateOp.h</includes>
    <includes id="NodeComplexLinearTimeInterpolateOp_8h" name="NodeComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeComplexLinearTimeInterpolateOp.h</includes>
    <includes id="NodeDoubleLinearTimeInterpolateOp_8h" name="NodeDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="NodeFloatLinearTimeInterpolateOp_8h" name="NodeFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeFloatLinearTimeInterpolateOp.h</includes>
    <includes id="OuterfaceComplexLinearTimeInterpolateOp_8h" name="OuterfaceComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceComplexLinearTimeInterpolateOp.h</includes>
    <includes id="OuterfaceDoubleLinearTimeInterpolateOp_8h" name="OuterfaceDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="OuterfaceFloatLinearTimeInterpolateOp_8h" name="OuterfaceFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceFloatLinearTimeInterpolateOp.h</includes>
    <includes id="OutersideComplexLinearTimeInterpolateOp_8h" name="OutersideComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideComplexLinearTimeInterpolateOp.h</includes>
    <includes id="OutersideDoubleLinearTimeInterpolateOp_8h" name="OutersideDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="OutersideFloatLinearTimeInterpolateOp_8h" name="OutersideFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideFloatLinearTimeInterpolateOp.h</includes>
    <includes id="SideComplexLinearTimeInterpolateOp_8h" name="SideComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideComplexLinearTimeInterpolateOp.h</includes>
    <includes id="SideDoubleLinearTimeInterpolateOp_8h" name="SideDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="SideFloatLinearTimeInterpolateOp_8h" name="SideFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideFloatLinearTimeInterpolateOp.h</includes>
    <includes id="BoundaryLookupTable_8h" name="BoundaryLookupTable.h" local="yes" imported="no">SAMRAI/hier/BoundaryLookupTable.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="CartesianGridGeometry_8I" name="CartesianGridGeometry.I" local="yes" imported="no">SAMRAI/geom/CartesianGridGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianGridGeometry.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianGridGeometry_8h</filename>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianGridGeometry</class>
  </compound>
  <compound kind="file">
    <name>CartesianGridGeometry.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianGridGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianNodeComplexLinearRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianNodeComplexLinearRefine_8C</filename>
    <includes id="CartesianNodeComplexLinearRefine_8h" name="CartesianNodeComplexLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianNodeComplexLinearRefine.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianNodeComplexLinearRefine_8C.html</anchorfile>
      <anchor>69461b7d2971c3f18c6d54efd508d8da</anchor>
      <arglist>(cartlinrefnodecplx1d, CARTLINREFNODECPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianNodeComplexLinearRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianNodeComplexLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianNodeComplexLinearRefine</class>
  </compound>
  <compound kind="file">
    <name>CartesianNodeDoubleLinearRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianNodeDoubleLinearRefine_8C</filename>
    <includes id="CartesianNodeDoubleLinearRefine_8h" name="CartesianNodeDoubleLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianNodeDoubleLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianNodeDoubleLinearRefine_8C.html</anchorfile>
      <anchor>cc192cf12459b13e54f7beb858b7d652</anchor>
      <arglist>(cartlinrefnodedoub1d, CARTLINREFNODEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianNodeDoubleLinearRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianNodeDoubleLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianNodeDoubleLinearRefine</class>
  </compound>
  <compound kind="file">
    <name>CartesianNodeFloatLinearRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianNodeFloatLinearRefine_8C</filename>
    <includes id="CartesianNodeFloatLinearRefine_8h" name="CartesianNodeFloatLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianNodeFloatLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianNodeFloatLinearRefine_8C.html</anchorfile>
      <anchor>d09be0a896ec7423b2c1784e1ec7267f</anchor>
      <arglist>(cartlinrefnodeflot1d, CARTLINREFNODEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianNodeFloatLinearRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianNodeFloatLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianNodeFloatLinearRefine</class>
  </compound>
  <compound kind="file">
    <name>CartesianOuterfaceComplexWeightedAverage.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianOuterfaceComplexWeightedAverage_8C</filename>
    <includes id="CartesianOuterfaceComplexWeightedAverage_8h" name="CartesianOuterfaceComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOuterfaceComplexWeightedAverage.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianOuterfaceComplexWeightedAverage_8C.html</anchorfile>
      <anchor>687dc1aba26c9a3beb82b65e78564e3e</anchor>
      <arglist>(cartwgtavgoutfacecplx1d, CARTWGTAVGOUTFACECPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianOuterfaceComplexWeightedAverage.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianOuterfaceComplexWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianOuterfaceComplexWeightedAverage</class>
  </compound>
  <compound kind="file">
    <name>CartesianOuterfaceDoubleWeightedAverage.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianOuterfaceDoubleWeightedAverage_8C</filename>
    <includes id="CartesianOuterfaceDoubleWeightedAverage_8h" name="CartesianOuterfaceDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOuterfaceDoubleWeightedAverage.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianOuterfaceDoubleWeightedAverage_8C.html</anchorfile>
      <anchor>e49158098988b52deb9b22387c39324e</anchor>
      <arglist>(cartwgtavgoutfacedoub1d, CARTWGTAVGOUTFACEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianOuterfaceDoubleWeightedAverage.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianOuterfaceDoubleWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianOuterfaceDoubleWeightedAverage</class>
  </compound>
  <compound kind="file">
    <name>CartesianOuterfaceFloatWeightedAverage.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianOuterfaceFloatWeightedAverage_8C</filename>
    <includes id="CartesianOuterfaceFloatWeightedAverage_8h" name="CartesianOuterfaceFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOuterfaceFloatWeightedAverage.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianOuterfaceFloatWeightedAverage_8C.html</anchorfile>
      <anchor>f32c67a2430d0e1a215057585a582b18</anchor>
      <arglist>(cartwgtavgoutfaceflot1d, CARTWGTAVGOUTFACEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianOuterfaceFloatWeightedAverage.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianOuterfaceFloatWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianOuterfaceFloatWeightedAverage</class>
  </compound>
  <compound kind="file">
    <name>CartesianOutersideDoubleWeightedAverage.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianOutersideDoubleWeightedAverage_8C</filename>
    <includes id="CartesianOutersideDoubleWeightedAverage_8h" name="CartesianOutersideDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOutersideDoubleWeightedAverage.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OutersideData_8h" name="OutersideData.h" local="yes" imported="no">SAMRAI/pdat/OutersideData.h</includes>
    <includes id="OutersideVariable_8h" name="OutersideVariable.h" local="yes" imported="no">SAMRAI/pdat/OutersideVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianOutersideDoubleWeightedAverage_8C.html</anchorfile>
      <anchor>6115e85b6179bfcc754ce2c6fb877cce</anchor>
      <arglist>(cartwgtavgoutsidedoub1d, CARTWGTAVGOUTSIDEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianOutersideDoubleWeightedAverage.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianOutersideDoubleWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianOutersideDoubleWeightedAverage</class>
  </compound>
  <compound kind="file">
    <name>CartesianPatchGeometry.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianPatchGeometry_8C</filename>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CartesianPatchGeometry_8I" name="CartesianPatchGeometry.I" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianPatchGeometry.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianPatchGeometry_8h</filename>
    <includes id="PatchGeometry_8h" name="PatchGeometry.h" local="yes" imported="no">SAMRAI/hier/PatchGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianPatchGeometry</class>
  </compound>
  <compound kind="file">
    <name>CartesianPatchGeometry.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianPatchGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianSideComplexWeightedAverage.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianSideComplexWeightedAverage_8C</filename>
    <includes id="CartesianSideComplexWeightedAverage_8h" name="CartesianSideComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianSideComplexWeightedAverage.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianSideComplexWeightedAverage_8C.html</anchorfile>
      <anchor>ec025380ba998d2c95461734c53feb70</anchor>
      <arglist>(cartwgtavgsidecplx1d, CARTWGTAVGSIDECPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianSideComplexWeightedAverage.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianSideComplexWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianSideComplexWeightedAverage</class>
  </compound>
  <compound kind="file">
    <name>CartesianSideDoubleConservativeLinearRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianSideDoubleConservativeLinearRefine_8C</filename>
    <includes id="CartesianSideDoubleConservativeLinearRefine_8h" name="CartesianSideDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianSideDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianSideDoubleConservativeLinearRefine_8C.html</anchorfile>
      <anchor>7e417dfe72a5c6e6faf153fb2a4416a3</anchor>
      <arglist>(cartclinrefsidedoub1d, CARTCLINREFSIDEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianSideDoubleConservativeLinearRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianSideDoubleConservativeLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianSideDoubleConservativeLinearRefine</class>
  </compound>
  <compound kind="file">
    <name>CartesianSideDoubleWeightedAverage.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianSideDoubleWeightedAverage_8C</filename>
    <includes id="CartesianSideDoubleWeightedAverage_8h" name="CartesianSideDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianSideDoubleWeightedAverage.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianSideDoubleWeightedAverage_8C.html</anchorfile>
      <anchor>0cef0e2e5dee0fed425d8ed82f2fd6a9</anchor>
      <arglist>(cartwgtavgsidedoub1d, CARTWGTAVGSIDEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianSideDoubleWeightedAverage.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianSideDoubleWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianSideDoubleWeightedAverage</class>
  </compound>
  <compound kind="file">
    <name>CartesianSideFloatConservativeLinearRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianSideFloatConservativeLinearRefine_8C</filename>
    <includes id="CartesianSideFloatConservativeLinearRefine_8h" name="CartesianSideFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianSideFloatConservativeLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianSideFloatConservativeLinearRefine_8C.html</anchorfile>
      <anchor>ea2a40a7603c3b547f6302a6140826ab</anchor>
      <arglist>(cartclinrefsideflot1d, CARTCLINREFSIDEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianSideFloatConservativeLinearRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianSideFloatConservativeLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianSideFloatConservativeLinearRefine</class>
  </compound>
  <compound kind="file">
    <name>CartesianSideFloatWeightedAverage.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianSideFloatWeightedAverage_8C</filename>
    <includes id="CartesianSideFloatWeightedAverage_8h" name="CartesianSideFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianSideFloatWeightedAverage.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianSideFloatWeightedAverage_8C.html</anchorfile>
      <anchor>97636c1e0bbfb3ba4650773a32cd500d</anchor>
      <arglist>(cartwgtavgsideflot1d, CARTWGTAVGSIDEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianSideFloatWeightedAverage.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>CartesianSideFloatWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::CartesianSideFloatWeightedAverage</class>
  </compound>
  <compound kind="file">
    <name>manual_cartesian.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/dox/</path>
    <filename>manual__cartesian_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>manual_cartesian_grid_geom.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/dox/</path>
    <filename>manual__cartesian__grid__geom_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>manual_cartesian_operators_cell.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/dox/</path>
    <filename>manual__cartesian__operators__cell_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>manual_cartesian_operators_fortran.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/dox/</path>
    <filename>manual__cartesian__operators__fortran_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>manual_cartesian_patch_geom.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/dox/</path>
    <filename>manual__cartesian__patch__geom_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>manual_skeleton.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/dox/</path>
    <filename>manual__skeleton_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>manual_skeleton_grid_geom.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/dox/</path>
    <filename>manual__skeleton__grid__geom_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>manual_skeleton_operators.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/dox/</path>
    <filename>manual__skeleton__operators_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>manual_skeleton_patch_geom.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/dox/</path>
    <filename>manual__skeleton__patch__geom_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>SAMRAITransferOperatorRegistry.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>SAMRAITransferOperatorRegistry_8C</filename>
    <includes id="SAMRAITransferOperatorRegistry_8h" name="SAMRAITransferOperatorRegistry.h" local="yes" imported="no">SAMRAI/geom/SAMRAITransferOperatorRegistry.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <includes id="OutersideVariable_8h" name="OutersideVariable.h" local="yes" imported="no">SAMRAI/pdat/OutersideVariable.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="OuternodeVariable_8h" name="OuternodeVariable.h" local="yes" imported="no">SAMRAI/pdat/OuternodeVariable.h</includes>
    <includes id="NodeComplexInjection_8h" name="NodeComplexInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeComplexInjection.h</includes>
    <includes id="NodeDoubleInjection_8h" name="NodeDoubleInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeDoubleInjection.h</includes>
    <includes id="NodeFloatInjection_8h" name="NodeFloatInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeFloatInjection.h</includes>
    <includes id="NodeIntegerInjection_8h" name="NodeIntegerInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeIntegerInjection.h</includes>
    <includes id="OuternodeDoubleConstantCoarsen_8h" name="OuternodeDoubleConstantCoarsen.h" local="yes" imported="no">SAMRAI/pdat/OuternodeDoubleConstantCoarsen.h</includes>
    <includes id="CellComplexConstantRefine_8h" name="CellComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellComplexConstantRefine.h</includes>
    <includes id="CellDoubleConstantRefine_8h" name="CellDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellDoubleConstantRefine.h</includes>
    <includes id="CellFloatConstantRefine_8h" name="CellFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellFloatConstantRefine.h</includes>
    <includes id="CellIntegerConstantRefine_8h" name="CellIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellIntegerConstantRefine.h</includes>
    <includes id="EdgeComplexConstantRefine_8h" name="EdgeComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeComplexConstantRefine.h</includes>
    <includes id="EdgeDoubleConstantRefine_8h" name="EdgeDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeDoubleConstantRefine.h</includes>
    <includes id="EdgeFloatConstantRefine_8h" name="EdgeFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeFloatConstantRefine.h</includes>
    <includes id="EdgeIntegerConstantRefine_8h" name="EdgeIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeIntegerConstantRefine.h</includes>
    <includes id="FaceComplexConstantRefine_8h" name="FaceComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceComplexConstantRefine.h</includes>
    <includes id="FaceDoubleConstantRefine_8h" name="FaceDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceDoubleConstantRefine.h</includes>
    <includes id="FaceFloatConstantRefine_8h" name="FaceFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceFloatConstantRefine.h</includes>
    <includes id="FaceIntegerConstantRefine_8h" name="FaceIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceIntegerConstantRefine.h</includes>
    <includes id="OuterfaceComplexConstantRefine_8h" name="OuterfaceComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceComplexConstantRefine.h</includes>
    <includes id="OuterfaceDoubleConstantRefine_8h" name="OuterfaceDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceDoubleConstantRefine.h</includes>
    <includes id="OuterfaceFloatConstantRefine_8h" name="OuterfaceFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceFloatConstantRefine.h</includes>
    <includes id="OuterfaceIntegerConstantRefine_8h" name="OuterfaceIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceIntegerConstantRefine.h</includes>
    <includes id="SideComplexConstantRefine_8h" name="SideComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideComplexConstantRefine.h</includes>
    <includes id="SideDoubleConstantRefine_8h" name="SideDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideDoubleConstantRefine.h</includes>
    <includes id="SideFloatConstantRefine_8h" name="SideFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideFloatConstantRefine.h</includes>
    <includes id="SideIntegerConstantRefine_8h" name="SideIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideIntegerConstantRefine.h</includes>
    <includes id="CellComplexLinearTimeInterpolateOp_8h" name="CellComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellComplexLinearTimeInterpolateOp.h</includes>
    <includes id="CellDoubleLinearTimeInterpolateOp_8h" name="CellDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="CellFloatLinearTimeInterpolateOp_8h" name="CellFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellFloatLinearTimeInterpolateOp.h</includes>
    <includes id="EdgeComplexLinearTimeInterpolateOp_8h" name="EdgeComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/EdgeComplexLinearTimeInterpolateOp.h</includes>
    <includes id="EdgeDoubleLinearTimeInterpolateOp_8h" name="EdgeDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/EdgeDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="EdgeFloatLinearTimeInterpolateOp_8h" name="EdgeFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/EdgeFloatLinearTimeInterpolateOp.h</includes>
    <includes id="FaceComplexLinearTimeInterpolateOp_8h" name="FaceComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceComplexLinearTimeInterpolateOp.h</includes>
    <includes id="FaceDoubleLinearTimeInterpolateOp_8h" name="FaceDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="FaceFloatLinearTimeInterpolateOp_8h" name="FaceFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceFloatLinearTimeInterpolateOp.h</includes>
    <includes id="NodeComplexLinearTimeInterpolateOp_8h" name="NodeComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeComplexLinearTimeInterpolateOp.h</includes>
    <includes id="NodeDoubleLinearTimeInterpolateOp_8h" name="NodeDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="NodeFloatLinearTimeInterpolateOp_8h" name="NodeFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeFloatLinearTimeInterpolateOp.h</includes>
    <includes id="OuterfaceComplexLinearTimeInterpolateOp_8h" name="OuterfaceComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceComplexLinearTimeInterpolateOp.h</includes>
    <includes id="OuterfaceDoubleLinearTimeInterpolateOp_8h" name="OuterfaceDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="OuterfaceFloatLinearTimeInterpolateOp_8h" name="OuterfaceFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceFloatLinearTimeInterpolateOp.h</includes>
    <includes id="OutersideComplexLinearTimeInterpolateOp_8h" name="OutersideComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideComplexLinearTimeInterpolateOp.h</includes>
    <includes id="OutersideDoubleLinearTimeInterpolateOp_8h" name="OutersideDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="OutersideFloatLinearTimeInterpolateOp_8h" name="OutersideFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideFloatLinearTimeInterpolateOp.h</includes>
    <includes id="SideComplexLinearTimeInterpolateOp_8h" name="SideComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideComplexLinearTimeInterpolateOp.h</includes>
    <includes id="SideDoubleLinearTimeInterpolateOp_8h" name="SideDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="SideFloatLinearTimeInterpolateOp_8h" name="SideFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideFloatLinearTimeInterpolateOp.h</includes>
    <includes id="CartesianCellComplexWeightedAverage_8h" name="CartesianCellComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianCellComplexWeightedAverage.h</includes>
    <includes id="CartesianCellDoubleWeightedAverage_8h" name="CartesianCellDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianCellDoubleWeightedAverage.h</includes>
    <includes id="CartesianCellFloatWeightedAverage_8h" name="CartesianCellFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianCellFloatWeightedAverage.h</includes>
    <includes id="CartesianEdgeComplexWeightedAverage_8h" name="CartesianEdgeComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeComplexWeightedAverage.h</includes>
    <includes id="CartesianEdgeDoubleWeightedAverage_8h" name="CartesianEdgeDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeDoubleWeightedAverage.h</includes>
    <includes id="CartesianEdgeFloatWeightedAverage_8h" name="CartesianEdgeFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeFloatWeightedAverage.h</includes>
    <includes id="CartesianFaceComplexWeightedAverage_8h" name="CartesianFaceComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceComplexWeightedAverage.h</includes>
    <includes id="CartesianFaceDoubleWeightedAverage_8h" name="CartesianFaceDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceDoubleWeightedAverage.h</includes>
    <includes id="CartesianFaceFloatWeightedAverage_8h" name="CartesianFaceFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceFloatWeightedAverage.h</includes>
    <includes id="CartesianOuterfaceComplexWeightedAverage_8h" name="CartesianOuterfaceComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOuterfaceComplexWeightedAverage.h</includes>
    <includes id="CartesianOuterfaceDoubleWeightedAverage_8h" name="CartesianOuterfaceDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOuterfaceDoubleWeightedAverage.h</includes>
    <includes id="CartesianOuterfaceFloatWeightedAverage_8h" name="CartesianOuterfaceFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOuterfaceFloatWeightedAverage.h</includes>
    <includes id="CartesianOutersideDoubleWeightedAverage_8h" name="CartesianOutersideDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOutersideDoubleWeightedAverage.h</includes>
    <includes id="CartesianSideComplexWeightedAverage_8h" name="CartesianSideComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianSideComplexWeightedAverage.h</includes>
    <includes id="CartesianSideDoubleWeightedAverage_8h" name="CartesianSideDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianSideDoubleWeightedAverage.h</includes>
    <includes id="CartesianSideFloatWeightedAverage_8h" name="CartesianSideFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianSideFloatWeightedAverage.h</includes>
    <includes id="SkeletonCoarsen_8h" name="SkeletonCoarsen.h" local="yes" imported="no">SAMRAI/geom/SkeletonCoarsen.h</includes>
    <includes id="CartesianCellComplexConservativeLinearRefine_8h" name="CartesianCellComplexConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellComplexConservativeLinearRefine.h</includes>
    <includes id="CartesianCellDoubleConservativeLinearRefine_8h" name="CartesianCellDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianCellFloatConservativeLinearRefine_8h" name="CartesianCellFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellFloatConservativeLinearRefine.h</includes>
    <includes id="CartesianEdgeDoubleConservativeLinearRefine_8h" name="CartesianEdgeDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianEdgeFloatConservativeLinearRefine_8h" name="CartesianEdgeFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeFloatConservativeLinearRefine.h</includes>
    <includes id="CartesianFaceDoubleConservativeLinearRefine_8h" name="CartesianFaceDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianFaceFloatConservativeLinearRefine_8h" name="CartesianFaceFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceFloatConservativeLinearRefine.h</includes>
    <includes id="CartesianSideDoubleConservativeLinearRefine_8h" name="CartesianSideDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianSideDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianSideFloatConservativeLinearRefine_8h" name="CartesianSideFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianSideFloatConservativeLinearRefine.h</includes>
    <includes id="CartesianCellComplexLinearRefine_8h" name="CartesianCellComplexLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellComplexLinearRefine.h</includes>
    <includes id="CartesianCellDoubleLinearRefine_8h" name="CartesianCellDoubleLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellDoubleLinearRefine.h</includes>
    <includes id="CartesianCellFloatLinearRefine_8h" name="CartesianCellFloatLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellFloatLinearRefine.h</includes>
    <includes id="CartesianNodeComplexLinearRefine_8h" name="CartesianNodeComplexLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianNodeComplexLinearRefine.h</includes>
    <includes id="CartesianNodeDoubleLinearRefine_8h" name="CartesianNodeDoubleLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianNodeDoubleLinearRefine.h</includes>
    <includes id="CartesianNodeFloatLinearRefine_8h" name="CartesianNodeFloatLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianNodeFloatLinearRefine.h</includes>
    <includes id="SkeletonRefine_8h" name="SkeletonRefine.h" local="yes" imported="no">SAMRAI/geom/SkeletonRefine.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>SAMRAITransferOperatorRegistry.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>SAMRAITransferOperatorRegistry_8h</filename>
    <includes id="TransferOperatorRegistry_8h" name="TransferOperatorRegistry.h" local="yes" imported="no">SAMRAI/hier/TransferOperatorRegistry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::SAMRAITransferOperatorRegistry</class>
  </compound>
  <compound kind="file">
    <name>SkeletonCoarsen.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>SkeletonCoarsen_8C</filename>
    <includes id="SkeletonCoarsen_8h" name="SkeletonCoarsen.h" local="yes" imported="no">SAMRAI/geom/SkeletonCoarsen.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>SkeletonCoarsen.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>SkeletonCoarsen_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::SkeletonCoarsen</class>
  </compound>
  <compound kind="file">
    <name>SkeletonGridGeometry.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>SkeletonGridGeometry_8C</filename>
    <includes id="SkeletonGridGeometry_8h" name="SkeletonGridGeometry.h" local="yes" imported="no">SAMRAI/geom/SkeletonGridGeometry.h</includes>
    <includes id="SkeletonPatchGeometry_8h" name="SkeletonPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/SkeletonPatchGeometry.h</includes>
    <includes id="SAMRAITransferOperatorRegistry_8h" name="SAMRAITransferOperatorRegistry.h" local="yes" imported="no">SAMRAI/geom/SAMRAITransferOperatorRegistry.h</includes>
    <includes id="SkeletonCoarsen_8h" name="SkeletonCoarsen.h" local="yes" imported="no">SAMRAI/geom/SkeletonCoarsen.h</includes>
    <includes id="SkeletonRefine_8h" name="SkeletonRefine.h" local="yes" imported="no">SAMRAI/geom/SkeletonRefine.h</includes>
    <includes id="CellComplexLinearTimeInterpolateOp_8h" name="CellComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellComplexLinearTimeInterpolateOp.h</includes>
    <includes id="SideComplexLinearTimeInterpolateOp_8h" name="SideComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideComplexLinearTimeInterpolateOp.h</includes>
    <includes id="FaceComplexLinearTimeInterpolateOp_8h" name="FaceComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceComplexLinearTimeInterpolateOp.h</includes>
    <includes id="NodeComplexLinearTimeInterpolateOp_8h" name="NodeComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeComplexLinearTimeInterpolateOp.h</includes>
    <includes id="OuterfaceComplexLinearTimeInterpolateOp_8h" name="OuterfaceComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceComplexLinearTimeInterpolateOp.h</includes>
    <includes id="OutersideComplexLinearTimeInterpolateOp_8h" name="OutersideComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideComplexLinearTimeInterpolateOp.h</includes>
    <includes id="CellFloatLinearTimeInterpolateOp_8h" name="CellFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellFloatLinearTimeInterpolateOp.h</includes>
    <includes id="SideFloatLinearTimeInterpolateOp_8h" name="SideFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideFloatLinearTimeInterpolateOp.h</includes>
    <includes id="FaceFloatLinearTimeInterpolateOp_8h" name="FaceFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceFloatLinearTimeInterpolateOp.h</includes>
    <includes id="NodeFloatLinearTimeInterpolateOp_8h" name="NodeFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeFloatLinearTimeInterpolateOp.h</includes>
    <includes id="OuterfaceFloatLinearTimeInterpolateOp_8h" name="OuterfaceFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceFloatLinearTimeInterpolateOp.h</includes>
    <includes id="OutersideFloatLinearTimeInterpolateOp_8h" name="OutersideFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideFloatLinearTimeInterpolateOp.h</includes>
    <includes id="CellDoubleLinearTimeInterpolateOp_8h" name="CellDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="SideDoubleLinearTimeInterpolateOp_8h" name="SideDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="FaceDoubleLinearTimeInterpolateOp_8h" name="FaceDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="NodeDoubleLinearTimeInterpolateOp_8h" name="NodeDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="OuterfaceDoubleLinearTimeInterpolateOp_8h" name="OuterfaceDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="OutersideDoubleLinearTimeInterpolateOp_8h" name="OutersideDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="BoundaryLookupTable_8h" name="BoundaryLookupTable.h" local="yes" imported="no">SAMRAI/hier/BoundaryLookupTable.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>SkeletonGridGeometry.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>SkeletonGridGeometry_8h</filename>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::SkeletonGridGeometry</class>
  </compound>
  <compound kind="file">
    <name>SkeletonPatchGeometry.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>SkeletonPatchGeometry_8C</filename>
    <includes id="SkeletonPatchGeometry_8h" name="SkeletonPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/SkeletonPatchGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>SkeletonPatchGeometry.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>SkeletonPatchGeometry_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchGeometry_8h" name="PatchGeometry.h" local="yes" imported="no">SAMRAI/hier/PatchGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::SkeletonPatchGeometry</class>
  </compound>
  <compound kind="file">
    <name>SkeletonRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>SkeletonRefine_8C</filename>
    <includes id="SkeletonRefine_8h" name="SkeletonRefine.h" local="yes" imported="no">SAMRAI/geom/SkeletonRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>SkeletonRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/</path>
    <filename>SkeletonRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <class kind="class">SAMRAI::geom::SkeletonRefine</class>
  </compound>
  <compound kind="file">
    <name>BaseConnectorAlgorithm.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BaseConnectorAlgorithm_8C</filename>
    <includes id="BaseConnectorAlgorithm_8h" name="BaseConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/BaseConnectorAlgorithm.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BaseConnectorAlgorithm.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BaseConnectorAlgorithm_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="AsyncCommPeer_8h" name="AsyncCommPeer.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommPeer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::BaseConnectorAlgorithm</class>
  </compound>
  <compound kind="file">
    <name>BlockId.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BlockId_8C</filename>
    <includes id="BlockId_8h" name="BlockId.h" local="yes" imported="no">SAMRAI/hier/BlockId.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="BlockId_8I" name="BlockId.I" local="yes" imported="no">SAMRAI/hier/BlockId.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>8c7a23e2e4fac62ed92bddf6035be0f8</anchor>
      <arglist>(std::ostream &amp;co, const BlockId &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BlockId.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BlockId_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::BlockId</class>
  </compound>
  <compound kind="file">
    <name>BlockId.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BlockId_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoundaryBox.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoundaryBox_8C</filename>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="BoundaryLookupTable_8h" name="BoundaryLookupTable.h" local="yes" imported="no">SAMRAI/hier/BoundaryLookupTable.h</includes>
    <includes id="BoundaryBox_8I" name="BoundaryBox.I" local="yes" imported="no">SAMRAI/hier/BoundaryBox.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoundaryBox.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoundaryBox_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::BoundaryBox</class>
  </compound>
  <compound kind="file">
    <name>BoundaryBox.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoundaryBox_8I</filename>
    <includes id="BoundaryLookupTable_8h" name="BoundaryLookupTable.h" local="yes" imported="no">SAMRAI/hier/BoundaryLookupTable.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoundaryBoxUtils.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoundaryBoxUtils_8C</filename>
    <includes id="BoundaryBoxUtils_8h" name="BoundaryBoxUtils.h" local="yes" imported="no">SAMRAI/hier/BoundaryBoxUtils.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoundaryBoxUtils.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoundaryBoxUtils_8h</filename>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::BoundaryBoxUtils</class>
  </compound>
  <compound kind="file">
    <name>BoundaryLookupTable.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoundaryLookupTable_8C</filename>
    <includes id="BoundaryLookupTable_8h" name="BoundaryLookupTable.h" local="yes" imported="no">SAMRAI/hier/BoundaryLookupTable.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="BoundaryLookupTable_8I" name="BoundaryLookupTable.I" local="yes" imported="no">SAMRAI/hier/BoundaryLookupTable.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoundaryLookupTable.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoundaryLookupTable_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::BoundaryLookupTable</class>
  </compound>
  <compound kind="file">
    <name>BoundaryLookupTable.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoundaryLookupTable_8I</filename>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>Box.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>Box_8C</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxId_8h" name="BoxId.h" local="yes" imported="no">SAMRAI/hier/BoxId.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Box_8I" name="Box.I" local="yes" imported="no">SAMRAI/hier/Box.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type>std::istream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>c43e983101059d46398e841d8fca3ec6</anchor>
      <arglist>(std::istream &amp;s, Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a0820922464e7dc374beaafcfea67604</anchor>
      <arglist>(std::ostream &amp;s, const Box &amp;box)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Box.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>Box_8h</filename>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="BoxId_8h" name="BoxId.h" local="yes" imported="no">SAMRAI/hier/BoxId.h</includes>
    <includes id="Transformation_8h" name="Transformation.h" local="yes" imported="no">SAMRAI/hier/Transformation.h</includes>
    <includes id="DatabaseBox_8h" name="DatabaseBox.h" local="yes" imported="no">SAMRAI/tbox/DatabaseBox.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::Box</class>
    <class kind="struct">SAMRAI::hier::Box::id_equal</class>
    <class kind="struct">SAMRAI::hier::Box::id_less</class>
    <class kind="struct">SAMRAI::hier::Box::box_equality</class>
    <class kind="class">SAMRAI::hier::BoxIterator</class>
  </compound>
  <compound kind="file">
    <name>Box.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>Box_8I</filename>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="BoxId_8h" name="BoxId.h" local="yes" imported="no">SAMRAI/hier/BoxId.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainer.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxContainer_8C</filename>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxContainerSingleBlockIterator_8h" name="BoxContainerSingleBlockIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerSingleBlockIterator.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="MultiblockBoxTree_8h" name="MultiblockBoxTree.h" local="yes" imported="no">SAMRAI/hier/MultiblockBoxTree.h</includes>
    <includes id="BoxContainer_8I" name="BoxContainer.I" local="yes" imported="no">SAMRAI/hier/BoxContainer.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type></type>
      <name>BoxContainer::operator tbox::Array&lt; tbox::DatabaseBox &gt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>fad879231dbfbe65d0fd73897fcd26bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>5f436178546c1296721a49a46d51cdf6</anchor>
      <arglist>(std::ostream &amp;s, const BoxContainer::Outputter &amp;format)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BoxContainer.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxContainer_8h</filename>
    <includes id="BlockId_8h" name="BlockId.h" local="yes" imported="no">SAMRAI/hier/BlockId.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::BoxContainer</class>
    <class kind="class">SAMRAI::hier::BoxContainer::Outputter</class>
  </compound>
  <compound kind="file">
    <name>BoxContainer.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxContainer_8I</filename>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainerConstIterator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxContainerConstIterator_8C</filename>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxContainerConstIterator_8I" name="BoxContainerConstIterator.I" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainerConstIterator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxContainerConstIterator_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::BoxContainerConstIterator</class>
  </compound>
  <compound kind="file">
    <name>BoxContainerConstIterator.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxContainerConstIterator_8I</filename>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainerIterator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxContainerIterator_8C</filename>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxContainerIterator_8I" name="BoxContainerIterator.I" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainerIterator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxContainerIterator_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::BoxContainerIterator</class>
  </compound>
  <compound kind="file">
    <name>BoxContainerIterator.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxContainerIterator_8I</filename>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainerSingleBlockIterator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxContainerSingleBlockIterator_8C</filename>
    <includes id="BoxContainerSingleBlockIterator_8h" name="BoxContainerSingleBlockIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerSingleBlockIterator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainerSingleBlockIterator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxContainerSingleBlockIterator_8h</filename>
    <includes id="BlockId_8h" name="BlockId.h" local="yes" imported="no">SAMRAI/hier/BlockId.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::BoxContainerSingleBlockIterator</class>
  </compound>
  <compound kind="file">
    <name>BoxContainerSingleOwnerIterator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxContainerSingleOwnerIterator_8C</filename>
    <includes id="BoxContainerSingleOwnerIterator_8h" name="BoxContainerSingleOwnerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerSingleOwnerIterator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainerSingleOwnerIterator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxContainerSingleOwnerIterator_8h</filename>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::BoxContainerSingleOwnerIterator</class>
  </compound>
  <compound kind="file">
    <name>BoxContainerUtils.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxContainerUtils_8C</filename>
    <includes id="BoxContainerUtils_8h" name="BoxContainerUtils.h" local="yes" imported="no">SAMRAI/hier/BoxContainerUtils.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="BoxContainerUtils_8I" name="BoxContainerUtils.I" local="yes" imported="no">SAMRAI/hier/BoxContainerUtils.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainerUtils.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxContainerUtils_8h</filename>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::BoxContainerUtils</class>
  </compound>
  <compound kind="file">
    <name>BoxContainerUtils.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxContainerUtils_8I</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxGeometry.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxGeometry_8C</filename>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxGeometry_8I" name="BoxGeometry.I" local="yes" imported="no">SAMRAI/hier/BoxGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxGeometry.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxGeometry_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::BoxGeometry</class>
  </compound>
  <compound kind="file">
    <name>BoxGeometry.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxGeometry_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxId.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxId_8C</filename>
    <includes id="BoxId_8h" name="BoxId.h" local="yes" imported="no">SAMRAI/hier/BoxId.h</includes>
    <includes id="BoxId_8I" name="BoxId.I" local="yes" imported="no">SAMRAI/hier/BoxId.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>c886464826dcf915f2030fff34579acf</anchor>
      <arglist>(std::ostream &amp;co, const BoxId &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BoxId.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxId_8h</filename>
    <includes id="GlobalId_8h" name="GlobalId.h" local="yes" imported="no">SAMRAI/hier/GlobalId.h</includes>
    <includes id="BlockId_8h" name="BlockId.h" local="yes" imported="no">SAMRAI/hier/BlockId.h</includes>
    <includes id="PeriodicId_8h" name="PeriodicId.h" local="yes" imported="no">SAMRAI/hier/PeriodicId.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::BoxId</class>
  </compound>
  <compound kind="file">
    <name>BoxId.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxId_8I</filename>
    <includes id="BoxId_8h" name="BoxId.h" local="yes" imported="no">SAMRAI/hier/BoxId.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxIOUtility.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxIOUtility_8C</filename>
    <includes id="BoxIOUtility_8h" name="BoxIOUtility.h" local="yes" imported="no">SAMRAI/hier/BoxIOUtility.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="HDFDatabase_8h" name="HDFDatabase.h" local="yes" imported="no">SAMRAI/tbox/HDFDatabase.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxIOUtility.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxIOUtility_8h</filename>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::BoxIOUtility</class>
  </compound>
  <compound kind="file">
    <name>BoxLevel.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxLevel_8C</filename>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainerSingleBlockIterator_8h" name="BoxContainerSingleBlockIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerSingleBlockIterator.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="BoxLevel_8I" name="BoxLevel.I" local="yes" imported="no">SAMRAI/hier/BoxLevel.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>1480c4185e5e2c44efdc60634c21ed76</anchor>
      <arglist>(std::ostream &amp;s, const BoxLevel::Outputter &amp;format)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BoxLevel.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxLevel_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxLevelHandle_8h" name="BoxLevelHandle.h" local="yes" imported="no">SAMRAI/hier/BoxLevelHandle.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="PersistentOverlapConnectors_8h" name="PersistentOverlapConnectors.h" local="yes" imported="no">SAMRAI/hier/PersistentOverlapConnectors.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="ConstPointer_8h" name="ConstPointer.h" local="yes" imported="no">SAMRAI/tbox/ConstPointer.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::BoxLevel</class>
    <class kind="class">SAMRAI::hier::BoxLevel::Outputter</class>
  </compound>
  <compound kind="file">
    <name>BoxLevel.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxLevel_8I</filename>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="BoxLevelHandle_8h" name="BoxLevelHandle.h" local="yes" imported="no">SAMRAI/hier/BoxLevelHandle.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxContainerSingleOwnerIterator_8h" name="BoxContainerSingleOwnerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerSingleOwnerIterator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxLevelConnectorUtils.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxLevelConnectorUtils_8C</filename>
    <includes id="BoxLevelConnectorUtils_8h" name="BoxLevelConnectorUtils.h" local="yes" imported="no">SAMRAI/hier/BoxLevelConnectorUtils.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="MappingConnectorAlgorithm_8h" name="MappingConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/MappingConnectorAlgorithm.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="BoxLevelConnectorUtils_8I" name="BoxLevelConnectorUtils.I" local="yes" imported="no">SAMRAI/hier/BoxLevelConnectorUtils.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxLevelConnectorUtils.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxLevelConnectorUtils_8h</filename>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="MultiblockBoxTree_8h" name="MultiblockBoxTree.h" local="yes" imported="no">SAMRAI/hier/MultiblockBoxTree.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::BoxLevelConnectorUtils</class>
  </compound>
  <compound kind="file">
    <name>BoxLevelConnectorUtils.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxLevelConnectorUtils_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxLevelHandle.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxLevelHandle_8C</filename>
    <includes id="BoxLevelHandle_8h" name="BoxLevelHandle.h" local="yes" imported="no">SAMRAI/hier/BoxLevelHandle.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxLevelHandle.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxLevelHandle_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::BoxLevelHandle</class>
  </compound>
  <compound kind="file">
    <name>BoxLevelStatistics.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxLevelStatistics_8C</filename>
    <includes id="BoxLevelStatistics_8h" name="BoxLevelStatistics.h" local="yes" imported="no">SAMRAI/hier/BoxLevelStatistics.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxLevelStatistics.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxLevelStatistics_8h</filename>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::BoxLevelStatistics</class>
  </compound>
  <compound kind="file">
    <name>BoxNeighborhoodCollection.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxNeighborhoodCollection_8C</filename>
    <includes id="BoxNeighborhoodCollection_8h" name="BoxNeighborhoodCollection.h" local="yes" imported="no">SAMRAI/hier/BoxNeighborhoodCollection.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainerSingleBlockIterator_8h" name="BoxContainerSingleBlockIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerSingleBlockIterator.h</includes>
    <includes id="BoxNeighborhoodCollection_8I" name="BoxNeighborhoodCollection.I" local="yes" imported="no">SAMRAI/hier/BoxNeighborhoodCollection.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxNeighborhoodCollection.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxNeighborhoodCollection_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxId_8h" name="BoxId.h" local="yes" imported="no">SAMRAI/hier/BoxId.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Dimension_8h" name="Dimension.h" local="yes" imported="no">SAMRAI/tbox/Dimension.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::BoxNeighborhoodCollection</class>
    <class kind="class">SAMRAI::hier::BoxNeighborhoodCollection::ConstIterator</class>
    <class kind="class">SAMRAI::hier::BoxNeighborhoodCollection::Iterator</class>
    <class kind="class">SAMRAI::hier::BoxNeighborhoodCollection::ConstNeighborIterator</class>
    <class kind="class">SAMRAI::hier::BoxNeighborhoodCollection::NeighborIterator</class>
  </compound>
  <compound kind="file">
    <name>BoxNeighborhoodCollection.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxNeighborhoodCollection_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxOverlap.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxOverlap_8C</filename>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="BoxOverlap_8I" name="BoxOverlap.I" local="yes" imported="no">SAMRAI/hier/BoxOverlap.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxOverlap.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxOverlap_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Transformation_8h" name="Transformation.h" local="yes" imported="no">SAMRAI/hier/Transformation.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::BoxOverlap</class>
  </compound>
  <compound kind="file">
    <name>BoxOverlap.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxOverlap_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxTree.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxTree_8C</filename>
    <includes id="BoxTree_8h" name="BoxTree.h" local="yes" imported="no">SAMRAI/hier/BoxTree.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Statistician_8h" name="Statistician.h" local="yes" imported="no">SAMRAI/tbox/Statistician.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxTree.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxTree_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::BoxTree</class>
  </compound>
  <compound kind="file">
    <name>BoxUtilities.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxUtilities_8C</filename>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxUtilities.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>BoxUtilities_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="struct">SAMRAI::hier::BoxUtilities</class>
  </compound>
  <compound kind="file">
    <name>CoarseFineBoundary.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>CoarseFineBoundary_8C</filename>
    <includes id="CoarseFineBoundary_8h" name="CoarseFineBoundary.h" local="yes" imported="no">SAMRAI/hier/CoarseFineBoundary.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="BoxContainerSingleBlockIterator_8h" name="BoxContainerSingleBlockIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerSingleBlockIterator.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>CoarseFineBoundary.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>CoarseFineBoundary_8h</filename>
    <includes id="Dimension_8h" name="Dimension.h" local="yes" imported="no">SAMRAI/tbox/Dimension.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::CoarseFineBoundary</class>
  </compound>
  <compound kind="file">
    <name>CoarsenOperator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>CoarsenOperator_8C</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="CoarsenOperator_8I" name="CoarsenOperator.I" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenOperator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>CoarsenOperator_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::CoarsenOperator</class>
  </compound>
  <compound kind="file">
    <name>CoarsenOperator.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>CoarsenOperator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>ComponentSelector.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>ComponentSelector_8C</filename>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="ComponentSelector_8I" name="ComponentSelector.I" local="yes" imported="no">SAMRAI/hier/ComponentSelector.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>ComponentSelector.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>ComponentSelector_8h</filename>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::ComponentSelector</class>
  </compound>
  <compound kind="file">
    <name>ComponentSelector.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>ComponentSelector_8I</filename>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>Connector.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>Connector_8C</filename>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Connector_8I" name="Connector.I" local="yes" imported="no">SAMRAI/hier/Connector.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>b9f9b79fab29ee11528289ccc6cd7470</anchor>
      <arglist>(std::ostream &amp;os, const Connector::Outputter &amp;format)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>dbgbord</name>
      <anchorfile>Connector_8C.html</anchorfile>
      <anchor>cd4096bf4e9fe3db87f1e6a6bd6c8366</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Connector.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>Connector_8h</filename>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxNeighborhoodCollection_8h" name="BoxNeighborhoodCollection.h" local="yes" imported="no">SAMRAI/hier/BoxNeighborhoodCollection.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::Connector</class>
    <class kind="class">SAMRAI::hier::Connector::Outputter</class>
  </compound>
  <compound kind="file">
    <name>Connector.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>Connector_8I</filename>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="BoxLevelHandle_8h" name="BoxLevelHandle.h" local="yes" imported="no">SAMRAI/hier/BoxLevelHandle.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>ConnectorStatistics.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>ConnectorStatistics_8C</filename>
    <includes id="ConnectorStatistics_8h" name="ConnectorStatistics.h" local="yes" imported="no">SAMRAI/hier/ConnectorStatistics.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>ConnectorStatistics.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>ConnectorStatistics_8h</filename>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::ConnectorStatistics</class>
  </compound>
  <compound kind="file">
    <name>manual_boxes.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/dox/</path>
    <filename>manual__boxes_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>manual_dlbg.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/dox/</path>
    <filename>manual__dlbg_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>manual_patches.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/dox/</path>
    <filename>manual__patches_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>manual_transfer_interfaces.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/dox/</path>
    <filename>manual__transfer__interfaces_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>manual_variables.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/dox/</path>
    <filename>manual__variables_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>ErrorCheckIntTypes.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>ErrorCheckIntTypes_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="struct">SAMRAI::hier::PatchNumber</class>
    <class kind="struct">SAMRAI::hier::LevelNumber</class>
    <class kind="struct">SAMRAI::hier::PatchDataId</class>
  </compound>
  <compound kind="file">
    <name>GlobalId.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>GlobalId_8C</filename>
    <includes id="GlobalId_8h" name="GlobalId.h" local="yes" imported="no">SAMRAI/hier/GlobalId.h</includes>
    <includes id="GlobalId_8I" name="GlobalId.I" local="yes" imported="no">SAMRAI/hier/GlobalId.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>3612a4c52989f5d072c75b5709f0df59</anchor>
      <arglist>(std::ostream &amp;co, const GlobalId &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GlobalId.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>GlobalId_8h</filename>
    <includes id="LocalId_8h" name="LocalId.h" local="yes" imported="no">SAMRAI/hier/LocalId.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::GlobalId</class>
  </compound>
  <compound kind="file">
    <name>GlobalId.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>GlobalId_8I</filename>
    <includes id="GlobalId_8h" name="GlobalId.h" local="yes" imported="no">SAMRAI/hier/GlobalId.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>GridGeometry.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>GridGeometry_8C</filename>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="BoundaryLookupTable_8h" name="BoundaryLookupTable.h" local="yes" imported="no">SAMRAI/hier/BoundaryLookupTable.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainerSingleBlockIterator_8h" name="BoxContainerSingleBlockIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerSingleBlockIterator.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="BoxTree_8h" name="BoxTree.h" local="yes" imported="no">SAMRAI/hier/BoxTree.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="GridGeometry_8I" name="GridGeometry.I" local="yes" imported="no">SAMRAI/hier/GridGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="define">
      <type>#define</type>
      <name>HIER_GRID_GEOMETRY_VERSION</name>
      <anchorfile>GridGeometry_8C.html</anchorfile>
      <anchor>75ed87dc0a379d04680cc7c35ff95251</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GridGeometry.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>GridGeometry_8h</filename>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="MultiblockBoxTree_8h" name="MultiblockBoxTree.h" local="yes" imported="no">SAMRAI/hier/MultiblockBoxTree.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchGeometry_8h" name="PatchGeometry.h" local="yes" imported="no">SAMRAI/hier/PatchGeometry.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="TransferOperatorRegistry_8h" name="TransferOperatorRegistry.h" local="yes" imported="no">SAMRAI/hier/TransferOperatorRegistry.h</includes>
    <includes id="Transformation_8h" name="Transformation.h" local="yes" imported="no">SAMRAI/hier/Transformation.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::GridGeometry</class>
    <class kind="class">SAMRAI::hier::GridGeometry::Neighbor</class>
  </compound>
  <compound kind="file">
    <name>GridGeometry.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>GridGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>Index.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>Index_8C</filename>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Index_8I" name="Index.I" local="yes" imported="no">SAMRAI/hier/Index.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>Index.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>Index_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::Index</class>
  </compound>
  <compound kind="file">
    <name>Index.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>Index_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>IntVector.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>IntVector_8C</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="IntVector_8I" name="IntVector.I" local="yes" imported="no">SAMRAI/hier/IntVector.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type>std::istream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a0a5592bc14e0355fba38234338e0277</anchor>
      <arglist>(std::istream &amp;s, IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>41a8218749c24ccb72cd05c90fc38ae9</anchor>
      <arglist>(std::ostream &amp;s, const IntVector &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>IntVector.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>IntVector_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Dimension_8h" name="Dimension.h" local="yes" imported="no">SAMRAI/tbox/Dimension.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::IntVector</class>
  </compound>
  <compound kind="file">
    <name>IntVector.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>IntVector_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>LocalId.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>LocalId_8C</filename>
    <includes id="LocalId_8h" name="LocalId.h" local="yes" imported="no">SAMRAI/hier/LocalId.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="LocalId_8I" name="LocalId.I" local="yes" imported="no">SAMRAI/hier/LocalId.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>f73e29591e12538fdccc01552511862d</anchor>
      <arglist>(std::ostream &amp;co, const LocalId &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LocalId.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>LocalId_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::LocalId</class>
  </compound>
  <compound kind="file">
    <name>LocalId.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>LocalId_8I</filename>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>MappingConnectorAlgorithm.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>MappingConnectorAlgorithm_8C</filename>
    <includes id="BoxContainerUtils_8h" name="BoxContainerUtils.h" local="yes" imported="no">SAMRAI/hier/BoxContainerUtils.h</includes>
    <includes id="MappingConnectorAlgorithm_8h" name="MappingConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/MappingConnectorAlgorithm.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="InputManager_8h" name="InputManager.h" local="yes" imported="no">SAMRAI/tbox/InputManager.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="AsyncCommStage_8h" name="AsyncCommStage.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommStage.h</includes>
    <includes id="AsyncCommPeer_8h" name="AsyncCommPeer.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommPeer.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>MappingConnectorAlgorithm.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>MappingConnectorAlgorithm_8h</filename>
    <includes id="BaseConnectorAlgorithm_8h" name="BaseConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/BaseConnectorAlgorithm.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::MappingConnectorAlgorithm</class>
  </compound>
  <compound kind="file">
    <name>MultiblockBoxTree.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>MultiblockBoxTree_8C</filename>
    <includes id="MultiblockBoxTree_8h" name="MultiblockBoxTree.h" local="yes" imported="no">SAMRAI/hier/MultiblockBoxTree.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Statistician_8h" name="Statistician.h" local="yes" imported="no">SAMRAI/tbox/Statistician.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>MultiblockBoxTree.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>MultiblockBoxTree_8h</filename>
    <includes id="BoxTree_8h" name="BoxTree.h" local="yes" imported="no">SAMRAI/hier/BoxTree.h</includes>
    <includes id="ConstPointer_8h" name="ConstPointer.h" local="yes" imported="no">SAMRAI/tbox/ConstPointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::MultiblockBoxTree</class>
  </compound>
  <compound kind="file">
    <name>MultiblockDataTranslator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>MultiblockDataTranslator_8C</filename>
    <includes id="MultiblockDataTranslator_8h" name="MultiblockDataTranslator.h" local="yes" imported="no">SAMRAI/hier/MultiblockDataTranslator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>MultiblockDataTranslator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>MultiblockDataTranslator_8h</filename>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::MultiblockDataTranslator</class>
  </compound>
  <compound kind="file">
    <name>NeighborhoodSet.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>NeighborhoodSet_8C</filename>
    <includes id="NeighborhoodSet_8h" name="NeighborhoodSet.h" local="yes" imported="no">SAMRAI/hier/NeighborhoodSet.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainerSingleBlockIterator_8h" name="BoxContainerSingleBlockIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerSingleBlockIterator.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="NeighborhoodSet_8I" name="NeighborhoodSet.I" local="yes" imported="no">SAMRAI/hier/NeighborhoodSet.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>e91d3853cdfae967ee3325f17b3fa5f1</anchor>
      <arglist>(std::ostream &amp;s, const NeighborhoodSet::Outputter &amp;format)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NeighborhoodSet.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>NeighborhoodSet_8h</filename>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxId_8h" name="BoxId.h" local="yes" imported="no">SAMRAI/hier/BoxId.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::NeighborhoodSet</class>
    <class kind="class">SAMRAI::hier::NeighborhoodSet::Outputter</class>
  </compound>
  <compound kind="file">
    <name>NeighborhoodSet.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>NeighborhoodSet_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>OverlapConnectorAlgorithm.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>OverlapConnectorAlgorithm_8C</filename>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxContainerUtils_8h" name="BoxContainerUtils.h" local="yes" imported="no">SAMRAI/hier/BoxContainerUtils.h</includes>
    <includes id="MultiblockBoxTree_8h" name="MultiblockBoxTree.h" local="yes" imported="no">SAMRAI/hier/MultiblockBoxTree.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="AsyncCommStage_8h" name="AsyncCommStage.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommStage.h</includes>
    <includes id="AsyncCommPeer_8h" name="AsyncCommPeer.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommPeer.h</includes>
    <includes id="InputManager_8h" name="InputManager.h" local="yes" imported="no">SAMRAI/tbox/InputManager.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>OverlapConnectorAlgorithm.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>OverlapConnectorAlgorithm_8h</filename>
    <includes id="BaseConnectorAlgorithm_8h" name="BaseConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/BaseConnectorAlgorithm.h</includes>
    <includes id="MultiblockBoxTree_8h" name="MultiblockBoxTree.h" local="yes" imported="no">SAMRAI/hier/MultiblockBoxTree.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::OverlapConnectorAlgorithm</class>
  </compound>
  <compound kind="file">
    <name>Patch.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>Patch_8C</filename>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Patch_8I" name="Patch.I" local="yes" imported="no">SAMRAI/hier/Patch.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>757f3c29403905053db1cbf64724c897</anchor>
      <arglist>(std::ostream &amp;s, const Patch &amp;patch)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Patch.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>Patch_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="PatchGeometry_8h" name="PatchGeometry.h" local="yes" imported="no">SAMRAI/hier/PatchGeometry.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="VariableContext_8h" name="VariableContext.h" local="yes" imported="no">SAMRAI/hier/VariableContext.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::Patch</class>
  </compound>
  <compound kind="file">
    <name>Patch.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>Patch_8I</filename>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchBoundaries.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchBoundaries_8C</filename>
    <includes id="PatchBoundaries_8h" name="PatchBoundaries.h" local="yes" imported="no">SAMRAI/hier/PatchBoundaries.h</includes>
    <includes id="PatchBoundaries_8I" name="PatchBoundaries.I" local="yes" imported="no">SAMRAI/hier/PatchBoundaries.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchBoundaries.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchBoundaries_8h</filename>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::PatchBoundaries</class>
  </compound>
  <compound kind="file">
    <name>PatchBoundaries.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchBoundaries_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchData.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchData_8C</filename>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="PatchData_8I" name="PatchData.I" local="yes" imported="no">SAMRAI/hier/PatchData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchData.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchData_8h</filename>
    <includes id="MessageStream_8h" name="MessageStream.h" local="yes" imported="no">SAMRAI/tbox/MessageStream.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::PatchData</class>
  </compound>
  <compound kind="file">
    <name>PatchData.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchDataFactory.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchDataFactory_8C</filename>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="PatchDataFactory_8I" name="PatchDataFactory.I" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchDataFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchDataFactory_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::PatchDataFactory</class>
  </compound>
  <compound kind="file">
    <name>PatchDataFactory.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchDataFactory_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchDescriptor.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchDescriptor_8C</filename>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="PatchDescriptor_8I" name="PatchDescriptor.I" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchDescriptor.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchDescriptor_8h</filename>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::PatchDescriptor</class>
  </compound>
  <compound kind="file">
    <name>PatchDescriptor.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchDescriptor_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFactory.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchFactory_8C</filename>
    <includes id="PatchFactory_8h" name="PatchFactory.h" local="yes" imported="no">SAMRAI/hier/PatchFactory.h</includes>
    <includes id="PatchFactory_8I" name="PatchFactory.I" local="yes" imported="no">SAMRAI/hier/PatchFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchFactory_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::PatchFactory</class>
  </compound>
  <compound kind="file">
    <name>PatchFactory.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchFactory_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchGeometry.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchGeometry_8C</filename>
    <includes id="PatchGeometry_8h" name="PatchGeometry.h" local="yes" imported="no">SAMRAI/hier/PatchGeometry.h</includes>
    <includes id="BoundaryLookupTable_8h" name="BoundaryLookupTable.h" local="yes" imported="no">SAMRAI/hier/BoundaryLookupTable.h</includes>
    <includes id="PatchGeometry_8I" name="PatchGeometry.I" local="yes" imported="no">SAMRAI/hier/PatchGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchGeometry.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchGeometry_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="LocalId_8h" name="LocalId.h" local="yes" imported="no">SAMRAI/hier/LocalId.h</includes>
    <includes id="PatchBoundaries_8h" name="PatchBoundaries.h" local="yes" imported="no">SAMRAI/hier/PatchBoundaries.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::PatchGeometry</class>
    <class kind="class">SAMRAI::hier::PatchGeometry::TwoDimBool</class>
  </compound>
  <compound kind="file">
    <name>PatchGeometry.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchGeometry_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchHierarchy.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchHierarchy_8C</filename>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="PatchHierarchy_8I" name="PatchHierarchy.I" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchHierarchy.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchHierarchy_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="MultiblockBoxTree_8h" name="MultiblockBoxTree.h" local="yes" imported="no">SAMRAI/hier/MultiblockBoxTree.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="PatchFactory_8h" name="PatchFactory.h" local="yes" imported="no">SAMRAI/hier/PatchFactory.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="PatchLevelFactory_8h" name="PatchLevelFactory.h" local="yes" imported="no">SAMRAI/hier/PatchLevelFactory.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::PatchHierarchy</class>
    <class kind="class">SAMRAI::hier::PatchHierarchy::ConnectorWidthRequestorStrategy</class>
  </compound>
  <compound kind="file">
    <name>PatchHierarchy.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchHierarchy_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevel.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchLevel_8C</filename>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="PatchLevel_8I" name="PatchLevel.I" local="yes" imported="no">SAMRAI/hier/PatchLevel.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_level_constructor</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>8fa3a09c400b40492b9c38f332bdccd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_constructor_setup</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>7dd3a83a389a5a94fa51b5874aaf52d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_constructor_phys_domain</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>695c20a8bc76d6714d6328b1cb050543</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_constructor_touch_boundaries</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>1b24774454386ecdbca73a2156c7f6a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_constructor_set_geometry</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>3213594eb9aa2486f656c934f313a176</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_set_patch_touches</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>f98b9666f0a2d02e84d94bd08ca6f1b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_constructor_compute_shifts</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>3339f4401b64dcb352a1da65dc4a96c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PatchLevel.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchLevel_8h</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="BoxContainerSingleBlockIterator_8h" name="BoxContainerSingleBlockIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerSingleBlockIterator.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="PatchFactory_8h" name="PatchFactory.h" local="yes" imported="no">SAMRAI/hier/PatchFactory.h</includes>
    <includes id="ProcessorMapping_8h" name="ProcessorMapping.h" local="yes" imported="no">SAMRAI/hier/ProcessorMapping.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::PatchLevel</class>
    <class kind="class">SAMRAI::hier::PatchLevel::Iterator</class>
  </compound>
  <compound kind="file">
    <name>PatchLevel.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchLevel_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelFactory.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchLevelFactory_8C</filename>
    <includes id="PatchLevelFactory_8h" name="PatchLevelFactory.h" local="yes" imported="no">SAMRAI/hier/PatchLevelFactory.h</includes>
    <includes id="PatchLevelFactory_8I" name="PatchLevelFactory.I" local="yes" imported="no">SAMRAI/hier/PatchLevelFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchLevelFactory_8h</filename>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="PatchFactory_8h" name="PatchFactory.h" local="yes" imported="no">SAMRAI/hier/PatchFactory.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::PatchLevelFactory</class>
  </compound>
  <compound kind="file">
    <name>PatchLevelFactory.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PatchLevelFactory_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PeriodicId.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PeriodicId_8C</filename>
    <includes id="PeriodicId_8h" name="PeriodicId.h" local="yes" imported="no">SAMRAI/hier/PeriodicId.h</includes>
    <includes id="PeriodicId_8I" name="PeriodicId.I" local="yes" imported="no">SAMRAI/hier/PeriodicId.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>ec4c406f7d490a9fca63b204542b65d7</anchor>
      <arglist>(std::ostream &amp;co, const PeriodicId &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PeriodicId.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PeriodicId_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::PeriodicId</class>
  </compound>
  <compound kind="file">
    <name>PeriodicId.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PeriodicId_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PeriodicShiftCatalog.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PeriodicShiftCatalog_8C</filename>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="PeriodicShiftCatalog_8I" name="PeriodicShiftCatalog.I" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PeriodicShiftCatalog.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PeriodicShiftCatalog_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PeriodicId_8h" name="PeriodicId.h" local="yes" imported="no">SAMRAI/hier/PeriodicId.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::PeriodicShiftCatalog</class>
  </compound>
  <compound kind="file">
    <name>PeriodicShiftCatalog.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PeriodicShiftCatalog_8I</filename>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PersistentOverlapConnectors.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PersistentOverlapConnectors_8C</filename>
    <includes id="PersistentOverlapConnectors_8h" name="PersistentOverlapConnectors.h" local="yes" imported="no">SAMRAI/hier/PersistentOverlapConnectors.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="InputManager_8h" name="InputManager.h" local="yes" imported="no">SAMRAI/tbox/InputManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PersistentOverlapConnectors.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>PersistentOverlapConnectors_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::PersistentOverlapConnectors</class>
  </compound>
  <compound kind="file">
    <name>ProcessorMapping.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>ProcessorMapping_8C</filename>
    <includes id="ProcessorMapping_8h" name="ProcessorMapping.h" local="yes" imported="no">SAMRAI/hier/ProcessorMapping.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="ProcessorMapping_8I" name="ProcessorMapping.I" local="yes" imported="no">SAMRAI/hier/ProcessorMapping.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>ProcessorMapping.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>ProcessorMapping_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::ProcessorMapping</class>
  </compound>
  <compound kind="file">
    <name>ProcessorMapping.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>ProcessorMapping_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>RealBoxConstIterator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>RealBoxConstIterator_8C</filename>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>RealBoxConstIterator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>RealBoxConstIterator_8h</filename>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::RealBoxConstIterator</class>
  </compound>
  <compound kind="file">
    <name>RefineOperator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>RefineOperator_8C</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="RefineOperator_8I" name="RefineOperator.I" local="yes" imported="no">SAMRAI/hier/RefineOperator.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>RefineOperator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>RefineOperator_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::RefineOperator</class>
  </compound>
  <compound kind="file">
    <name>RefineOperator.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>RefineOperator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>TimeInterpolateOperator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>TimeInterpolateOperator_8C</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>TimeInterpolateOperator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>TimeInterpolateOperator_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::TimeInterpolateOperator</class>
  </compound>
  <compound kind="file">
    <name>TransferOperatorRegistry.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>TransferOperatorRegistry_8C</filename>
    <includes id="TransferOperatorRegistry_8h" name="TransferOperatorRegistry.h" local="yes" imported="no">SAMRAI/hier/TransferOperatorRegistry.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>TransferOperatorRegistry.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>TransferOperatorRegistry_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Dimension_8h" name="Dimension.h" local="yes" imported="no">SAMRAI/tbox/Dimension.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::TransferOperatorRegistry</class>
  </compound>
  <compound kind="file">
    <name>Transformation.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>Transformation_8C</filename>
    <includes id="Transformation_8h" name="Transformation.h" local="yes" imported="no">SAMRAI/hier/Transformation.h</includes>
    <includes id="MultiblockDataTranslator_8h" name="MultiblockDataTranslator.h" local="yes" imported="no">SAMRAI/hier/MultiblockDataTranslator.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Transformation_8I" name="Transformation.I" local="yes" imported="no">SAMRAI/hier/Transformation.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>Transformation.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>Transformation_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Dimension_8h" name="Dimension.h" local="yes" imported="no">SAMRAI/tbox/Dimension.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::Transformation</class>
  </compound>
  <compound kind="file">
    <name>Transformation.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>Transformation_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>Variable.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>Variable_8C</filename>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Variable_8I" name="Variable.I" local="yes" imported="no">SAMRAI/hier/Variable.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>Variable.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>Variable_8h</filename>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::Variable</class>
  </compound>
  <compound kind="file">
    <name>Variable.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>Variable_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>VariableContext.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>VariableContext_8C</filename>
    <includes id="VariableContext_8h" name="VariableContext.h" local="yes" imported="no">SAMRAI/hier/VariableContext.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="VariableContext_8I" name="VariableContext.I" local="yes" imported="no">SAMRAI/hier/VariableContext.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>VariableContext.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>VariableContext_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::VariableContext</class>
  </compound>
  <compound kind="file">
    <name>VariableContext.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>VariableContext_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>VariableDatabase.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>VariableDatabase_8C</filename>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="VariableDatabase_8I" name="VariableDatabase.I" local="yes" imported="no">SAMRAI/hier/VariableDatabase.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>VariableDatabase.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>VariableDatabase_8h</filename>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="VariableContext_8h" name="VariableContext.h" local="yes" imported="no">SAMRAI/hier/VariableContext.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <class kind="class">SAMRAI::hier::VariableDatabase</class>
  </compound>
  <compound kind="file">
    <name>VariableDatabase.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/</path>
    <filename>VariableDatabase_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>mainpage.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/</path>
    <filename>mainpage_8dox</filename>
  </compound>
  <compound kind="file">
    <name>ArrayDataBasicOps.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>ArrayDataBasicOps_8C</filename>
    <includes id="ArrayDataBasicOps_8h" name="ArrayDataBasicOps.h" local="yes" imported="no">SAMRAI/math/ArrayDataBasicOps.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayDataBasicOps.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>ArrayDataBasicOps_8h</filename>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::ArrayDataBasicOps</class>
  </compound>
  <compound kind="file">
    <name>ArrayDataMiscellaneousOpsReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>ArrayDataMiscellaneousOpsReal_8C</filename>
    <includes id="ArrayDataMiscellaneousOpsReal_8h" name="ArrayDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataMiscellaneousOpsReal.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayDataMiscellaneousOpsReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>ArrayDataMiscellaneousOpsReal_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::ArrayDataMiscellaneousOpsReal</class>
  </compound>
  <compound kind="file">
    <name>ArrayDataNormOpsComplex.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>ArrayDataNormOpsComplex_8C</filename>
    <includes id="ArrayDataNormOpsComplex_8h" name="ArrayDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsComplex.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayDataNormOpsComplex.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>ArrayDataNormOpsComplex_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::ArrayDataNormOpsComplex</class>
  </compound>
  <compound kind="file">
    <name>ArrayDataNormOpsInteger.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>ArrayDataNormOpsInteger_8C</filename>
    <includes id="ArrayDataNormOpsInteger_8h" name="ArrayDataNormOpsInteger.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsInteger.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayDataNormOpsInteger.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>ArrayDataNormOpsInteger_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::ArrayDataNormOpsInteger</class>
  </compound>
  <compound kind="file">
    <name>ArrayDataNormOpsReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>ArrayDataNormOpsReal_8C</filename>
    <includes id="ArrayDataNormOpsReal_8h" name="ArrayDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsReal.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayDataNormOpsReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>ArrayDataNormOpsReal_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::ArrayDataNormOpsReal</class>
  </compound>
  <compound kind="file">
    <name>manual_hierarchy.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/dox/</path>
    <filename>manual__hierarchy_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyCellDataOpsComplex.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyCellDataOpsComplex_8C</filename>
    <includes id="HierarchyCellDataOpsComplex_8h" name="HierarchyCellDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyCellDataOpsComplex.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="CellDataFactory_8h" name="CellDataFactory.h" local="yes" imported="no">SAMRAI/pdat/CellDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyCellDataOpsComplex.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyCellDataOpsComplex_8h</filename>
    <includes id="HierarchyDataOpsComplex_8h" name="HierarchyDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsComplex.h</includes>
    <includes id="PatchCellDataOpsComplex_8h" name="PatchCellDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchCellDataOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::HierarchyCellDataOpsComplex</class>
  </compound>
  <compound kind="file">
    <name>HierarchyCellDataOpsInteger.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyCellDataOpsInteger_8C</filename>
    <includes id="HierarchyCellDataOpsInteger_8h" name="HierarchyCellDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyCellDataOpsInteger.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="CellDataFactory_8h" name="CellDataFactory.h" local="yes" imported="no">SAMRAI/pdat/CellDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyCellDataOpsInteger.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyCellDataOpsInteger_8h</filename>
    <includes id="HierarchyDataOpsInteger_8h" name="HierarchyDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsInteger.h</includes>
    <includes id="PatchCellDataOpsInteger_8h" name="PatchCellDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/PatchCellDataOpsInteger.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::HierarchyCellDataOpsInteger</class>
  </compound>
  <compound kind="file">
    <name>HierarchyCellDataOpsReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyCellDataOpsReal_8C</filename>
    <includes id="HierarchyCellDataOpsReal_8h" name="HierarchyCellDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyCellDataOpsReal.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="CellDataFactory_8h" name="CellDataFactory.h" local="yes" imported="no">SAMRAI/pdat/CellDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyCellDataOpsReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyCellDataOpsReal_8h</filename>
    <includes id="HierarchyDataOpsReal_8h" name="HierarchyDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsReal.h</includes>
    <includes id="PatchCellDataOpsReal_8h" name="PatchCellDataOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchCellDataOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::HierarchyCellDataOpsReal</class>
  </compound>
  <compound kind="file">
    <name>HierarchyDataOpsComplex.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyDataOpsComplex_8C</filename>
    <includes id="HierarchyDataOpsComplex_8h" name="HierarchyDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsComplex.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyDataOpsComplex.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyDataOpsComplex_8h</filename>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::HierarchyDataOpsComplex</class>
  </compound>
  <compound kind="file">
    <name>HierarchyDataOpsInteger.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyDataOpsInteger_8C</filename>
    <includes id="HierarchyDataOpsInteger_8h" name="HierarchyDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsInteger.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyDataOpsInteger.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyDataOpsInteger_8h</filename>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::HierarchyDataOpsInteger</class>
  </compound>
  <compound kind="file">
    <name>HierarchyDataOpsManager.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyDataOpsManager_8C</filename>
    <includes id="HierarchyDataOpsManager_8h" name="HierarchyDataOpsManager.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsManager.h</includes>
    <includes id="HierarchyCellDataOpsReal_8h" name="HierarchyCellDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyCellDataOpsReal.h</includes>
    <includes id="HierarchyFaceDataOpsReal_8h" name="HierarchyFaceDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyFaceDataOpsReal.h</includes>
    <includes id="HierarchyNodeDataOpsReal_8h" name="HierarchyNodeDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyNodeDataOpsReal.h</includes>
    <includes id="HierarchySideDataOpsReal_8h" name="HierarchySideDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchySideDataOpsReal.h</includes>
    <includes id="HierarchyEdgeDataOpsReal_8h" name="HierarchyEdgeDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyEdgeDataOpsReal.h</includes>
    <includes id="HierarchyCellDataOpsComplex_8h" name="HierarchyCellDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyCellDataOpsComplex.h</includes>
    <includes id="HierarchyFaceDataOpsComplex_8h" name="HierarchyFaceDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyFaceDataOpsComplex.h</includes>
    <includes id="HierarchyNodeDataOpsComplex_8h" name="HierarchyNodeDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyNodeDataOpsComplex.h</includes>
    <includes id="HierarchySideDataOpsComplex_8h" name="HierarchySideDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchySideDataOpsComplex.h</includes>
    <includes id="HierarchyEdgeDataOpsComplex_8h" name="HierarchyEdgeDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyEdgeDataOpsComplex.h</includes>
    <includes id="HierarchyCellDataOpsInteger_8h" name="HierarchyCellDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyCellDataOpsInteger.h</includes>
    <includes id="HierarchyFaceDataOpsInteger_8h" name="HierarchyFaceDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyFaceDataOpsInteger.h</includes>
    <includes id="HierarchyNodeDataOpsInteger_8h" name="HierarchyNodeDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyNodeDataOpsInteger.h</includes>
    <includes id="HierarchySideDataOpsInteger_8h" name="HierarchySideDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchySideDataOpsInteger.h</includes>
    <includes id="HierarchyEdgeDataOpsInteger_8h" name="HierarchyEdgeDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyEdgeDataOpsInteger.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyDataOpsManager.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyDataOpsManager_8h</filename>
    <includes id="HierarchyDataOpsComplex_8h" name="HierarchyDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsComplex.h</includes>
    <includes id="HierarchyDataOpsInteger_8h" name="HierarchyDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsInteger.h</includes>
    <includes id="HierarchyDataOpsReal_8h" name="HierarchyDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsReal.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::HierarchyDataOpsManager</class>
  </compound>
  <compound kind="file">
    <name>HierarchyDataOpsReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyDataOpsReal_8C</filename>
    <includes id="HierarchyDataOpsReal_8h" name="HierarchyDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsReal.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyDataOpsReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyDataOpsReal_8h</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::HierarchyDataOpsReal</class>
  </compound>
  <compound kind="file">
    <name>HierarchyEdgeDataOpsComplex.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyEdgeDataOpsComplex_8C</filename>
    <includes id="HierarchyEdgeDataOpsComplex_8h" name="HierarchyEdgeDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyEdgeDataOpsComplex.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="EdgeDataFactory_8h" name="EdgeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/EdgeDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyEdgeDataOpsComplex.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyEdgeDataOpsComplex_8h</filename>
    <includes id="HierarchyDataOpsComplex_8h" name="HierarchyDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsComplex.h</includes>
    <includes id="PatchEdgeDataOpsComplex_8h" name="PatchEdgeDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::HierarchyEdgeDataOpsComplex</class>
  </compound>
  <compound kind="file">
    <name>HierarchyEdgeDataOpsInteger.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyEdgeDataOpsInteger_8C</filename>
    <includes id="HierarchyEdgeDataOpsInteger_8h" name="HierarchyEdgeDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyEdgeDataOpsInteger.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="EdgeDataFactory_8h" name="EdgeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/EdgeDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyEdgeDataOpsInteger.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyEdgeDataOpsInteger_8h</filename>
    <includes id="HierarchyDataOpsInteger_8h" name="HierarchyDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsInteger.h</includes>
    <includes id="PatchEdgeDataOpsInteger_8h" name="PatchEdgeDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataOpsInteger.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::HierarchyEdgeDataOpsInteger</class>
  </compound>
  <compound kind="file">
    <name>HierarchyEdgeDataOpsReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyEdgeDataOpsReal_8C</filename>
    <includes id="HierarchyEdgeDataOpsReal_8h" name="HierarchyEdgeDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyEdgeDataOpsReal.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="EdgeDataFactory_8h" name="EdgeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/EdgeDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyEdgeDataOpsReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyEdgeDataOpsReal_8h</filename>
    <includes id="HierarchyDataOpsReal_8h" name="HierarchyDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsReal.h</includes>
    <includes id="PatchEdgeDataOpsReal_8h" name="PatchEdgeDataOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::HierarchyEdgeDataOpsReal</class>
  </compound>
  <compound kind="file">
    <name>HierarchyFaceDataOpsComplex.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyFaceDataOpsComplex_8C</filename>
    <includes id="HierarchyFaceDataOpsComplex_8h" name="HierarchyFaceDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyFaceDataOpsComplex.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="FaceDataFactory_8h" name="FaceDataFactory.h" local="yes" imported="no">SAMRAI/pdat/FaceDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyFaceDataOpsComplex.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyFaceDataOpsComplex_8h</filename>
    <includes id="HierarchyDataOpsComplex_8h" name="HierarchyDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsComplex.h</includes>
    <includes id="PatchFaceDataOpsComplex_8h" name="PatchFaceDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::HierarchyFaceDataOpsComplex</class>
  </compound>
  <compound kind="file">
    <name>HierarchyFaceDataOpsInteger.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyFaceDataOpsInteger_8C</filename>
    <includes id="HierarchyFaceDataOpsInteger_8h" name="HierarchyFaceDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyFaceDataOpsInteger.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="FaceDataFactory_8h" name="FaceDataFactory.h" local="yes" imported="no">SAMRAI/pdat/FaceDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyFaceDataOpsInteger.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyFaceDataOpsInteger_8h</filename>
    <includes id="HierarchyDataOpsInteger_8h" name="HierarchyDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsInteger.h</includes>
    <includes id="PatchFaceDataOpsInteger_8h" name="PatchFaceDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataOpsInteger.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::HierarchyFaceDataOpsInteger</class>
  </compound>
  <compound kind="file">
    <name>HierarchyFaceDataOpsReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyFaceDataOpsReal_8C</filename>
    <includes id="HierarchyFaceDataOpsReal_8h" name="HierarchyFaceDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyFaceDataOpsReal.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="FaceDataFactory_8h" name="FaceDataFactory.h" local="yes" imported="no">SAMRAI/pdat/FaceDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyFaceDataOpsReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyFaceDataOpsReal_8h</filename>
    <includes id="HierarchyDataOpsReal_8h" name="HierarchyDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsReal.h</includes>
    <includes id="PatchFaceDataOpsReal_8h" name="PatchFaceDataOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::HierarchyFaceDataOpsReal</class>
  </compound>
  <compound kind="file">
    <name>HierarchyNodeDataOpsComplex.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyNodeDataOpsComplex_8C</filename>
    <includes id="HierarchyNodeDataOpsComplex_8h" name="HierarchyNodeDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyNodeDataOpsComplex.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="NodeDataFactory_8h" name="NodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/NodeDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyNodeDataOpsComplex.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyNodeDataOpsComplex_8h</filename>
    <includes id="HierarchyDataOpsComplex_8h" name="HierarchyDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsComplex.h</includes>
    <includes id="PatchNodeDataOpsComplex_8h" name="PatchNodeDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::HierarchyNodeDataOpsComplex</class>
  </compound>
  <compound kind="file">
    <name>HierarchyNodeDataOpsInteger.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyNodeDataOpsInteger_8C</filename>
    <includes id="HierarchyNodeDataOpsInteger_8h" name="HierarchyNodeDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyNodeDataOpsInteger.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="NodeDataFactory_8h" name="NodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/NodeDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyNodeDataOpsInteger.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyNodeDataOpsInteger_8h</filename>
    <includes id="HierarchyDataOpsInteger_8h" name="HierarchyDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsInteger.h</includes>
    <includes id="PatchNodeDataOpsInteger_8h" name="PatchNodeDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataOpsInteger.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::HierarchyNodeDataOpsInteger</class>
  </compound>
  <compound kind="file">
    <name>HierarchyNodeDataOpsReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyNodeDataOpsReal_8C</filename>
    <includes id="HierarchyNodeDataOpsReal_8h" name="HierarchyNodeDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyNodeDataOpsReal.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="NodeDataFactory_8h" name="NodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/NodeDataFactory.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyNodeDataOpsReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchyNodeDataOpsReal_8h</filename>
    <includes id="HierarchyDataOpsReal_8h" name="HierarchyDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsReal.h</includes>
    <includes id="PatchNodeDataOpsReal_8h" name="PatchNodeDataOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::HierarchyNodeDataOpsReal</class>
  </compound>
  <compound kind="file">
    <name>HierarchySideDataOpsComplex.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchySideDataOpsComplex_8C</filename>
    <includes id="HierarchySideDataOpsComplex_8h" name="HierarchySideDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchySideDataOpsComplex.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="SideDataFactory_8h" name="SideDataFactory.h" local="yes" imported="no">SAMRAI/pdat/SideDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchySideDataOpsComplex.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchySideDataOpsComplex_8h</filename>
    <includes id="HierarchyDataOpsComplex_8h" name="HierarchyDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsComplex.h</includes>
    <includes id="PatchSideDataOpsComplex_8h" name="PatchSideDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchSideDataOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::HierarchySideDataOpsComplex</class>
  </compound>
  <compound kind="file">
    <name>HierarchySideDataOpsInteger.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchySideDataOpsInteger_8C</filename>
    <includes id="HierarchySideDataOpsInteger_8h" name="HierarchySideDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchySideDataOpsInteger.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="SideDataFactory_8h" name="SideDataFactory.h" local="yes" imported="no">SAMRAI/pdat/SideDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchySideDataOpsInteger.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchySideDataOpsInteger_8h</filename>
    <includes id="HierarchyDataOpsInteger_8h" name="HierarchyDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsInteger.h</includes>
    <includes id="PatchSideDataOpsInteger_8h" name="PatchSideDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/PatchSideDataOpsInteger.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::HierarchySideDataOpsInteger</class>
  </compound>
  <compound kind="file">
    <name>HierarchySideDataOpsReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchySideDataOpsReal_8C</filename>
    <includes id="HierarchySideDataOpsReal_8h" name="HierarchySideDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchySideDataOpsReal.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="SideDataFactory_8h" name="SideDataFactory.h" local="yes" imported="no">SAMRAI/pdat/SideDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchySideDataOpsReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>HierarchySideDataOpsReal_8h</filename>
    <includes id="HierarchyDataOpsReal_8h" name="HierarchyDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsReal.h</includes>
    <includes id="PatchSideDataOpsReal_8h" name="PatchSideDataOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchSideDataOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::HierarchySideDataOpsReal</class>
  </compound>
  <compound kind="file">
    <name>PatchCellDataBasicOps.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchCellDataBasicOps_8C</filename>
    <includes id="PatchCellDataBasicOps_8h" name="PatchCellDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchCellDataBasicOps.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchCellDataBasicOps.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchCellDataBasicOps_8h</filename>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="ArrayDataBasicOps_8h" name="ArrayDataBasicOps.h" local="yes" imported="no">SAMRAI/math/ArrayDataBasicOps.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchCellDataBasicOps</class>
  </compound>
  <compound kind="file">
    <name>PatchCellDataMiscellaneousOpsReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchCellDataMiscellaneousOpsReal_8C</filename>
    <includes id="PatchCellDataMiscellaneousOpsReal_8h" name="PatchCellDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchCellDataMiscellaneousOpsReal.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchCellDataMiscellaneousOpsReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchCellDataMiscellaneousOpsReal_8h</filename>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="ArrayDataMiscellaneousOpsReal_8h" name="ArrayDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataMiscellaneousOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchCellDataMiscellaneousOpsReal</class>
  </compound>
  <compound kind="file">
    <name>PatchCellDataNormOpsComplex.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchCellDataNormOpsComplex_8C</filename>
    <includes id="PatchCellDataNormOpsComplex_8h" name="PatchCellDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchCellDataNormOpsComplex.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchCellDataNormOpsComplex.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchCellDataNormOpsComplex_8h</filename>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="ArrayDataNormOpsComplex_8h" name="ArrayDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchCellDataNormOpsComplex</class>
  </compound>
  <compound kind="file">
    <name>PatchCellDataNormOpsReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchCellDataNormOpsReal_8C</filename>
    <includes id="PatchCellDataNormOpsReal_8h" name="PatchCellDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchCellDataNormOpsReal.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchCellDataNormOpsReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchCellDataNormOpsReal_8h</filename>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="ArrayDataNormOpsReal_8h" name="ArrayDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchCellDataNormOpsReal</class>
  </compound>
  <compound kind="file">
    <name>PatchCellDataOpsComplex.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchCellDataOpsComplex_8C</filename>
    <includes id="PatchCellDataOpsComplex_8h" name="PatchCellDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchCellDataOpsComplex.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchCellDataOpsComplex.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchCellDataOpsComplex_8h</filename>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="PatchCellDataBasicOps_8h" name="PatchCellDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchCellDataBasicOps.h</includes>
    <includes id="PatchCellDataNormOpsComplex_8h" name="PatchCellDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchCellDataNormOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchCellDataOpsComplex</class>
  </compound>
  <compound kind="file">
    <name>PatchCellDataOpsInteger.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchCellDataOpsInteger_8C</filename>
    <includes id="PatchCellDataOpsInteger_8h" name="PatchCellDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/PatchCellDataOpsInteger.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchCellDataOpsInteger.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchCellDataOpsInteger_8h</filename>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="PatchCellDataBasicOps_8h" name="PatchCellDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchCellDataBasicOps.h</includes>
    <includes id="ArrayDataNormOpsInteger_8h" name="ArrayDataNormOpsInteger.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsInteger.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchCellDataOpsInteger</class>
  </compound>
  <compound kind="file">
    <name>PatchCellDataOpsReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchCellDataOpsReal_8C</filename>
    <includes id="PatchCellDataOpsReal_8h" name="PatchCellDataOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchCellDataOpsReal.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchCellDataOpsReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchCellDataOpsReal_8h</filename>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="PatchCellDataBasicOps_8h" name="PatchCellDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchCellDataBasicOps.h</includes>
    <includes id="PatchCellDataMiscellaneousOpsReal_8h" name="PatchCellDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchCellDataMiscellaneousOpsReal.h</includes>
    <includes id="PatchCellDataNormOpsReal_8h" name="PatchCellDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchCellDataNormOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchCellDataOpsReal</class>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataBasicOps.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataBasicOps_8C</filename>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="PatchEdgeDataBasicOps_8h" name="PatchEdgeDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataBasicOps.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataBasicOps.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataBasicOps_8h</filename>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="ArrayDataBasicOps_8h" name="ArrayDataBasicOps.h" local="yes" imported="no">SAMRAI/math/ArrayDataBasicOps.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchEdgeDataBasicOps</class>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataMiscellaneousOpsReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataMiscellaneousOpsReal_8C</filename>
    <includes id="PatchEdgeDataMiscellaneousOpsReal_8h" name="PatchEdgeDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataMiscellaneousOpsReal.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataMiscellaneousOpsReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataMiscellaneousOpsReal_8h</filename>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="ArrayDataMiscellaneousOpsReal_8h" name="ArrayDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataMiscellaneousOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchEdgeDataMiscellaneousOpsReal</class>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataNormOpsComplex.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataNormOpsComplex_8C</filename>
    <includes id="PatchEdgeDataNormOpsComplex_8h" name="PatchEdgeDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataNormOpsComplex.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataNormOpsComplex.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataNormOpsComplex_8h</filename>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="ArrayDataNormOpsComplex_8h" name="ArrayDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchEdgeDataNormOpsComplex</class>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataNormOpsReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataNormOpsReal_8C</filename>
    <includes id="PatchEdgeDataNormOpsReal_8h" name="PatchEdgeDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataNormOpsReal.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataNormOpsReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataNormOpsReal_8h</filename>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="ArrayDataNormOpsReal_8h" name="ArrayDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchEdgeDataNormOpsReal</class>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataOpsComplex.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataOpsComplex_8C</filename>
    <includes id="PatchEdgeDataOpsComplex_8h" name="PatchEdgeDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataOpsComplex.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataOpsComplex.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataOpsComplex_8h</filename>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="PatchEdgeDataBasicOps_8h" name="PatchEdgeDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataBasicOps.h</includes>
    <includes id="PatchEdgeDataNormOpsComplex_8h" name="PatchEdgeDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataNormOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchEdgeDataOpsComplex</class>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataOpsInteger.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataOpsInteger_8C</filename>
    <includes id="PatchEdgeDataOpsInteger_8h" name="PatchEdgeDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataOpsInteger.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataOpsInteger.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataOpsInteger_8h</filename>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="PatchEdgeDataBasicOps_8h" name="PatchEdgeDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataBasicOps.h</includes>
    <includes id="ArrayDataNormOpsInteger_8h" name="ArrayDataNormOpsInteger.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsInteger.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchEdgeDataOpsInteger</class>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataOpsReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataOpsReal_8C</filename>
    <includes id="PatchEdgeDataOpsReal_8h" name="PatchEdgeDataOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataOpsReal.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataOpsReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataOpsReal_8h</filename>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="PatchEdgeDataBasicOps_8h" name="PatchEdgeDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataBasicOps.h</includes>
    <includes id="PatchEdgeDataMiscellaneousOpsReal_8h" name="PatchEdgeDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataMiscellaneousOpsReal.h</includes>
    <includes id="PatchEdgeDataNormOpsReal_8h" name="PatchEdgeDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataNormOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchEdgeDataOpsReal</class>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataBasicOps.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchFaceDataBasicOps_8C</filename>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="PatchFaceDataBasicOps_8h" name="PatchFaceDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataBasicOps.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataBasicOps.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchFaceDataBasicOps_8h</filename>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="ArrayDataBasicOps_8h" name="ArrayDataBasicOps.h" local="yes" imported="no">SAMRAI/math/ArrayDataBasicOps.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchFaceDataBasicOps</class>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataMiscellaneousOpsReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchFaceDataMiscellaneousOpsReal_8C</filename>
    <includes id="PatchFaceDataMiscellaneousOpsReal_8h" name="PatchFaceDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataMiscellaneousOpsReal.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataMiscellaneousOpsReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchFaceDataMiscellaneousOpsReal_8h</filename>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="ArrayDataMiscellaneousOpsReal_8h" name="ArrayDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataMiscellaneousOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchFaceDataMiscellaneousOpsReal</class>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataNormOpsComplex.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchFaceDataNormOpsComplex_8C</filename>
    <includes id="PatchFaceDataNormOpsComplex_8h" name="PatchFaceDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataNormOpsComplex.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataNormOpsComplex.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchFaceDataNormOpsComplex_8h</filename>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="ArrayDataNormOpsComplex_8h" name="ArrayDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchFaceDataNormOpsComplex</class>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataNormOpsReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchFaceDataNormOpsReal_8C</filename>
    <includes id="PatchFaceDataNormOpsReal_8h" name="PatchFaceDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataNormOpsReal.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataNormOpsReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchFaceDataNormOpsReal_8h</filename>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="ArrayDataNormOpsReal_8h" name="ArrayDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchFaceDataNormOpsReal</class>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataOpsComplex.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchFaceDataOpsComplex_8C</filename>
    <includes id="PatchFaceDataOpsComplex_8h" name="PatchFaceDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataOpsComplex.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataOpsComplex.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchFaceDataOpsComplex_8h</filename>
    <includes id="PatchFaceDataBasicOps_8h" name="PatchFaceDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataBasicOps.h</includes>
    <includes id="PatchFaceDataNormOpsComplex_8h" name="PatchFaceDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataNormOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchFaceDataOpsComplex</class>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataOpsInteger.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchFaceDataOpsInteger_8C</filename>
    <includes id="PatchFaceDataOpsInteger_8h" name="PatchFaceDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataOpsInteger.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataOpsInteger.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchFaceDataOpsInteger_8h</filename>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="PatchFaceDataBasicOps_8h" name="PatchFaceDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataBasicOps.h</includes>
    <includes id="ArrayDataNormOpsInteger_8h" name="ArrayDataNormOpsInteger.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsInteger.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchFaceDataOpsInteger</class>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataOpsReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchFaceDataOpsReal_8C</filename>
    <includes id="PatchFaceDataOpsReal_8h" name="PatchFaceDataOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataOpsReal.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataOpsReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchFaceDataOpsReal_8h</filename>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="PatchFaceDataBasicOps_8h" name="PatchFaceDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataBasicOps.h</includes>
    <includes id="PatchFaceDataMiscellaneousOpsReal_8h" name="PatchFaceDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataMiscellaneousOpsReal.h</includes>
    <includes id="PatchFaceDataNormOpsReal_8h" name="PatchFaceDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataNormOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchFaceDataOpsReal</class>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataBasicOps.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchNodeDataBasicOps_8C</filename>
    <includes id="PatchNodeDataBasicOps_8h" name="PatchNodeDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataBasicOps.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataBasicOps.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchNodeDataBasicOps_8h</filename>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="ArrayDataBasicOps_8h" name="ArrayDataBasicOps.h" local="yes" imported="no">SAMRAI/math/ArrayDataBasicOps.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchNodeDataBasicOps</class>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataMiscellaneousOpsReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchNodeDataMiscellaneousOpsReal_8C</filename>
    <includes id="PatchNodeDataMiscellaneousOpsReal_8h" name="PatchNodeDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataMiscellaneousOpsReal.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataMiscellaneousOpsReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchNodeDataMiscellaneousOpsReal_8h</filename>
    <includes id="ArrayDataMiscellaneousOpsReal_8h" name="ArrayDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataMiscellaneousOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchNodeDataMiscellaneousOpsReal</class>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataNormOpsComplex.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchNodeDataNormOpsComplex_8C</filename>
    <includes id="PatchNodeDataNormOpsComplex_8h" name="PatchNodeDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataNormOpsComplex.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataNormOpsComplex.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchNodeDataNormOpsComplex_8h</filename>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="ArrayDataNormOpsComplex_8h" name="ArrayDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchNodeDataNormOpsComplex</class>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataNormOpsReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchNodeDataNormOpsReal_8C</filename>
    <includes id="PatchNodeDataNormOpsReal_8h" name="PatchNodeDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataNormOpsReal.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataNormOpsReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchNodeDataNormOpsReal_8h</filename>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="ArrayDataNormOpsReal_8h" name="ArrayDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchNodeDataNormOpsReal</class>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataOpsComplex.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchNodeDataOpsComplex_8C</filename>
    <includes id="PatchNodeDataOpsComplex_8h" name="PatchNodeDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataOpsComplex.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataOpsComplex.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchNodeDataOpsComplex_8h</filename>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="PatchNodeDataBasicOps_8h" name="PatchNodeDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataBasicOps.h</includes>
    <includes id="PatchNodeDataNormOpsComplex_8h" name="PatchNodeDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataNormOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchNodeDataOpsComplex</class>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataOpsInteger.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchNodeDataOpsInteger_8C</filename>
    <includes id="PatchNodeDataOpsInteger_8h" name="PatchNodeDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataOpsInteger.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataOpsInteger.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchNodeDataOpsInteger_8h</filename>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="PatchNodeDataBasicOps_8h" name="PatchNodeDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataBasicOps.h</includes>
    <includes id="ArrayDataNormOpsInteger_8h" name="ArrayDataNormOpsInteger.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsInteger.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchNodeDataOpsInteger</class>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataOpsReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchNodeDataOpsReal_8C</filename>
    <includes id="PatchNodeDataOpsReal_8h" name="PatchNodeDataOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataOpsReal.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataOpsReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchNodeDataOpsReal_8h</filename>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="PatchNodeDataBasicOps_8h" name="PatchNodeDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataBasicOps.h</includes>
    <includes id="PatchNodeDataMiscellaneousOpsReal_8h" name="PatchNodeDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataMiscellaneousOpsReal.h</includes>
    <includes id="PatchNodeDataNormOpsReal_8h" name="PatchNodeDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataNormOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchNodeDataOpsReal</class>
  </compound>
  <compound kind="file">
    <name>PatchSideDataBasicOps.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchSideDataBasicOps_8C</filename>
    <includes id="PatchSideDataBasicOps_8h" name="PatchSideDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchSideDataBasicOps.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchSideDataBasicOps.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchSideDataBasicOps_8h</filename>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="ArrayDataBasicOps_8h" name="ArrayDataBasicOps.h" local="yes" imported="no">SAMRAI/math/ArrayDataBasicOps.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchSideDataBasicOps</class>
  </compound>
  <compound kind="file">
    <name>PatchSideDataMiscellaneousOpsReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchSideDataMiscellaneousOpsReal_8C</filename>
    <includes id="PatchSideDataMiscellaneousOpsReal_8h" name="PatchSideDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchSideDataMiscellaneousOpsReal.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchSideDataMiscellaneousOpsReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchSideDataMiscellaneousOpsReal_8h</filename>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="ArrayDataMiscellaneousOpsReal_8h" name="ArrayDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataMiscellaneousOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchSideDataMiscellaneousOpsReal</class>
  </compound>
  <compound kind="file">
    <name>PatchSideDataNormOpsComplex.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchSideDataNormOpsComplex_8C</filename>
    <includes id="PatchSideDataNormOpsComplex_8h" name="PatchSideDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchSideDataNormOpsComplex.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchSideDataNormOpsComplex.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchSideDataNormOpsComplex_8h</filename>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="ArrayDataNormOpsComplex_8h" name="ArrayDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchSideDataNormOpsComplex</class>
  </compound>
  <compound kind="file">
    <name>PatchSideDataNormOpsReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchSideDataNormOpsReal_8C</filename>
    <includes id="PatchSideDataNormOpsReal_8h" name="PatchSideDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchSideDataNormOpsReal.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchSideDataNormOpsReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchSideDataNormOpsReal_8h</filename>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="ArrayDataNormOpsReal_8h" name="ArrayDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchSideDataNormOpsReal</class>
  </compound>
  <compound kind="file">
    <name>PatchSideDataOpsComplex.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchSideDataOpsComplex_8C</filename>
    <includes id="PatchSideDataOpsComplex_8h" name="PatchSideDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchSideDataOpsComplex.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchSideDataOpsComplex.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchSideDataOpsComplex_8h</filename>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="PatchSideDataBasicOps_8h" name="PatchSideDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchSideDataBasicOps.h</includes>
    <includes id="PatchSideDataNormOpsComplex_8h" name="PatchSideDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchSideDataNormOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchSideDataOpsComplex</class>
  </compound>
  <compound kind="file">
    <name>PatchSideDataOpsInteger.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchSideDataOpsInteger_8C</filename>
    <includes id="PatchSideDataOpsInteger_8h" name="PatchSideDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/PatchSideDataOpsInteger.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchSideDataOpsInteger.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchSideDataOpsInteger_8h</filename>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="PatchSideDataBasicOps_8h" name="PatchSideDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchSideDataBasicOps.h</includes>
    <includes id="ArrayDataNormOpsInteger_8h" name="ArrayDataNormOpsInteger.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsInteger.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchSideDataOpsInteger</class>
  </compound>
  <compound kind="file">
    <name>PatchSideDataOpsReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchSideDataOpsReal_8C</filename>
    <includes id="PatchSideDataOpsReal_8h" name="PatchSideDataOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchSideDataOpsReal.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchSideDataOpsReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/</path>
    <filename>PatchSideDataOpsReal_8h</filename>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="PatchSideDataBasicOps_8h" name="PatchSideDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchSideDataBasicOps.h</includes>
    <includes id="PatchSideDataMiscellaneousOpsReal_8h" name="PatchSideDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchSideDataMiscellaneousOpsReal.h</includes>
    <includes id="PatchSideDataNormOpsReal_8h" name="PatchSideDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchSideDataNormOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
    <class kind="class">SAMRAI::math::PatchSideDataOpsReal</class>
  </compound>
  <compound kind="file">
    <name>BalanceUtilities.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>BalanceUtilities_8C</filename>
    <includes id="BalanceUtilities_8h" name="BalanceUtilities.h" local="yes" imported="no">SAMRAI/mesh/BalanceUtilities.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>BalanceUtilities.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>BalanceUtilities_8h</filename>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="ProcessorMapping_8h" name="ProcessorMapping.h" local="yes" imported="no">SAMRAI/hier/ProcessorMapping.h</includes>
    <includes id="PatchCellDataNormOpsReal_8h" name="PatchCellDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchCellDataNormOpsReal.h</includes>
    <includes id="SpatialKey_8h" name="SpatialKey.h" local="yes" imported="no">SAMRAI/mesh/SpatialKey.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <class kind="struct">SAMRAI::mesh::BalanceUtilities</class>
  </compound>
  <compound kind="file">
    <name>BergerRigoutsos.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>BergerRigoutsos_8C</filename>
    <includes id="BergerRigoutsos_8h" name="BergerRigoutsos.h" local="yes" imported="no">SAMRAI/mesh/BergerRigoutsos.h</includes>
    <includes id="MappingConnectorAlgorithm_8h" name="MappingConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/MappingConnectorAlgorithm.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="BergerRigoutsosNode_8h" name="BergerRigoutsosNode.h" local="yes" imported="no">SAMRAI/mesh/BergerRigoutsosNode.h</includes>
    <includes id="BoxLevelConnectorUtils_8h" name="BoxLevelConnectorUtils.h" local="yes" imported="no">SAMRAI/hier/BoxLevelConnectorUtils.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>BergerRigoutsos.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>BergerRigoutsos_8h</filename>
    <includes id="BoxGeneratorStrategy_8h" name="BoxGeneratorStrategy.h" local="yes" imported="no">SAMRAI/mesh/BoxGeneratorStrategy.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <class kind="class">SAMRAI::mesh::BergerRigoutsos</class>
  </compound>
  <compound kind="file">
    <name>BergerRigoutsosNode.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>BergerRigoutsosNode_8C</filename>
    <includes id="BergerRigoutsosNode_8h" name="BergerRigoutsosNode.h" local="yes" imported="no">SAMRAI/mesh/BergerRigoutsosNode.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>BergerRigoutsosNode.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>BergerRigoutsosNode_8h</filename>
    <includes id="AsyncCommGroup_8h" name="AsyncCommGroup.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommGroup.h</includes>
    <includes id="vector_8h" name="vector.h" local="yes" imported="no">SAMRAI/tbox/vector.h</includes>
    <includes id="BlockId_8h" name="BlockId.h" local="yes" imported="no">SAMRAI/hier/BlockId.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <class kind="class">SAMRAI::mesh::BergerRigoutsosNode</class>
  </compound>
  <compound kind="file">
    <name>BoxGeneratorStrategy.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>BoxGeneratorStrategy_8C</filename>
    <includes id="BoxGeneratorStrategy_8h" name="BoxGeneratorStrategy.h" local="yes" imported="no">SAMRAI/mesh/BoxGeneratorStrategy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>BoxGeneratorStrategy.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>BoxGeneratorStrategy_8h</filename>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <class kind="class">SAMRAI::mesh::BoxGeneratorStrategy</class>
  </compound>
  <compound kind="file">
    <name>ChopAndPackLoadBalancer.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>ChopAndPackLoadBalancer_8C</filename>
    <includes id="ChopAndPackLoadBalancer_8h" name="ChopAndPackLoadBalancer.h" local="yes" imported="no">SAMRAI/mesh/ChopAndPackLoadBalancer.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="BalanceUtilities_8h" name="BalanceUtilities.h" local="yes" imported="no">SAMRAI/mesh/BalanceUtilities.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellDataFactory_8h" name="CellDataFactory.h" local="yes" imported="no">SAMRAI/pdat/CellDataFactory.h</includes>
    <includes id="CellDoubleConstantRefine_8h" name="CellDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellDoubleConstantRefine.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="RefineAlgorithm_8h" name="RefineAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/RefineAlgorithm.h</includes>
    <includes id="RefineSchedule_8h" name="RefineSchedule.h" local="yes" imported="no">SAMRAI/xfer/RefineSchedule.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="ChopAndPackLoadBalancer_8I" name="ChopAndPackLoadBalancer.I" local="yes" imported="no">SAMRAI/mesh/ChopAndPackLoadBalancer.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ChopAndPackLoadBalancer_MARKLOADFORPOSTPROCESSING</name>
      <anchorfile>ChopAndPackLoadBalancer_8C.html</anchorfile>
      <anchor>37c916bf47c6919d918c984fb3847ddc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ChopAndPackLoadBalancer.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>ChopAndPackLoadBalancer_8h</filename>
    <includes id="LoadBalanceStrategy_8h" name="LoadBalanceStrategy.h" local="yes" imported="no">SAMRAI/mesh/LoadBalanceStrategy.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <class kind="class">SAMRAI::mesh::ChopAndPackLoadBalancer</class>
  </compound>
  <compound kind="file">
    <name>ChopAndPackLoadBalancer.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>ChopAndPackLoadBalancer_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>manual_clustering.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/dox/</path>
    <filename>manual__clustering_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>manual_gridding.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/dox/</path>
    <filename>manual__gridding_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>manual_load_balance.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/dox/</path>
    <filename>manual__load__balance_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>GriddingAlgorithm.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>GriddingAlgorithm_8C</filename>
    <includes id="GriddingAlgorithm_8h" name="GriddingAlgorithm.h" local="yes" imported="no">SAMRAI/mesh/GriddingAlgorithm.h</includes>
    <includes id="IEEE_8h" name="IEEE.h" local="yes" imported="no">SAMRAI/tbox/IEEE.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxLevelConnectorUtils_8h" name="BoxLevelConnectorUtils.h" local="yes" imported="no">SAMRAI/hier/BoxLevelConnectorUtils.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="MappingConnectorAlgorithm_8h" name="MappingConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/MappingConnectorAlgorithm.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="PatchCellDataBasicOps_8h" name="PatchCellDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchCellDataBasicOps.h</includes>
    <includes id="PatchCellDataOpsInteger_8h" name="PatchCellDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/PatchCellDataOpsInteger.h</includes>
    <includes id="StandardTagAndInitialize_8h" name="StandardTagAndInitialize.h" local="yes" imported="no">SAMRAI/mesh/StandardTagAndInitialize.h</includes>
    <includes id="GriddingAlgorithm_8I" name="GriddingAlgorithm.I" local="yes" imported="no">SAMRAI/mesh/GriddingAlgorithm.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>GriddingAlgorithm.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>GriddingAlgorithm_8h</filename>
    <includes id="GriddingAlgorithmStrategy_8h" name="GriddingAlgorithmStrategy.h" local="yes" imported="no">SAMRAI/mesh/GriddingAlgorithmStrategy.h</includes>
    <includes id="BoxGeneratorStrategy_8h" name="BoxGeneratorStrategy.h" local="yes" imported="no">SAMRAI/mesh/BoxGeneratorStrategy.h</includes>
    <includes id="LoadBalanceStrategy_8h" name="LoadBalanceStrategy.h" local="yes" imported="no">SAMRAI/mesh/LoadBalanceStrategy.h</includes>
    <includes id="GriddingAlgorithmConnectorWidthRequestor_8h" name="GriddingAlgorithmConnectorWidthRequestor.h" local="yes" imported="no">SAMRAI/mesh/GriddingAlgorithmConnectorWidthRequestor.h</includes>
    <includes id="MultiblockGriddingTagger_8h" name="MultiblockGriddingTagger.h" local="yes" imported="no">SAMRAI/mesh/MultiblockGriddingTagger.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="RefineAlgorithm_8h" name="RefineAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/RefineAlgorithm.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="Statistic_8h" name="Statistic.h" local="yes" imported="no">SAMRAI/tbox/Statistic.h</includes>
    <includes id="Statistician_8h" name="Statistician.h" local="yes" imported="no">SAMRAI/tbox/Statistician.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <class kind="class">SAMRAI::mesh::GriddingAlgorithm</class>
    <member kind="define">
      <type>#define</type>
      <name>GA_RECORD_STATS</name>
      <anchorfile>GriddingAlgorithm_8h.html</anchorfile>
      <anchor>ee24ed543f361c8df9cb1b86e4c193fd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GriddingAlgorithm.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>GriddingAlgorithm_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>GriddingAlgorithmConnectorWidthRequestor.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>GriddingAlgorithmConnectorWidthRequestor_8C</filename>
    <includes id="GriddingAlgorithmConnectorWidthRequestor_8h" name="GriddingAlgorithmConnectorWidthRequestor.h" local="yes" imported="no">SAMRAI/mesh/GriddingAlgorithmConnectorWidthRequestor.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>GriddingAlgorithmConnectorWidthRequestor.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>GriddingAlgorithmConnectorWidthRequestor_8h</filename>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <class kind="class">SAMRAI::mesh::GriddingAlgorithmConnectorWidthRequestor</class>
  </compound>
  <compound kind="file">
    <name>GriddingAlgorithmStrategy.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>GriddingAlgorithmStrategy_8C</filename>
    <includes id="GriddingAlgorithmStrategy_8h" name="GriddingAlgorithmStrategy.h" local="yes" imported="no">SAMRAI/mesh/GriddingAlgorithmStrategy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>GriddingAlgorithmStrategy.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>GriddingAlgorithmStrategy_8h</filename>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="TagAndInitializeStrategy_8h" name="TagAndInitializeStrategy.h" local="yes" imported="no">SAMRAI/mesh/TagAndInitializeStrategy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <class kind="class">SAMRAI::mesh::GriddingAlgorithmStrategy</class>
  </compound>
  <compound kind="file">
    <name>LoadBalanceStrategy.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>LoadBalanceStrategy_8C</filename>
    <includes id="LoadBalanceStrategy_8h" name="LoadBalanceStrategy.h" local="yes" imported="no">SAMRAI/mesh/LoadBalanceStrategy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>LoadBalanceStrategy.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>LoadBalanceStrategy_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="ProcessorMapping_8h" name="ProcessorMapping.h" local="yes" imported="no">SAMRAI/hier/ProcessorMapping.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RankGroup_8h" name="RankGroup.h" local="yes" imported="no">SAMRAI/tbox/RankGroup.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <class kind="class">SAMRAI::mesh::LoadBalanceStrategy</class>
  </compound>
  <compound kind="file">
    <name>MultiblockGriddingTagger.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>MultiblockGriddingTagger_8C</filename>
    <includes id="MultiblockGriddingTagger_8h" name="MultiblockGriddingTagger.h" local="yes" imported="no">SAMRAI/mesh/MultiblockGriddingTagger.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>MultiblockGriddingTagger.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>MultiblockGriddingTagger_8h</filename>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <class kind="class">SAMRAI::mesh::MultiblockGriddingTagger</class>
  </compound>
  <compound kind="file">
    <name>SpatialKey.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>SpatialKey_8C</filename>
    <includes id="SpatialKey_8h" name="SpatialKey.h" local="yes" imported="no">SAMRAI/mesh/SpatialKey.h</includes>
    <includes id="SpatialKey_8I" name="SpatialKey.I" local="yes" imported="no">SAMRAI/mesh/SpatialKey.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1mesh.html</anchorfile>
      <anchor>9b4d55c44cea68b4af78766e2a2b023a</anchor>
      <arglist>(std::ostream &amp;s, const SpatialKey &amp;spatial_key)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SpatialKey.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>SpatialKey_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <class kind="class">SAMRAI::mesh::SpatialKey</class>
  </compound>
  <compound kind="file">
    <name>SpatialKey.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>SpatialKey_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>StandardTagAndInitialize.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>StandardTagAndInitialize_8C</filename>
    <includes id="StandardTagAndInitialize_8h" name="StandardTagAndInitialize.h" local="yes" imported="no">SAMRAI/mesh/StandardTagAndInitialize.h</includes>
    <includes id="CellIntegerConstantRefine_8h" name="CellIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellIntegerConstantRefine.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="StandardTagAndInitialize_8I" name="StandardTagAndInitialize.I" local="yes" imported="no">SAMRAI/mesh/StandardTagAndInitialize.I</includes>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_TIMES</name>
      <anchorfile>StandardTagAndInitialize_8C.html</anchorfile>
      <anchor>8b68660ac4d44b1131313bba0fe85233</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>StandardTagAndInitialize_8C.html</anchorfile>
      <anchor>46e87e6b437de7077b0034f1bac6f390</anchor>
      <arglist>(coarsentags1d, COARSENTAGS1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>StandardTagAndInitialize.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>StandardTagAndInitialize_8h</filename>
    <includes id="StandardTagAndInitStrategy_8h" name="StandardTagAndInitStrategy.h" local="yes" imported="no">SAMRAI/mesh/StandardTagAndInitStrategy.h</includes>
    <includes id="StandardTagAndInitializeConnectorWidthRequestor_8h" name="StandardTagAndInitializeConnectorWidthRequestor.h" local="yes" imported="no">SAMRAI/mesh/StandardTagAndInitializeConnectorWidthRequestor.h</includes>
    <includes id="TagAndInitializeStrategy_8h" name="TagAndInitializeStrategy.h" local="yes" imported="no">SAMRAI/mesh/TagAndInitializeStrategy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <class kind="class">SAMRAI::mesh::StandardTagAndInitialize</class>
  </compound>
  <compound kind="file">
    <name>StandardTagAndInitialize.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>StandardTagAndInitialize_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>StandardTagAndInitializeConnectorWidthRequestor.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>StandardTagAndInitializeConnectorWidthRequestor_8C</filename>
    <includes id="StandardTagAndInitializeConnectorWidthRequestor_8h" name="StandardTagAndInitializeConnectorWidthRequestor.h" local="yes" imported="no">SAMRAI/mesh/StandardTagAndInitializeConnectorWidthRequestor.h</includes>
    <includes id="RefineScheduleConnectorWidthRequestor_8h" name="RefineScheduleConnectorWidthRequestor.h" local="yes" imported="no">SAMRAI/xfer/RefineScheduleConnectorWidthRequestor.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>GCD</name>
      <anchorfile>namespaceSAMRAI_1_1mesh.html</anchorfile>
      <anchor>7fb64842e08bb38b61214a78dfd53550</anchor>
      <arglist>(const int a, const int b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>StandardTagAndInitializeConnectorWidthRequestor.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>StandardTagAndInitializeConnectorWidthRequestor_8h</filename>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <class kind="class">SAMRAI::mesh::StandardTagAndInitializeConnectorWidthRequestor</class>
  </compound>
  <compound kind="file">
    <name>StandardTagAndInitStrategy.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>StandardTagAndInitStrategy_8C</filename>
    <includes id="StandardTagAndInitStrategy_8h" name="StandardTagAndInitStrategy.h" local="yes" imported="no">SAMRAI/mesh/StandardTagAndInitStrategy.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>StandardTagAndInitStrategy.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>StandardTagAndInitStrategy_8h</filename>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <class kind="class">SAMRAI::mesh::StandardTagAndInitStrategy</class>
  </compound>
  <compound kind="file">
    <name>TagAndInitializeStrategy.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>TagAndInitializeStrategy_8C</filename>
    <includes id="TagAndInitializeStrategy_8h" name="TagAndInitializeStrategy.h" local="yes" imported="no">SAMRAI/mesh/TagAndInitializeStrategy.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="TagAndInitializeStrategy_8I" name="TagAndInitializeStrategy.I" local="yes" imported="no">SAMRAI/mesh/TagAndInitializeStrategy.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>TagAndInitializeStrategy.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>TagAndInitializeStrategy_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <class kind="class">SAMRAI::mesh::TagAndInitializeStrategy</class>
  </compound>
  <compound kind="file">
    <name>TagAndInitializeStrategy.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>TagAndInitializeStrategy_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>TreeLoadBalancer.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>TreeLoadBalancer_8C</filename>
    <includes id="TreeLoadBalancer_8h" name="TreeLoadBalancer.h" local="yes" imported="no">SAMRAI/mesh/TreeLoadBalancer.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="MappingConnectorAlgorithm_8h" name="MappingConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/MappingConnectorAlgorithm.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="BalanceUtilities_8h" name="BalanceUtilities.h" local="yes" imported="no">SAMRAI/mesh/BalanceUtilities.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellDataFactory_8h" name="CellDataFactory.h" local="yes" imported="no">SAMRAI/pdat/CellDataFactory.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="InputManager_8h" name="InputManager.h" local="yes" imported="no">SAMRAI/tbox/InputManager.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="AsyncCommStage_8h" name="AsyncCommStage.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommStage.h</includes>
    <includes id="AsyncCommGroup_8h" name="AsyncCommGroup.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommGroup.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Statistician_8h" name="Statistician.h" local="yes" imported="no">SAMRAI/tbox/Statistician.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="TreeLoadBalancer_8I" name="TreeLoadBalancer.I" local="yes" imported="no">SAMRAI/mesh/TreeLoadBalancer.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1mesh.html</anchorfile>
      <anchor>914161be4bc31ec13283a8054c561c24</anchor>
      <arglist>(std::ostream &amp;co, const TreeLoadBalancer::BoxInTransit &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TreeLoadBalancer.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>TreeLoadBalancer_8h</filename>
    <includes id="LoadBalanceStrategy_8h" name="LoadBalanceStrategy.h" local="yes" imported="no">SAMRAI/mesh/LoadBalanceStrategy.h</includes>
    <includes id="AsyncCommPeer_8h" name="AsyncCommPeer.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommPeer.h</includes>
    <includes id="AsyncCommStage_8h" name="AsyncCommStage.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommStage.h</includes>
    <includes id="BalancedDepthFirstTree_8h" name="BalancedDepthFirstTree.h" local="yes" imported="no">SAMRAI/tbox/BalancedDepthFirstTree.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RankGroup_8h" name="RankGroup.h" local="yes" imported="no">SAMRAI/tbox/RankGroup.h</includes>
    <includes id="Statistic_8h" name="Statistic.h" local="yes" imported="no">SAMRAI/tbox/Statistic.h</includes>
    <includes id="Statistician_8h" name="Statistician.h" local="yes" imported="no">SAMRAI/tbox/Statistician.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <class kind="class">SAMRAI::mesh::TreeLoadBalancer</class>
  </compound>
  <compound kind="file">
    <name>TreeLoadBalancer.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/</path>
    <filename>TreeLoadBalancer_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayData.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>ArrayData_8C</filename>
    <includes id="MessageStream_8h" name="MessageStream.h" local="yes" imported="no">SAMRAI/tbox/MessageStream.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="ArrayDataOperationUtilities_8h" name="ArrayDataOperationUtilities.h" local="yes" imported="no">SAMRAI/pdat/ArrayDataOperationUtilities.h</includes>
    <includes id="CopyOperation_8h" name="CopyOperation.h" local="yes" imported="no">SAMRAI/pdat/CopyOperation.h</includes>
    <includes id="SumOperation_8h" name="SumOperation.h" local="yes" imported="no">SAMRAI/pdat/SumOperation.h</includes>
    <includes id="ArrayData_8I" name="ArrayData.I" local="yes" imported="no">SAMRAI/pdat/ArrayData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayData.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>ArrayData_8h</filename>
    <includes id="ArrayDataIterator_8h" name="ArrayDataIterator.h" local="yes" imported="no">SAMRAI/pdat/ArrayDataIterator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="MemoryUtilities_8h" name="MemoryUtilities.h" local="yes" imported="no">SAMRAI/tbox/MemoryUtilities.h</includes>
    <includes id="MessageStream_8h" name="MessageStream.h" local="yes" imported="no">SAMRAI/tbox/MessageStream.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::ArrayData</class>
  </compound>
  <compound kind="file">
    <name>ArrayData.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>ArrayData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayDataAccess.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>ArrayDataAccess_8C</filename>
    <includes id="ArrayDataAccess_8h" name="ArrayDataAccess.h" local="yes" imported="no">SAMRAI/pdat/ArrayDataAccess.h</includes>
    <member kind="function">
      <type>MDA_Access&lt; double, DIM, MDA_OrderColMajor&lt; DIM &gt; &gt;</type>
      <name>access</name>
      <anchorfile>ArrayDataAccess_8C.html</anchorfile>
      <anchor>4da58b247f8f5181d7956f2eda8e0e09</anchor>
      <arglist>(SAMRAI::pdat::ArrayData&lt; double &gt; &amp;array_data, int depth)</arglist>
    </member>
    <member kind="function">
      <type>const MDA_AccessConst&lt; double, DIM, MDA_OrderColMajor&lt; DIM &gt; &gt;</type>
      <name>access</name>
      <anchorfile>ArrayDataAccess_8C.html</anchorfile>
      <anchor>9953f6f6c979618db6a8df62d0b3f909</anchor>
      <arglist>(const SAMRAI::pdat::ArrayData&lt; double &gt; &amp;array_data, int depth)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ArrayDataAccess.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>ArrayDataAccess_8h</filename>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="MDA__Access_8h" name="MDA_Access.h" local="yes" imported="no">SAMRAI/pdat/MDA_Access.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::ArrayDataAccess</class>
  </compound>
  <compound kind="file">
    <name>ArrayDataIterator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>ArrayDataIterator_8C</filename>
    <includes id="ArrayDataIterator_8h" name="ArrayDataIterator.h" local="yes" imported="no">SAMRAI/pdat/ArrayDataIterator.h</includes>
    <includes id="ArrayDataIterator_8I" name="ArrayDataIterator.I" local="yes" imported="no">SAMRAI/pdat/ArrayDataIterator.I</includes>
  </compound>
  <compound kind="file">
    <name>ArrayDataIterator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>ArrayDataIterator_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::ArrayDataIterator</class>
  </compound>
  <compound kind="file">
    <name>ArrayDataIterator.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>ArrayDataIterator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayDataOperationUtilities.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>ArrayDataOperationUtilities_8C</filename>
    <includes id="ArrayDataOperationUtilities_8h" name="ArrayDataOperationUtilities.h" local="yes" imported="no">SAMRAI/pdat/ArrayDataOperationUtilities.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayDataOperationUtilities.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>ArrayDataOperationUtilities_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::ArrayDataOperationUtilities</class>
  </compound>
  <compound kind="file">
    <name>CellComplexConstantRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellComplexConstantRefine_8C</filename>
    <includes id="CellComplexConstantRefine_8h" name="CellComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellComplexConstantRefine.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CellComplexConstantRefine_8C.html</anchorfile>
      <anchor>eed389e512010c87031e1e4525732701</anchor>
      <arglist>(conrefcellcplx1d, CONREFCELLCPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CellComplexConstantRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellComplexConstantRefine_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::CellComplexConstantRefine</class>
  </compound>
  <compound kind="file">
    <name>CellComplexLinearTimeInterpolateOp.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellComplexLinearTimeInterpolateOp_8C</filename>
    <includes id="CellComplexLinearTimeInterpolateOp_8h" name="CellComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellComplexLinearTimeInterpolateOp.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CellComplexLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>b1a49ff32d62c077748b9251775a6e41</anchor>
      <arglist>(lintimeintcellcmplx1d, LINTIMEINTCELLCMPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CellComplexLinearTimeInterpolateOp.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellComplexLinearTimeInterpolateOp_8h</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::CellComplexLinearTimeInterpolateOp</class>
  </compound>
  <compound kind="file">
    <name>CellData.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellData_8C</filename>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="CellGeometry_8h" name="CellGeometry.h" local="yes" imported="no">SAMRAI/pdat/CellGeometry.h</includes>
    <includes id="CellOverlap_8h" name="CellOverlap.h" local="yes" imported="no">SAMRAI/pdat/CellOverlap.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CellData_8I" name="CellData.I" local="yes" imported="no">SAMRAI/pdat/CellData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellData.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellData_8h</filename>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="CellIndex_8h" name="CellIndex.h" local="yes" imported="no">SAMRAI/pdat/CellIndex.h</includes>
    <includes id="CellIterator_8h" name="CellIterator.h" local="yes" imported="no">SAMRAI/pdat/CellIterator.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::CellData</class>
  </compound>
  <compound kind="file">
    <name>CellData.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellDataFactory.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellDataFactory_8C</filename>
    <includes id="CellDataFactory_8h" name="CellDataFactory.h" local="yes" imported="no">SAMRAI/pdat/CellDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellGeometry_8h" name="CellGeometry.h" local="yes" imported="no">SAMRAI/pdat/CellGeometry.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="CellDataFactory_8I" name="CellDataFactory.I" local="yes" imported="no">SAMRAI/pdat/CellDataFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellDataFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellDataFactory_8h</filename>
    <includes id="MultiblockCellDataTranslator_8h" name="MultiblockCellDataTranslator.h" local="yes" imported="no">SAMRAI/pdat/MultiblockCellDataTranslator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="MultiblockDataTranslator_8h" name="MultiblockDataTranslator.h" local="yes" imported="no">SAMRAI/hier/MultiblockDataTranslator.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::CellDataFactory</class>
  </compound>
  <compound kind="file">
    <name>CellDataFactory.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellDataFactory_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellDoubleConstantRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellDoubleConstantRefine_8C</filename>
    <includes id="CellDoubleConstantRefine_8h" name="CellDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellDoubleConstantRefine.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CellDoubleConstantRefine_8C.html</anchorfile>
      <anchor>12e73a5ec6fcfcf6ea9939dfb7aeddfa</anchor>
      <arglist>(conrefcelldoub1d, CONREFCELLDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CellDoubleConstantRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellDoubleConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::CellDoubleConstantRefine</class>
  </compound>
  <compound kind="file">
    <name>CellDoubleLinearTimeInterpolateOp.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellDoubleLinearTimeInterpolateOp_8C</filename>
    <includes id="CellDoubleLinearTimeInterpolateOp_8h" name="CellDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CellDoubleLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>d3efa57a431624ec98766abb39ebd040</anchor>
      <arglist>(lintimeintcelldoub1d, LINTIMEINTCELLDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CellDoubleLinearTimeInterpolateOp.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellDoubleLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::CellDoubleLinearTimeInterpolateOp</class>
  </compound>
  <compound kind="file">
    <name>CellFloatConstantRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellFloatConstantRefine_8C</filename>
    <includes id="CellFloatConstantRefine_8h" name="CellFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellFloatConstantRefine.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CellFloatConstantRefine_8C.html</anchorfile>
      <anchor>5317dc625e1714df521b4f10ee097780</anchor>
      <arglist>(conrefcellflot1d, CONREFCELLFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CellFloatConstantRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellFloatConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::CellFloatConstantRefine</class>
  </compound>
  <compound kind="file">
    <name>CellFloatLinearTimeInterpolateOp.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellFloatLinearTimeInterpolateOp_8C</filename>
    <includes id="CellFloatLinearTimeInterpolateOp_8h" name="CellFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellFloatLinearTimeInterpolateOp.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CellFloatLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>76bee0d669f598a86c1dded2bad28ca8</anchor>
      <arglist>(lintimeintcellfloat1d, LINTIMEINTCELLFLOAT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CellFloatLinearTimeInterpolateOp.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellFloatLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::CellFloatLinearTimeInterpolateOp</class>
  </compound>
  <compound kind="file">
    <name>CellGeometry.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellGeometry_8C</filename>
    <includes id="CellGeometry_8h" name="CellGeometry.h" local="yes" imported="no">SAMRAI/pdat/CellGeometry.h</includes>
    <includes id="CellOverlap_8h" name="CellOverlap.h" local="yes" imported="no">SAMRAI/pdat/CellOverlap.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CellGeometry_8I" name="CellGeometry.I" local="yes" imported="no">SAMRAI/pdat/CellGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellGeometry.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellGeometry_8h</filename>
    <includes id="CellIndex_8h" name="CellIndex.h" local="yes" imported="no">SAMRAI/pdat/CellIndex.h</includes>
    <includes id="CellOverlap_8h" name="CellOverlap.h" local="yes" imported="no">SAMRAI/pdat/CellOverlap.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::CellGeometry</class>
  </compound>
  <compound kind="file">
    <name>CellGeometry.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellIndex.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellIndex_8C</filename>
    <includes id="CellIndex_8h" name="CellIndex.h" local="yes" imported="no">SAMRAI/pdat/CellIndex.h</includes>
    <includes id="CellIndex_8I" name="CellIndex.I" local="yes" imported="no">SAMRAI/pdat/CellIndex.I</includes>
  </compound>
  <compound kind="file">
    <name>CellIndex.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellIndex_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::CellIndex</class>
  </compound>
  <compound kind="file">
    <name>CellIndex.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellIndex_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellIntegerConstantRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellIntegerConstantRefine_8C</filename>
    <includes id="CellIntegerConstantRefine_8h" name="CellIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellIntegerConstantRefine.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CellIntegerConstantRefine_8C.html</anchorfile>
      <anchor>6ef5be63c823d2d2d4145b89979d2b56</anchor>
      <arglist>(conrefcellintg1d, CONREFCELLINTG1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CellIntegerConstantRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellIntegerConstantRefine_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::CellIntegerConstantRefine</class>
  </compound>
  <compound kind="file">
    <name>CellIterator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellIterator_8C</filename>
    <includes id="CellIterator_8h" name="CellIterator.h" local="yes" imported="no">SAMRAI/pdat/CellIterator.h</includes>
    <includes id="CellIterator_8I" name="CellIterator.I" local="yes" imported="no">SAMRAI/pdat/CellIterator.I</includes>
  </compound>
  <compound kind="file">
    <name>CellIterator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellIterator_8h</filename>
    <includes id="CellGeometry_8h" name="CellGeometry.h" local="yes" imported="no">SAMRAI/pdat/CellGeometry.h</includes>
    <includes id="CellIndex_8h" name="CellIndex.h" local="yes" imported="no">SAMRAI/pdat/CellIndex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::CellIterator</class>
  </compound>
  <compound kind="file">
    <name>CellIterator.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellIterator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellOverlap.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellOverlap_8C</filename>
    <includes id="CellOverlap_8h" name="CellOverlap.h" local="yes" imported="no">SAMRAI/pdat/CellOverlap.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="CellOverlap_8I" name="CellOverlap.I" local="yes" imported="no">SAMRAI/pdat/CellOverlap.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellOverlap.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellOverlap_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::CellOverlap</class>
  </compound>
  <compound kind="file">
    <name>CellOverlap.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellOverlap_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellVariable.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellVariable_8C</filename>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="CellDataFactory_8h" name="CellDataFactory.h" local="yes" imported="no">SAMRAI/pdat/CellDataFactory.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellVariable.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CellVariable_8h</filename>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::CellVariable</class>
  </compound>
  <compound kind="file">
    <name>CopyOperation.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CopyOperation_8C</filename>
    <includes id="CopyOperation_8h" name="CopyOperation.h" local="yes" imported="no">SAMRAI/pdat/CopyOperation.h</includes>
    <includes id="CopyOperation_8I" name="CopyOperation.I" local="yes" imported="no">SAMRAI/pdat/CopyOperation.I</includes>
  </compound>
  <compound kind="file">
    <name>CopyOperation.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CopyOperation_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::CopyOperation</class>
  </compound>
  <compound kind="file">
    <name>CopyOperation.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>CopyOperation_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>DoubleAttributeId.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>DoubleAttributeId_8C</filename>
    <includes id="DoubleAttributeId_8h" name="DoubleAttributeId.h" local="yes" imported="no">SAMRAI/pdat/DoubleAttributeId.h</includes>
    <includes id="DoubleAttributeId_8I" name="DoubleAttributeId.I" local="yes" imported="no">SAMRAI/pdat/DoubleAttributeId.I</includes>
  </compound>
  <compound kind="file">
    <name>DoubleAttributeId.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>DoubleAttributeId_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::DoubleAttributeId</class>
  </compound>
  <compound kind="file">
    <name>DoubleAttributeId.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>DoubleAttributeId_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_array.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/dox/</path>
    <filename>pdat_2dox_2manual__array_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_array.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/dox/</path>
    <filename>math_2dox_2manual__array_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>manual_boxgeometry.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/dox/</path>
    <filename>manual__boxgeometry_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_cell.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/dox/</path>
    <filename>pdat_2dox_2manual__cell_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_cell.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/dox/</path>
    <filename>math_2dox_2manual__cell_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>manual_edge.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/dox/</path>
    <filename>manual__edge_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_face.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/dox/</path>
    <filename>manual__face_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_fortran.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/dox/</path>
    <filename>manual__fortran_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_index.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/dox/</path>
    <filename>manual__index_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_multiblock.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/dox/</path>
    <filename>pdat_2dox_2manual__multiblock_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_multiblock.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/dox/</path>
    <filename>mesh_2dox_2manual__multiblock_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>manual_node.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/dox/</path>
    <filename>manual__node_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_operators_constant_cell.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/dox/</path>
    <filename>manual__operators__constant__cell_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_operators_constant_outernode.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/dox/</path>
    <filename>manual__operators__constant__outernode_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_operators_time_interpolate.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/dox/</path>
    <filename>manual__operators__time__interpolate_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_operators_time_interpolate_cell.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/dox/</path>
    <filename>manual__operators__time__interpolate__cell_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_operators_time_interpolate_fortran.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/dox/</path>
    <filename>manual__operators__time__interpolate__fortran_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_outeredge.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/dox/</path>
    <filename>manual__outeredge_8dox</filename>
    <namespace>SAMRAI</namespace>
  </compound>
  <compound kind="file">
    <name>manual_outerface.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/dox/</path>
    <filename>manual__outerface_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_outernode.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/dox/</path>
    <filename>manual__outernode_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_outerside.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/dox/</path>
    <filename>manual__outerside_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_side.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/dox/</path>
    <filename>manual__side_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeComplexConstantRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeComplexConstantRefine_8C</filename>
    <includes id="EdgeComplexConstantRefine_8h" name="EdgeComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeComplexConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>EdgeComplexConstantRefine_8C.html</anchorfile>
      <anchor>1445050b2282dbee44f0e8c7b5ea8bc2</anchor>
      <arglist>(conrefedgecplx1d, CONREFEDGECPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EdgeComplexConstantRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeComplexConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::EdgeComplexConstantRefine</class>
  </compound>
  <compound kind="file">
    <name>EdgeComplexLinearTimeInterpolateOp.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeComplexLinearTimeInterpolateOp_8C</filename>
    <includes id="EdgeComplexLinearTimeInterpolateOp_8h" name="EdgeComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/EdgeComplexLinearTimeInterpolateOp.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>EdgeComplexLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>ea04b40bde7ff5c0a4451081af4b1ba3</anchor>
      <arglist>(lintimeintedgecmplx1d, LINTIMEINTEDGECMPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EdgeComplexLinearTimeInterpolateOp.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeComplexLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::EdgeComplexLinearTimeInterpolateOp</class>
  </compound>
  <compound kind="file">
    <name>EdgeData.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeData_8C</filename>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <includes id="EdgeOverlap_8h" name="EdgeOverlap.h" local="yes" imported="no">SAMRAI/pdat/EdgeOverlap.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="EdgeData_8I" name="EdgeData.I" local="yes" imported="no">SAMRAI/pdat/EdgeData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeData.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeData_8h</filename>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="EdgeIndex_8h" name="EdgeIndex.h" local="yes" imported="no">SAMRAI/pdat/EdgeIndex.h</includes>
    <includes id="EdgeIterator_8h" name="EdgeIterator.h" local="yes" imported="no">SAMRAI/pdat/EdgeIterator.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::EdgeData</class>
  </compound>
  <compound kind="file">
    <name>EdgeData.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeDataFactory.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeDataFactory_8C</filename>
    <includes id="EdgeDataFactory_8h" name="EdgeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/EdgeDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <includes id="OuteredgeDataFactory_8h" name="OuteredgeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeDataFactory.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="MemoryUtilities_8h" name="MemoryUtilities.h" local="yes" imported="no">SAMRAI/tbox/MemoryUtilities.h</includes>
    <includes id="EdgeDataFactory_8I" name="EdgeDataFactory.I" local="yes" imported="no">SAMRAI/pdat/EdgeDataFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeDataFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeDataFactory_8h</filename>
    <includes id="MultiblockEdgeDataTranslator_8h" name="MultiblockEdgeDataTranslator.h" local="yes" imported="no">SAMRAI/pdat/MultiblockEdgeDataTranslator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::EdgeDataFactory</class>
  </compound>
  <compound kind="file">
    <name>EdgeDataFactory.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeDataFactory_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeDoubleConstantRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeDoubleConstantRefine_8C</filename>
    <includes id="EdgeDoubleConstantRefine_8h" name="EdgeDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeDoubleConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>EdgeDoubleConstantRefine_8C.html</anchorfile>
      <anchor>f19ae8456c7db23d2b004ba83a18cba4</anchor>
      <arglist>(conrefedgedoub1d, CONREFEDGEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EdgeDoubleConstantRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeDoubleConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::EdgeDoubleConstantRefine</class>
  </compound>
  <compound kind="file">
    <name>EdgeDoubleLinearTimeInterpolateOp.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeDoubleLinearTimeInterpolateOp_8C</filename>
    <includes id="EdgeDoubleLinearTimeInterpolateOp_8h" name="EdgeDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/EdgeDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>EdgeDoubleLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>902e65ea40bcad56be96a20074a973d3</anchor>
      <arglist>(lintimeintedgedoub1d, LINTIMEINTEDGEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EdgeDoubleLinearTimeInterpolateOp.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeDoubleLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::EdgeDoubleLinearTimeInterpolateOp</class>
  </compound>
  <compound kind="file">
    <name>EdgeFloatConstantRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeFloatConstantRefine_8C</filename>
    <includes id="EdgeFloatConstantRefine_8h" name="EdgeFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeFloatConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>EdgeFloatConstantRefine_8C.html</anchorfile>
      <anchor>6873a9b999b5155abd1841c89e0b544f</anchor>
      <arglist>(conrefedgeflot1d, CONREFEDGEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EdgeFloatConstantRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeFloatConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::EdgeFloatConstantRefine</class>
  </compound>
  <compound kind="file">
    <name>EdgeFloatLinearTimeInterpolateOp.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeFloatLinearTimeInterpolateOp_8C</filename>
    <includes id="EdgeFloatLinearTimeInterpolateOp_8h" name="EdgeFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/EdgeFloatLinearTimeInterpolateOp.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>EdgeFloatLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>433214ea29a176a23438321eb976bb2c</anchor>
      <arglist>(lintimeintedgefloat1d, LINTIMEINTEDGEFLOAT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EdgeFloatLinearTimeInterpolateOp.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeFloatLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::EdgeFloatLinearTimeInterpolateOp</class>
  </compound>
  <compound kind="file">
    <name>EdgeGeometry.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeGeometry_8C</filename>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <includes id="EdgeOverlap_8h" name="EdgeOverlap.h" local="yes" imported="no">SAMRAI/pdat/EdgeOverlap.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="EdgeGeometry_8I" name="EdgeGeometry.I" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeGeometry.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeGeometry_8h</filename>
    <includes id="EdgeIndex_8h" name="EdgeIndex.h" local="yes" imported="no">SAMRAI/pdat/EdgeIndex.h</includes>
    <includes id="EdgeOverlap_8h" name="EdgeOverlap.h" local="yes" imported="no">SAMRAI/pdat/EdgeOverlap.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::EdgeGeometry</class>
  </compound>
  <compound kind="file">
    <name>EdgeGeometry.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeIndex.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeIndex_8C</filename>
    <includes id="EdgeIndex_8h" name="EdgeIndex.h" local="yes" imported="no">SAMRAI/pdat/EdgeIndex.h</includes>
    <includes id="EdgeIndex_8I" name="EdgeIndex.I" local="yes" imported="no">SAMRAI/pdat/EdgeIndex.I</includes>
  </compound>
  <compound kind="file">
    <name>EdgeIndex.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeIndex_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::EdgeIndex</class>
  </compound>
  <compound kind="file">
    <name>EdgeIndex.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeIndex_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeIntegerConstantRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeIntegerConstantRefine_8C</filename>
    <includes id="EdgeIntegerConstantRefine_8h" name="EdgeIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeIntegerConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>EdgeIntegerConstantRefine_8C.html</anchorfile>
      <anchor>ce190d5ebf780acb481a302e7d1e54b4</anchor>
      <arglist>(conrefedgeintg1d, CONREFEDGEINTG1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EdgeIntegerConstantRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeIntegerConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::EdgeIntegerConstantRefine</class>
  </compound>
  <compound kind="file">
    <name>EdgeIterator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeIterator_8C</filename>
    <includes id="EdgeIterator_8h" name="EdgeIterator.h" local="yes" imported="no">SAMRAI/pdat/EdgeIterator.h</includes>
    <includes id="EdgeIterator_8I" name="EdgeIterator.I" local="yes" imported="no">SAMRAI/pdat/EdgeIterator.I</includes>
  </compound>
  <compound kind="file">
    <name>EdgeIterator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeIterator_8h</filename>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <includes id="EdgeIndex_8h" name="EdgeIndex.h" local="yes" imported="no">SAMRAI/pdat/EdgeIndex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::EdgeIterator</class>
  </compound>
  <compound kind="file">
    <name>EdgeIterator.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeIterator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeOverlap.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeOverlap_8C</filename>
    <includes id="EdgeOverlap_8h" name="EdgeOverlap.h" local="yes" imported="no">SAMRAI/pdat/EdgeOverlap.h</includes>
    <includes id="EdgeOverlap_8I" name="EdgeOverlap.I" local="yes" imported="no">SAMRAI/pdat/EdgeOverlap.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeOverlap.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeOverlap_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::EdgeOverlap</class>
  </compound>
  <compound kind="file">
    <name>EdgeOverlap.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeOverlap_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeVariable.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeVariable_8C</filename>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="EdgeDataFactory_8h" name="EdgeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/EdgeDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeVariable.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>EdgeVariable_8h</filename>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::EdgeVariable</class>
  </compound>
  <compound kind="file">
    <name>FaceComplexConstantRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceComplexConstantRefine_8C</filename>
    <includes id="FaceComplexConstantRefine_8h" name="FaceComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceComplexConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>FaceComplexConstantRefine_8C.html</anchorfile>
      <anchor>326d9d5cb38a0c03dbfe325c709760d4</anchor>
      <arglist>(conreffacecplx1d, CONREFFACECPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FaceComplexConstantRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceComplexConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::FaceComplexConstantRefine</class>
  </compound>
  <compound kind="file">
    <name>FaceComplexLinearTimeInterpolateOp.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceComplexLinearTimeInterpolateOp_8C</filename>
    <includes id="FaceComplexLinearTimeInterpolateOp_8h" name="FaceComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceComplexLinearTimeInterpolateOp.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>FaceComplexLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>a73b70e66249f80cdf883eb10062cf6e</anchor>
      <arglist>(lintimeintfacecmplx1d, LINTIMEINTFACECMPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FaceComplexLinearTimeInterpolateOp.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceComplexLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::FaceComplexLinearTimeInterpolateOp</class>
  </compound>
  <compound kind="file">
    <name>FaceData.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceData_8C</filename>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <includes id="FaceOverlap_8h" name="FaceOverlap.h" local="yes" imported="no">SAMRAI/pdat/FaceOverlap.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="FaceData_8I" name="FaceData.I" local="yes" imported="no">SAMRAI/pdat/FaceData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceData.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceData_8h</filename>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="FaceIndex_8h" name="FaceIndex.h" local="yes" imported="no">SAMRAI/pdat/FaceIndex.h</includes>
    <includes id="FaceIterator_8h" name="FaceIterator.h" local="yes" imported="no">SAMRAI/pdat/FaceIterator.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::FaceData</class>
  </compound>
  <compound kind="file">
    <name>FaceData.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceDataFactory.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceDataFactory_8C</filename>
    <includes id="FaceDataFactory_8h" name="FaceDataFactory.h" local="yes" imported="no">SAMRAI/pdat/FaceDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <includes id="OuterfaceDataFactory_8h" name="OuterfaceDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceDataFactory.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="FaceDataFactory_8I" name="FaceDataFactory.I" local="yes" imported="no">SAMRAI/pdat/FaceDataFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceDataFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceDataFactory_8h</filename>
    <includes id="MultiblockFaceDataTranslator_8h" name="MultiblockFaceDataTranslator.h" local="yes" imported="no">SAMRAI/pdat/MultiblockFaceDataTranslator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::FaceDataFactory</class>
  </compound>
  <compound kind="file">
    <name>FaceDataFactory.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceDataFactory_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceDoubleConstantRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceDoubleConstantRefine_8C</filename>
    <includes id="FaceDoubleConstantRefine_8h" name="FaceDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceDoubleConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>FaceDoubleConstantRefine_8C.html</anchorfile>
      <anchor>2747d2cdaa50ef61182ca20df28f4a16</anchor>
      <arglist>(conreffacedoub1d, CONREFFACEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FaceDoubleConstantRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceDoubleConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::FaceDoubleConstantRefine</class>
  </compound>
  <compound kind="file">
    <name>FaceDoubleLinearTimeInterpolateOp.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceDoubleLinearTimeInterpolateOp_8C</filename>
    <includes id="FaceDoubleLinearTimeInterpolateOp_8h" name="FaceDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>FaceDoubleLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>e1cf51c1f060f04ef71ff8a830d774a5</anchor>
      <arglist>(lintimeintfacedoub1d, LINTIMEINTFACEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FaceDoubleLinearTimeInterpolateOp.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceDoubleLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::FaceDoubleLinearTimeInterpolateOp</class>
  </compound>
  <compound kind="file">
    <name>FaceFloatConstantRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceFloatConstantRefine_8C</filename>
    <includes id="FaceFloatConstantRefine_8h" name="FaceFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceFloatConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>FaceFloatConstantRefine_8C.html</anchorfile>
      <anchor>5c5eb6bf675c1dc0f44d779a338b4f98</anchor>
      <arglist>(conreffaceflot1d, CONREFFACEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FaceFloatConstantRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceFloatConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::FaceFloatConstantRefine</class>
  </compound>
  <compound kind="file">
    <name>FaceFloatLinearTimeInterpolateOp.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceFloatLinearTimeInterpolateOp_8C</filename>
    <includes id="FaceFloatLinearTimeInterpolateOp_8h" name="FaceFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceFloatLinearTimeInterpolateOp.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>FaceFloatLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>3bb3cd483f9471f5dd3fb7c8f7f24f79</anchor>
      <arglist>(lintimeintfacefloat1d, LINTIMEINTFACEFLOAT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FaceFloatLinearTimeInterpolateOp.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceFloatLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::FaceFloatLinearTimeInterpolateOp</class>
  </compound>
  <compound kind="file">
    <name>FaceGeometry.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceGeometry_8C</filename>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <includes id="FaceOverlap_8h" name="FaceOverlap.h" local="yes" imported="no">SAMRAI/pdat/FaceOverlap.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="FaceGeometry_8I" name="FaceGeometry.I" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceGeometry.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceGeometry_8h</filename>
    <includes id="FaceIndex_8h" name="FaceIndex.h" local="yes" imported="no">SAMRAI/pdat/FaceIndex.h</includes>
    <includes id="FaceOverlap_8h" name="FaceOverlap.h" local="yes" imported="no">SAMRAI/pdat/FaceOverlap.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::FaceGeometry</class>
  </compound>
  <compound kind="file">
    <name>FaceGeometry.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceIndex.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceIndex_8C</filename>
    <includes id="FaceIndex_8h" name="FaceIndex.h" local="yes" imported="no">SAMRAI/pdat/FaceIndex.h</includes>
    <includes id="FaceIndex_8I" name="FaceIndex.I" local="yes" imported="no">SAMRAI/pdat/FaceIndex.I</includes>
  </compound>
  <compound kind="file">
    <name>FaceIndex.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceIndex_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::FaceIndex</class>
  </compound>
  <compound kind="file">
    <name>FaceIndex.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceIndex_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceIntegerConstantRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceIntegerConstantRefine_8C</filename>
    <includes id="FaceIntegerConstantRefine_8h" name="FaceIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceIntegerConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>FaceIntegerConstantRefine_8C.html</anchorfile>
      <anchor>045c24ffbfe99d11850fb4e1cf35aa13</anchor>
      <arglist>(conreffaceintg1d, CONREFFACEINTG1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FaceIntegerConstantRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceIntegerConstantRefine_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::FaceIntegerConstantRefine</class>
  </compound>
  <compound kind="file">
    <name>FaceIterator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceIterator_8C</filename>
    <includes id="FaceIterator_8h" name="FaceIterator.h" local="yes" imported="no">SAMRAI/pdat/FaceIterator.h</includes>
    <includes id="FaceIterator_8I" name="FaceIterator.I" local="yes" imported="no">SAMRAI/pdat/FaceIterator.I</includes>
  </compound>
  <compound kind="file">
    <name>FaceIterator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceIterator_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <includes id="FaceIndex_8h" name="FaceIndex.h" local="yes" imported="no">SAMRAI/pdat/FaceIndex.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::FaceIterator</class>
  </compound>
  <compound kind="file">
    <name>FaceIterator.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceIterator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceOverlap.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceOverlap_8C</filename>
    <includes id="FaceOverlap_8h" name="FaceOverlap.h" local="yes" imported="no">SAMRAI/pdat/FaceOverlap.h</includes>
    <includes id="FaceOverlap_8I" name="FaceOverlap.I" local="yes" imported="no">SAMRAI/pdat/FaceOverlap.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceOverlap.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceOverlap_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::FaceOverlap</class>
  </compound>
  <compound kind="file">
    <name>FaceOverlap.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceOverlap_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceVariable.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceVariable_8C</filename>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="FaceDataFactory_8h" name="FaceDataFactory.h" local="yes" imported="no">SAMRAI/pdat/FaceDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceVariable.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FaceVariable_8h</filename>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::FaceVariable</class>
  </compound>
  <compound kind="file">
    <name>FirstLayerCellNoCornersVariableFillPattern.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FirstLayerCellNoCornersVariableFillPattern_8C</filename>
    <includes id="FirstLayerCellNoCornersVariableFillPattern_8h" name="FirstLayerCellNoCornersVariableFillPattern.h" local="yes" imported="no">SAMRAI/pdat/FirstLayerCellNoCornersVariableFillPattern.h</includes>
    <includes id="CellGeometry_8h" name="CellGeometry.h" local="yes" imported="no">SAMRAI/pdat/CellGeometry.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FirstLayerCellNoCornersVariableFillPattern.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FirstLayerCellNoCornersVariableFillPattern_8h</filename>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="VariableFillPattern_8h" name="VariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/VariableFillPattern.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::FirstLayerCellNoCornersVariableFillPattern</class>
    <member kind="define">
      <type>#define</type>
      <name>included_pdat_FirstLayerCellNoCornersVariableFillPattern</name>
      <anchorfile>FirstLayerCellNoCornersVariableFillPattern_8h.html</anchorfile>
      <anchor>a02abf908c06234620b6d3f06ef615d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FirstLayerCellVariableFillPattern.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FirstLayerCellVariableFillPattern_8C</filename>
    <includes id="FirstLayerCellVariableFillPattern_8h" name="FirstLayerCellVariableFillPattern.h" local="yes" imported="no">SAMRAI/pdat/FirstLayerCellVariableFillPattern.h</includes>
    <includes id="CellGeometry_8h" name="CellGeometry.h" local="yes" imported="no">SAMRAI/pdat/CellGeometry.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FirstLayerCellVariableFillPattern.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FirstLayerCellVariableFillPattern_8h</filename>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="VariableFillPattern_8h" name="VariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/VariableFillPattern.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::FirstLayerCellVariableFillPattern</class>
  </compound>
  <compound kind="file">
    <name>FirstLayerNodeVariableFillPattern.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FirstLayerNodeVariableFillPattern_8C</filename>
    <includes id="FirstLayerNodeVariableFillPattern_8h" name="FirstLayerNodeVariableFillPattern.h" local="yes" imported="no">SAMRAI/pdat/FirstLayerNodeVariableFillPattern.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FirstLayerNodeVariableFillPattern.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>FirstLayerNodeVariableFillPattern_8h</filename>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="VariableFillPattern_8h" name="VariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/VariableFillPattern.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::FirstLayerNodeVariableFillPattern</class>
  </compound>
  <compound kind="file">
    <name>IndexData.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>IndexData_8C</filename>
    <includes id="IndexData_8h" name="IndexData.h" local="yes" imported="no">SAMRAI/pdat/IndexData.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <includes id="IndexData_8I" name="IndexData.I" local="yes" imported="no">SAMRAI/pdat/IndexData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>IndexData.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>IndexData_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::IndexData</class>
    <class kind="class">SAMRAI::pdat::IndexDataNode</class>
    <class kind="class">SAMRAI::pdat::IndexIterator</class>
  </compound>
  <compound kind="file">
    <name>IndexData.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>IndexData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>IndexDataFactory.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>IndexDataFactory_8C</filename>
    <includes id="IndexDataFactory_8h" name="IndexDataFactory.h" local="yes" imported="no">SAMRAI/pdat/IndexDataFactory.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IndexData_8h" name="IndexData.h" local="yes" imported="no">SAMRAI/pdat/IndexData.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MemoryUtilities_8h" name="MemoryUtilities.h" local="yes" imported="no">SAMRAI/tbox/MemoryUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>IndexDataFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>IndexDataFactory_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::IndexDataFactory</class>
  </compound>
  <compound kind="file">
    <name>IndexVariable.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>IndexVariable_8C</filename>
    <includes id="IndexVariable_8h" name="IndexVariable.h" local="yes" imported="no">SAMRAI/pdat/IndexVariable.h</includes>
    <includes id="IndexDataFactory_8h" name="IndexDataFactory.h" local="yes" imported="no">SAMRAI/pdat/IndexDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>IndexVariable.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>IndexVariable_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::IndexVariable</class>
  </compound>
  <compound kind="file">
    <name>IntegerAttributeId.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>IntegerAttributeId_8C</filename>
    <includes id="IntegerAttributeId_8h" name="IntegerAttributeId.h" local="yes" imported="no">SAMRAI/pdat/IntegerAttributeId.h</includes>
    <includes id="IntegerAttributeId_8I" name="IntegerAttributeId.I" local="yes" imported="no">SAMRAI/pdat/IntegerAttributeId.I</includes>
  </compound>
  <compound kind="file">
    <name>IntegerAttributeId.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>IntegerAttributeId_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::IntegerAttributeId</class>
  </compound>
  <compound kind="file">
    <name>IntegerAttributeId.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>IntegerAttributeId_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>MDA_Access.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>MDA__Access_8h</filename>
    <class kind="class">MDA_IndexRange</class>
    <class kind="class">MDA_OrderRowMajor</class>
    <class kind="class">MDA_OrderColMajor</class>
    <class kind="class">MDA_Access</class>
    <class kind="class">MDA_AccessConst</class>
  </compound>
  <compound kind="file">
    <name>MultiblockCellDataTranslator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>MultiblockCellDataTranslator_8C</filename>
    <includes id="MultiblockCellDataTranslator_8h" name="MultiblockCellDataTranslator.h" local="yes" imported="no">SAMRAI/pdat/MultiblockCellDataTranslator.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>MultiblockCellDataTranslator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>MultiblockCellDataTranslator_8h</filename>
    <includes id="MultiblockDataTranslator_8h" name="MultiblockDataTranslator.h" local="yes" imported="no">SAMRAI/hier/MultiblockDataTranslator.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::MultiblockCellDataTranslator</class>
  </compound>
  <compound kind="file">
    <name>MultiblockEdgeDataTranslator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>MultiblockEdgeDataTranslator_8C</filename>
    <includes id="MultiblockEdgeDataTranslator_8h" name="MultiblockEdgeDataTranslator.h" local="yes" imported="no">SAMRAI/pdat/MultiblockEdgeDataTranslator.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>MultiblockEdgeDataTranslator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>MultiblockEdgeDataTranslator_8h</filename>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="MultiblockDataTranslator_8h" name="MultiblockDataTranslator.h" local="yes" imported="no">SAMRAI/hier/MultiblockDataTranslator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::MultiblockEdgeDataTranslator</class>
  </compound>
  <compound kind="file">
    <name>MultiblockFaceDataTranslator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>MultiblockFaceDataTranslator_8C</filename>
    <includes id="MultiblockFaceDataTranslator_8h" name="MultiblockFaceDataTranslator.h" local="yes" imported="no">SAMRAI/pdat/MultiblockFaceDataTranslator.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>MultiblockFaceDataTranslator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>MultiblockFaceDataTranslator_8h</filename>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="MultiblockDataTranslator_8h" name="MultiblockDataTranslator.h" local="yes" imported="no">SAMRAI/hier/MultiblockDataTranslator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::MultiblockFaceDataTranslator</class>
  </compound>
  <compound kind="file">
    <name>MultiblockNodeDataTranslator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>MultiblockNodeDataTranslator_8C</filename>
    <includes id="MultiblockNodeDataTranslator_8h" name="MultiblockNodeDataTranslator.h" local="yes" imported="no">SAMRAI/pdat/MultiblockNodeDataTranslator.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>MultiblockNodeDataTranslator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>MultiblockNodeDataTranslator_8h</filename>
    <includes id="MultiblockDataTranslator_8h" name="MultiblockDataTranslator.h" local="yes" imported="no">SAMRAI/hier/MultiblockDataTranslator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::MultiblockNodeDataTranslator</class>
  </compound>
  <compound kind="file">
    <name>MultiblockSideDataTranslator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>MultiblockSideDataTranslator_8C</filename>
    <includes id="MultiblockSideDataTranslator_8h" name="MultiblockSideDataTranslator.h" local="yes" imported="no">SAMRAI/pdat/MultiblockSideDataTranslator.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>MultiblockSideDataTranslator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>MultiblockSideDataTranslator_8h</filename>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="MultiblockDataTranslator_8h" name="MultiblockDataTranslator.h" local="yes" imported="no">SAMRAI/hier/MultiblockDataTranslator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::MultiblockSideDataTranslator</class>
  </compound>
  <compound kind="file">
    <name>NodeComplexInjection.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeComplexInjection_8C</filename>
    <includes id="NodeComplexInjection_8h" name="NodeComplexInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeComplexInjection.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>NodeComplexInjection_8C.html</anchorfile>
      <anchor>fba80b54201a0a03ab3d943a0450286b</anchor>
      <arglist>(conavgnodecplx1d, CONAVGNODECPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NodeComplexInjection.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeComplexInjection_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::NodeComplexInjection</class>
  </compound>
  <compound kind="file">
    <name>NodeComplexLinearTimeInterpolateOp.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeComplexLinearTimeInterpolateOp_8C</filename>
    <includes id="NodeComplexLinearTimeInterpolateOp_8h" name="NodeComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeComplexLinearTimeInterpolateOp.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>NodeComplexLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>3a733b89e465464035ea5e132b6977e4</anchor>
      <arglist>(lintimeintnodecmplx1d, LINTIMEINTNODECMPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NodeComplexLinearTimeInterpolateOp.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeComplexLinearTimeInterpolateOp_8h</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::NodeComplexLinearTimeInterpolateOp</class>
  </compound>
  <compound kind="file">
    <name>NodeData.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeData_8C</filename>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="NodeOverlap_8h" name="NodeOverlap.h" local="yes" imported="no">SAMRAI/pdat/NodeOverlap.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="NodeData_8I" name="NodeData.I" local="yes" imported="no">SAMRAI/pdat/NodeData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeData.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeData_8h</filename>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="NodeIndex_8h" name="NodeIndex.h" local="yes" imported="no">SAMRAI/pdat/NodeIndex.h</includes>
    <includes id="NodeIterator_8h" name="NodeIterator.h" local="yes" imported="no">SAMRAI/pdat/NodeIterator.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::NodeData</class>
  </compound>
  <compound kind="file">
    <name>NodeData.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeDataFactory.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeDataFactory_8C</filename>
    <includes id="NodeDataFactory_8h" name="NodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/NodeDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="OuternodeDataFactory_8h" name="OuternodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OuternodeDataFactory.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="NodeDataFactory_8I" name="NodeDataFactory.I" local="yes" imported="no">SAMRAI/pdat/NodeDataFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeDataFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeDataFactory_8h</filename>
    <includes id="MultiblockNodeDataTranslator_8h" name="MultiblockNodeDataTranslator.h" local="yes" imported="no">SAMRAI/pdat/MultiblockNodeDataTranslator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::NodeDataFactory</class>
  </compound>
  <compound kind="file">
    <name>NodeDataFactory.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeDataFactory_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeDoubleInjection.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeDoubleInjection_8C</filename>
    <includes id="NodeDoubleInjection_8h" name="NodeDoubleInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeDoubleInjection.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>NodeDoubleInjection_8C.html</anchorfile>
      <anchor>2bd4dd506ddbb33865fc3f023ce1bce1</anchor>
      <arglist>(conavgnodedoub1d, CONAVGNODEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NodeDoubleInjection.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeDoubleInjection_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::NodeDoubleInjection</class>
  </compound>
  <compound kind="file">
    <name>NodeDoubleLinearTimeInterpolateOp.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeDoubleLinearTimeInterpolateOp_8C</filename>
    <includes id="NodeDoubleLinearTimeInterpolateOp_8h" name="NodeDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>NodeDoubleLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>1cbf838586c5b00338a8bb128ba84366</anchor>
      <arglist>(lintimeintnodedoub1d, LINTIMEINTNODEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NodeDoubleLinearTimeInterpolateOp.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeDoubleLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::NodeDoubleLinearTimeInterpolateOp</class>
  </compound>
  <compound kind="file">
    <name>NodeFloatInjection.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeFloatInjection_8C</filename>
    <includes id="NodeFloatInjection_8h" name="NodeFloatInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeFloatInjection.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>NodeFloatInjection_8C.html</anchorfile>
      <anchor>1ba1a86f80b007f0800a46fac6fdae05</anchor>
      <arglist>(conavgnodeflot1d, CONAVGNODEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NodeFloatInjection.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeFloatInjection_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::NodeFloatInjection</class>
  </compound>
  <compound kind="file">
    <name>NodeFloatLinearTimeInterpolateOp.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeFloatLinearTimeInterpolateOp_8C</filename>
    <includes id="NodeFloatLinearTimeInterpolateOp_8h" name="NodeFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeFloatLinearTimeInterpolateOp.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>NodeFloatLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>de4e671fdf4ba19e258ca8bef5d96db7</anchor>
      <arglist>(lintimeintnodefloat1d, LINTIMEINTNODEFLOAT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NodeFloatLinearTimeInterpolateOp.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeFloatLinearTimeInterpolateOp_8h</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::NodeFloatLinearTimeInterpolateOp</class>
  </compound>
  <compound kind="file">
    <name>NodeGeometry.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeGeometry_8C</filename>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="NodeOverlap_8h" name="NodeOverlap.h" local="yes" imported="no">SAMRAI/pdat/NodeOverlap.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="NodeGeometry_8I" name="NodeGeometry.I" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeGeometry.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeGeometry_8h</filename>
    <includes id="NodeIndex_8h" name="NodeIndex.h" local="yes" imported="no">SAMRAI/pdat/NodeIndex.h</includes>
    <includes id="NodeOverlap_8h" name="NodeOverlap.h" local="yes" imported="no">SAMRAI/pdat/NodeOverlap.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::NodeGeometry</class>
  </compound>
  <compound kind="file">
    <name>NodeGeometry.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeIndex.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeIndex_8C</filename>
    <includes id="NodeIndex_8h" name="NodeIndex.h" local="yes" imported="no">SAMRAI/pdat/NodeIndex.h</includes>
    <includes id="NodeIndex_8I" name="NodeIndex.I" local="yes" imported="no">SAMRAI/pdat/NodeIndex.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeIndex.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeIndex_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::NodeIndex</class>
  </compound>
  <compound kind="file">
    <name>NodeIndex.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeIndex_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeIntegerInjection.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeIntegerInjection_8C</filename>
    <includes id="NodeIntegerInjection_8h" name="NodeIntegerInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeIntegerInjection.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>NodeIntegerInjection_8C.html</anchorfile>
      <anchor>0b7065490d44d4cfe9fdff06fa47c900</anchor>
      <arglist>(conavgnodeintg1d, CONAVGNODEINTG1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NodeIntegerInjection.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeIntegerInjection_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::NodeIntegerInjection</class>
  </compound>
  <compound kind="file">
    <name>NodeIterator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeIterator_8C</filename>
    <includes id="NodeIterator_8h" name="NodeIterator.h" local="yes" imported="no">SAMRAI/pdat/NodeIterator.h</includes>
    <includes id="NodeIterator_8I" name="NodeIterator.I" local="yes" imported="no">SAMRAI/pdat/NodeIterator.I</includes>
  </compound>
  <compound kind="file">
    <name>NodeIterator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeIterator_8h</filename>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="NodeIndex_8h" name="NodeIndex.h" local="yes" imported="no">SAMRAI/pdat/NodeIndex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::NodeIterator</class>
  </compound>
  <compound kind="file">
    <name>NodeIterator.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeIterator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeOverlap.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeOverlap_8C</filename>
    <includes id="NodeOverlap_8h" name="NodeOverlap.h" local="yes" imported="no">SAMRAI/pdat/NodeOverlap.h</includes>
    <includes id="NodeOverlap_8I" name="NodeOverlap.I" local="yes" imported="no">SAMRAI/pdat/NodeOverlap.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeOverlap.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeOverlap_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::NodeOverlap</class>
  </compound>
  <compound kind="file">
    <name>NodeOverlap.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeOverlap_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeVariable.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeVariable_8C</filename>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="NodeDataFactory_8h" name="NodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/NodeDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeVariable.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>NodeVariable_8h</filename>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::NodeVariable</class>
  </compound>
  <compound kind="file">
    <name>OuteredgeData.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuteredgeData_8C</filename>
    <includes id="OuteredgeData_8h" name="OuteredgeData.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeData.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <includes id="EdgeOverlap_8h" name="EdgeOverlap.h" local="yes" imported="no">SAMRAI/pdat/EdgeOverlap.h</includes>
    <includes id="OuteredgeGeometry_8h" name="OuteredgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeGeometry.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="OuteredgeData_8I" name="OuteredgeData.I" local="yes" imported="no">SAMRAI/pdat/OuteredgeData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeData.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuteredgeData_8h</filename>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeIndex_8h" name="EdgeIndex.h" local="yes" imported="no">SAMRAI/pdat/EdgeIndex.h</includes>
    <includes id="EdgeOverlap_8h" name="EdgeOverlap.h" local="yes" imported="no">SAMRAI/pdat/EdgeOverlap.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OuteredgeData</class>
  </compound>
  <compound kind="file">
    <name>OuteredgeData.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuteredgeData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeDataFactory.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuteredgeDataFactory_8C</filename>
    <includes id="EdgeDataFactory_8h" name="EdgeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/EdgeDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="OuteredgeData_8h" name="OuteredgeData.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeData.h</includes>
    <includes id="OuteredgeDataFactory_8h" name="OuteredgeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeDataFactory.h</includes>
    <includes id="OuteredgeGeometry_8h" name="OuteredgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeGeometry.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="OuteredgeDataFactory_8I" name="OuteredgeDataFactory.I" local="yes" imported="no">SAMRAI/pdat/OuteredgeDataFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeDataFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuteredgeDataFactory_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OuteredgeDataFactory</class>
  </compound>
  <compound kind="file">
    <name>OuteredgeDataFactory.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuteredgeDataFactory_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeGeometry.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuteredgeGeometry_8C</filename>
    <includes id="OuteredgeGeometry_8h" name="OuteredgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeGeometry.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <includes id="EdgeOverlap_8h" name="EdgeOverlap.h" local="yes" imported="no">SAMRAI/pdat/EdgeOverlap.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="OuteredgeGeometry_8I" name="OuteredgeGeometry.I" local="yes" imported="no">SAMRAI/pdat/OuteredgeGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeGeometry.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuteredgeGeometry_8h</filename>
    <includes id="EdgeOverlap_8h" name="EdgeOverlap.h" local="yes" imported="no">SAMRAI/pdat/EdgeOverlap.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OuteredgeGeometry</class>
  </compound>
  <compound kind="file">
    <name>OuteredgeGeometry.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuteredgeGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeVariable.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuteredgeVariable_8C</filename>
    <includes id="OuteredgeVariable_8h" name="OuteredgeVariable.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeVariable.h</includes>
    <includes id="OuteredgeDataFactory_8h" name="OuteredgeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeVariable.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuteredgeVariable_8h</filename>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OuteredgeVariable</class>
  </compound>
  <compound kind="file">
    <name>OuterfaceComplexConstantRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceComplexConstantRefine_8C</filename>
    <includes id="OuterfaceComplexConstantRefine_8h" name="OuterfaceComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceComplexConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>OuterfaceComplexConstantRefine_8C.html</anchorfile>
      <anchor>6e39cc89b2bca2748110bd374855a8b0</anchor>
      <arglist>(conrefoutfacecplx1d, CONREFOUTFACECPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OuterfaceComplexConstantRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceComplexConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OuterfaceComplexConstantRefine</class>
  </compound>
  <compound kind="file">
    <name>OuterfaceComplexLinearTimeInterpolateOp.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceComplexLinearTimeInterpolateOp_8C</filename>
    <includes id="OuterfaceComplexLinearTimeInterpolateOp_8h" name="OuterfaceComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceComplexLinearTimeInterpolateOp.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>OuterfaceComplexLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>47d5f109d580ad120bf953be65f3132d</anchor>
      <arglist>(lintimeintoutfacecmplx1d, LINTIMEINTOUTFACECMPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OuterfaceComplexLinearTimeInterpolateOp.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceComplexLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OuterfaceComplexLinearTimeInterpolateOp</class>
  </compound>
  <compound kind="file">
    <name>OuterfaceData.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceData_8C</filename>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <includes id="FaceOverlap_8h" name="FaceOverlap.h" local="yes" imported="no">SAMRAI/pdat/FaceOverlap.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="OuterfaceData_8I" name="OuterfaceData.I" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceData.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceData_8h</filename>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="FaceIndex_8h" name="FaceIndex.h" local="yes" imported="no">SAMRAI/pdat/FaceIndex.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OuterfaceData</class>
  </compound>
  <compound kind="file">
    <name>OuterfaceData.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceDataFactory.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceDataFactory_8C</filename>
    <includes id="OuterfaceDataFactory_8h" name="OuterfaceDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceGeometry_8h" name="OuterfaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceGeometry.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="FaceDataFactory_8h" name="FaceDataFactory.h" local="yes" imported="no">SAMRAI/pdat/FaceDataFactory.h</includes>
    <includes id="OuterfaceDataFactory_8I" name="OuterfaceDataFactory.I" local="yes" imported="no">SAMRAI/pdat/OuterfaceDataFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceDataFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceDataFactory_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OuterfaceDataFactory</class>
  </compound>
  <compound kind="file">
    <name>OuterfaceDataFactory.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceDataFactory_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceDoubleConstantRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceDoubleConstantRefine_8C</filename>
    <includes id="OuterfaceDoubleConstantRefine_8h" name="OuterfaceDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceDoubleConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>OuterfaceDoubleConstantRefine_8C.html</anchorfile>
      <anchor>2eb3a15dddab06a2cef53f6881c02301</anchor>
      <arglist>(conrefoutfacedoub1d, CONREFOUTFACEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OuterfaceDoubleConstantRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceDoubleConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OuterfaceDoubleConstantRefine</class>
  </compound>
  <compound kind="file">
    <name>OuterfaceDoubleLinearTimeInterpolateOp.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceDoubleLinearTimeInterpolateOp_8C</filename>
    <includes id="OuterfaceDoubleLinearTimeInterpolateOp_8h" name="OuterfaceDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>OuterfaceDoubleLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>9c0ec6e41693a868c514ed338226654c</anchor>
      <arglist>(lintimeintoutfacedoub1d, LINTIMEINTOUTFACEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OuterfaceDoubleLinearTimeInterpolateOp.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceDoubleLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OuterfaceDoubleLinearTimeInterpolateOp</class>
  </compound>
  <compound kind="file">
    <name>OuterfaceFloatConstantRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceFloatConstantRefine_8C</filename>
    <includes id="OuterfaceFloatConstantRefine_8h" name="OuterfaceFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceFloatConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>OuterfaceFloatConstantRefine_8C.html</anchorfile>
      <anchor>ac13bebf49d2290b517500fbe2d0a84b</anchor>
      <arglist>(conrefoutfaceflot1d, CONREFOUTFACEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OuterfaceFloatConstantRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceFloatConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OuterfaceFloatConstantRefine</class>
  </compound>
  <compound kind="file">
    <name>OuterfaceFloatLinearTimeInterpolateOp.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceFloatLinearTimeInterpolateOp_8C</filename>
    <includes id="OuterfaceFloatLinearTimeInterpolateOp_8h" name="OuterfaceFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceFloatLinearTimeInterpolateOp.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>OuterfaceFloatLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>80da9a7f87d29453a5f113c25a94ec65</anchor>
      <arglist>(lintimeintoutfacefloat1d, LINTIMEINTOUTFACEFLOAT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OuterfaceFloatLinearTimeInterpolateOp.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceFloatLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OuterfaceFloatLinearTimeInterpolateOp</class>
  </compound>
  <compound kind="file">
    <name>OuterfaceGeometry.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceGeometry_8C</filename>
    <includes id="OuterfaceGeometry_8h" name="OuterfaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceGeometry.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <includes id="FaceOverlap_8h" name="FaceOverlap.h" local="yes" imported="no">SAMRAI/pdat/FaceOverlap.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="OuterfaceGeometry_8I" name="OuterfaceGeometry.I" local="yes" imported="no">SAMRAI/pdat/OuterfaceGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceGeometry.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceGeometry_8h</filename>
    <includes id="FaceOverlap_8h" name="FaceOverlap.h" local="yes" imported="no">SAMRAI/pdat/FaceOverlap.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OuterfaceGeometry</class>
  </compound>
  <compound kind="file">
    <name>OuterfaceGeometry.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceIntegerConstantRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceIntegerConstantRefine_8C</filename>
    <includes id="OuterfaceIntegerConstantRefine_8h" name="OuterfaceIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceIntegerConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>OuterfaceIntegerConstantRefine_8C.html</anchorfile>
      <anchor>611bbc0dd60f8803f642a15cdfc05dfd</anchor>
      <arglist>(conrefoutfaceintg1d, CONREFOUTFACEINTG1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OuterfaceIntegerConstantRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceIntegerConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OuterfaceIntegerConstantRefine</class>
  </compound>
  <compound kind="file">
    <name>OuterfaceVariable.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceVariable_8C</filename>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <includes id="OuterfaceDataFactory_8h" name="OuterfaceDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceVariable.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuterfaceVariable_8h</filename>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OuterfaceVariable</class>
  </compound>
  <compound kind="file">
    <name>OuternodeData.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuternodeData_8C</filename>
    <includes id="OuternodeData_8h" name="OuternodeData.h" local="yes" imported="no">SAMRAI/pdat/OuternodeData.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="NodeOverlap_8h" name="NodeOverlap.h" local="yes" imported="no">SAMRAI/pdat/NodeOverlap.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="OuternodeData_8I" name="OuternodeData.I" local="yes" imported="no">SAMRAI/pdat/OuternodeData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeData.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuternodeData_8h</filename>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeIndex_8h" name="NodeIndex.h" local="yes" imported="no">SAMRAI/pdat/NodeIndex.h</includes>
    <includes id="NodeOverlap_8h" name="NodeOverlap.h" local="yes" imported="no">SAMRAI/pdat/NodeOverlap.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OuternodeData</class>
  </compound>
  <compound kind="file">
    <name>OuternodeData.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuternodeData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeDataFactory.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuternodeDataFactory_8C</filename>
    <includes id="OuternodeDataFactory_8h" name="OuternodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OuternodeDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="NodeDataFactory_8h" name="NodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/NodeDataFactory.h</includes>
    <includes id="OuternodeData_8h" name="OuternodeData.h" local="yes" imported="no">SAMRAI/pdat/OuternodeData.h</includes>
    <includes id="OuternodeGeometry_8h" name="OuternodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/OuternodeGeometry.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="OuternodeDataFactory_8I" name="OuternodeDataFactory.I" local="yes" imported="no">SAMRAI/pdat/OuternodeDataFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeDataFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuternodeDataFactory_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OuternodeDataFactory</class>
  </compound>
  <compound kind="file">
    <name>OuternodeDataFactory.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuternodeDataFactory_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeDoubleConstantCoarsen.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuternodeDoubleConstantCoarsen_8C</filename>
    <includes id="OuternodeDoubleConstantCoarsen_8h" name="OuternodeDoubleConstantCoarsen.h" local="yes" imported="no">SAMRAI/pdat/OuternodeDoubleConstantCoarsen.h</includes>
    <includes id="OuternodeData_8h" name="OuternodeData.h" local="yes" imported="no">SAMRAI/pdat/OuternodeData.h</includes>
    <includes id="OuternodeVariable_8h" name="OuternodeVariable.h" local="yes" imported="no">SAMRAI/pdat/OuternodeVariable.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>OuternodeDoubleConstantCoarsen_8C.html</anchorfile>
      <anchor>1a71bc5f4744296d9ba3d5b8ce5e84d9</anchor>
      <arglist>(conavgouternodedoub1d, CONAVGOUTERNODEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OuternodeDoubleConstantCoarsen.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuternodeDoubleConstantCoarsen_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OuternodeDoubleConstantCoarsen</class>
  </compound>
  <compound kind="file">
    <name>OuternodeGeometry.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuternodeGeometry_8C</filename>
    <includes id="OuternodeGeometry_8h" name="OuternodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/OuternodeGeometry.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="NodeOverlap_8h" name="NodeOverlap.h" local="yes" imported="no">SAMRAI/pdat/NodeOverlap.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="OuternodeGeometry_8I" name="OuternodeGeometry.I" local="yes" imported="no">SAMRAI/pdat/OuternodeGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeGeometry.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuternodeGeometry_8h</filename>
    <includes id="NodeOverlap_8h" name="NodeOverlap.h" local="yes" imported="no">SAMRAI/pdat/NodeOverlap.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OuternodeGeometry</class>
  </compound>
  <compound kind="file">
    <name>OuternodeGeometry.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuternodeGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeVariable.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuternodeVariable_8C</filename>
    <includes id="OuternodeVariable_8h" name="OuternodeVariable.h" local="yes" imported="no">SAMRAI/pdat/OuternodeVariable.h</includes>
    <includes id="OuternodeDataFactory_8h" name="OuternodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OuternodeDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeVariable.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OuternodeVariable_8h</filename>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OuternodeVariable</class>
  </compound>
  <compound kind="file">
    <name>OutersideComplexLinearTimeInterpolateOp.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OutersideComplexLinearTimeInterpolateOp_8C</filename>
    <includes id="OutersideComplexLinearTimeInterpolateOp_8h" name="OutersideComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideComplexLinearTimeInterpolateOp.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OutersideData_8h" name="OutersideData.h" local="yes" imported="no">SAMRAI/pdat/OutersideData.h</includes>
    <includes id="OutersideVariable_8h" name="OutersideVariable.h" local="yes" imported="no">SAMRAI/pdat/OutersideVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>OutersideComplexLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>ccdc142613e5a630240c3101978ab98c</anchor>
      <arglist>(lintimeintoutsidecmplx1d, LINTIMEINTOUTSIDECMPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OutersideComplexLinearTimeInterpolateOp.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OutersideComplexLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OutersideComplexLinearTimeInterpolateOp</class>
  </compound>
  <compound kind="file">
    <name>OutersideData.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OutersideData_8C</filename>
    <includes id="OutersideData_8h" name="OutersideData.h" local="yes" imported="no">SAMRAI/pdat/OutersideData.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <includes id="SideOverlap_8h" name="SideOverlap.h" local="yes" imported="no">SAMRAI/pdat/SideOverlap.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="OutersideData_8I" name="OutersideData.I" local="yes" imported="no">SAMRAI/pdat/OutersideData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OutersideData.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OutersideData_8h</filename>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideIndex_8h" name="SideIndex.h" local="yes" imported="no">SAMRAI/pdat/SideIndex.h</includes>
    <includes id="SideIterator_8h" name="SideIterator.h" local="yes" imported="no">SAMRAI/pdat/SideIterator.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OutersideData</class>
  </compound>
  <compound kind="file">
    <name>OutersideData.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OutersideData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OutersideDataFactory.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OutersideDataFactory_8C</filename>
    <includes id="OutersideDataFactory_8h" name="OutersideDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OutersideDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="OutersideData_8h" name="OutersideData.h" local="yes" imported="no">SAMRAI/pdat/OutersideData.h</includes>
    <includes id="OutersideGeometry_8h" name="OutersideGeometry.h" local="yes" imported="no">SAMRAI/pdat/OutersideGeometry.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="SideDataFactory_8h" name="SideDataFactory.h" local="yes" imported="no">SAMRAI/pdat/SideDataFactory.h</includes>
    <includes id="OutersideDataFactory_8I" name="OutersideDataFactory.I" local="yes" imported="no">SAMRAI/pdat/OutersideDataFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OutersideDataFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OutersideDataFactory_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OutersideDataFactory</class>
  </compound>
  <compound kind="file">
    <name>OutersideDataFactory.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OutersideDataFactory_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OutersideDoubleLinearTimeInterpolateOp.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OutersideDoubleLinearTimeInterpolateOp_8C</filename>
    <includes id="OutersideDoubleLinearTimeInterpolateOp_8h" name="OutersideDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OutersideData_8h" name="OutersideData.h" local="yes" imported="no">SAMRAI/pdat/OutersideData.h</includes>
    <includes id="OutersideVariable_8h" name="OutersideVariable.h" local="yes" imported="no">SAMRAI/pdat/OutersideVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>OutersideDoubleLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>183da04ace2a2b9f977bf692519790d8</anchor>
      <arglist>(lintimeintoutsidedoub1d, LINTIMEINTOUTSIDEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OutersideDoubleLinearTimeInterpolateOp.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OutersideDoubleLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OutersideDoubleLinearTimeInterpolateOp</class>
  </compound>
  <compound kind="file">
    <name>OutersideFloatLinearTimeInterpolateOp.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OutersideFloatLinearTimeInterpolateOp_8C</filename>
    <includes id="OutersideFloatLinearTimeInterpolateOp_8h" name="OutersideFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideFloatLinearTimeInterpolateOp.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OutersideData_8h" name="OutersideData.h" local="yes" imported="no">SAMRAI/pdat/OutersideData.h</includes>
    <includes id="OutersideVariable_8h" name="OutersideVariable.h" local="yes" imported="no">SAMRAI/pdat/OutersideVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>OutersideFloatLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>2088ed54c00a5db6bd017f6e6d5e89f3</anchor>
      <arglist>(lintimeintoutsidefloat1d, LINTIMEINTOUTSIDEFLOAT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OutersideFloatLinearTimeInterpolateOp.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OutersideFloatLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OutersideFloatLinearTimeInterpolateOp</class>
  </compound>
  <compound kind="file">
    <name>OutersideGeometry.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OutersideGeometry_8C</filename>
    <includes id="OutersideGeometry_8h" name="OutersideGeometry.h" local="yes" imported="no">SAMRAI/pdat/OutersideGeometry.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <includes id="SideOverlap_8h" name="SideOverlap.h" local="yes" imported="no">SAMRAI/pdat/SideOverlap.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="OutersideGeometry_8I" name="OutersideGeometry.I" local="yes" imported="no">SAMRAI/pdat/OutersideGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OutersideGeometry.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OutersideGeometry_8h</filename>
    <includes id="SideOverlap_8h" name="SideOverlap.h" local="yes" imported="no">SAMRAI/pdat/SideOverlap.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OutersideGeometry</class>
  </compound>
  <compound kind="file">
    <name>OutersideGeometry.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OutersideGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OutersideVariable.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OutersideVariable_8C</filename>
    <includes id="OutersideVariable_8h" name="OutersideVariable.h" local="yes" imported="no">SAMRAI/pdat/OutersideVariable.h</includes>
    <includes id="OutersideDataFactory_8h" name="OutersideDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OutersideDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OutersideVariable.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>OutersideVariable_8h</filename>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::OutersideVariable</class>
  </compound>
  <compound kind="file">
    <name>SecondLayerNodeNoCornersVariableFillPattern.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SecondLayerNodeNoCornersVariableFillPattern_8C</filename>
    <includes id="SecondLayerNodeNoCornersVariableFillPattern_8h" name="SecondLayerNodeNoCornersVariableFillPattern.h" local="yes" imported="no">SAMRAI/pdat/SecondLayerNodeNoCornersVariableFillPattern.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SecondLayerNodeNoCornersVariableFillPattern.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SecondLayerNodeNoCornersVariableFillPattern_8h</filename>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="VariableFillPattern_8h" name="VariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/VariableFillPattern.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::SecondLayerNodeNoCornersVariableFillPattern</class>
  </compound>
  <compound kind="file">
    <name>SecondLayerNodeVariableFillPattern.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SecondLayerNodeVariableFillPattern_8C</filename>
    <includes id="SecondLayerNodeVariableFillPattern_8h" name="SecondLayerNodeVariableFillPattern.h" local="yes" imported="no">SAMRAI/pdat/SecondLayerNodeVariableFillPattern.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SecondLayerNodeVariableFillPattern.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SecondLayerNodeVariableFillPattern_8h</filename>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="VariableFillPattern_8h" name="VariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/VariableFillPattern.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::SecondLayerNodeVariableFillPattern</class>
  </compound>
  <compound kind="file">
    <name>SideComplexConstantRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideComplexConstantRefine_8C</filename>
    <includes id="SideComplexConstantRefine_8h" name="SideComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideComplexConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>SideComplexConstantRefine_8C.html</anchorfile>
      <anchor>918fb8f7c8b33f35b3e043712522d33d</anchor>
      <arglist>(conrefsidecplx1d, CONREFSIDECPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SideComplexConstantRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideComplexConstantRefine_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::SideComplexConstantRefine</class>
  </compound>
  <compound kind="file">
    <name>SideComplexLinearTimeInterpolateOp.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideComplexLinearTimeInterpolateOp_8C</filename>
    <includes id="SideComplexLinearTimeInterpolateOp_8h" name="SideComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideComplexLinearTimeInterpolateOp.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>SideComplexLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>e6f5bb4816d4e6f1b2f248bd2d17e8aa</anchor>
      <arglist>(lintimeintsidecmplx1d, LINTIMEINTSIDECMPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SideComplexLinearTimeInterpolateOp.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideComplexLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::SideComplexLinearTimeInterpolateOp</class>
  </compound>
  <compound kind="file">
    <name>SideData.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideData_8C</filename>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <includes id="SideOverlap_8h" name="SideOverlap.h" local="yes" imported="no">SAMRAI/pdat/SideOverlap.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="SideData_8I" name="SideData.I" local="yes" imported="no">SAMRAI/pdat/SideData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideData.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideData_8h</filename>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="SideIndex_8h" name="SideIndex.h" local="yes" imported="no">SAMRAI/pdat/SideIndex.h</includes>
    <includes id="SideIterator_8h" name="SideIterator.h" local="yes" imported="no">SAMRAI/pdat/SideIterator.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::SideData</class>
  </compound>
  <compound kind="file">
    <name>SideData.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideDataFactory.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideDataFactory_8C</filename>
    <includes id="SideDataFactory_8h" name="SideDataFactory.h" local="yes" imported="no">SAMRAI/pdat/SideDataFactory.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <includes id="OutersideDataFactory_8h" name="OutersideDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OutersideDataFactory.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="SideDataFactory_8I" name="SideDataFactory.I" local="yes" imported="no">SAMRAI/pdat/SideDataFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideDataFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideDataFactory_8h</filename>
    <includes id="MultiblockSideDataTranslator_8h" name="MultiblockSideDataTranslator.h" local="yes" imported="no">SAMRAI/pdat/MultiblockSideDataTranslator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::SideDataFactory</class>
  </compound>
  <compound kind="file">
    <name>SideDataFactory.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideDataFactory_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideDoubleConstantRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideDoubleConstantRefine_8C</filename>
    <includes id="SideDoubleConstantRefine_8h" name="SideDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideDoubleConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>SideDoubleConstantRefine_8C.html</anchorfile>
      <anchor>83d3926237fc71739c69f632a230b7e2</anchor>
      <arglist>(conrefsidedoub1d, CONREFSIDEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SideDoubleConstantRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideDoubleConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::SideDoubleConstantRefine</class>
  </compound>
  <compound kind="file">
    <name>SideDoubleLinearTimeInterpolateOp.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideDoubleLinearTimeInterpolateOp_8C</filename>
    <includes id="SideDoubleLinearTimeInterpolateOp_8h" name="SideDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>SideDoubleLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>c49951b00a0b5049de9e43f4faae0cd0</anchor>
      <arglist>(lintimeintsidedoub1d, LINTIMEINTSIDEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SideDoubleLinearTimeInterpolateOp.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideDoubleLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::SideDoubleLinearTimeInterpolateOp</class>
  </compound>
  <compound kind="file">
    <name>SideFloatConstantRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideFloatConstantRefine_8C</filename>
    <includes id="SideFloatConstantRefine_8h" name="SideFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideFloatConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>SideFloatConstantRefine_8C.html</anchorfile>
      <anchor>00a52169e5a1f0fdd8ced313007a73bd</anchor>
      <arglist>(conrefsideflot1d, CONREFSIDEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SideFloatConstantRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideFloatConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::SideFloatConstantRefine</class>
  </compound>
  <compound kind="file">
    <name>SideFloatLinearTimeInterpolateOp.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideFloatLinearTimeInterpolateOp_8C</filename>
    <includes id="SideFloatLinearTimeInterpolateOp_8h" name="SideFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideFloatLinearTimeInterpolateOp.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>SideFloatLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>027a58290425528805a29d93a374ab0f</anchor>
      <arglist>(lintimeintsidefloat1d, LINTIMEINTSIDEFLOAT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SideFloatLinearTimeInterpolateOp.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideFloatLinearTimeInterpolateOp_8h</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::SideFloatLinearTimeInterpolateOp</class>
  </compound>
  <compound kind="file">
    <name>SideGeometry.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideGeometry_8C</filename>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <includes id="SideOverlap_8h" name="SideOverlap.h" local="yes" imported="no">SAMRAI/pdat/SideOverlap.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="SideGeometry_8I" name="SideGeometry.I" local="yes" imported="no">SAMRAI/pdat/SideGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideGeometry.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideGeometry_8h</filename>
    <includes id="SideIndex_8h" name="SideIndex.h" local="yes" imported="no">SAMRAI/pdat/SideIndex.h</includes>
    <includes id="SideOverlap_8h" name="SideOverlap.h" local="yes" imported="no">SAMRAI/pdat/SideOverlap.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::SideGeometry</class>
  </compound>
  <compound kind="file">
    <name>SideGeometry.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideIndex.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideIndex_8C</filename>
    <includes id="SideIndex_8h" name="SideIndex.h" local="yes" imported="no">SAMRAI/pdat/SideIndex.h</includes>
    <includes id="SideIndex_8I" name="SideIndex.I" local="yes" imported="no">SAMRAI/pdat/SideIndex.I</includes>
  </compound>
  <compound kind="file">
    <name>SideIndex.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideIndex_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::SideIndex</class>
  </compound>
  <compound kind="file">
    <name>SideIndex.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideIndex_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideIntegerConstantRefine.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideIntegerConstantRefine_8C</filename>
    <includes id="SideIntegerConstantRefine_8h" name="SideIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideIntegerConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>SideIntegerConstantRefine_8C.html</anchorfile>
      <anchor>e1cd72c4856460b035c3b7f9f2b14364</anchor>
      <arglist>(conrefsideintg1d, CONREFSIDEINTG1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SideIntegerConstantRefine.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideIntegerConstantRefine_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::SideIntegerConstantRefine</class>
  </compound>
  <compound kind="file">
    <name>SideIterator.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideIterator_8C</filename>
    <includes id="SideIterator_8h" name="SideIterator.h" local="yes" imported="no">SAMRAI/pdat/SideIterator.h</includes>
    <includes id="SideIterator_8I" name="SideIterator.I" local="yes" imported="no">SAMRAI/pdat/SideIterator.I</includes>
  </compound>
  <compound kind="file">
    <name>SideIterator.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideIterator_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <includes id="SideIndex_8h" name="SideIndex.h" local="yes" imported="no">SAMRAI/pdat/SideIndex.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::SideIterator</class>
  </compound>
  <compound kind="file">
    <name>SideIterator.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideIterator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideOverlap.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideOverlap_8C</filename>
    <includes id="SideOverlap_8h" name="SideOverlap.h" local="yes" imported="no">SAMRAI/pdat/SideOverlap.h</includes>
    <includes id="SideOverlap_8I" name="SideOverlap.I" local="yes" imported="no">SAMRAI/pdat/SideOverlap.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideOverlap.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideOverlap_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::SideOverlap</class>
  </compound>
  <compound kind="file">
    <name>SideOverlap.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideOverlap_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideVariable.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideVariable_8C</filename>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="SideDataFactory_8h" name="SideDataFactory.h" local="yes" imported="no">SAMRAI/pdat/SideDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideVariable.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SideVariable_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::SideVariable</class>
  </compound>
  <compound kind="file">
    <name>SparseData.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SparseData_8C</filename>
    <includes id="SparseData_8h" name="SparseData.h" local="yes" imported="no">SAMRAI/pdat/SparseData.h</includes>
  </compound>
  <compound kind="file">
    <name>SparseData.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SparseData_8h</filename>
  </compound>
  <compound kind="file">
    <name>SparseData.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SparseData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SparseDataFactory.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SparseDataFactory_8C</filename>
    <includes id="SparseDataFactory_8h" name="SparseDataFactory.h" local="yes" imported="no">SAMRAI/pdat/SparseDataFactory.h</includes>
  </compound>
  <compound kind="file">
    <name>SparseDataFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SparseDataFactory_8h</filename>
  </compound>
  <compound kind="file">
    <name>SparseDataVariable.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SparseDataVariable_8C</filename>
    <includes id="SparseDataVariable_8h" name="SparseDataVariable.h" local="yes" imported="no">SAMRAI/pdat/SparseDataVariable.h</includes>
  </compound>
  <compound kind="file">
    <name>SparseDataVariable.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SparseDataVariable_8h</filename>
  </compound>
  <compound kind="file">
    <name>SumOperation.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SumOperation_8C</filename>
    <includes id="SumOperation_8h" name="SumOperation.h" local="yes" imported="no">SAMRAI/pdat/SumOperation.h</includes>
    <includes id="SumOperation_8I" name="SumOperation.I" local="yes" imported="no">SAMRAI/pdat/SumOperation.I</includes>
  </compound>
  <compound kind="file">
    <name>SumOperation.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SumOperation_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <class kind="class">SAMRAI::pdat::SumOperation</class>
  </compound>
  <compound kind="file">
    <name>SumOperation.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/</path>
    <filename>SumOperation_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianRobinBcHelper.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>CartesianRobinBcHelper_8C</filename>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="PatchCellDataOpsReal_8h" name="PatchCellDataOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchCellDataOpsReal.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CartesianRobinBcHelper_8h" name="CartesianRobinBcHelper.h" local="yes" imported="no">SAMRAI/solv/CartesianRobinBcHelper.h</includes>
    <includes id="CartesianRobinBcHelper_8I" name="CartesianRobinBcHelper.I" local="yes" imported="no">SAMRAI/solv/CartesianRobinBcHelper.I</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianRobinBcHelper_8C.html</anchorfile>
      <anchor>e575a63c03907577e13010d12e85bb50</anchor>
      <arglist>(settype1cells2d, SETTYPE1CELLS2D)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianRobinBcHelper.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>CartesianRobinBcHelper_8h</filename>
    <includes id="RobinBcCoefStrategy_8h" name="RobinBcCoefStrategy.h" local="yes" imported="no">SAMRAI/solv/RobinBcCoefStrategy.h</includes>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::CartesianRobinBcHelper</class>
  </compound>
  <compound kind="file">
    <name>CartesianRobinBcHelper.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>CartesianRobinBcHelper_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>CellPoissonFACOps.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>CellPoissonFACOps_8C</filename>
    <includes id="CellPoissonFACOps_8h" name="CellPoissonFACOps.h" local="yes" imported="no">SAMRAI/solv/CellPoissonFACOps.h</includes>
    <includes id="BoundaryBoxUtils_8h" name="BoundaryBoxUtils.h" local="yes" imported="no">SAMRAI/hier/BoundaryBoxUtils.h</includes>
    <includes id="CartesianGridGeometry_8h" name="CartesianGridGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianGridGeometry.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="CellDoubleConstantRefine_8h" name="CellDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellDoubleConstantRefine.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="OutersideData_8h" name="OutersideData.h" local="yes" imported="no">SAMRAI/pdat/OutersideData.h</includes>
    <includes id="OutersideVariable_8h" name="OutersideVariable.h" local="yes" imported="no">SAMRAI/pdat/OutersideVariable.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="FACPreconditioner_8h" name="FACPreconditioner.h" local="yes" imported="no">SAMRAI/solv/FACPreconditioner.h</includes>
    <includes id="CellPoissonHypreSolver_8h" name="CellPoissonHypreSolver.h" local="yes" imported="no">SAMRAI/solv/CellPoissonHypreSolver.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CoarsenAlgorithm_8h" name="CoarsenAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/CoarsenAlgorithm.h</includes>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="CoarsenSchedule_8h" name="CoarsenSchedule.h" local="yes" imported="no">SAMRAI/xfer/CoarsenSchedule.h</includes>
    <includes id="RefineAlgorithm_8h" name="RefineAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/RefineAlgorithm.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="RefineSchedule_8h" name="RefineSchedule.h" local="yes" imported="no">SAMRAI/xfer/RefineSchedule.h</includes>
    <includes id="PatchLevelFullFillPattern_8h" name="PatchLevelFullFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelFullFillPattern.h</includes>
    <includes id="CellPoissonFACOps_8I" name="CellPoissonFACOps.I" local="yes" imported="no">SAMRAI/solv/CellPoissonFACOps.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>namespaceSAMRAI_1_1solv.html</anchorfile>
      <anchor>d718333b3e0d18adddaa14cd68d493ba</anchor>
      <arglist>(compfluxvardc2d, COMPFLUXVARDC2D)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CellPoissonFACOps.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>CellPoissonFACOps_8h</filename>
    <includes id="CartesianRobinBcHelper_8h" name="CartesianRobinBcHelper.h" local="yes" imported="no">SAMRAI/solv/CartesianRobinBcHelper.h</includes>
    <includes id="FACPreconditioner_8h" name="FACPreconditioner.h" local="yes" imported="no">SAMRAI/solv/FACPreconditioner.h</includes>
    <includes id="FACOperatorStrategy_8h" name="FACOperatorStrategy.h" local="yes" imported="no">SAMRAI/solv/FACOperatorStrategy.h</includes>
    <includes id="RobinBcCoefStrategy_8h" name="RobinBcCoefStrategy.h" local="yes" imported="no">SAMRAI/solv/RobinBcCoefStrategy.h</includes>
    <includes id="CellPoissonHypreSolver_8h" name="CellPoissonHypreSolver.h" local="yes" imported="no">SAMRAI/solv/CellPoissonHypreSolver.h</includes>
    <includes id="SAMRAIVectorReal_8h" name="SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/SAMRAIVectorReal.h</includes>
    <includes id="PoissonSpecifications_8h" name="PoissonSpecifications.h" local="yes" imported="no">SAMRAI/solv/PoissonSpecifications.h</includes>
    <includes id="HierarchyCellDataOpsReal_8h" name="HierarchyCellDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyCellDataOpsReal.h</includes>
    <includes id="HierarchySideDataOpsReal_8h" name="HierarchySideDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchySideDataOpsReal.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="CellDoubleConstantRefine_8h" name="CellDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellDoubleConstantRefine.h</includes>
    <includes id="OutersideData_8h" name="OutersideData.h" local="yes" imported="no">SAMRAI/pdat/OutersideData.h</includes>
    <includes id="OutersideVariable_8h" name="OutersideVariable.h" local="yes" imported="no">SAMRAI/pdat/OutersideVariable.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="CoarsenSchedule_8h" name="CoarsenSchedule.h" local="yes" imported="no">SAMRAI/xfer/CoarsenSchedule.h</includes>
    <includes id="RefineSchedule_8h" name="RefineSchedule.h" local="yes" imported="no">SAMRAI/xfer/RefineSchedule.h</includes>
    <includes id="CoarsenAlgorithm_8h" name="CoarsenAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/CoarsenAlgorithm.h</includes>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="RefineAlgorithm_8h" name="RefineAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/RefineAlgorithm.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="CoarseFineBoundary_8h" name="CoarseFineBoundary.h" local="yes" imported="no">SAMRAI/hier/CoarseFineBoundary.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="VariableContext_8h" name="VariableContext.h" local="yes" imported="no">SAMRAI/hier/VariableContext.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::CellPoissonFACOps</class>
  </compound>
  <compound kind="file">
    <name>CellPoissonFACOps.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>CellPoissonFACOps_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>CellPoissonFACSolver.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>CellPoissonFACSolver_8C</filename>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="CellPoissonFACSolver_8h" name="CellPoissonFACSolver.h" local="yes" imported="no">SAMRAI/solv/CellPoissonFACSolver.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="CellPoissonFACSolver_8I" name="CellPoissonFACSolver.I" local="yes" imported="no">SAMRAI/solv/CellPoissonFACSolver.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>CellPoissonFACSolver.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>CellPoissonFACSolver_8h</filename>
    <includes id="FACPreconditioner_8h" name="FACPreconditioner.h" local="yes" imported="no">SAMRAI/solv/FACPreconditioner.h</includes>
    <includes id="CellPoissonFACOps_8h" name="CellPoissonFACOps.h" local="yes" imported="no">SAMRAI/solv/CellPoissonFACOps.h</includes>
    <includes id="PoissonSpecifications_8h" name="PoissonSpecifications.h" local="yes" imported="no">SAMRAI/solv/PoissonSpecifications.h</includes>
    <includes id="SimpleCellRobinBcCoefs_8h" name="SimpleCellRobinBcCoefs.h" local="yes" imported="no">SAMRAI/solv/SimpleCellRobinBcCoefs.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::CellPoissonFACSolver</class>
  </compound>
  <compound kind="file">
    <name>CellPoissonFACSolver.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>CellPoissonFACSolver_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>CellPoissonHypreSolver.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>CellPoissonHypreSolver_8C</filename>
    <includes id="CellPoissonHypreSolver_8h" name="CellPoissonHypreSolver.h" local="yes" imported="no">SAMRAI/solv/CellPoissonHypreSolver.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="CartesianGridGeometry_8h" name="CartesianGridGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianGridGeometry.h</includes>
    <includes id="ArrayDataBasicOps_8h" name="ArrayDataBasicOps.h" local="yes" imported="no">SAMRAI/math/ArrayDataBasicOps.h</includes>
    <includes id="PatchSideDataBasicOps_8h" name="PatchSideDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchSideDataBasicOps.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="CellIndex_8h" name="CellIndex.h" local="yes" imported="no">SAMRAI/pdat/CellIndex.h</includes>
    <includes id="CellIterator_8h" name="CellIterator.h" local="yes" imported="no">SAMRAI/pdat/CellIterator.h</includes>
    <includes id="FaceIndex_8h" name="FaceIndex.h" local="yes" imported="no">SAMRAI/pdat/FaceIndex.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideIndex_8h" name="SideIndex.h" local="yes" imported="no">SAMRAI/pdat/SideIndex.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OutersideData_8h" name="OutersideData.h" local="yes" imported="no">SAMRAI/pdat/OutersideData.h</includes>
    <includes id="BoundaryBoxUtils_8h" name="BoundaryBoxUtils.h" local="yes" imported="no">SAMRAI/hier/BoundaryBoxUtils.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CellPoissonHypreSolver_8I" name="CellPoissonHypreSolver.I" local="yes" imported="no">SAMRAI/solv/CellPoissonHypreSolver.I</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CellPoissonHypreSolver_8C.html</anchorfile>
      <anchor>2675d9b3a7fd29ca60a2ee24e03c3ef6</anchor>
      <arglist>(compdiagvariablec2d, COMPDIAGVARIABLEC2D)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CellPoissonHypreSolver.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>CellPoissonHypreSolver_8h</filename>
    <includes id="GhostCellRobinBcCoefs_8h" name="GhostCellRobinBcCoefs.h" local="yes" imported="no">SAMRAI/solv/GhostCellRobinBcCoefs.h</includes>
    <includes id="RobinBcCoefStrategy_8h" name="RobinBcCoefStrategy.h" local="yes" imported="no">SAMRAI/solv/RobinBcCoefStrategy.h</includes>
    <includes id="PoissonSpecifications_8h" name="PoissonSpecifications.h" local="yes" imported="no">SAMRAI/solv/PoissonSpecifications.h</includes>
    <includes id="SimpleCellRobinBcCoefs_8h" name="SimpleCellRobinBcCoefs.h" local="yes" imported="no">SAMRAI/solv/SimpleCellRobinBcCoefs.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="OutersideVariable_8h" name="OutersideVariable.h" local="yes" imported="no">SAMRAI/pdat/OutersideVariable.h</includes>
    <includes id="CoarseFineBoundary_8h" name="CoarseFineBoundary.h" local="yes" imported="no">SAMRAI/hier/CoarseFineBoundary.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="VariableContext_8h" name="VariableContext.h" local="yes" imported="no">SAMRAI/hier/VariableContext.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::CellPoissonHypreSolver</class>
    <member kind="define">
      <type>#define</type>
      <name>included_HYPRE_struct_ls</name>
      <anchorfile>CellPoissonHypreSolver_8h.html</anchorfile>
      <anchor>ff9ef1f8a913e6022054c5021cfeb489</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CellPoissonHypreSolver.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>CellPoissonHypreSolver_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>CVODEAbstractFunctions.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>CVODEAbstractFunctions_8C</filename>
    <includes id="CVODEAbstractFunctions_8h" name="CVODEAbstractFunctions.h" local="yes" imported="no">SAMRAI/solv/CVODEAbstractFunctions.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>CVODEAbstractFunctions.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>CVODEAbstractFunctions_8h</filename>
    <includes id="SundialsAbstractVector_8h" name="SundialsAbstractVector.h" local="yes" imported="no">SAMRAI/solv/SundialsAbstractVector.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::CVODEAbstractFunctions</class>
  </compound>
  <compound kind="file">
    <name>CVODESolver.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>CVODESolver_8C</filename>
    <includes id="CVODESolver_8h" name="CVODESolver.h" local="yes" imported="no">SAMRAI/solv/CVODESolver.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CVODESolver_8I" name="CVODESolver.I" local="yes" imported="no">SAMRAI/solv/CVODESolver.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SABSVEC_CAST</name>
      <anchorfile>CVODESolver_8C.html</anchorfile>
      <anchor>cfe26f152d8bede2ee4a6bbd8fc3eb3d</anchor>
      <arglist>(v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CVODESolver.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>CVODESolver_8h</filename>
    <includes id="CVODEAbstractFunctions_8h" name="CVODEAbstractFunctions.h" local="yes" imported="no">SAMRAI/solv/CVODEAbstractFunctions.h</includes>
    <includes id="SundialsAbstractVector_8h" name="SundialsAbstractVector.h" local="yes" imported="no">SAMRAI/solv/SundialsAbstractVector.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::CVODESolver</class>
    <member kind="define">
      <type>#define</type>
      <name>CVODE_SAMRAI_ERROR</name>
      <anchorfile>CVODESolver_8h.html</anchorfile>
      <anchor>cf477551aef1e80d4328d7fe7bf651bc</anchor>
      <arglist>(ierr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CVODESolver.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>CVODESolver_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>manual_FAC.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/dox/</path>
    <filename>manual__FAC_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>manual_nonlinear.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/dox/</path>
    <filename>manual__nonlinear_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>manual_packages.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/dox/</path>
    <filename>manual__packages_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>manual_packages_petsc.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/dox/</path>
    <filename>manual__packages__petsc_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>manual_packages_sundials.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/dox/</path>
    <filename>manual__packages__sundials_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>manual_packages_sundials_cvode.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/dox/</path>
    <filename>manual__packages__sundials__cvode_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>manual_packages_sundials_kinsol.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/dox/</path>
    <filename>manual__packages__sundials__kinsol_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>manual_packages_sundials_vector.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/dox/</path>
    <filename>manual__packages__sundials__vector_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>manual_poisson.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/dox/</path>
    <filename>manual__poisson_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>manual_vectors.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/dox/</path>
    <filename>manual__vectors_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>FACOperatorStrategy.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>FACOperatorStrategy_8C</filename>
    <includes id="FACOperatorStrategy_8h" name="FACOperatorStrategy.h" local="yes" imported="no">SAMRAI/solv/FACOperatorStrategy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>FACOperatorStrategy.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>FACOperatorStrategy_8h</filename>
    <includes id="SAMRAIVectorReal_8h" name="SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/SAMRAIVectorReal.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::FACOperatorStrategy</class>
  </compound>
  <compound kind="file">
    <name>FACPreconditioner.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>FACPreconditioner_8C</filename>
    <includes id="HierarchyDataOpsManager_8h" name="HierarchyDataOpsManager.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsManager.h</includes>
    <includes id="FACPreconditioner_8h" name="FACPreconditioner.h" local="yes" imported="no">SAMRAI/solv/FACPreconditioner.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="FACPreconditioner_8I" name="FACPreconditioner.I" local="yes" imported="no">SAMRAI/solv/FACPreconditioner.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>FACPreconditioner.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>FACPreconditioner_8h</filename>
    <includes id="HierarchyDataOpsReal_8h" name="HierarchyDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsReal.h</includes>
    <includes id="FACOperatorStrategy_8h" name="FACOperatorStrategy.h" local="yes" imported="no">SAMRAI/solv/FACOperatorStrategy.h</includes>
    <includes id="SAMRAIVectorReal_8h" name="SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/SAMRAIVectorReal.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::FACPreconditioner</class>
  </compound>
  <compound kind="file">
    <name>FACPreconditioner.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>FACPreconditioner_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>GhostCellRobinBcCoefs.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>GhostCellRobinBcCoefs_8C</filename>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="ArrayDataBasicOps_8h" name="ArrayDataBasicOps.h" local="yes" imported="no">SAMRAI/math/ArrayDataBasicOps.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="GhostCellRobinBcCoefs_8h" name="GhostCellRobinBcCoefs.h" local="yes" imported="no">SAMRAI/solv/GhostCellRobinBcCoefs.h</includes>
    <includes id="GhostCellRobinBcCoefs_8I" name="GhostCellRobinBcCoefs.I" local="yes" imported="no">SAMRAI/solv/GhostCellRobinBcCoefs.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>GhostCellRobinBcCoefs.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>GhostCellRobinBcCoefs_8h</filename>
    <includes id="RobinBcCoefStrategy_8h" name="RobinBcCoefStrategy.h" local="yes" imported="no">SAMRAI/solv/RobinBcCoefStrategy.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::GhostCellRobinBcCoefs</class>
  </compound>
  <compound kind="file">
    <name>GhostCellRobinBcCoefs.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>GhostCellRobinBcCoefs_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>KINSOL_SAMRAIContext.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>KINSOL__SAMRAIContext_8C</filename>
    <includes id="KINSOL__SAMRAIContext_8h" name="KINSOL_SAMRAIContext.h" local="yes" imported="no">SAMRAI/solv/KINSOL_SAMRAIContext.h</includes>
    <includes id="Sundials__SAMRAIVector_8h" name="Sundials_SAMRAIVector.h" local="yes" imported="no">SAMRAI/solv/Sundials_SAMRAIVector.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="KINSOL__SAMRAIContext_8I" name="KINSOL_SAMRAIContext.I" local="yes" imported="no">SAMRAI/solv/KINSOL_SAMRAIContext.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>KINSOL_SAMRAIContext.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>KINSOL__SAMRAIContext_8h</filename>
    <includes id="NonlinearSolverStrategy_8h" name="NonlinearSolverStrategy.h" local="yes" imported="no">SAMRAI/solv/NonlinearSolverStrategy.h</includes>
    <includes id="KINSOLSolver_8h" name="KINSOLSolver.h" local="yes" imported="no">SAMRAI/solv/KINSOLSolver.h</includes>
    <includes id="KINSOLAbstractFunctions_8h" name="KINSOLAbstractFunctions.h" local="yes" imported="no">SAMRAI/solv/KINSOLAbstractFunctions.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::KINSOL_SAMRAIContext</class>
  </compound>
  <compound kind="file">
    <name>KINSOL_SAMRAIContext.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>KINSOL__SAMRAIContext_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>KINSOLAbstractFunctions.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>KINSOLAbstractFunctions_8C</filename>
    <includes id="KINSOLAbstractFunctions_8h" name="KINSOLAbstractFunctions.h" local="yes" imported="no">SAMRAI/solv/KINSOLAbstractFunctions.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>KINSOLAbstractFunctions.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>KINSOLAbstractFunctions_8h</filename>
    <includes id="SundialsAbstractVector_8h" name="SundialsAbstractVector.h" local="yes" imported="no">SAMRAI/solv/SundialsAbstractVector.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::KINSOLAbstractFunctions</class>
  </compound>
  <compound kind="file">
    <name>KINSOLSolver.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>KINSOLSolver_8C</filename>
    <includes id="KINSOLSolver_8h" name="KINSOLSolver.h" local="yes" imported="no">SAMRAI/solv/KINSOLSolver.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="KINSOLSolver_8I" name="KINSOLSolver.I" local="yes" imported="no">SAMRAI/solv/KINSOLSolver.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SABSVEC_CAST</name>
      <anchorfile>KINSOLSolver_8C.html</anchorfile>
      <anchor>cfe26f152d8bede2ee4a6bbd8fc3eb3d</anchor>
      <arglist>(v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>KINSOLSolver.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>KINSOLSolver_8h</filename>
    <includes id="SundialsAbstractVector_8h" name="SundialsAbstractVector.h" local="yes" imported="no">SAMRAI/solv/SundialsAbstractVector.h</includes>
    <includes id="KINSOLAbstractFunctions_8h" name="KINSOLAbstractFunctions.h" local="yes" imported="no">SAMRAI/solv/KINSOLAbstractFunctions.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::KINSOLSolver</class>
    <member kind="define">
      <type>#define</type>
      <name>KINSOL_SAMRAI_ERROR</name>
      <anchorfile>KINSOLSolver_8h.html</anchorfile>
      <anchor>70fd89b451314f081a83d775991b552d</anchor>
      <arglist>(ierr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>KINSOLSolver.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>KINSOLSolver_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>LocationIndexRobinBcCoefs.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>LocationIndexRobinBcCoefs_8C</filename>
    <includes id="LocationIndexRobinBcCoefs_8h" name="LocationIndexRobinBcCoefs.h" local="yes" imported="no">SAMRAI/solv/LocationIndexRobinBcCoefs.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="LocationIndexRobinBcCoefs_8I" name="LocationIndexRobinBcCoefs.I" local="yes" imported="no">SAMRAI/solv/LocationIndexRobinBcCoefs.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>LocationIndexRobinBcCoefs.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>LocationIndexRobinBcCoefs_8h</filename>
    <includes id="RobinBcCoefStrategy_8h" name="RobinBcCoefStrategy.h" local="yes" imported="no">SAMRAI/solv/RobinBcCoefStrategy.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::LocationIndexRobinBcCoefs</class>
  </compound>
  <compound kind="file">
    <name>LocationIndexRobinBcCoefs.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>LocationIndexRobinBcCoefs_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>NonlinearSolverStrategy.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>NonlinearSolverStrategy_8C</filename>
    <includes id="NonlinearSolverStrategy_8h" name="NonlinearSolverStrategy.h" local="yes" imported="no">SAMRAI/solv/NonlinearSolverStrategy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>NonlinearSolverStrategy.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>NonlinearSolverStrategy_8h</filename>
    <includes id="SAMRAIVectorReal_8h" name="SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/SAMRAIVectorReal.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::NonlinearSolverStrategy</class>
  </compound>
  <compound kind="file">
    <name>nvector.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>nvector_8h</filename>
    <includes id="solv__NVector_8h" name="solv_NVector.h" local="yes" imported="no">SAMRAI/solv/solv_NVector.h</includes>
  </compound>
  <compound kind="file">
    <name>PETSc_SAMRAIVectorReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>PETSc__SAMRAIVectorReal_8C</filename>
    <includes id="PETSc__SAMRAIVectorReal_8h" name="PETSc_SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/PETSc_SAMRAIVectorReal.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="PETSc__SAMRAIVectorReal_8I" name="PETSc_SAMRAIVectorReal.I" local="yes" imported="no">SAMRAI/solv/PETSc_SAMRAIVectorReal.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>PETSc_SAMRAIVectorReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>PETSc__SAMRAIVectorReal_8h</filename>
    <includes id="PETScAbstractVectorReal_8h" name="PETScAbstractVectorReal.h" local="yes" imported="no">SAMRAI/solv/PETScAbstractVectorReal.h</includes>
    <includes id="SAMRAIVectorReal_8h" name="SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/SAMRAIVectorReal.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::PETSc_SAMRAIVectorReal</class>
  </compound>
  <compound kind="file">
    <name>PETSc_SAMRAIVectorReal.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>PETSc__SAMRAIVectorReal_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <member kind="define">
      <type>#define</type>
      <name>C_PSVEC_CAST</name>
      <anchorfile>PETSc__SAMRAIVectorReal_8I.html</anchorfile>
      <anchor>3044ffbaa0beb09f2613266964d1bfe1</anchor>
      <arglist>(x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PETScAbstractVectorReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>PETScAbstractVectorReal_8C</filename>
    <includes id="PETScAbstractVectorReal_8h" name="PETScAbstractVectorReal.h" local="yes" imported="no">SAMRAI/solv/PETScAbstractVectorReal.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <member kind="define">
      <type>#define</type>
      <name>PABSVEC_CAST</name>
      <anchorfile>PETScAbstractVectorReal_8C.html</anchorfile>
      <anchor>11ee864092875e4704b85af06dde72d9</anchor>
      <arglist>(v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PETScAbstractVectorReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>PETScAbstractVectorReal_8h</filename>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::PETScAbstractVectorReal</class>
  </compound>
  <compound kind="file">
    <name>PoissonSpecifications.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>PoissonSpecifications_8C</filename>
    <includes id="PoissonSpecifications_8h" name="PoissonSpecifications.h" local="yes" imported="no">SAMRAI/solv/PoissonSpecifications.h</includes>
    <includes id="PoissonSpecifications_8I" name="PoissonSpecifications.I" local="yes" imported="no">SAMRAI/solv/PoissonSpecifications.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>PoissonSpecifications.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>PoissonSpecifications_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::PoissonSpecifications</class>
  </compound>
  <compound kind="file">
    <name>PoissonSpecifications.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>PoissonSpecifications_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>RobinBcCoefStrategy.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>RobinBcCoefStrategy_8C</filename>
    <includes id="RobinBcCoefStrategy_8h" name="RobinBcCoefStrategy.h" local="yes" imported="no">SAMRAI/solv/RobinBcCoefStrategy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>RobinBcCoefStrategy.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>RobinBcCoefStrategy_8h</filename>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::RobinBcCoefStrategy</class>
  </compound>
  <compound kind="file">
    <name>SAMRAIVectorReal.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>SAMRAIVectorReal_8C</filename>
    <includes id="SAMRAIVectorReal_8h" name="SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/SAMRAIVectorReal.h</includes>
    <includes id="HierarchyCellDataOpsReal_8h" name="HierarchyCellDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyCellDataOpsReal.h</includes>
    <includes id="HierarchyEdgeDataOpsReal_8h" name="HierarchyEdgeDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyEdgeDataOpsReal.h</includes>
    <includes id="HierarchyFaceDataOpsReal_8h" name="HierarchyFaceDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyFaceDataOpsReal.h</includes>
    <includes id="HierarchyNodeDataOpsReal_8h" name="HierarchyNodeDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyNodeDataOpsReal.h</includes>
    <includes id="HierarchySideDataOpsReal_8h" name="HierarchySideDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchySideDataOpsReal.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="SAMRAIVectorReal_8I" name="SAMRAIVectorReal.I" local="yes" imported="no">SAMRAI/solv/SAMRAIVectorReal.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>SAMRAIVectorReal.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>SAMRAIVectorReal_8h</filename>
    <includes id="HierarchyDataOpsReal_8h" name="HierarchyDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsReal.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::SAMRAIVectorReal</class>
  </compound>
  <compound kind="file">
    <name>SAMRAIVectorReal.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>SAMRAIVectorReal_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>SimpleCellRobinBcCoefs.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>SimpleCellRobinBcCoefs_8C</filename>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="ArrayDataBasicOps_8h" name="ArrayDataBasicOps.h" local="yes" imported="no">SAMRAI/math/ArrayDataBasicOps.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SimpleCellRobinBcCoefs_8h" name="SimpleCellRobinBcCoefs.h" local="yes" imported="no">SAMRAI/solv/SimpleCellRobinBcCoefs.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="SimpleCellRobinBcCoefs_8I" name="SimpleCellRobinBcCoefs.I" local="yes" imported="no">SAMRAI/solv/SimpleCellRobinBcCoefs.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>SimpleCellRobinBcCoefs.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>SimpleCellRobinBcCoefs_8h</filename>
    <includes id="RobinBcCoefStrategy_8h" name="RobinBcCoefStrategy.h" local="yes" imported="no">SAMRAI/solv/RobinBcCoefStrategy.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::SimpleCellRobinBcCoefs</class>
  </compound>
  <compound kind="file">
    <name>SimpleCellRobinBcCoefs.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>SimpleCellRobinBcCoefs_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>SNES_SAMRAIContext.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>SNES__SAMRAIContext_8C</filename>
    <includes id="SNES__SAMRAIContext_8h" name="SNES_SAMRAIContext.h" local="yes" imported="no">SAMRAI/solv/SNES_SAMRAIContext.h</includes>
    <includes id="PETSc__SAMRAIVectorReal_8h" name="PETSc_SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/PETSc_SAMRAIVectorReal.h</includes>
    <includes id="SAMRAIVectorReal_8h" name="SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/SAMRAIVectorReal.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="SNES__SAMRAIContext_8I" name="SNES_SAMRAIContext.I" local="yes" imported="no">SAMRAI/solv/SNES_SAMRAIContext.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>SNES_SAMRAIContext.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>SNES__SAMRAIContext_8h</filename>
    <includes id="NonlinearSolverStrategy_8h" name="NonlinearSolverStrategy.h" local="yes" imported="no">SAMRAI/solv/NonlinearSolverStrategy.h</includes>
    <includes id="SNESAbstractFunctions_8h" name="SNESAbstractFunctions.h" local="yes" imported="no">SAMRAI/solv/SNESAbstractFunctions.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::SNES_SAMRAIContext</class>
  </compound>
  <compound kind="file">
    <name>SNES_SAMRAIContext.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>SNES__SAMRAIContext_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>SNESAbstractFunctions.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>SNESAbstractFunctions_8C</filename>
    <includes id="SNESAbstractFunctions_8h" name="SNESAbstractFunctions.h" local="yes" imported="no">SAMRAI/solv/SNESAbstractFunctions.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>SNESAbstractFunctions.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>SNESAbstractFunctions_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::SNESAbstractFunctions</class>
  </compound>
  <compound kind="file">
    <name>solv_NVector.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>solv__NVector_8C</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="solv__NVector_8h" name="solv_NVector.h" local="yes" imported="no">SAMRAI/solv/solv_NVector.h</includes>
    <includes id="SundialsAbstractVector_8h" name="SundialsAbstractVector.h" local="yes" imported="no">SAMRAI/solv/SundialsAbstractVector.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SABSVEC_CAST</name>
      <anchorfile>solv__NVector_8C.html</anchorfile>
      <anchor>cfe26f152d8bede2ee4a6bbd8fc3eb3d</anchor>
      <arglist>(v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>N_VPrint_SAMRAI</name>
      <anchorfile>solv__NVector_8C.html</anchorfile>
      <anchor>0195abea09a9de0c8bfcd6fe37c47086</anchor>
      <arglist>(N_Vector v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>solv_NVector.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>solv__NVector_8h</filename>
    <member kind="function">
      <type>void</type>
      <name>N_VPrint_SAMRAI</name>
      <anchorfile>solv__NVector_8h.html</anchorfile>
      <anchor>0195abea09a9de0c8bfcd6fe37c47086</anchor>
      <arglist>(N_Vector v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Sundials_SAMRAIVector.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>Sundials__SAMRAIVector_8C</filename>
    <includes id="Sundials__SAMRAIVector_8h" name="Sundials_SAMRAIVector.h" local="yes" imported="no">SAMRAI/solv/Sundials_SAMRAIVector.h</includes>
    <includes id="Sundials__SAMRAIVector_8I" name="Sundials_SAMRAIVector.I" local="yes" imported="no">SAMRAI/solv/Sundials_SAMRAIVector.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>Sundials_SAMRAIVector.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>Sundials__SAMRAIVector_8h</filename>
    <includes id="SundialsAbstractVector_8h" name="SundialsAbstractVector.h" local="yes" imported="no">SAMRAI/solv/SundialsAbstractVector.h</includes>
    <includes id="SAMRAIVectorReal_8h" name="SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/SAMRAIVectorReal.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::Sundials_SAMRAIVector</class>
  </compound>
  <compound kind="file">
    <name>Sundials_SAMRAIVector.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>Sundials__SAMRAIVector_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SKVEC_CAST</name>
      <anchorfile>Sundials__SAMRAIVector_8I.html</anchorfile>
      <anchor>569d0706823b27b5af826e1ee2c8ebae</anchor>
      <arglist>(x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SundialsAbstractVector.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>SundialsAbstractVector_8C</filename>
    <includes id="SundialsAbstractVector_8h" name="SundialsAbstractVector.h" local="yes" imported="no">SAMRAI/solv/SundialsAbstractVector.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SABSVEC_CAST</name>
      <anchorfile>SundialsAbstractVector_8C.html</anchorfile>
      <anchor>cfe26f152d8bede2ee4a6bbd8fc3eb3d</anchor>
      <arglist>(v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SundialsAbstractVector.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/</path>
    <filename>SundialsAbstractVector_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <class kind="class">SAMRAI::solv::SundialsAbstractVector</class>
  </compound>
  <compound kind="file">
    <name>Array.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Array_8C</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Array_8I" name="Array.I" local="yes" imported="no">SAMRAI/tbox/Array.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Array.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Array_8h</filename>
    <includes id="ReferenceCounter_8h" name="ReferenceCounter.h" local="yes" imported="no">SAMRAI/tbox/ReferenceCounter.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::Array</class>
    <class kind="class">SAMRAI::tbox::Array::DoNotInitialize</class>
  </compound>
  <compound kind="file">
    <name>Array.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Array_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>ArraySpecial.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>ArraySpecial_8C</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>AsyncCommGroup.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>AsyncCommGroup_8C</filename>
    <includes id="AsyncCommGroup_8h" name="AsyncCommGroup.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommGroup.h</includes>
    <includes id="AsyncCommGroup_8I" name="AsyncCommGroup.I" local="yes" imported="no">SAMRAI/tbox/AsyncCommGroup.I</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>AsyncCommGroup.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>AsyncCommGroup_8h</filename>
    <includes id="AsyncCommStage_8h" name="AsyncCommStage.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommStage.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::AsyncCommGroup</class>
  </compound>
  <compound kind="file">
    <name>AsyncCommGroup.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>AsyncCommGroup_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>AsyncCommPeer.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>AsyncCommPeer_8C</filename>
    <includes id="AsyncCommPeer_8h" name="AsyncCommPeer.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommPeer.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="AsyncCommPeer_8I" name="AsyncCommPeer.I" local="yes" imported="no">SAMRAI/tbox/AsyncCommPeer.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>AsyncCommPeer.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>AsyncCommPeer_8h</filename>
    <includes id="AsyncCommStage_8h" name="AsyncCommStage.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommStage.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::AsyncCommPeer</class>
  </compound>
  <compound kind="file">
    <name>AsyncCommPeer.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>AsyncCommPeer_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>AsyncCommStage.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>AsyncCommStage_8C</filename>
    <includes id="AsyncCommStage_8h" name="AsyncCommStage.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommStage.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>AsyncCommStage.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>AsyncCommStage_8h</filename>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::AsyncCommStage</class>
    <class kind="struct">SAMRAI::tbox::AsyncCommStage::Handler</class>
    <class kind="struct">SAMRAI::tbox::AsyncCommStage::Member</class>
  </compound>
  <compound kind="file">
    <name>BalancedDepthFirstTree.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>BalancedDepthFirstTree_8C</filename>
    <includes id="BalancedDepthFirstTree_8h" name="BalancedDepthFirstTree.h" local="yes" imported="no">SAMRAI/tbox/BalancedDepthFirstTree.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>BalancedDepthFirstTree.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>BalancedDepthFirstTree_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::BalancedDepthFirstTree</class>
  </compound>
  <compound kind="file">
    <name>Boost.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Boost_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>BEGIN_BOOST_WARNING_SUPPRESSION</name>
      <anchorfile>Boost_8h.html</anchorfile>
      <anchor>181e184e1091c73e7e7df912783a3fad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>END_BOOST_WARNING_SUPPRESSION</name>
      <anchorfile>Boost_8h.html</anchorfile>
      <anchor>c54024d9cb50028cde7d75bbc0678f37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Clock.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Clock_8C</filename>
    <includes id="Clock_8h" name="Clock.h" local="yes" imported="no">SAMRAI/tbox/Clock.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Clock.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Clock_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="struct">SAMRAI::tbox::Clock</class>
  </compound>
  <compound kind="file">
    <name>Complex.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Complex_8h</filename>
    <member kind="typedef">
      <type>std::complex&lt; double &gt;</type>
      <name>dcomplex</name>
      <anchorfile>Complex_8h.html</anchorfile>
      <anchor>9cd6246c3665bdbc2377b9c902f311e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ConstPointer.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>ConstPointer_8C</filename>
    <includes id="ConstPointer_8h" name="ConstPointer.h" local="yes" imported="no">SAMRAI/tbox/ConstPointer.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="ConstPointer_8I" name="ConstPointer.I" local="yes" imported="no">SAMRAI/tbox/ConstPointer.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>ConstPointer.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>ConstPointer_8h</filename>
    <includes id="ConstPointerBase_8h" name="ConstPointerBase.h" local="yes" imported="no">SAMRAI/tbox/ConstPointerBase.h</includes>
    <includes id="ReferenceCounter_8h" name="ReferenceCounter.h" local="yes" imported="no">SAMRAI/tbox/ReferenceCounter.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::ConstPointer</class>
  </compound>
  <compound kind="file">
    <name>ConstPointer.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>ConstPointer_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>ConstPointerBase.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>ConstPointerBase_8C</filename>
    <includes id="ConstPointerBase_8h" name="ConstPointerBase.h" local="yes" imported="no">SAMRAI/tbox/ConstPointerBase.h</includes>
    <includes id="ConstPointerBase_8I" name="ConstPointerBase.I" local="yes" imported="no">SAMRAI/tbox/ConstPointerBase.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>ConstPointerBase.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>ConstPointerBase_8h</filename>
    <includes id="ReferenceCounter_8h" name="ReferenceCounter.h" local="yes" imported="no">SAMRAI/tbox/ReferenceCounter.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::ConstPointerBase</class>
  </compound>
  <compound kind="file">
    <name>ConstPointerBase.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>ConstPointerBase_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Database.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Database_8C</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Database_8I" name="Database.I" local="yes" imported="no">SAMRAI/tbox/Database.I</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Database.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Database_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="DatabaseBox_8h" name="DatabaseBox.h" local="yes" imported="no">SAMRAI/tbox/DatabaseBox.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::Database</class>
    <class kind="class">SAMRAI::tbox::Database::Serializable</class>
  </compound>
  <compound kind="file">
    <name>Database.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Database_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Database_template_methods.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Database__template__methods_8C</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>DatabaseBox.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>DatabaseBox_8C</filename>
    <includes id="DatabaseBox_8h" name="DatabaseBox.h" local="yes" imported="no">SAMRAI/tbox/DatabaseBox.h</includes>
    <includes id="DatabaseBox_8I" name="DatabaseBox.I" local="yes" imported="no">SAMRAI/tbox/DatabaseBox.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>DatabaseBox.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>DatabaseBox_8h</filename>
    <includes id="Dimension_8h" name="Dimension.h" local="yes" imported="no">SAMRAI/tbox/Dimension.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="struct">SAMRAI::tbox::DatabaseBox_POD</class>
    <class kind="class">SAMRAI::tbox::DatabaseBox</class>
    <member kind="define">
      <type>#define</type>
      <name>DatabaseBox_MAX_DIM</name>
      <anchorfile>DatabaseBox_8h.html</anchorfile>
      <anchor>a0e7781b0cd5ac57b428ec407ec563fa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DatabaseBox.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>DatabaseBox_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>DatabaseFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>DatabaseFactory_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::DatabaseFactory</class>
  </compound>
  <compound kind="file">
    <name>Dimension.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Dimension_8C</filename>
    <includes id="Dimension_8h" name="Dimension.h" local="yes" imported="no">SAMRAI/tbox/Dimension.h</includes>
    <includes id="Dimension_8I" name="Dimension.I" local="yes" imported="no">SAMRAI/tbox/Dimension.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>986c96fcb982839e487153604a180073</anchor>
      <arglist>(std::ostream &amp;s, const Dimension &amp;dim)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Dimension.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Dimension_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::Dimension</class>
  </compound>
  <compound kind="file">
    <name>Dimension.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Dimension_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>manual.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/dox/</path>
    <filename>tbox_2dox_2manual_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>manual.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/hier/dox/</path>
    <filename>hier_2dox_2manual_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>manual.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/dox/</path>
    <filename>xfer_2dox_2manual_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>manual.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/dox/</path>
    <filename>pdat_2dox_2manual_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/math/dox/</path>
    <filename>math_2dox_2manual_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>manual.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/mesh/dox/</path>
    <filename>mesh_2dox_2manual_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>manual.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/geom/dox/</path>
    <filename>geom_2dox_2manual_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>manual.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/solv/dox/</path>
    <filename>solv_2dox_2manual_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>manual.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/algs/dox/</path>
    <filename>algs_2dox_2manual_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>manual.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/appu/dox/</path>
    <filename>appu_2dox_2manual_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
  </compound>
  <compound kind="file">
    <name>manual_base.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/dox/</path>
    <filename>manual__base_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>manual_database.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/dox/</path>
    <filename>manual__database_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>manual_inputdb.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/dox/</path>
    <filename>manual__inputdb_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>manual_memory.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/dox/</path>
    <filename>manual__memory_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>manual_parallel.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/dox/</path>
    <filename>manual__parallel_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>manual_restartdb.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/dox/</path>
    <filename>manual__restartdb_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>manual_stream.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/dox/</path>
    <filename>manual__stream_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>manual_timers.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/dox/</path>
    <filename>manual__timers_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Grammar.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Grammar_8C</filename>
    <includes id="Dimension_8h" name="Dimension.h" local="yes" imported="no">SAMRAI/tbox/Dimension.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Parser_8h" name="Parser.h" local="yes" imported="no">SAMRAI/tbox/Parser.h</includes>
    <namespace>std</namespace>
    <class kind="struct">KeyData</class>
    <class kind="union">YYSTYPE</class>
    <class kind="union">yyalloc</class>
    <class kind="struct">arith_functions</class>
    <member kind="define">
      <type>#define</type>
      <name>YYBISON</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>aa397e693a84d00bfedccbf52fd9e8ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYBISON_VERSION</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>9f0389567c578060b763a90d762c61a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSKELETON_NAME</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>f4305c8bf7d9ab777d82b150972149ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYPURE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>60cbc9391a795f39aa956beec8eb1448</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYLSP_NEEDED</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>e8f3bfb96bf7358112c0334a6d9aabc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_AND</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>67a545723dd4a43801f293e161ad2b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_ASSIGN</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>6b0c80756c6b6051baed9a522deb68fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_CHAR</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>326606d6a3405258256b0513694fc39e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_CLOSE_CURLY</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>9e851480f031f4c90fe971990097fea0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_CLOSE_PAREN</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>4ff864a921450c1b4fc5abd8b41e4651</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_CLOSE_SQBKT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>18661896f25fc4c54fe46aafd165e43e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_COMMA</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>d25ef1dfe21118d45b4d2281d7799d80</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_DIV</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>01fd4570feb2455f5eacdab43b6e1259</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_DOUBLE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>2059d4afe6c022d1eec447832af9df22</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_ELSE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>25fddb6e76f63e5188f2497a0b6cc2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_EXP</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>c7b81299f024929c7060df57ef28ff2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_EQUALS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>7bb710650fe5fcad8be80664a6a7930b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_GREATER_EQUALS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>62ede7ff69af8ebf1269c4a99bf34b27</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_GREATER</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>368f2ea94b7c135a2f23252722bbd1e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_LESS_EQUALS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>f84303940346c39249b51c45be51a0bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_LESS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>1f1d3f841bc7d87fc628dd288d4e250b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_FALSE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>f11094c554a84782dfbfc92b3b3821ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_INTEGER</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>12d2914af388d3b07d3d036c02407be3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_KEYWORD</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>8f0413c8fb6984add2bfb558df952f50</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_MINUS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>2886a5cf0cd746189aff360296acd29c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_MULT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>2644b4d4068018c3375425844829c16b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_NOT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>80c6e79e72586239ef37ca2af3c74bbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_NOT_EQUALS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>835d1fde15447c8d9067f536145d0cb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_OR</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>d5ce1085fb16425f5edd004bd9fafddb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_OPEN_CURLY</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>28729ff6c7c77dfae12587d5b29f8697</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_OPEN_PAREN</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ad32759d14216319145bb0c4df8b3046</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_OPEN_SQBKT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>38b0ddfb276074832ea22ad6d590c759</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_PLUS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>0b4088eff4359148a56614fac439f47b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_QUESTION</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>48c64c2d40cf5742cf8ae00b4a95d9a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_SEMI</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>e638c51c4838b515bc65e340d23661ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_STRING</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>05365795825b5a715c3549abdf21ff54</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_TRUE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>d14770b568ad8429d7e572de62772b56</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_NEGATION</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>6dcc34f23fcf8cf2c536a1ad2df720d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KEY_COMPLEX</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ca4e021c3d98c7504bc7563c2a6f8fb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KEY_DOUBLE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>392dce0b69e571a63f513cd21f53160f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KEY_INTEGER</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>59fe4e4cf2d98f7d57eb9932ed1d34b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KEY_BOOL</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a7b4095fde41fb7f6a6a764fba5df2e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KEY_BOX</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>52b7cbe5ee739cc1007a8af6fce5646e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KEY_CHAR</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>da52bbcf1f452e77d545ac2126e1a3aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KEY_STRING</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>1474c853f09c16cc67ad1da6be83b527</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_NUMBER</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>94f3079ccb820643a4db217dbd23daf4</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROMOTE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>c361021146cb945db9a63017de89eea7</anchor>
      <arglist>(X, Y)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYDEBUG</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>7d3d4dbfb8fb6c2c72b47296a6a4f91e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYERROR_VERBOSE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>75598d44d54f879f4d4e7accb00a7244</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYTOKEN_TABLE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>0096ec193b994e47d44aca2125c6c1bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yystype</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ef7560beb246dea4e74b64d377a3055f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTYPE_IS_DECLARED</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>0a3b1300d7a31e27e3e74010776a9822</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTYPE_IS_TRIVIAL</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>fd4af702e448abac47b0a8ccd66de14a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSIZE_T</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>78a26480df891fc26bf42b6fa0b93329</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSIZE_MAXIMUM</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>7def4b54245227334da020edee17a4e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>e5c24f03dbe0e96658be303228722a6b</anchor>
      <arglist>(msgid)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYUSE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>abf345116c51affe1571adb955242db1</anchor>
      <arglist>(e)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYID</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>18e16cc6f9004017ebc0c31434f93d0c</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_ALLOC</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>465f9bc8f14c6fa71c797701644e7779</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_FREE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>39deb433f71ae53a4fcf2b24f1cc4f9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_ALLOC_MAXIMUM</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>1c268d4191440627e52f46509db65dc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYMALLOC</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>eaa793859014be2c440ac25f18a47ced</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYFREE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>668fc6303e295b6103a4d816747f99d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_GAP_MAXIMUM</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>6ca7cfbf4bdb88d3ba1b9bee8dc81466</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_BYTES</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>c3fd6e16b10b7ad6cc1678856fed393f</anchor>
      <arglist>(N)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYCOPY</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>acc1bce8edfaf2de4574208891eea97f</anchor>
      <arglist>(To, From, Count)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_RELOCATE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>9562acb67f484a7d3cd25026d08e191e</anchor>
      <arglist>(Stack)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYFINAL</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>67622fa406aa894e023e84873a60fc3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYLAST</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>7d748a390b6464cbdf96eefd4c4eefcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYNTOKENS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>fa64b7904726c792d0d3e63d6d8562b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYNNTS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>81f44a165220d7c45cf7d78e55e41547</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYNRULES</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>e6a1999ae1eb3b81347b7acb656f4043</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYNSTATES</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>c166815cd6d67a30e8d7afdc33546aa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYUNDEFTOK</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>3a857efd10383c9489262f7d4595ebf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYMAXUTOK</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>c0dc85526bf651cdff3f4a76450c03f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYTRANSLATE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>275241b8e72d0e061fda95d793828960</anchor>
      <arglist>(YYX)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYPACT_NINF</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>98ba0041a963ec87fd72df50554bdb69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYTABLE_NINF</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>721ac23e499e58a4850d10e6ef27af5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyerrok</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>3d828745066709c35e25fdf0e7b27468</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyclearin</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>1881be04644fb331af6aa4db83d2a765</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYEMPTY</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>500fb3e4e3c513abeca80354bd9e7b5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYEOF</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>bba2cb0ea77fae74abeffd1d148eb897</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYACCEPT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>f6c049e3a4f5bea40068fd0da411058a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYABORT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>005dd2528a3654a914554383fe05bbfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYERROR</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>99d3335d55418b619f118454adfd1cd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYFAIL</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>819e1df87b63ea166b146f4826c94660</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYRECOVERING</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>016bb04d5dc8ce12700419bfcf759bd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYBACKUP</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>78bc90001d467e3f974efb296fab73a9</anchor>
      <arglist>(Token, Value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYTERROR</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>b5324041b01e0a0ae2218eb5f1204ccd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYERRCODE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>8b16bcd7e089ad762434a220d8be2200</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYRHSLOC</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>f46ab26cd403b1fe7c91b67f0cca3057</anchor>
      <arglist>(Rhs, K)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYLLOC_DEFAULT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>f8a519807a7905cbea285e8559d0e600</anchor>
      <arglist>(Current, Rhs, N)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_LOCATION_PRINT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>b016a3e5f35eb9c4b090a9907b368d0d</anchor>
      <arglist>(File, Loc)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYLEX</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>cf6c5b14a2953e91810d6dbb618e083b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYDPRINTF</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>40742dc2d7efbf0466a449eab663fa62</anchor>
      <arglist>(Args)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_SYMBOL_PRINT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>e2cb2b4119a0cd89a64df3f629b8fbce</anchor>
      <arglist>(Title, Type, Value, Location)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_STACK_PRINT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>e5c3b86bcbb02a79bc144a1444ab938e</anchor>
      <arglist>(Bottom, Top)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_REDUCE_PRINT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>5a7e7504f6802549842419f2afa452ac</anchor>
      <arglist>(Rule)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYINITDEPTH</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>083bf9da4aaef1b5491fa00b3b5a5c83</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYMAXDEPTH</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>c0ef387ea0e903bd30869fa6720f2326</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYPOPSTACK</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>4f6d069befdb31f2f6226fc1b09be641</anchor>
      <arglist>(N)</arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>yytype_uint8</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>1a9a4a1979c67bddd3bf74c6b8c7f201</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>short int</type>
      <name>yytype_int8</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>bf3f4a315bf97650b54b354ac0edacd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned short int</type>
      <name>yytype_uint16</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>55f71c6dcab9994424350af65e278271</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>short int</type>
      <name>yytype_int16</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>01285d3823a069bc6270aa69ae1546a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>yytokentype</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_AND</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852a3a3a86c9cee3759ee710175d08c91ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_ASSIGN</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852b4515105df632b4cf53c62f5927b0a76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CHAR</name>
      <anchor>e8124bae4055c1b1ba09809bc741f85234d2e1af10adcfa7e36c55d2a9fccc4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CLOSE_CURLY</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852e16139af549286cb5cdd7d0ccee825d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CLOSE_PAREN</name>
      <anchor>e8124bae4055c1b1ba09809bc741f8520202b63f1c90a290df2c976b2c0373e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CLOSE_SQBKT</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852895ce63405cf287780505360b689cbdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_COMMA</name>
      <anchor>e8124bae4055c1b1ba09809bc741f85216abfcc6ed31588b7362c83ea73a00c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_DIV</name>
      <anchor>e8124bae4055c1b1ba09809bc741f8520a90e1b7ab0502df90a605c9829dbdc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_DOUBLE</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852476ff0a3eac7ebe3dd70b7ad7617bf44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_ELSE</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852c74a42a2183a0e70f26f16a741c8aa46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_EXP</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852090235436af2daf58a0663bf0d321258</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_EQUALS</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852fd930a03effac400aac934de7ab4b4a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_GREATER_EQUALS</name>
      <anchor>e8124bae4055c1b1ba09809bc741f8526ab1401834bd5237c132460080c2d58f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_GREATER</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852a51815b0c843493086ef85250e4300c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_LESS_EQUALS</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852644bca0ee784bdcbed94f879c87ca314</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_LESS</name>
      <anchor>e8124bae4055c1b1ba09809bc741f8527cffa8ed64447f07a57713b7b86a8b42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_FALSE</name>
      <anchor>e8124bae4055c1b1ba09809bc741f8520a9a1597d1d603f4329c01bde438f937</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_INTEGER</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852438a18527399948b81fbb55ea2b555b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_KEYWORD</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852ac560ed1fa4513c649e61279e9368d34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_MINUS</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852a12853b786cf7c9f3a3b039a51d11b54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_MULT</name>
      <anchor>e8124bae4055c1b1ba09809bc741f8524028c73e8f86aa899894a45d3dd12133</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_NOT</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852a06868a538060bcf08f7118cc998b903</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_NOT_EQUALS</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852d9133ff11aa6d0a897498612502b158a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OR</name>
      <anchor>e8124bae4055c1b1ba09809bc741f8524ede0d9a07d2992482735a110a4cdad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OPEN_CURLY</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852858a4875184bc4d2edeed983139499fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OPEN_PAREN</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852169b4fcac2cae1ac3e86e4550bca8ccd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OPEN_SQBKT</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852866ab01214da8d49c70a88f8489a00b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_PLUS</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852b2d41bf8c42347194a99dec2a36b8680</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_QUESTION</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852364f10a8a3ce2cbfe07584fe65ff3b26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_SEMI</name>
      <anchor>e8124bae4055c1b1ba09809bc741f8523f9f6314d50d6eb1ca6a6eeb201840a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_STRING</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852dd59ae492b1ba14b17059a2a6b4616e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_TRUE</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852a3d2c13aa9cca6166612b4e73b03af63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_NEGATION</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852c98b9a4a91259fd2c5c58fef87a907eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yylex</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>258b384681076ee24401a8c1fafb2197</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yyerror</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>43390c2c47f90b7e4dbab557b0a66ecf</anchor>
      <arglist>(const char *const error)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>delete_list</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>52e1fc8ebde0d5ecafecdbb5cd0f242f</anchor>
      <arglist>(KeyData *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>to_boolean</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>acc7e7f660dad737522eeae467c1631e</anchor>
      <arglist>(KeyData *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>to_integer</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>186285c7528949c5cfd1e8709b91726e</anchor>
      <arglist>(KeyData *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>to_double</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a6913cf26a688767bbf3ed106cbee899</anchor>
      <arglist>(KeyData *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>to_complex</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>79a7679e2f72286e4515996279b640e6</anchor>
      <arglist>(KeyData *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KeyData *</type>
      <name>binary_op</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>030dc2b6996d749c6c957ebd5aeb8e89</anchor>
      <arglist>(KeyData *, KeyData *, const int)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KeyData *</type>
      <name>compare_op</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>134d0719b0408a4b13fce20d009fe53f</anchor>
      <arglist>(KeyData *, KeyData *, const int)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KeyData *</type>
      <name>eval_function</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>3dff8ee5b33c2ecf150f03dd5bee28e5</anchor>
      <arglist>(KeyData *, const string &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KeyData *</type>
      <name>lookup_variable</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>db777590071b7bd550040dd952ee48db</anchor>
      <arglist>(const string &amp;, const int, const bool)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yydestruct</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>2cc07994520948359b109feda617187b</anchor>
      <arglist>(char *yymsg, int yytype, YYSTYPE *yyvaluep) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yyparse</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>361cb28d032e13b18a0247fcb1d9cead</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>imag_thunk</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>53c0f5a2591664b3703e549cc8c7e11b</anchor>
      <arglist>(const dcomplex &amp;a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>real_thunk</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>d863359d32bbf288ce3e170818d70e81</anchor>
      <arglist>(const dcomplex &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parser_static_table_initialize</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>e8c45dbd27b096db3a9a40bff0d8e2d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static string</type>
      <name>type_names</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>7a593d8c84583ced346e489b7820033d</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yytranslate</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>d76802c1d7726b331c1864ceea97dd55</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yyr1</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>cc1ceb9464df859bb9c0f36e9139eda6</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yyr2</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>4f6b82f9b55bcfd43ba6587f4c87e29e</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yydefact</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a0ca2ddb365deb68d136ecb30bb50a2e</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_int8</type>
      <name>yydefgoto</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>7b88e2d6180218227c0595d079b74e58</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_int16</type>
      <name>yypact</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>324087f51e324d0557eefbd2a4ae737a</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_int8</type>
      <name>yypgoto</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>22a730d3ad6e8e34c2c504ca7bb899f3</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yytable</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>bb352cf31c9ef45d48c58159a963f980</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_int8</type>
      <name>yycheck</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>f06f3c6a4e478ad35b4d6cfdc1d9a7f8</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yystos</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>288707de948f9cba40a3e940732fcd05</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>SAMRAI_yychar</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>08a6427f3c5234a4dfe85063619c08fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>YYSTYPE</type>
      <name>SAMRAI_yylval</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>e564943c1505c4faccd64ee4f794da64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>SAMRAI_yynerrs</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>55611330564b909213f6834d0c5f00d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static arith_functions</type>
      <name>af</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>7497e57734478ca7a6d9498505c7c220</anchor>
      <arglist>[20]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Grammar.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Grammar_8h</filename>
    <class kind="union">YYSTYPE</class>
    <member kind="define">
      <type>#define</type>
      <name>T_AND</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>67a545723dd4a43801f293e161ad2b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_ASSIGN</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>6b0c80756c6b6051baed9a522deb68fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_CHAR</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>326606d6a3405258256b0513694fc39e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_CLOSE_CURLY</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>9e851480f031f4c90fe971990097fea0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_CLOSE_PAREN</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>4ff864a921450c1b4fc5abd8b41e4651</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_CLOSE_SQBKT</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>18661896f25fc4c54fe46aafd165e43e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_COMMA</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>d25ef1dfe21118d45b4d2281d7799d80</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_DIV</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>01fd4570feb2455f5eacdab43b6e1259</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_DOUBLE</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>2059d4afe6c022d1eec447832af9df22</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_ELSE</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>25fddb6e76f63e5188f2497a0b6cc2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_EXP</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>c7b81299f024929c7060df57ef28ff2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_EQUALS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>7bb710650fe5fcad8be80664a6a7930b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_GREATER_EQUALS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>62ede7ff69af8ebf1269c4a99bf34b27</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_GREATER</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>368f2ea94b7c135a2f23252722bbd1e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_LESS_EQUALS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>f84303940346c39249b51c45be51a0bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_LESS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>1f1d3f841bc7d87fc628dd288d4e250b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_FALSE</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>f11094c554a84782dfbfc92b3b3821ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_INTEGER</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>12d2914af388d3b07d3d036c02407be3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_KEYWORD</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>8f0413c8fb6984add2bfb558df952f50</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_MINUS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>2886a5cf0cd746189aff360296acd29c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_MULT</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>2644b4d4068018c3375425844829c16b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_NOT</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>80c6e79e72586239ef37ca2af3c74bbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_NOT_EQUALS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>835d1fde15447c8d9067f536145d0cb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_OR</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>d5ce1085fb16425f5edd004bd9fafddb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_OPEN_CURLY</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>28729ff6c7c77dfae12587d5b29f8697</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_OPEN_PAREN</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>ad32759d14216319145bb0c4df8b3046</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_OPEN_SQBKT</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>38b0ddfb276074832ea22ad6d590c759</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_PLUS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>0b4088eff4359148a56614fac439f47b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_QUESTION</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>48c64c2d40cf5742cf8ae00b4a95d9a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_SEMI</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>e638c51c4838b515bc65e340d23661ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_STRING</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>05365795825b5a715c3549abdf21ff54</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_TRUE</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>d14770b568ad8429d7e572de62772b56</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_NEGATION</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>6dcc34f23fcf8cf2c536a1ad2df720d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yystype</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>ef7560beb246dea4e74b64d377a3055f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTYPE_IS_DECLARED</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>0a3b1300d7a31e27e3e74010776a9822</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTYPE_IS_TRIVIAL</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>fd4af702e448abac47b0a8ccd66de14a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>yytokentype</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_AND</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852a3a3a86c9cee3759ee710175d08c91ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_ASSIGN</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852b4515105df632b4cf53c62f5927b0a76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CHAR</name>
      <anchor>e8124bae4055c1b1ba09809bc741f85234d2e1af10adcfa7e36c55d2a9fccc4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CLOSE_CURLY</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852e16139af549286cb5cdd7d0ccee825d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CLOSE_PAREN</name>
      <anchor>e8124bae4055c1b1ba09809bc741f8520202b63f1c90a290df2c976b2c0373e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CLOSE_SQBKT</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852895ce63405cf287780505360b689cbdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_COMMA</name>
      <anchor>e8124bae4055c1b1ba09809bc741f85216abfcc6ed31588b7362c83ea73a00c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_DIV</name>
      <anchor>e8124bae4055c1b1ba09809bc741f8520a90e1b7ab0502df90a605c9829dbdc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_DOUBLE</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852476ff0a3eac7ebe3dd70b7ad7617bf44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_ELSE</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852c74a42a2183a0e70f26f16a741c8aa46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_EXP</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852090235436af2daf58a0663bf0d321258</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_EQUALS</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852fd930a03effac400aac934de7ab4b4a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_GREATER_EQUALS</name>
      <anchor>e8124bae4055c1b1ba09809bc741f8526ab1401834bd5237c132460080c2d58f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_GREATER</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852a51815b0c843493086ef85250e4300c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_LESS_EQUALS</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852644bca0ee784bdcbed94f879c87ca314</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_LESS</name>
      <anchor>e8124bae4055c1b1ba09809bc741f8527cffa8ed64447f07a57713b7b86a8b42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_FALSE</name>
      <anchor>e8124bae4055c1b1ba09809bc741f8520a9a1597d1d603f4329c01bde438f937</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_INTEGER</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852438a18527399948b81fbb55ea2b555b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_KEYWORD</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852ac560ed1fa4513c649e61279e9368d34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_MINUS</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852a12853b786cf7c9f3a3b039a51d11b54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_MULT</name>
      <anchor>e8124bae4055c1b1ba09809bc741f8524028c73e8f86aa899894a45d3dd12133</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_NOT</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852a06868a538060bcf08f7118cc998b903</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_NOT_EQUALS</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852d9133ff11aa6d0a897498612502b158a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OR</name>
      <anchor>e8124bae4055c1b1ba09809bc741f8524ede0d9a07d2992482735a110a4cdad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OPEN_CURLY</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852858a4875184bc4d2edeed983139499fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OPEN_PAREN</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852169b4fcac2cae1ac3e86e4550bca8ccd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OPEN_SQBKT</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852866ab01214da8d49c70a88f8489a00b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_PLUS</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852b2d41bf8c42347194a99dec2a36b8680</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_QUESTION</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852364f10a8a3ce2cbfe07584fe65ff3b26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_SEMI</name>
      <anchor>e8124bae4055c1b1ba09809bc741f8523f9f6314d50d6eb1ca6a6eeb201840a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_STRING</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852dd59ae492b1ba14b17059a2a6b4616e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_TRUE</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852a3d2c13aa9cca6166612b4e73b03af63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_NEGATION</name>
      <anchor>e8124bae4055c1b1ba09809bc741f852c98b9a4a91259fd2c5c58fef87a907eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>YYSTYPE</type>
      <name>SAMRAI_yylval</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>e564943c1505c4faccd64ee4f794da64</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HDFDatabase.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>HDFDatabase_8C</filename>
    <includes id="HDFDatabase_8h" name="HDFDatabase.h" local="yes" imported="no">SAMRAI/tbox/HDFDatabase.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <member kind="define">
      <type>#define</type>
      <name>H5T_SAMRAI_INT</name>
      <anchorfile>HDFDatabase_8C.html</anchorfile>
      <anchor>78a23b2ee9ed2227268e225105529a18</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>H5T_SAMRAI_FLOAT</name>
      <anchorfile>HDFDatabase_8C.html</anchorfile>
      <anchor>06283c61fc31e5aa6a2ce7893256110a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>H5T_SAMRAI_DOUBLE</name>
      <anchorfile>HDFDatabase_8C.html</anchorfile>
      <anchor>e36226339bfcbb6af460072e234c0fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>H5T_SAMRAI_BOOL</name>
      <anchorfile>HDFDatabase_8C.html</anchorfile>
      <anchor>cc954979da9b37f1e3aa3af6b26332ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>H5T_SAMRAI_ATTR</name>
      <anchorfile>HDFDatabase_8C.html</anchorfile>
      <anchor>8b8bb5df4d1832366d1e22eb61bc2264</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BEGIN_SUPPRESS_HDF5_WARNINGS</name>
      <anchorfile>HDFDatabase_8C.html</anchorfile>
      <anchor>bb80327b69cb6bc84c16f673908eb8fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>END_SUPPRESS_HDF5_WARNINGS</name>
      <anchorfile>HDFDatabase_8C.html</anchorfile>
      <anchor>fed5056148140a00c2da1db64e60f174</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HDFDatabase.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>HDFDatabase_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="DatabaseBox_8h" name="DatabaseBox.h" local="yes" imported="no">SAMRAI/tbox/DatabaseBox.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::HDFDatabase</class>
  </compound>
  <compound kind="file">
    <name>HDFDatabaseFactory.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>HDFDatabaseFactory_8C</filename>
    <includes id="HDFDatabaseFactory_8h" name="HDFDatabaseFactory.h" local="yes" imported="no">SAMRAI/tbox/HDFDatabaseFactory.h</includes>
    <includes id="HDFDatabase_8h" name="HDFDatabase.h" local="yes" imported="no">SAMRAI/tbox/HDFDatabase.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>HDFDatabaseFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>HDFDatabaseFactory_8h</filename>
    <includes id="DatabaseFactory_8h" name="DatabaseFactory.h" local="yes" imported="no">SAMRAI/tbox/DatabaseFactory.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::HDFDatabaseFactory</class>
  </compound>
  <compound kind="file">
    <name>IEEE.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>IEEE_8C</filename>
    <includes id="IEEE_8h" name="IEEE.h" local="yes" imported="no">SAMRAI/tbox/IEEE.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="IEEE_8I" name="IEEE.I" local="yes" imported="no">SAMRAI/tbox/IEEE.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>IEEE.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>IEEE_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="struct">SAMRAI::tbox::IEEE</class>
  </compound>
  <compound kind="file">
    <name>IEEE.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>IEEE_8I</filename>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>InputDatabase.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>InputDatabase_8h</filename>
    <includes id="MemoryDatabase_8h" name="MemoryDatabase.h" local="yes" imported="no">SAMRAI/tbox/MemoryDatabase.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <member kind="typedef">
      <type>SAMRAI::tbox::MemoryDatabase</type>
      <name>InputDatabase</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>3866f99c36ebe54f3e6060ad9d15e53d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>InputManager.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>InputManager_8C</filename>
    <includes id="InputManager_8h" name="InputManager.h" local="yes" imported="no">SAMRAI/tbox/InputManager.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="Parser_8h" name="Parser.h" local="yes" imported="no">SAMRAI/tbox/Parser.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>InputManager.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>InputManager_8h</filename>
    <includes id="InputDatabase_8h" name="InputDatabase.h" local="yes" imported="no">SAMRAI/tbox/InputDatabase.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::InputManager</class>
  </compound>
  <compound kind="file">
    <name>IOStream.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>IOStream_8h</filename>
  </compound>
  <compound kind="file">
    <name>List.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>List_8C</filename>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="List_8I" name="List.I" local="yes" imported="no">SAMRAI/tbox/List.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>List.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>List_8h</filename>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::List</class>
    <class kind="class">SAMRAI::tbox::ListNode</class>
    <class kind="class">SAMRAI::tbox::ListIterator</class>
  </compound>
  <compound kind="file">
    <name>List.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>List_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Logger.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Logger_8C</filename>
    <includes id="Logger_8h" name="Logger.h" local="yes" imported="no">SAMRAI/tbox/Logger.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::AbortAppender</class>
    <class kind="class">SAMRAI::tbox::WarningAppender</class>
    <class kind="class">SAMRAI::tbox::DebugAppender</class>
  </compound>
  <compound kind="file">
    <name>Logger.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Logger_8h</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::Logger</class>
    <class kind="class">SAMRAI::tbox::Logger::Appender</class>
  </compound>
  <compound kind="file">
    <name>MathUtilities.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>MathUtilities_8C</filename>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="MathUtilities_8I" name="MathUtilities.I" local="yes" imported="no">SAMRAI/tbox/MathUtilities.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>MathUtilities.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>MathUtilities_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::MathUtilities</class>
  </compound>
  <compound kind="file">
    <name>MathUtilities.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>MathUtilities_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>MathUtilitiesSpecial.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>MathUtilitiesSpecial_8C</filename>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SAMRAI_FLT_SNAN</name>
      <anchorfile>MathUtilitiesSpecial_8C.html</anchorfile>
      <anchor>61b10fd2dc82360d11f2c1fafbcebb72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAMRAI_DBL_SNAN</name>
      <anchorfile>MathUtilitiesSpecial_8C.html</anchorfile>
      <anchor>cd719976d192b99c063ec18db9794d1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>round_internal</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>1e55785124932ee66e42590139e45cb9</anchor>
      <arglist>(TYPE x)</arglist>
    </member>
    <member kind="function">
      <type>template float</type>
      <name>round_internal&lt; float &gt;</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>5307cffaad6d97029b681e68fd41b221</anchor>
      <arglist>(float x)</arglist>
    </member>
    <member kind="function">
      <type>template double</type>
      <name>round_internal&lt; double &gt;</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>e12c264c3a794b35bdc8e08a8da07cc3</anchor>
      <arglist>(double x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MemoryDatabase.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>MemoryDatabase_8C</filename>
    <includes id="MemoryDatabase_8h" name="MemoryDatabase.h" local="yes" imported="no">SAMRAI/tbox/MemoryDatabase.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <includes id="MemoryDatabase_8I" name="MemoryDatabase.I" local="yes" imported="no">SAMRAI/tbox/MemoryDatabase.I</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MEMORY_DB_ERROR</name>
      <anchorfile>MemoryDatabase_8C.html</anchorfile>
      <anchor>372be32473d1d11ad3b8d4c325e1cc4b</anchor>
      <arglist>(X)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MemoryDatabase.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>MemoryDatabase_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::MemoryDatabase</class>
  </compound>
  <compound kind="file">
    <name>MemoryDatabase.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>MemoryDatabase_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>MemoryDatabaseFactory.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>MemoryDatabaseFactory_8C</filename>
    <includes id="MemoryDatabaseFactory_8h" name="MemoryDatabaseFactory.h" local="yes" imported="no">SAMRAI/tbox/MemoryDatabaseFactory.h</includes>
    <includes id="MemoryDatabase_8h" name="MemoryDatabase.h" local="yes" imported="no">SAMRAI/tbox/MemoryDatabase.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>MemoryDatabaseFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>MemoryDatabaseFactory_8h</filename>
    <includes id="DatabaseFactory_8h" name="DatabaseFactory.h" local="yes" imported="no">SAMRAI/tbox/DatabaseFactory.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::MemoryDatabaseFactory</class>
  </compound>
  <compound kind="file">
    <name>MemoryUtilities.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>MemoryUtilities_8C</filename>
    <includes id="MemoryUtilities_8h" name="MemoryUtilities.h" local="yes" imported="no">SAMRAI/tbox/MemoryUtilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>MemoryUtilities.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>MemoryUtilities_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="struct">SAMRAI::tbox::MemoryUtilities</class>
  </compound>
  <compound kind="file">
    <name>MessageStream.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>MessageStream_8C</filename>
    <includes id="MessageStream_8h" name="MessageStream.h" local="yes" imported="no">SAMRAI/tbox/MessageStream.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MessageStream_8I" name="MessageStream.I" local="yes" imported="no">SAMRAI/tbox/MessageStream.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>MessageStream.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>MessageStream_8h</filename>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::MessageStream</class>
  </compound>
  <compound kind="file">
    <name>MessageStream.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>MessageStream_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>MessageStream_template_methods.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>MessageStream__template__methods_8C</filename>
    <includes id="MessageStream_8h" name="MessageStream.h" local="yes" imported="no">SAMRAI/tbox/MessageStream.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>NullDatabase.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>NullDatabase_8C</filename>
    <includes id="NullDatabase_8h" name="NullDatabase.h" local="yes" imported="no">SAMRAI/tbox/NullDatabase.h</includes>
    <includes id="NullDatabase_8I" name="NullDatabase.I" local="yes" imported="no">SAMRAI/tbox/NullDatabase.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>NullDatabase.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>NullDatabase_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::NullDatabase</class>
  </compound>
  <compound kind="file">
    <name>NullDatabase.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>NullDatabase_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>ParallelBuffer.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>ParallelBuffer_8C</filename>
    <includes id="ParallelBuffer_8h" name="ParallelBuffer.h" local="yes" imported="no">SAMRAI/tbox/ParallelBuffer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>ParallelBuffer.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>ParallelBuffer_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::ParallelBuffer</class>
  </compound>
  <compound kind="file">
    <name>Parser.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Parser_8C</filename>
    <includes id="Parser_8h" name="Parser.h" local="yes" imported="no">SAMRAI/tbox/Parser.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Parser_8I" name="Parser.I" local="yes" imported="no">SAMRAI/tbox/Parser.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <member kind="function">
      <type>int</type>
      <name>yyparse</name>
      <anchorfile>Parser_8C.html</anchorfile>
      <anchor>361cb28d032e13b18a0247fcb1d9cead</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yyrestart</name>
      <anchorfile>Parser_8C.html</anchorfile>
      <anchor>7e1e83f97562df194218de18a2bd5f98</anchor>
      <arglist>(FILE *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parser_static_table_initialize</name>
      <anchorfile>Parser_8C.html</anchorfile>
      <anchor>e8c45dbd27b096db3a9a40bff0d8e2d1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Parser.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Parser_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::Parser</class>
  </compound>
  <compound kind="file">
    <name>Parser.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Parser_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>PIO.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>PIO_8C</filename>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="ParallelBuffer_8h" name="ParallelBuffer.h" local="yes" imported="no">SAMRAI/tbox/ParallelBuffer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <member kind="function">
      <type>std::ostream</type>
      <name>pout</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>3b13ee0a7c847dffee0711ab9ee3c92b</anchor>
      <arglist>(&amp;pout_buffer)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream</type>
      <name>perr</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>94168d385f4c2ce13f79f2d2fe3c8a4e</anchor>
      <arglist>(&amp;perr_buffer)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream</type>
      <name>plog</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>4c0c3c0b4949ec5899841b08fe9adf9f</anchor>
      <arglist>(&amp;plog_buffer)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ParallelBuffer</type>
      <name>pout_buffer</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>163498afa72062d2ac6120ce6a642447</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ParallelBuffer</type>
      <name>perr_buffer</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>916399eba38cfa47ced1e8f025ee8291</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ParallelBuffer</type>
      <name>plog_buffer</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>e3346c7334368e658dc500206455d8d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PIO.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>PIO_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="struct">SAMRAI::tbox::PIO</class>
    <member kind="variable">
      <type>std::ostream</type>
      <name>pout</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>48d553cde5d7c6066de6bec271ef3666</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::ostream</type>
      <name>perr</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>bf6210a537fcb1ec9e4eb3b5b1019b4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::ostream</type>
      <name>plog</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>48a363c43ec1479b41d6c9c560ba446d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Pointer.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Pointer_8C</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Pointer_8I" name="Pointer.I" local="yes" imported="no">SAMRAI/tbox/Pointer.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Pointer.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Pointer_8h</filename>
    <includes id="ReferenceCounter_8h" name="ReferenceCounter.h" local="yes" imported="no">SAMRAI/tbox/ReferenceCounter.h</includes>
    <includes id="PointerBase_8h" name="PointerBase.h" local="yes" imported="no">SAMRAI/tbox/PointerBase.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::Pointer</class>
  </compound>
  <compound kind="file">
    <name>Pointer.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Pointer_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>PointerBase.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>PointerBase_8C</filename>
    <includes id="PointerBase_8h" name="PointerBase.h" local="yes" imported="no">SAMRAI/tbox/PointerBase.h</includes>
    <includes id="PointerBase_8I" name="PointerBase.I" local="yes" imported="no">SAMRAI/tbox/PointerBase.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>PointerBase.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>PointerBase_8h</filename>
    <includes id="ConstPointerBase_8h" name="ConstPointerBase.h" local="yes" imported="no">SAMRAI/tbox/ConstPointerBase.h</includes>
    <includes id="ReferenceCounter_8h" name="ReferenceCounter.h" local="yes" imported="no">SAMRAI/tbox/ReferenceCounter.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::PointerBase</class>
  </compound>
  <compound kind="file">
    <name>PointerBase.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>PointerBase_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>RankGroup.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>RankGroup_8C</filename>
    <includes id="RankGroup_8h" name="RankGroup.h" local="yes" imported="no">SAMRAI/tbox/RankGroup.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="RankGroup_8I" name="RankGroup.I" local="yes" imported="no">SAMRAI/tbox/RankGroup.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>RankGroup.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>RankGroup_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::RankGroup</class>
  </compound>
  <compound kind="file">
    <name>RankGroup.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>RankGroup_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>ReferenceCounter.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>ReferenceCounter_8C</filename>
    <includes id="ReferenceCounter_8h" name="ReferenceCounter.h" local="yes" imported="no">SAMRAI/tbox/ReferenceCounter.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="ReferenceCounter_8I" name="ReferenceCounter.I" local="yes" imported="no">SAMRAI/tbox/ReferenceCounter.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>ReferenceCounter.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>ReferenceCounter_8h</filename>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::ReferenceCounter</class>
  </compound>
  <compound kind="file">
    <name>ReferenceCounter.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>ReferenceCounter_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>RestartManager.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>RestartManager_8C</filename>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="HDFDatabaseFactory_8h" name="HDFDatabaseFactory.h" local="yes" imported="no">SAMRAI/tbox/HDFDatabaseFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="NullDatabase_8h" name="NullDatabase.h" local="yes" imported="no">SAMRAI/tbox/NullDatabase.h</includes>
    <includes id="Parser_8h" name="Parser.h" local="yes" imported="no">SAMRAI/tbox/Parser.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="RestartManager_8I" name="RestartManager.I" local="yes" imported="no">SAMRAI/tbox/RestartManager.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>RestartManager.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>RestartManager_8h</filename>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="DatabaseFactory_8h" name="DatabaseFactory.h" local="yes" imported="no">SAMRAI/tbox/DatabaseFactory.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::RestartManager</class>
  </compound>
  <compound kind="file">
    <name>RestartManager.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>RestartManager_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>SAMRAI_MPI.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>SAMRAI__MPI_8C</filename>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="SAMRAI__MPI_8I" name="SAMRAI_MPI.I" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>SAMRAI_MPI.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>SAMRAI__MPI_8h</filename>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::SAMRAI_MPI</class>
    <class kind="struct">SAMRAI::tbox::SAMRAI_MPI::Status</class>
    <member kind="enumvalue">
      <name>MPI_COMM_WORLD</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b42dbfd3fd450726535e7e151ee269959a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_COMM_NULL</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b4808c7ee62d701b52207c2705105c3f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_SUCCESS</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b447715f71bec381599c7bcb0630a243ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_CONGRUENT</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b4c9a7573d99ab18c4699948cd94d7c0e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_REQUEST_NULL</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b4be5fad523399b547a2f8c13c3d103aba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_ERR_IN_STATUS</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b4a9340fb1186841400477613aab10f9b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_UNDEFINED</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b468b7dfb1731ac76369c81250dad8cc5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_ANY_SOURCE</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b4bee8448045f1ecb4c6edb18853912910</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_ANY_TAG</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b444235beebae8d2dacc26c007241c488f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_BYTE</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b4ef5f97886c3af4428458fe2ba18082e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_CHAR</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b44b60402b18e702a6e6f510cfe2cd9c87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_DOUBLE</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b4ee5e5aac9fcfc2eb33c7be55818436fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_FLOAT</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b48548654aeaf6d6878799d63830764eb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_INT</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b4a6a2ecd04705bb534db7c43159914771</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_DOUBLE_COMPLEX</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b45d91382c933fa48e616f493b5f9cd1d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_2INT</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b426bf3ea73928c855cea86d7ffe1e2b08</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_DOUBLE_INT</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b431f61adffc2d053fdd6b8688c1dc0648</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_FLOAT_INT</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b451003d16d874d2d63bcf858001ec1d8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_MIN</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b40b97e32a489c00318ecf754c3da84eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_MINLOC</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b4a4f9ca84d8f89600d006ac295093a7ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_MAX</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b419cf9375b5a0bf48f120bb816ecf749b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_MAXLOC</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b414cff32c8e492cd4ecef1a167dcde091</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_SUM</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b4061fc0e594d49933be379ae63c7948b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_TAG_UB</name>
      <anchor>39b3af0f22dc1b8cb10e193d9fc491b49641feb298572511431223da41f5dad9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SAMRAI_MPI.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>SAMRAI__MPI_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>SAMRAIManager.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>SAMRAIManager_8C</filename>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="IEEE_8h" name="IEEE.h" local="yes" imported="no">SAMRAI/tbox/IEEE.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>badnew</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>b54f19ea4ab0fafc357dea35df1de3c2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SAMRAIManager.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>SAMRAIManager_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::SAMRAIManager</class>
  </compound>
  <compound kind="file">
    <name>Scanner.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Scanner_8C</filename>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Parser_8h" name="Parser.h" local="yes" imported="no">SAMRAI/tbox/Parser.h</includes>
    <includes id="Grammar_8h" name="Grammar.h" local="yes" imported="no">Grammar.h</includes>
    <class kind="struct">yy_buffer_state</class>
    <member kind="define">
      <type>#define</type>
      <name>FLEX_SCANNER</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>7e08d2294cb27023cb9a85d0f536bfe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_FLEX_MAJOR_VERSION</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>64ef7e44e11e785bc85f9214802a3a94</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_FLEX_MINOR_VERSION</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>4cdf9a5aa9e8da8aab344e393aea85c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyconst</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>33f4536a843aa4cbe93c931566d5ea0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_PROTO</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>e514523f8c6e57c1498b236e083ea7e5</anchor>
      <arglist>(proto)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_NULL</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>4ac4474c6609ff8e2d7a903c56b408c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_SC_TO_UI</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>6fc176a37d93c7aa6740c5abb4d9df37</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BEGIN</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>c9a329bc36da2b80774d6ab5bc52053d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_START</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>6bce3f46135b9e9121f49d3fd74723cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTATE</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>e727a88166b390d39caf3a2e534b7226</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_STATE_EOF</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ba312428be55d0fd49d79329ce5711b1</anchor>
      <arglist>(state)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_NEW_FILE</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>fa7154f3352010cf69da107c946c2c4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_END_OF_BUFFER_CHAR</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>d2267e19dc669df0bd86e2babed66442</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_BUF_SIZE</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>20de9f10fb6638699ff941380bf5e9b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EOB_ACT_CONTINUE_SCAN</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>099b20143f5566cf8c906598c4708d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EOB_ACT_END_OF_FILE</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>bf1ae9e32f61822afea985d3569105fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EOB_ACT_LAST_MATCH</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>6d35b2f7f31f853baddf8ae625d05a9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyless</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>f50d79b83cd054dd0610808759fd194d</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>unput</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>50639a102598b5ddcd9da6deab4b1ea2</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_MAY_BE_UNUSED</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>fe76cac5fc199b5d206f908af6a7322a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_BUFFER_NEW</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>b79517ee1cd1ed55c938fc0f3bf8e38c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_BUFFER_NORMAL</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a7ba9da4e52cbdbb0d2dc1044ca880cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_BUFFER_EOF_PENDING</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>3117409e2df68f81816912ab24a8ca42</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_CURRENT_BUFFER</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>cbe32fab9f0b1d0ecf4399c706107143</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_FLUSH_BUFFER</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>2cc734ca5eb2826c3372a322ca3f1dda</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yy_new_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>31ee74414635ac5dc00daa26a1d761a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yy_set_interactive</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>116b81e4a35fb5e5cd611c4f169aa8fa</anchor>
      <arglist>(is_interactive)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yy_set_bol</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>2e37d0aa2cb84179cacf3787a84d3313</anchor>
      <arglist>(at_bol)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_AT_BOL</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>bb9f8c463da93b159d1978c90cba77ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yywrap</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>44a32469e0834857757889016e65030d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_SKIP_YYWRAP</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>78bdede6dafb3e195c1f9ae2b2ed12ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yytext_ptr</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a2b5d4ed3fff9942e804f78163648134</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_DO_BEFORE_ACTION</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>b4246a10054064fb3042d42ff6304db7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_NUM_RULES</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>e675bdb8860fa73e9abc27e87276a461</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_END_OF_BUFFER</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>d45a536fb2ea058c71d2a555d0843d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REJECT</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>5b658be7fb6a044119c22cf68b74ec6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yymore</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>5a01c25a320d4549ff8034f28f08adb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_MORE_ADJ</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>c419d4757258bcd8ced52b1f6e58b796</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_RESTORE_YY_MORE_OFFSET</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>c36c7272beab7b461d47948ea4e7314a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INITIAL</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>4c30f6afd6352ab5eb5fa87ec0412046</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_NEVER_INTERACTIVE</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>025d311b8438dcae0fefe68381675e83</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_NO_UNPUT</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>d1c842864869ab55f6523857e115f91e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_INPUT</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>dab0e1df0c55058c720d2dcde5e1a544</anchor>
      <arglist>(b, r, s)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOKEN</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>238ae4ffd77e54eca7fd4c15d4a8cda0</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXIMUM_INCLUDE_DEPTH</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>b0ccef85592a5b8d06c062fc0ae4dbc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COMMENT</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>fe29b63d39be9d3c2c3f9b66872a95e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_NO_PUSH_STATE</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a88e6a8e453787897bb29033c2bc62b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_NO_POP_STATE</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>78ac95c647ca911b367b56d2ae5dd051</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_NO_TOP_STATE</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>637fb51e6d82e756ded65e8cfeaafe13</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_READ_BUF_SIZE</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>dc580011018d18eb0782cf942e786738</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECHO</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>7b496442be9221c0021e116df04ed1e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyterminate</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>3b922ac9e5b854408b6f5fe91703d7a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_START_STACK_INCR</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>3c3bfb703eec627367c8a61fb76b4ff7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_FATAL_ERROR</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>949653f042146c46483c7fff92bcf696</anchor>
      <arglist>(msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_DECL</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>160c1eea4a346bf5bf0e89036ae8028f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_BREAK</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>5aed395a3df8129df9521448a6db8ee1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_RULE_SETUP</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>0dc74a1a59eb1d75ab1f1fdf07b0d79e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_EXIT_FAILURE</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>34ac0042edf69c8809d1a43e81db5c06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyless</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>f50d79b83cd054dd0610808759fd194d</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="typedef">
      <type>yy_buffer_state *</type>
      <name>YY_BUFFER_STATE</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>099836734b06fee8f4c4a09a19a36252</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>yy_size_t</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>b29132e2abdc053d893e09c6c3908fca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>YY_CHAR</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>dff985d2644dfb03946186f5bb091277</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>yy_state_type</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>b088954a2993c5479aa943f9dd39c2f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yyrestart</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>9b2bd361054660e64dc4bf3b11c73f58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_switch_to_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>6dc4d8e8960a24ed07154fa486e71c7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_load_buffer_state</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>34823a638900bf42ebc2f8efad6f8d17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_create_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>836dc40a2e0b5d0a273aa5d3a11b216f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_delete_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>8f6c55f0dbd6aed584742181b59ac277</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_init_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>48cf525e1e342efe8cd926f7f3ac9eae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_flush_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>73cc4fd07a1fca4b361ac135ac9b38ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_scan_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>06ce62ce43e978bedffb74f709e7ef2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_scan_string</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>26a3884523f5e6ca1cfffb73f5d375ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_scan_bytes</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>b09cd919682583303a33c44955cb46c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void *</type>
      <name>yy_flex_alloc</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>b47759a1fbde2a42a6885e0e446506a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void *</type>
      <name>yy_flex_realloc</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>93cb9e38aada96701f3b0d1ae7fa08db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yy_flex_free</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ac05e933871142b5ef6f4e60e62a2adc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static yy_state_type</type>
      <name>yy_get_previous_state</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ba62bf761cce830e4746100888619367</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static yy_state_type</type>
      <name>yy_try_NUL_trans</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>bded6ad559fe72ef0c913cdd641e48fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>yy_get_next_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>21e65b8a1263a5be274f606820e33033</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yy_fatal_error</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>729395a52f3967868c0b84b31c9c7e4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>input</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ab485e1e3a53dbe4aef95aae5b7603a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yylex</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>258b384681076ee24401a8c1fafb2197</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static yy_state_type</type>
      <name>yy_try_NUL_trans</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>66fcc5e5fab95ae4b2dce9271ed1fdc9</anchor>
      <arglist>(yy_state_type yy_current_state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yyrestart</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>158f66df32d55c5224128b234baf5224</anchor>
      <arglist>(FILE *input_file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_switch_to_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>e6cc917b572833c758a74e19a5583915</anchor>
      <arglist>(YY_BUFFER_STATE new_buffer)</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_create_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>5b0dac18336bbd8a9b65bd8f23fa931d</anchor>
      <arglist>(FILE *file, int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_delete_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a0e83cdde7afc392dc3420c88f6f139a</anchor>
      <arglist>(YY_BUFFER_STATE b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_init_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>5cecac59a760b2d5aa8f32500d0907da</anchor>
      <arglist>(YY_BUFFER_STATE b, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_flush_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>8ce226ef79dd209b92a0b654a980d014</anchor>
      <arglist>(YY_BUFFER_STATE b)</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_scan_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>9e8bcf70caed0ed0359b7326f652ebb8</anchor>
      <arglist>(char *base, yy_size_t size)</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_scan_string</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>8f1706a25f540e1e70cce80807818ba2</anchor>
      <arglist>(char *yy_str)</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_scan_bytes</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>b552e3fb5b09111f288a716f33ab897d</anchor>
      <arglist>(char *bytes, int len)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yy_fatal_error</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>38ef0c9557f92fd92e506591d501ea09</anchor>
      <arglist>(msg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void *</type>
      <name>yy_flex_alloc</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>20c11e2d32ce1c78b6608f2789990976</anchor>
      <arglist>(yy_size_t size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void *</type>
      <name>yy_flex_realloc</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>c2db95c2da7bfcbc7f830a75e290fe38</anchor>
      <arglist>(void *ptr, yy_size_t size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yy_flex_free</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>d4ebdce473dca5ef33981db2c2a0a96c</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yyleng</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>afb4ad10f49e2a3b9275222d07629ab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>yyin</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>e134f99f6fc937a607ba4c54f64ccaf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>yyout</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>36c1a2c6070809c52a9efe0d7bf1882a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static YY_BUFFER_STATE</type>
      <name>yy_current_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>83f15f036a6ff61520133ec0e001e647</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static char</type>
      <name>yy_hold_char</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>77829b451819758cd2fcf659a38c7cee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_n_chars</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>642c4af8fd52ad519cba7d1fd0f28197</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yyleng</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>afb4ad10f49e2a3b9275222d07629ab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static char *</type>
      <name>yy_c_buf_p</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>3d0e732d839f77e12e1b658a5a00dfd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_init</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>6de0f4794c87565f9276e0508e04da00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_start</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>118cacf4e96cfa6859b0f51987936d9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_did_buffer_switch_on_eof</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>13e75394703b58d39cfe27e05334bdfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>yyin</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>e134f99f6fc937a607ba4c54f64ccaf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>yyout</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>36c1a2c6070809c52a9efe0d7bf1882a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>yytext</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>34db6f7f5bf07449c1a1621c5d0b5b94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static short int</type>
      <name>yy_accept</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>6782ec79136da7d62fdd0b204581c7e0</anchor>
      <arglist>[96]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_ec</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>d5d4e13d6c32ffd0213b397b5102b34e</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_meta</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>bbdb092c8b80ec89d5e6e4a8afda64f2</anchor>
      <arglist>[47]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static short int</type>
      <name>yy_base</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>2a90758def6c1c5ec0231a0ce38636b6</anchor>
      <arglist>[103]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static short int</type>
      <name>yy_def</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>4818e415b7a88164a08e3baefb384dbe</anchor>
      <arglist>[103]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static short int</type>
      <name>yy_nxt</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>c890e47d222847fa72bf4144bf98c9bd</anchor>
      <arglist>[206]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static short int</type>
      <name>yy_chk</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>923a1f570f7cdf5d262fcf06cfe1eabe</anchor>
      <arglist>[206]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static yy_state_type</type>
      <name>yy_last_accepting_state</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>28cabaa9f2a3528f900f187d03a9a4c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static char *</type>
      <name>yy_last_accepting_cpos</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>fd153f39e3ea903a050712a745cd2ba8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>yytext</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>34db6f7f5bf07449c1a1621c5d0b5b94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static YY_BUFFER_STATE</type>
      <name>s_include_stack</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>e87c9bedcfbc98a3222cca5f9ae34587</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>s_include_stack_top</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>1e68e952670a87ad7428e7fafc15a27b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Schedule.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Schedule_8C</filename>
    <includes id="Schedule_8h" name="Schedule.h" local="yes" imported="no">SAMRAI/tbox/Schedule.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <member kind="typedef">
      <type>List&lt; Pointer&lt; Transaction &gt; &gt;::Iterator</type>
      <name>Iterator</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>6f4427cfec81529d010e58af7923031d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Schedule.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Schedule_8h</filename>
    <includes id="AsyncCommPeer_8h" name="AsyncCommPeer.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommPeer.h</includes>
    <includes id="AsyncCommStage_8h" name="AsyncCommStage.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommStage.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MessageStream_8h" name="MessageStream.h" local="yes" imported="no">SAMRAI/tbox/MessageStream.h</includes>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::Schedule</class>
  </compound>
  <compound kind="file">
    <name>Serializable.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Serializable_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::Serializable</class>
  </compound>
  <compound kind="file">
    <name>SiloDatabase.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>SiloDatabase_8C</filename>
    <includes id="SiloDatabase_8h" name="SiloDatabase.h" local="yes" imported="no">SAMRAI/tbox/SiloDatabase.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>SiloDatabase.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>SiloDatabase_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="DatabaseBox_8h" name="DatabaseBox.h" local="yes" imported="no">SAMRAI/tbox/DatabaseBox.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::SiloDatabase</class>
  </compound>
  <compound kind="file">
    <name>SiloDatabaseFactory.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>SiloDatabaseFactory_8C</filename>
    <includes id="SiloDatabaseFactory_8h" name="SiloDatabaseFactory.h" local="yes" imported="no">SAMRAI/tbox/SiloDatabaseFactory.h</includes>
    <includes id="SiloDatabase_8h" name="SiloDatabase.h" local="yes" imported="no">SAMRAI/tbox/SiloDatabase.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>SiloDatabaseFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>SiloDatabaseFactory_8h</filename>
    <includes id="DatabaseFactory_8h" name="DatabaseFactory.h" local="yes" imported="no">SAMRAI/tbox/DatabaseFactory.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::SiloDatabaseFactory</class>
  </compound>
  <compound kind="file">
    <name>StartupShutdownManager.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>StartupShutdownManager_8C</filename>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>StartupShutdownManager.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>StartupShutdownManager_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::StartupShutdownManager</class>
    <class kind="class">SAMRAI::tbox::StartupShutdownManager::AbstractHandler</class>
    <class kind="class">SAMRAI::tbox::StartupShutdownManager::Handler</class>
  </compound>
  <compound kind="file">
    <name>Statistic.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Statistic_8C</filename>
    <includes id="Statistic_8h" name="Statistic.h" local="yes" imported="no">SAMRAI/tbox/Statistic.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Statistic_8I" name="Statistic.I" local="yes" imported="no">SAMRAI/tbox/Statistic.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Statistic.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Statistic_8h</filename>
    <includes id="MessageStream_8h" name="MessageStream.h" local="yes" imported="no">SAMRAI/tbox/MessageStream.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::Statistic</class>
    <class kind="struct">SAMRAI::tbox::Statistic::ProcStat</class>
    <class kind="struct">SAMRAI::tbox::Statistic::PatchStatRecord</class>
    <class kind="struct">SAMRAI::tbox::Statistic::PatchStat</class>
  </compound>
  <compound kind="file">
    <name>Statistic.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Statistic_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Statistician.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Statistician_8C</filename>
    <includes id="Statistician_8h" name="Statistician.h" local="yes" imported="no">SAMRAI/tbox/Statistician.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Schedule_8h" name="Schedule.h" local="yes" imported="no">SAMRAI/tbox/Schedule.h</includes>
    <includes id="StatTransaction_8h" name="StatTransaction.h" local="yes" imported="no">SAMRAI/tbox/StatTransaction.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Statistician_8I" name="Statistician.I" local="yes" imported="no">SAMRAI/tbox/Statistician.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Statistician.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Statistician_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <includes id="Statistic_8h" name="Statistic.h" local="yes" imported="no">SAMRAI/tbox/Statistic.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::Statistician</class>
    <class kind="class">SAMRAI::tbox::StatisticRestartDatabase</class>
  </compound>
  <compound kind="file">
    <name>Statistician.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Statistician_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>StatTransaction.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>StatTransaction_8C</filename>
    <includes id="StatTransaction_8h" name="StatTransaction.h" local="yes" imported="no">SAMRAI/tbox/StatTransaction.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>StatTransaction.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>StatTransaction_8h</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Statistic_8h" name="Statistic.h" local="yes" imported="no">SAMRAI/tbox/Statistic.h</includes>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::StatTransaction</class>
  </compound>
  <compound kind="file">
    <name>Timer.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Timer_8C</filename>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Timer_8I" name="Timer.I" local="yes" imported="no">SAMRAI/tbox/Timer.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Timer.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Timer_8h</filename>
    <includes id="Clock_8h" name="Clock.h" local="yes" imported="no">SAMRAI/tbox/Clock.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::Timer</class>
  </compound>
  <compound kind="file">
    <name>Timer.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Timer_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>TimerManager.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>TimerManager_8C</filename>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="InputDatabase_8h" name="InputDatabase.h" local="yes" imported="no">SAMRAI/tbox/InputDatabase.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>TimerManager.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>TimerManager_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::TimerManager</class>
  </compound>
  <compound kind="file">
    <name>Tracer.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Tracer_8C</filename>
    <includes id="Tracer_8h" name="Tracer.h" local="yes" imported="no">SAMRAI/tbox/Tracer.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Tracer_8I" name="Tracer.I" local="yes" imported="no">SAMRAI/tbox/Tracer.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Tracer.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Tracer_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::Tracer</class>
  </compound>
  <compound kind="file">
    <name>Tracer.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Tracer_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Transaction.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Transaction_8C</filename>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Transaction.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Transaction_8h</filename>
    <includes id="MessageStream_8h" name="MessageStream.h" local="yes" imported="no">SAMRAI/tbox/MessageStream.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::Transaction</class>
  </compound>
  <compound kind="file">
    <name>Utilities.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Utilities_8C</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="Logger_8h" name="Logger.h" local="yes" imported="no">SAMRAI/tbox/Logger.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Utilities.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>Utilities_8h</filename>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <includes id="Logger_8h" name="Logger.h" local="yes" imported="no">SAMRAI/tbox/Logger.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="struct">SAMRAI::tbox::Utilities</class>
    <member kind="define">
      <type>#define</type>
      <name>NULL_STATEMENT</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>19b2e04708e679c250a9056cf2d88df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NULL_USE</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>7e800f451e7190efaf128d6a10ae04e2</anchor>
      <arglist>(variable)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_ERROR</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>0f7312139c387188f90b7d326801f51a</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_WARNING</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>0186e6c6b1334d36283e811f33b343db</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DEBUG</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>d2c4d12543f2e690e010f33d22b46abb</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_ASSERT</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>5de8bb3c49e7f83de8552c689a07a423</anchor>
      <arglist>(EXP)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_ASSERT_MSG</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>011b2edb52a4cd128f23cabf8538993f</anchor>
      <arglist>(EXP, MSG)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DEV_ASSERT</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>bc0f65a049ff12393f105e2425b029c2</anchor>
      <arglist>(EXP)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_DIM</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>89e3488993482fa34cb345d34c0ae66f</anchor>
      <arglist>(dim)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_DIM_ALLOW_UNINITIALIZED</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>eece9c73d5e1589b8792f0675d7dfd6b</anchor>
      <arglist>(dim)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_ARGS1</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>e695f2b7a7a43952f971b5756b3c7719</anchor>
      <arglist>(arg1)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_ARGS2</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>b0231ad5580016067a0fe135a74d61f5</anchor>
      <arglist>(arg1, arg2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_ARGS3</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>8ce3686f5218b386dc529f011fdf4143</anchor>
      <arglist>(arg1, arg2, arg3)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_ARGS4</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>812847fa41747af1ca3e9bca97389c72</anchor>
      <arglist>(arg1, arg2, arg3, arg4)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_ARGS5</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>7c9d46a0f176f33b1442376d3c2aaf34</anchor>
      <arglist>(arg1, arg2, arg3, arg4, arg5)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_ARGS6</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>a35464358be441359099c8cfd299681f</anchor>
      <arglist>(arg1, arg2, arg3, arg4, arg5, arg6)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_ARGS7</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>95fb48aa1233b1511cbf2a3ba70b2e4e</anchor>
      <arglist>(arg1, arg2, arg3, arg4, arg5, arg6, arg7)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_DIM_ARGS1</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>9047d209e9b6da9e8c677c487c1c3f04</anchor>
      <arglist>(dim, arg1)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_DIM_ARGS2</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>4a4aeade4e21d8fac96f716e6cb51127</anchor>
      <arglist>(dim, arg1, arg2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_DIM_ARGS3</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>068fd60743231f16d5ac61e1e49e5a9d</anchor>
      <arglist>(dim, arg1, arg2, arg3)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_DIM_ARGS4</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>1b361c4ef6afe85b1eb2e34c24d02859</anchor>
      <arglist>(dim, arg1, arg2, arg3, arg4)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_DIM_ARGS5</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>03e1a8f0b134532a6e5294edcff72f69</anchor>
      <arglist>(dim, arg1, arg2, arg3, arg4, arg5)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_DIM_ARGS6</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>cf707e13a600c48604114210264d660a</anchor>
      <arglist>(dim, arg1, arg2, arg3, arg4, arg5, arg6)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_DIM_ARGS7</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>15af5ded649d9364e4adb48e8b180b47</anchor>
      <arglist>(dim, arg1, arg2, arg3, arg4, arg5, arg6, arg7)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_DIM_ARGS8</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>8a37f80668b175e784df274bb303506b</anchor>
      <arglist>(dim, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>3e8d6eee81149cc8aed08d81723b3afb</anchor>
      <arglist>(EXP)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PETSC_SAMRAI_ERROR</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>155dbe56b1b8e091c8d04a3e9f391f36</anchor>
      <arglist>(ierr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vector.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/tbox/</path>
    <filename>vector_8h</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <class kind="class">SAMRAI::tbox::vector</class>
  </compound>
  <compound kind="file">
    <name>BoxGeometryVariableFillPattern.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>BoxGeometryVariableFillPattern_8C</filename>
    <includes id="BoxGeometryVariableFillPattern_8h" name="BoxGeometryVariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/BoxGeometryVariableFillPattern.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>BoxGeometryVariableFillPattern.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>BoxGeometryVariableFillPattern_8h</filename>
    <includes id="VariableFillPattern_8h" name="VariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/VariableFillPattern.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::BoxGeometryVariableFillPattern</class>
  </compound>
  <compound kind="file">
    <name>CoarsenAlgorithm.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>CoarsenAlgorithm_8C</filename>
    <includes id="CoarsenAlgorithm_8h" name="CoarsenAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/CoarsenAlgorithm.h</includes>
    <includes id="StandardCoarsenTransactionFactory_8h" name="StandardCoarsenTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/StandardCoarsenTransactionFactory.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenAlgorithm.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>CoarsenAlgorithm_8h</filename>
    <includes id="CoarsenClasses_8h" name="CoarsenClasses.h" local="yes" imported="no">SAMRAI/xfer/CoarsenClasses.h</includes>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="CoarsenSchedule_8h" name="CoarsenSchedule.h" local="yes" imported="no">SAMRAI/xfer/CoarsenSchedule.h</includes>
    <includes id="CoarsenPatchStrategy_8h" name="CoarsenPatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/CoarsenPatchStrategy.h</includes>
    <includes id="CoarsenTransactionFactory_8h" name="CoarsenTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/CoarsenTransactionFactory.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::CoarsenAlgorithm</class>
  </compound>
  <compound kind="file">
    <name>CoarsenClasses.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>CoarsenClasses_8C</filename>
    <includes id="CoarsenClasses_8h" name="CoarsenClasses.h" local="yes" imported="no">SAMRAI/xfer/CoarsenClasses.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CoarsenClasses_8I" name="CoarsenClasses.I" local="yes" imported="no">SAMRAI/xfer/CoarsenClasses.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenClasses.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>CoarsenClasses_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="VariableFillPattern_8h" name="VariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/VariableFillPattern.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::CoarsenClasses</class>
    <class kind="class">SAMRAI::xfer::CoarsenClasses::Data</class>
  </compound>
  <compound kind="file">
    <name>CoarsenClasses.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>CoarsenClasses_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenCopyTransaction.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>CoarsenCopyTransaction_8C</filename>
    <includes id="CoarsenCopyTransaction_8h" name="CoarsenCopyTransaction.h" local="yes" imported="no">SAMRAI/xfer/CoarsenCopyTransaction.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="CoarsenClasses_8h" name="CoarsenClasses.h" local="yes" imported="no">SAMRAI/xfer/CoarsenClasses.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenCopyTransaction.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>CoarsenCopyTransaction_8h</filename>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="CoarsenClasses_8h" name="CoarsenClasses.h" local="yes" imported="no">SAMRAI/xfer/CoarsenClasses.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::CoarsenCopyTransaction</class>
  </compound>
  <compound kind="file">
    <name>CoarsenPatchStrategy.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>CoarsenPatchStrategy_8C</filename>
    <includes id="CoarsenPatchStrategy_8h" name="CoarsenPatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/CoarsenPatchStrategy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenPatchStrategy.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>CoarsenPatchStrategy_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::CoarsenPatchStrategy</class>
  </compound>
  <compound kind="file">
    <name>CoarsenSchedule.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>CoarsenSchedule_8C</filename>
    <includes id="CoarsenSchedule_8h" name="CoarsenSchedule.h" local="yes" imported="no">SAMRAI/xfer/CoarsenSchedule.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="InputManager_8h" name="InputManager.h" local="yes" imported="no">SAMRAI/tbox/InputManager.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CoarsenCopyTransaction_8h" name="CoarsenCopyTransaction.h" local="yes" imported="no">SAMRAI/xfer/CoarsenCopyTransaction.h</includes>
    <includes id="PatchLevelInteriorFillPattern_8h" name="PatchLevelInteriorFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelInteriorFillPattern.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenSchedule.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>CoarsenSchedule_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Schedule_8h" name="Schedule.h" local="yes" imported="no">SAMRAI/tbox/Schedule.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="CoarsenClasses_8h" name="CoarsenClasses.h" local="yes" imported="no">SAMRAI/xfer/CoarsenClasses.h</includes>
    <includes id="CoarsenPatchStrategy_8h" name="CoarsenPatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/CoarsenPatchStrategy.h</includes>
    <includes id="RefineAlgorithm_8h" name="RefineAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/RefineAlgorithm.h</includes>
    <includes id="RefineSchedule_8h" name="RefineSchedule.h" local="yes" imported="no">SAMRAI/xfer/RefineSchedule.h</includes>
    <includes id="CoarsenTransactionFactory_8h" name="CoarsenTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/CoarsenTransactionFactory.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::CoarsenSchedule</class>
  </compound>
  <compound kind="file">
    <name>CoarsenTransactionFactory.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>CoarsenTransactionFactory_8C</filename>
    <includes id="CoarsenTransactionFactory_8h" name="CoarsenTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/CoarsenTransactionFactory.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenTransactionFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>CoarsenTransactionFactory_8h</filename>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="CoarsenClasses_8h" name="CoarsenClasses.h" local="yes" imported="no">SAMRAI/xfer/CoarsenClasses.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::CoarsenTransactionFactory</class>
  </compound>
  <compound kind="file">
    <name>manual_datamovers.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/dox/</path>
    <filename>manual__datamovers_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>manual_operators.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/dox/</path>
    <filename>xfer_2dox_2manual__operators_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>manual_operators.dox</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/pdat/dox/</path>
    <filename>pdat_2dox_2manual__operators_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>PatchInteriorVariableFillPattern.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>PatchInteriorVariableFillPattern_8C</filename>
    <includes id="PatchInteriorVariableFillPattern_8h" name="PatchInteriorVariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchInteriorVariableFillPattern.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchInteriorVariableFillPattern.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>PatchInteriorVariableFillPattern_8h</filename>
    <includes id="VariableFillPattern_8h" name="VariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/VariableFillPattern.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::PatchInteriorVariableFillPattern</class>
  </compound>
  <compound kind="file">
    <name>PatchLevelBorderAndInteriorFillPattern.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>PatchLevelBorderAndInteriorFillPattern_8C</filename>
    <includes id="PatchLevelBorderAndInteriorFillPattern_8h" name="PatchLevelBorderAndInteriorFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelBorderAndInteriorFillPattern.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="PatchLevelBorderAndInteriorFillPattern_8I" name="PatchLevelBorderAndInteriorFillPattern.I" local="yes" imported="no">SAMRAI/xfer/PatchLevelBorderAndInteriorFillPattern.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelBorderAndInteriorFillPattern.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>PatchLevelBorderAndInteriorFillPattern_8h</filename>
    <includes id="PatchLevelFillPattern_8h" name="PatchLevelFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelFillPattern.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::PatchLevelBorderAndInteriorFillPattern</class>
  </compound>
  <compound kind="file">
    <name>PatchLevelBorderAndInteriorFillPattern.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>PatchLevelBorderAndInteriorFillPattern_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelBorderFillPattern.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>PatchLevelBorderFillPattern_8C</filename>
    <includes id="PatchLevelBorderFillPattern_8h" name="PatchLevelBorderFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelBorderFillPattern.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="PatchLevelBorderFillPattern_8I" name="PatchLevelBorderFillPattern.I" local="yes" imported="no">SAMRAI/xfer/PatchLevelBorderFillPattern.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelBorderFillPattern.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>PatchLevelBorderFillPattern_8h</filename>
    <includes id="PatchLevelFillPattern_8h" name="PatchLevelFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelFillPattern.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::PatchLevelBorderFillPattern</class>
  </compound>
  <compound kind="file">
    <name>PatchLevelBorderFillPattern.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>PatchLevelBorderFillPattern_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelEnhancedFillPattern.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>PatchLevelEnhancedFillPattern_8C</filename>
    <includes id="PatchLevelEnhancedFillPattern_8h" name="PatchLevelEnhancedFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelEnhancedFillPattern.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="PatchLevelEnhancedFillPattern_8I" name="PatchLevelEnhancedFillPattern.I" local="yes" imported="no">SAMRAI/xfer/PatchLevelEnhancedFillPattern.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelEnhancedFillPattern.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>PatchLevelEnhancedFillPattern_8h</filename>
    <includes id="PatchLevelFillPattern_8h" name="PatchLevelFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelFillPattern.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::PatchLevelEnhancedFillPattern</class>
  </compound>
  <compound kind="file">
    <name>PatchLevelEnhancedFillPattern.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>PatchLevelEnhancedFillPattern_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelFillPattern.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>PatchLevelFillPattern_8C</filename>
    <includes id="PatchLevelFillPattern_8h" name="PatchLevelFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelFillPattern.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelFillPattern.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>PatchLevelFillPattern_8h</filename>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="NeighborhoodSet_8h" name="NeighborhoodSet.h" local="yes" imported="no">SAMRAI/hier/NeighborhoodSet.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::PatchLevelFillPattern</class>
  </compound>
  <compound kind="file">
    <name>PatchLevelFullFillPattern.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>PatchLevelFullFillPattern_8C</filename>
    <includes id="PatchLevelFullFillPattern_8h" name="PatchLevelFullFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelFullFillPattern.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="PatchLevelFullFillPattern_8I" name="PatchLevelFullFillPattern.I" local="yes" imported="no">SAMRAI/xfer/PatchLevelFullFillPattern.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelFullFillPattern.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>PatchLevelFullFillPattern_8h</filename>
    <includes id="PatchLevelFillPattern_8h" name="PatchLevelFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelFillPattern.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::PatchLevelFullFillPattern</class>
  </compound>
  <compound kind="file">
    <name>PatchLevelFullFillPattern.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>PatchLevelFullFillPattern_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelInteriorFillPattern.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>PatchLevelInteriorFillPattern_8C</filename>
    <includes id="PatchLevelInteriorFillPattern_8h" name="PatchLevelInteriorFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelInteriorFillPattern.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="PatchLevelInteriorFillPattern_8I" name="PatchLevelInteriorFillPattern.I" local="yes" imported="no">SAMRAI/xfer/PatchLevelInteriorFillPattern.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelInteriorFillPattern.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>PatchLevelInteriorFillPattern_8h</filename>
    <includes id="PatchLevelFillPattern_8h" name="PatchLevelFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelFillPattern.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::PatchLevelInteriorFillPattern</class>
  </compound>
  <compound kind="file">
    <name>PatchLevelInteriorFillPattern.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>PatchLevelInteriorFillPattern_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefineAlgorithm.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>RefineAlgorithm_8C</filename>
    <includes id="RefineAlgorithm_8h" name="RefineAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/RefineAlgorithm.h</includes>
    <includes id="BoxGeometryVariableFillPattern_8h" name="BoxGeometryVariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/BoxGeometryVariableFillPattern.h</includes>
    <includes id="PatchLevelFullFillPattern_8h" name="PatchLevelFullFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelFullFillPattern.h</includes>
    <includes id="StandardRefineTransactionFactory_8h" name="StandardRefineTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/StandardRefineTransactionFactory.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefineAlgorithm.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>RefineAlgorithm_8h</filename>
    <includes id="BoxGeometryVariableFillPattern_8h" name="BoxGeometryVariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/BoxGeometryVariableFillPattern.h</includes>
    <includes id="RefineClasses_8h" name="RefineClasses.h" local="yes" imported="no">SAMRAI/xfer/RefineClasses.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <includes id="RefineSchedule_8h" name="RefineSchedule.h" local="yes" imported="no">SAMRAI/xfer/RefineSchedule.h</includes>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="VariableFillPattern_8h" name="VariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/VariableFillPattern.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::RefineAlgorithm</class>
  </compound>
  <compound kind="file">
    <name>RefineClasses.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>RefineClasses_8C</filename>
    <includes id="RefineClasses_8h" name="RefineClasses.h" local="yes" imported="no">SAMRAI/xfer/RefineClasses.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="RefineClasses_8I" name="RefineClasses.I" local="yes" imported="no">SAMRAI/xfer/RefineClasses.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefineClasses.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>RefineClasses_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="VariableFillPattern_8h" name="VariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/VariableFillPattern.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::RefineClasses</class>
    <class kind="struct">SAMRAI::xfer::RefineClasses::Data</class>
  </compound>
  <compound kind="file">
    <name>RefineClasses.I</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>RefineClasses_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefineCopyTransaction.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>RefineCopyTransaction_8C</filename>
    <includes id="RefineCopyTransaction_8h" name="RefineCopyTransaction.h" local="yes" imported="no">SAMRAI/xfer/RefineCopyTransaction.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefineCopyTransaction.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>RefineCopyTransaction_8h</filename>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="RefineClasses_8h" name="RefineClasses.h" local="yes" imported="no">SAMRAI/xfer/RefineClasses.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::RefineCopyTransaction</class>
  </compound>
  <compound kind="file">
    <name>RefinePatchStrategy.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>RefinePatchStrategy_8C</filename>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefinePatchStrategy.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>RefinePatchStrategy_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::RefinePatchStrategy</class>
  </compound>
  <compound kind="file">
    <name>RefineSchedule.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>RefineSchedule_8C</filename>
    <includes id="RefineSchedule_8h" name="RefineSchedule.h" local="yes" imported="no">SAMRAI/xfer/RefineSchedule.h</includes>
    <includes id="BoxGeometryVariableFillPattern_8h" name="BoxGeometryVariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/BoxGeometryVariableFillPattern.h</includes>
    <includes id="PatchLevelFullFillPattern_8h" name="PatchLevelFullFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelFullFillPattern.h</includes>
    <includes id="RefineCopyTransaction_8h" name="RefineCopyTransaction.h" local="yes" imported="no">SAMRAI/xfer/RefineCopyTransaction.h</includes>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <includes id="RefineScheduleConnectorWidthRequestor_8h" name="RefineScheduleConnectorWidthRequestor.h" local="yes" imported="no">SAMRAI/xfer/RefineScheduleConnectorWidthRequestor.h</includes>
    <includes id="RefineTimeTransaction_8h" name="RefineTimeTransaction.h" local="yes" imported="no">SAMRAI/xfer/RefineTimeTransaction.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="BoxLevelConnectorUtils_8h" name="BoxLevelConnectorUtils.h" local="yes" imported="no">SAMRAI/hier/BoxLevelConnectorUtils.h</includes>
    <includes id="MappingConnectorAlgorithm_8h" name="MappingConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/MappingConnectorAlgorithm.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="PatchGeometry_8h" name="PatchGeometry.h" local="yes" imported="no">SAMRAI/hier/PatchGeometry.h</includes>
    <includes id="AsyncCommPeer_8h" name="AsyncCommPeer.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommPeer.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="InputManager_8h" name="InputManager.h" local="yes" imported="no">SAMRAI/tbox/InputManager.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <member kind="function" static="yes">
      <type>static const std::string</type>
      <name>errbord</name>
      <anchorfile>namespaceSAMRAI_1_1xfer.html</anchorfile>
      <anchor>33e05d79fd4da53041ede722b15cc2bf</anchor>
      <arglist>(&quot;E-&gt; &quot;)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>logbord</name>
      <anchorfile>namespaceSAMRAI_1_1xfer.html</anchorfile>
      <anchor>d974ddaa858d37b968e7636d40258aa6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RefineSchedule.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>RefineSchedule_8h</filename>
    <includes id="PatchLevelFillPattern_8h" name="PatchLevelFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelFillPattern.h</includes>
    <includes id="RefineClasses_8h" name="RefineClasses.h" local="yes" imported="no">SAMRAI/xfer/RefineClasses.h</includes>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <includes id="RefineTransactionFactory_8h" name="RefineTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/RefineTransactionFactory.h</includes>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Schedule_8h" name="Schedule.h" local="yes" imported="no">SAMRAI/tbox/Schedule.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::RefineSchedule</class>
  </compound>
  <compound kind="file">
    <name>RefineScheduleConnectorWidthRequestor.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>RefineScheduleConnectorWidthRequestor_8C</filename>
    <includes id="RefineScheduleConnectorWidthRequestor_8h" name="RefineScheduleConnectorWidthRequestor.h" local="yes" imported="no">SAMRAI/xfer/RefineScheduleConnectorWidthRequestor.h</includes>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefineScheduleConnectorWidthRequestor.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>RefineScheduleConnectorWidthRequestor_8h</filename>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::RefineScheduleConnectorWidthRequestor</class>
  </compound>
  <compound kind="file">
    <name>RefineTimeTransaction.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>RefineTimeTransaction_8C</filename>
    <includes id="RefineTimeTransaction_8h" name="RefineTimeTransaction.h" local="yes" imported="no">SAMRAI/xfer/RefineTimeTransaction.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefineTimeTransaction.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>RefineTimeTransaction_8h</filename>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="RefineClasses_8h" name="RefineClasses.h" local="yes" imported="no">SAMRAI/xfer/RefineClasses.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::RefineTimeTransaction</class>
  </compound>
  <compound kind="file">
    <name>RefineTransactionFactory.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>RefineTransactionFactory_8C</filename>
    <includes id="RefineTransactionFactory_8h" name="RefineTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/RefineTransactionFactory.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefineTransactionFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>RefineTransactionFactory_8h</filename>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="RefineClasses_8h" name="RefineClasses.h" local="yes" imported="no">SAMRAI/xfer/RefineClasses.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::RefineTransactionFactory</class>
  </compound>
  <compound kind="file">
    <name>StandardCoarsenTransactionFactory.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>StandardCoarsenTransactionFactory_8C</filename>
    <includes id="StandardCoarsenTransactionFactory_8h" name="StandardCoarsenTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/StandardCoarsenTransactionFactory.h</includes>
    <includes id="CoarsenCopyTransaction_8h" name="CoarsenCopyTransaction.h" local="yes" imported="no">SAMRAI/xfer/CoarsenCopyTransaction.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>StandardCoarsenTransactionFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>StandardCoarsenTransactionFactory_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <includes id="CoarsenClasses_8h" name="CoarsenClasses.h" local="yes" imported="no">SAMRAI/xfer/CoarsenClasses.h</includes>
    <includes id="CoarsenTransactionFactory_8h" name="CoarsenTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/CoarsenTransactionFactory.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::StandardCoarsenTransactionFactory</class>
  </compound>
  <compound kind="file">
    <name>StandardRefineTransactionFactory.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>StandardRefineTransactionFactory_8C</filename>
    <includes id="StandardRefineTransactionFactory_8h" name="StandardRefineTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/StandardRefineTransactionFactory.h</includes>
    <includes id="RefineCopyTransaction_8h" name="RefineCopyTransaction.h" local="yes" imported="no">SAMRAI/xfer/RefineCopyTransaction.h</includes>
    <includes id="RefineTimeTransaction_8h" name="RefineTimeTransaction.h" local="yes" imported="no">SAMRAI/xfer/RefineTimeTransaction.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>StandardRefineTransactionFactory.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>StandardRefineTransactionFactory_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <includes id="RefineClasses_8h" name="RefineClasses.h" local="yes" imported="no">SAMRAI/xfer/RefineClasses.h</includes>
    <includes id="RefineTransactionFactory_8h" name="RefineTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/RefineTransactionFactory.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::StandardRefineTransactionFactory</class>
  </compound>
  <compound kind="file">
    <name>VariableFillPattern.C</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>VariableFillPattern_8C</filename>
    <includes id="VariableFillPattern_8h" name="VariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/VariableFillPattern.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>VariableFillPattern.h</name>
    <path>/usr/mic/bdiv/arrighi/3.3.3/MASTER/source/SAMRAI/xfer/</path>
    <filename>VariableFillPattern_8h</filename>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <class kind="class">SAMRAI::xfer::VariableFillPattern</class>
  </compound>
  <compound kind="page">
    <name>toolbox_complex</name>
    <title>Toolbox Complex Type</title>
    <filename>toolbox_complex</filename>
  </compound>
  <compound kind="page">
    <name>package_toolbox</name>
    <title>The Toolbox Package</title>
    <filename>package_toolbox</filename>
  </compound>
  <compound kind="page">
    <name>package_toolbox_base</name>
    <title>Base Toolbox Classes</title>
    <filename>package_toolbox_base</filename>
  </compound>
  <compound kind="page">
    <name>package_toolbox_database</name>
    <title>Generic Database Support</title>
    <filename>package_toolbox_database</filename>
  </compound>
  <compound kind="page">
    <name>package_toolbox_inputdb</name>
    <title>Input Database</title>
    <filename>package_toolbox_inputdb</filename>
  </compound>
  <compound kind="page">
    <name>package_toolbox_memory</name>
    <title>Memory Support</title>
    <filename>package_toolbox_memory</filename>
  </compound>
  <compound kind="page">
    <name>package_toolbox_parallel</name>
    <title>Parallel Toolbox Classes</title>
    <filename>package_toolbox_parallel</filename>
  </compound>
  <compound kind="page">
    <name>package_toolbox_restartdb</name>
    <title>Restart Database</title>
    <filename>package_toolbox_restartdb</filename>
  </compound>
  <compound kind="page">
    <name>package_toolbox_stream</name>
    <title>Stream Toolbox Classes</title>
    <filename>package_toolbox_stream</filename>
  </compound>
  <compound kind="page">
    <name>package_toolbox_timers</name>
    <title>Timer Classes</title>
    <filename>package_toolbox_timers</filename>
  </compound>
  <compound kind="page">
    <name>package_hierarchy</name>
    <title>The Hierarchy Package</title>
    <filename>package_hierarchy</filename>
  </compound>
  <compound kind="page">
    <name>package_hierarchy_boxes</name>
    <title>Box Calculus</title>
    <filename>package_hierarchy_boxes</filename>
  </compound>
  <compound kind="page">
    <name>package_hierarchy_dlbg</name>
    <title>Distributed Mesh Metadata</title>
    <filename>package_hierarchy_dlbg</filename>
  </compound>
  <compound kind="page">
    <name>package_hierarchy_patches</name>
    <title>AMR Patch Hierarchy Management</title>
    <filename>package_hierarchy_patches</filename>
  </compound>
  <compound kind="page">
    <name>package_hierarchy_transfer</name>
    <title>Data transfer interfaces</title>
    <filename>package_hierarchy_transfer</filename>
  </compound>
  <compound kind="page">
    <name>package_hierarchy_variables</name>
    <title>AMR Patch Data and Variable Management</title>
    <filename>package_hierarchy_variables</filename>
  </compound>
  <compound kind="page">
    <name>package_transfer</name>
    <title>The Transfer Package</title>
    <filename>package_transfer</filename>
  </compound>
  <compound kind="page">
    <name>package_transfer_datamovers</name>
    <title>Support for Moving Data on SAMR Meshes</title>
    <filename>package_transfer_datamovers</filename>
  </compound>
  <compound kind="page">
    <name>package_transfer_operators</name>
    <title>Patch Data Transfer Operators</title>
    <filename>package_transfer_operators</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata</name>
    <title>The Patchdata Package</title>
    <filename>package_patchdata</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_array</name>
    <title>Array-based Patch Data Support</title>
    <filename>package_patchdata_array</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_boxgeometry</name>
    <title>Box Geometry Computation</title>
    <filename>package_patchdata_boxgeometry</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_cell</name>
    <title>Cell Patch Data</title>
    <filename>package_patchdata_cell</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_edge</name>
    <title>Edge Patch Data</title>
    <filename>package_patchdata_edge</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_face</name>
    <title>Face Patch Data</title>
    <filename>package_patchdata_face</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_fortran</name>
    <title>Support for Patch Data Numerical Routines in FORTRAN</title>
    <filename>package_patchdata_fortran</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_index</name>
    <title>Index Patch Data</title>
    <filename>package_patchdata_index</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_multiblock</name>
    <title>Multiblock Patch Data Operations</title>
    <filename>package_patchdata_multiblock</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_node</name>
    <title>Node Patch Data</title>
    <filename>package_patchdata_node</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_operators</name>
    <title>Mesh-Independent operators</title>
    <filename>package_patchdata_operators</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_operators_constant_cell</name>
    <title>Cell Data Constant Operators</title>
    <filename>package_patchdata_operators_constant_cell</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_operators_constant_outernode</name>
    <title>Outernode Data Constant Operators</title>
    <filename>package_patchdata_operators_constant_outernode</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_operators_time_interpolate</name>
    <title>Time Interpolation Operators</title>
    <filename>package_patchdata_operators_time_interpolate</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_operators_time_interpolate_cell</name>
    <title>Time Interpolation Operators for Cell Data</title>
    <filename>package_patchdata_operators_time_interpolate_cell</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_operators_time_interpolate_fortran</name>
    <title>Time Interpolation Numerical Routines</title>
    <filename>package_patchdata_operators_time_interpolate_fortran</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_outeredge</name>
    <title>Outeredge Patch Data</title>
    <filename>package_patchdata_outeredge</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_outerface</name>
    <title>Outerface Patch Data</title>
    <filename>package_patchdata_outerface</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_outernode</name>
    <title>Outernode Patch Data</title>
    <filename>package_patchdata_outernode</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_outerside</name>
    <title>Outerside Patch Data</title>
    <filename>package_patchdata_outerside</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_side</name>
    <title>Side Patch Data</title>
    <filename>package_patchdata_side</filename>
  </compound>
  <compound kind="page">
    <name>package_mathematical_operations</name>
    <title>Mathematical Operations Package</title>
    <filename>package_mathematical_operations</filename>
  </compound>
  <compound kind="page">
    <name>package_mathops_array</name>
    <title>Basic Array Data Operations</title>
    <filename>package_mathops_array</filename>
  </compound>
  <compound kind="page">
    <name>package_mathops_cell</name>
    <title>Cell Patch Data Operations</title>
    <filename>package_mathops_cell</filename>
  </compound>
  <compound kind="page">
    <name>package_mathops_hierarchy</name>
    <title>Hierarchy Data Operation Base Classes</title>
    <filename>package_mathops_hierarchy</filename>
  </compound>
  <compound kind="page">
    <name>package_mesh</name>
    <title>The Mesh Package</title>
    <filename>package_mesh</filename>
  </compound>
  <compound kind="page">
    <name>package_mesh_clustering</name>
    <title>Box Generation</title>
    <filename>package_mesh_clustering</filename>
  </compound>
  <compound kind="page">
    <name>package_mesh_gridding</name>
    <title>Patch Hierarchy Construction and Adaptive Meshing</title>
    <filename>package_mesh_gridding</filename>
  </compound>
  <compound kind="page">
    <name>package_mesh_load_balance</name>
    <title>Load Balancing</title>
    <filename>package_mesh_load_balance</filename>
  </compound>
  <compound kind="page">
    <name>package_mesh_multiblock</name>
    <title>Multiblock Hierarchy Construction and Adaptive Meshing</title>
    <filename>package_mesh_multiblock</filename>
  </compound>
  <compound kind="page">
    <name>package_geometry</name>
    <title>The Geometry Package</title>
    <filename>package_geometry</filename>
  </compound>
  <compound kind="page">
    <name>package_geometry_cartesian</name>
    <title>Basic Cartesian Mesh Geometry Support</title>
    <filename>package_geometry_cartesian</filename>
  </compound>
  <compound kind="page">
    <name>package_geometry_cartesian_grid_geom</name>
    <title>Cartesian Grid Geometry</title>
    <filename>package_geometry_cartesian_grid_geom</filename>
  </compound>
  <compound kind="page">
    <name>package_geometry_cartesian_operators_cell</name>
    <title>Cell Data Operators</title>
    <filename>package_geometry_cartesian_operators_cell</filename>
  </compound>
  <compound kind="page">
    <name>package_geometry_cartesian_operators_fortran</name>
    <title>Cartesian Transfer Operator Numerical Routines</title>
    <filename>package_geometry_cartesian_operators_fortran</filename>
  </compound>
  <compound kind="page">
    <name>package_geometry_cartesian_patch_geom</name>
    <title>Cartesian Patch Geometry</title>
    <filename>package_geometry_cartesian_patch_geom</filename>
  </compound>
  <compound kind="page">
    <name>package_geometry_skeleton</name>
    <title>Skeleton Geometry Support</title>
    <filename>package_geometry_skeleton</filename>
  </compound>
  <compound kind="page">
    <name>package_geometry_skeleton_grid_geom</name>
    <title>Skeleton Grid Geometry</title>
    <filename>package_geometry_skeleton_grid_geom</filename>
  </compound>
  <compound kind="page">
    <name>package_geometry_skeleton_operators</name>
    <title>Skeleton Operators</title>
    <filename>package_geometry_skeleton_operators</filename>
  </compound>
  <compound kind="page">
    <name>package_geometry_skeleton_patch_geom</name>
    <title>Skeleton Patch Geometry</title>
    <filename>package_geometry_skeleton_patch_geom</filename>
  </compound>
  <compound kind="page">
    <name>package_solvers</name>
    <title>The Solver Package</title>
    <filename>package_solvers</filename>
  </compound>
  <compound kind="page">
    <name>package_solvers_FAC</name>
    <title>FAC preconditioner on a SAMRAI hierarchy</title>
    <filename>package_solvers_FAC</filename>
  </compound>
  <compound kind="page">
    <name>package_solvers_nonlinear</name>
    <title>Nonlinear solver</title>
    <filename>package_solvers_nonlinear</filename>
  </compound>
  <compound kind="page">
    <name>package_solvers_packages</name>
    <title>Interfaces to Solver Libraries</title>
    <filename>package_solvers_packages</filename>
  </compound>
  <compound kind="page">
    <name>package_solvers_packages_petsc</name>
    <title>PETSc Vector Interface</title>
    <filename>package_solvers_packages_petsc</filename>
  </compound>
  <compound kind="page">
    <name>package_solvers_packages_sundials</name>
    <title>Interfaces for the Sundials of Solvers</title>
    <filename>package_solvers_packages_sundials</filename>
  </compound>
  <compound kind="page">
    <name>package_solvers_packages_sundials_cvode</name>
    <title>CVODE ODE solver interface</title>
    <filename>package_solvers_packages_sundials_cvode</filename>
  </compound>
  <compound kind="page">
    <name>package_solvers_packages_sundials_kinsol</name>
    <title>KINSOL Vector and Nonlinear Solver Interface</title>
    <filename>package_solvers_packages_sundials_kinsol</filename>
  </compound>
  <compound kind="page">
    <name>package_solvers_packages_sundials_vector</name>
    <title>Sundials Vector Interface</title>
    <filename>package_solvers_packages_sundials_vector</filename>
  </compound>
  <compound kind="page">
    <name>package_solvers_poisson</name>
    <title>Poisson solvers on a SAMRAI hierarchy</title>
    <filename>package_solvers_poisson</filename>
  </compound>
  <compound kind="page">
    <name>package_solvers_vectors</name>
    <title>SAMRAI Vector Facilities</title>
    <filename>package_solvers_vectors</filename>
  </compound>
  <compound kind="page">
    <name>package_algorithm</name>
    <title>The Algorithm Package</title>
    <filename>package_algorithm</filename>
  </compound>
  <compound kind="page">
    <name>package_algorithm_femutils</name>
    <title>Rudimentary Support for Finite Element Operations on SAMR Meshes</title>
    <filename>package_algorithm_femutils</filename>
  </compound>
  <compound kind="page">
    <name>package_algorithm_hyperbolic</name>
    <title>Hyperbolic Conservation Law Integration</title>
    <filename>package_algorithm_hyperbolic</filename>
  </compound>
  <compound kind="page">
    <name>package_algorithm_implicit</name>
    <title>Implicit time-marching algorithms</title>
    <filename>package_algorithm_implicit</filename>
  </compound>
  <compound kind="page">
    <name>package_algorithm_method_of_lines</name>
    <title>Time Integration with Method of Lines</title>
    <filename>package_algorithm_method_of_lines</filename>
  </compound>
  <compound kind="page">
    <name>package_algorithm_time_refinement</name>
    <title>Time Integration with Local Time Refinement</title>
    <filename>package_algorithm_time_refinement</filename>
  </compound>
  <compound kind="page">
    <name>package_apputils</name>
    <title>The Application Utilities Package</title>
    <filename>package_apputils</filename>
  </compound>
  <compound kind="page">
    <name>package_apputils_boundary</name>
    <title>Support for physical boundary conditions</title>
    <filename>package_apputils_boundary</filename>
  </compound>
  <compound kind="page">
    <name>package_apputils_plotting</name>
    <title>Visualization Data File Generation</title>
    <filename>package_apputils_plotting</filename>
  </compound>
  <compound kind="struct">
    <name>arith_functions</name>
    <filename>structarith__functions.html</filename>
    <member kind="variable">
      <type>string</type>
      <name>d_name</name>
      <anchorfile>structarith__functions.html</anchorfile>
      <anchor>f6f66319e103481941fa534671914cbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double(*</type>
      <name>d_r2r_func</name>
      <anchorfile>structarith__functions.html</anchorfile>
      <anchor>f8099f958134756b774ded2f0ca43ed1</anchor>
      <arglist>)(double)</arglist>
    </member>
    <member kind="variable">
      <type>dcomplex(*</type>
      <name>d_c2c_func</name>
      <anchorfile>structarith__functions.html</anchorfile>
      <anchor>03de813503614a4dedcb6a9752911188</anchor>
      <arglist>)(const dcomplex &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>double(*</type>
      <name>d_c2r_func</name>
      <anchorfile>structarith__functions.html</anchorfile>
      <anchor>7b6057ad385571a41dcff603017d41bc</anchor>
      <arglist>)(const dcomplex &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>KeyData</name>
    <filename>structKeyData.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>d_node_type</name>
      <anchorfile>structKeyData.html</anchorfile>
      <anchor>09fb0a2b09725cd83fa887eadbf51573</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_array_type</name>
      <anchorfile>structKeyData.html</anchorfile>
      <anchor>73432b456f4edd622fef6a1d098fe2bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_array_size</name>
      <anchorfile>structKeyData.html</anchorfile>
      <anchor>78b98837ab49cc1a2fd1bec4e4b56d46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>KeyData *</type>
      <name>d_next</name>
      <anchorfile>structKeyData.html</anchorfile>
      <anchor>fee6a7aef91a69b9124fec6379e8930f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>d_bool</name>
      <anchorfile>structKeyData.html</anchorfile>
      <anchor>6619b337bdb78cd9d9723bc7dfb65b40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DatabaseBox</type>
      <name>d_box</name>
      <anchorfile>structKeyData.html</anchorfile>
      <anchor>12a353367b934d8482977b2fc933fbb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>d_char</name>
      <anchorfile>structKeyData.html</anchorfile>
      <anchor>7b21313f779855075c2d65f011c90168</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dcomplex</type>
      <name>d_complex</name>
      <anchorfile>structKeyData.html</anchorfile>
      <anchor>34f0713cd1ee9822ee8e954c92fbded4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>d_double</name>
      <anchorfile>structKeyData.html</anchorfile>
      <anchor>9bab03ed2657c518da7b4d0a87d7db81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_integer</name>
      <anchorfile>structKeyData.html</anchorfile>
      <anchor>40faceb8641cc657a4a80282f369b239</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>d_string</name>
      <anchorfile>structKeyData.html</anchorfile>
      <anchor>33e3c8b34e53c622f8795cd42071f44b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MDA_Access</name>
    <filename>classMDA__Access.html</filename>
    <templarg>MDA_TYPE</templarg>
    <templarg>MDA_DIM</templarg>
    <templarg>OrderType</templarg>
    <member kind="typedef">
      <type>MDA_TYPE</type>
      <name>value_t</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>e8fad61f79c32d4cd1be3d2f84c4c3b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MDA_IndexRange&lt; MDA_DIM &gt;</type>
      <name>range_t</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>b48ffae8653bd41075cdf5c0ceb27d78</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>range_t::dim_t</type>
      <name>dim_t</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>75dca051be01d09d797285081cdce1f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>range_t::index_t</type>
      <name>index_t</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>1bcf12b2b2eecf89598a7a8a3785b722</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>OrderType</type>
      <name>order_t</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>e1ca7a84cdca4fdc4563858db8685707</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>OrderType::reduced_order_t</type>
      <name>reduced_order_t</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a33acd95c8a890e5a5e6cc3ad4d3a79a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_Access</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>ce3aaf10726f2e796137d6fbb0608596</anchor>
      <arglist>(value_t *p=((value_t *) 0), const size_t *sz=((size_t *) 0), const index_t *st=((index_t *) 0))</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_Access</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>e6d385c570675fc751e80a3b4b71dbd8</anchor>
      <arglist>(value_t *p, const index_t *si, const index_t *sf)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_Access</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>94c8589638ccf05987869b9cd1b629ad</anchor>
      <arglist>(value_t *p, const order_t &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_Access</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>939aecfba464ed56017f4b85b3755111</anchor>
      <arglist>(const MDA_Access &amp;r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SAMRAI_INLINE_KEYWORD</type>
      <name>~MDA_Access</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>3a20f678b74e427ba42ad6b93dbcf414</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>operator bool</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>67c9ef7e3c8feeed20688557584754a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>operator value_t *</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>5f63014c2a735e34c73ef19f5041d12b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD void</type>
      <name>setPointer</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>00d4a7eef6d4ba3670f7d71344a207b6</anchor>
      <arglist>(value_t *p)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD void</type>
      <name>setSizeAndStart</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>bb8012b0d460a578025549019831483f</anchor>
      <arglist>(const size_t *sz=((size_t *) 0), const index_t *st=((index_t *) 0))</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD void</type>
      <name>setInclusiveRange</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>30437ff17ac49607fbd77e0e9f89c4b8</anchor>
      <arglist>(const index_t first[MDA_DIM], const index_t final[MDA_DIM])</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const range_t &amp;</type>
      <name>adjustDim</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>ebc1357c61d39b37f82c727e253e00bb</anchor>
      <arglist>(dim_t d, index_t first, index_t final)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>operator==</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>b5794280af1d342384a470830e0e0a1e</anchor>
      <arglist>(const MDA_Access &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>operator!=</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>3a968cdb20aa61ce170696a890219343</anchor>
      <arglist>(const MDA_Access &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const range_t &amp;</type>
      <name>range</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>097fb6c71b32f70fcfad044e1de1da6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const index_t &amp;</type>
      <name>beg</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>69fb8f9879a23ee552a831a720310aa0</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const index_t &amp;</type>
      <name>end</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>896c56ec53ecda1d3c3a23ca81b6ad53</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const size_t &amp;</type>
      <name>size</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>3c7e844562cf07dcefde5e896dc72a0e</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD value_t &amp;</type>
      <name>operator()</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>aaca6cbcad9e83884c6260c6cd1d7a53</anchor>
      <arglist>(const index_t i[MDA_DIM]) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD value_t &amp;</type>
      <name>operator()</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>c9ff062fb02a5c2d5e38f3f6a12dadd7</anchor>
      <arglist>(index_t i0) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD value_t &amp;</type>
      <name>operator()</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>41deecabb2694eb523927db65bdc08b4</anchor>
      <arglist>(index_t i0, index_t i1) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD value_t &amp;</type>
      <name>operator()</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>11a96de04475559f98ff31941fd32d4f</anchor>
      <arglist>(index_t i0, index_t i1, index_t i2) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD value_t &amp;</type>
      <name>operator()</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>8ff4c47d36b1633a1da0321fc5cd3cfa</anchor>
      <arglist>(index_t i0, index_t i1, index_t i2, index_t i3) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD value_t &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a7e8f57f4d5adaff60009dd0c7c39aa8</anchor>
      <arglist>(index_t i0) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD MDA_Access&lt; MDA_TYPE, OrderType::MDA_Reduced_DIM, typename OrderType::reduced_order_t &gt;</type>
      <name>reduce</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>1563ba9ccd3a20a6f928dbfbf6ef75b2</anchor>
      <arglist>(index_t i) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MDA_AccessConst</name>
    <filename>classMDA__AccessConst.html</filename>
    <templarg>MDA_TYPE</templarg>
    <templarg>MDA_DIM</templarg>
    <templarg>OrderType</templarg>
    <base>MDA_Access</base>
    <member kind="typedef">
      <type>const MDA_TYPE</type>
      <name>value_t</name>
      <anchorfile>classMDA__AccessConst.html</anchorfile>
      <anchor>71039ed2f4e080ff62bea45c4ef13df6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MDA_IndexRange&lt; MDA_DIM &gt;</type>
      <name>range_t</name>
      <anchorfile>classMDA__AccessConst.html</anchorfile>
      <anchor>69f12d56222155f1f4dc5caac169d7bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>range_t::dim_t</type>
      <name>dim_t</name>
      <anchorfile>classMDA__AccessConst.html</anchorfile>
      <anchor>8f6aeff8ab942ae6dfb5483deeea4d3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>range_t::index_t</type>
      <name>index_t</name>
      <anchorfile>classMDA__AccessConst.html</anchorfile>
      <anchor>6428e8814738c68d8acddad4488fae50</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>OrderType</type>
      <name>order_t</name>
      <anchorfile>classMDA__AccessConst.html</anchorfile>
      <anchor>e688337e85ed30cc4a4a65913f8a840d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_AccessConst</name>
      <anchorfile>classMDA__AccessConst.html</anchorfile>
      <anchor>21e1e7142c7df9223d06daca160458f5</anchor>
      <arglist>(value_t *p=((MDA_TYPE *) 0), const size_t *sz=((size_t *) 0), const index_t *st=((index_t *) 0))</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_AccessConst</name>
      <anchorfile>classMDA__AccessConst.html</anchorfile>
      <anchor>9932220d677b36532ba3daa1a627745d</anchor>
      <arglist>(value_t *p, const index_t *si, const index_t *sf)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_AccessConst</name>
      <anchorfile>classMDA__AccessConst.html</anchorfile>
      <anchor>726807ecce7088ac6d959c712e22cd06</anchor>
      <arglist>(value_t *p, const MDA_IndexRange&lt; MDA_DIM &gt; &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_AccessConst</name>
      <anchorfile>classMDA__AccessConst.html</anchorfile>
      <anchor>c04e3fd5068ba4a888644e2747280404</anchor>
      <arglist>(const MDA_Access&lt; MDA_TYPE, MDA_DIM, OrderType &gt; &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const MDA_AccessConst &amp;</type>
      <name>operator=</name>
      <anchorfile>classMDA__AccessConst.html</anchorfile>
      <anchor>4125b197d4d867532ceeb6709f0b39ae</anchor>
      <arglist>(const MDA_Access&lt; MDA_TYPE, MDA_DIM, OrderType &gt; &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MDA_IndexRange</name>
    <filename>classMDA__IndexRange.html</filename>
    <templarg>MDA_DIM</templarg>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>streamPut</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>6dd1ec3db6c6ad7e1a2956b83c5b79c0</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>std::istream &amp;</type>
      <name>streamGet</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>a9e2959f7ace2810b62f00e29aff670e</anchor>
      <arglist>(std::istream &amp;is)</arglist>
    </member>
    <member kind="friend">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>996c505ff5e0016b8ec3be5e4b9bbcff</anchor>
      <arglist>(std::ostream &amp;os, const MDA_IndexRange&lt; MDA_DIM &gt; &amp;r)</arglist>
    </member>
    <member kind="friend">
      <type>friend std::istream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>fdaed8c13dda1ce04cc4492a60c385be</anchor>
      <arglist>(std::istream &amp;is, MDA_IndexRange&lt; MDA_DIM &gt; &amp;r)</arglist>
    </member>
    <member kind="typedef">
      <type>short</type>
      <name>dim_t</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>0609e446b59cea1fefe710abaf39ed4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>index_t</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>73dce99ee1dbc4b3b0083f69c3cdc6e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_IndexRange</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>b9b0bd175c4b0840c01eeeb4781bf18b</anchor>
      <arglist>(const size_t *sz=((size_t *) 0), const index_t *st=((index_t *) 0))</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_IndexRange</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>d4e70afbb213fd72cfe0668837e3274f</anchor>
      <arglist>(const index_t *si, const index_t *sf)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SAMRAI_INLINE_KEYWORD</type>
      <name>~MDA_IndexRange</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>d6554092c35eaf0e3770ce4802727f5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD void</type>
      <name>setSizeAndStart</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>60b27125e7c37bbb9865de0eda66d0a3</anchor>
      <arglist>(const size_t *sz=((size_t *) 0), const index_t *st=((index_t *) 0))</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD void</type>
      <name>setInclusiveRange</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>da2d88f6acc5902b40873e29aa33cb6c</anchor>
      <arglist>(const index_t first[MDA_DIM], const index_t final[MDA_DIM])</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const MDA_IndexRange &amp;</type>
      <name>adjustDim</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>11e6a7a865545c5a84e9a18cbaef135c</anchor>
      <arglist>(dim_t d, index_t first, index_t final)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>operator==</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>5c3b5009b78286ad4845601dcb610b9f</anchor>
      <arglist>(const MDA_IndexRange &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>operator!=</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>dbece3f07837bd89639e8135b5c1868c</anchor>
      <arglist>(const MDA_IndexRange &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const index_t &amp;</type>
      <name>beg</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>2889d4bb0ca554cfd6f763d19c516cfa</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const index_t &amp;</type>
      <name>end</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>62140ec0c09d900c5d4d9af86a91a284</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const size_t &amp;</type>
      <name>size</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>7236cfae831bb9e3dbecb6a72ae93857</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD size_t</type>
      <name>totalSize</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>8432927581e3c908fde2ee5a601f29c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>has</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>61b4190827bdc9e5072efc774c92c810</anchor>
      <arglist>(index_t i0) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>has</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>f1e2894eabeadba91a6c668f44f22ec1</anchor>
      <arglist>(index_t i0, index_t i1) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>has</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>8c13cb409e41c89526b5d8a3a5609fa5</anchor>
      <arglist>(index_t i0, index_t i1, index_t i2) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>has</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>355b82091b05cd9f8c4bc12738202222</anchor>
      <arglist>(index_t i0, index_t i1, index_t i2, index_t i3) const </arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>D0</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>66721ec6ffa4f12e6711f33e81976ac67260b5b488a30ce05c4d3f9d61f7c05c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>D1</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>66721ec6ffa4f12e6711f33e81976ac650cc6d331a39899c2ce08e4b66db5adc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>D2</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>66721ec6ffa4f12e6711f33e81976ac650c530a70b034def1c1e74a069d4f337</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>D3</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>66721ec6ffa4f12e6711f33e81976ac6e20ce42b6975a0d88e0caf01bb1d878f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>D4</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>66721ec6ffa4f12e6711f33e81976ac6c9c48d70b72c8de640407b8f27e57a19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D0</name>
      <anchor>66721ec6ffa4f12e6711f33e81976ac67260b5b488a30ce05c4d3f9d61f7c05c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D1</name>
      <anchor>66721ec6ffa4f12e6711f33e81976ac650cc6d331a39899c2ce08e4b66db5adc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D2</name>
      <anchor>66721ec6ffa4f12e6711f33e81976ac650c530a70b034def1c1e74a069d4f337</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D3</name>
      <anchor>66721ec6ffa4f12e6711f33e81976ac6e20ce42b6975a0d88e0caf01bb1d878f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D4</name>
      <anchor>66721ec6ffa4f12e6711f33e81976ac6c9c48d70b72c8de640407b8f27e57a19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>index_t</type>
      <name>d_start</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>09684389e80c4d4f276d62180b4b25e6</anchor>
      <arglist>[MDA_DIM &gt; 0?MDA_DIM:1]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>index_t</type>
      <name>d_stop</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>e9d994baa062a73c49a33fad82d4fdd0</anchor>
      <arglist>[MDA_DIM &gt; 0?MDA_DIM:1]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>d_size</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>d6c9a693ba8a84ea96a6b2498972801c</anchor>
      <arglist>[MDA_DIM &gt; 0?MDA_DIM:1]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MDA_OrderColMajor</name>
    <filename>classMDA__OrderColMajor.html</filename>
    <templarg>MDA_DIM</templarg>
    <base protection="private">MDA_IndexRange</base>
    <member kind="typedef">
      <type>int</type>
      <name>index_t</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>ba2c04307ae89dd63e7b088933c089c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MDA_IndexRange&lt; MDA_DIM &gt;</type>
      <name>range_t</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>1e1549ae1f5ebf6440efa65800a225f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>range_t::dim_t</type>
      <name>dim_t</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>e86b14298917b275041b75237a026d3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MDA_OrderColMajor&lt; MDA_Reduced_DIM &gt;</type>
      <name>reduced_order_t</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>c9acaa6430e973ed2dea0fab9e980a33</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MDA_Reduced_DIM</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>2a3786c869b757de34095a8b92d7e124009de1e6d46541be98a18eb94bbfc883</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MDA_Reduced_DIM</name>
      <anchor>2a3786c869b757de34095a8b92d7e124009de1e6d46541be98a18eb94bbfc883</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_OrderColMajor</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>9e596f2803ee634dcbd944224b23fa5b</anchor>
      <arglist>(const size_t *sz=((size_t *) 0), const index_t *st=((index_t *) 0))</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_OrderColMajor</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>345dad09a51d66806fb1b3d9f417317c</anchor>
      <arglist>(const index_t *si, const index_t *sf)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_OrderColMajor</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>314f9a888eaa65f82c7f006a688204ec</anchor>
      <arglist>(const range_t &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD size_t</type>
      <name>totalSize</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>32c0187c604777f212b0a7ecbbaa6bb0</anchor>
      <arglist>(unsigned short d) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD size_t</type>
      <name>reduce</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>dc9a81ec368c76f80a1d35431ebe183f</anchor>
      <arglist>(index_t i, reduced_order_t &amp;new_order) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const range_t &amp;</type>
      <name>range</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>a489c6740b41068f53be90b987172bd6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const MDA_OrderColMajor &amp;</type>
      <name>setSizeAndStart</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>52086bb7719c353fe5dabbe2bbc9a8fc</anchor>
      <arglist>(const size_t *sz=((size_t *) 0), const index_t *st=((index_t *) 0))</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const MDA_OrderColMajor &amp;</type>
      <name>setInclusiveRange</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>f476e4e6bd90a0a22ab154e63cc59302</anchor>
      <arglist>(const index_t first[MDA_DIM], const index_t final[MDA_DIM])</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const MDA_OrderColMajor &amp;</type>
      <name>adjustDim</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>07802544fccb153544046107c5267d2b</anchor>
      <arglist>(dim_t d, index_t first, index_t final)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>operator==</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>681be7d1f9f07cde27878ce04a0c4f7a</anchor>
      <arglist>(const MDA_OrderColMajor &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>operator!=</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>b7a3f742f2317f1e437fb7dcacd23f5b</anchor>
      <arglist>(const MDA_OrderColMajor &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>offset</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>2c9e2e8ebe18574cd20d38e66897e9b4</anchor>
      <arglist>(const index_t i[MDA_DIM]) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>offset</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>64e186fddffae8fbb07f0a8588eb2921</anchor>
      <arglist>(index_t i0) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>offset</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>06935d1a5e33ed70534a173b0763e610</anchor>
      <arglist>(index_t i0, index_t i1) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>offset</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>3b248420e69b94241eeb98adb0ed4443</anchor>
      <arglist>(index_t i0, index_t i1, index_t i2) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>offset</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>b041e54c85ea9aa680d6343b9c5f74ed</anchor>
      <arglist>(index_t i0, index_t i1, index_t i2, index_t i3) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>fixedOffset</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>8cb0dc51ce4599311204e9e43a3373e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>D0</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>4b96d40b1a9839425ae6e40becc2bd930128fb43b1946943fecda19d84f0a19a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>D1</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>4b96d40b1a9839425ae6e40becc2bd93caae43f12186379b7425330dc5c7aa95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>D2</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>4b96d40b1a9839425ae6e40becc2bd93c5db0dd90102b69b80293b868f0afb81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>D3</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>4b96d40b1a9839425ae6e40becc2bd9372771379ae94eeb76d3cf62960e7f501</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D0</name>
      <anchor>4b96d40b1a9839425ae6e40becc2bd930128fb43b1946943fecda19d84f0a19a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D1</name>
      <anchor>4b96d40b1a9839425ae6e40becc2bd93caae43f12186379b7425330dc5c7aa95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D2</name>
      <anchor>4b96d40b1a9839425ae6e40becc2bd93c5db0dd90102b69b80293b868f0afb81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D3</name>
      <anchor>4b96d40b1a9839425ae6e40becc2bd9372771379ae94eeb76d3cf62960e7f501</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MDA_OrderRowMajor</name>
    <filename>classMDA__OrderRowMajor.html</filename>
    <templarg>MDA_DIM</templarg>
    <base protection="private">MDA_IndexRange</base>
    <member kind="typedef">
      <type>int</type>
      <name>index_t</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>70fb43f40f136422ec148a07c1d68f9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MDA_IndexRange&lt; MDA_DIM &gt;</type>
      <name>range_t</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>120cd533eb9321562098172fbb729c72</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>range_t::dim_t</type>
      <name>dim_t</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>931886cc36611e131593239ff206ada4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MDA_OrderRowMajor&lt; MDA_Reduced_DIM &gt;</type>
      <name>reduced_order_t</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>e29957a7770e37a5a40b34f09b48bcf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MDA_Reduced_DIM</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>560b77f3eb90a06b5ad1db149fd9539cab47eee4dfb961aa9de08d0bc5be92f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MDA_Reduced_DIM</name>
      <anchor>560b77f3eb90a06b5ad1db149fd9539cab47eee4dfb961aa9de08d0bc5be92f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_OrderRowMajor</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>5515676e845ae7aff00529dbe337c12f</anchor>
      <arglist>(const size_t *sz=((size_t *) 0), const index_t *st=((index_t *) 0))</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_OrderRowMajor</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>9baf9bfe31dc6aa5aae2d28e80d8bdee</anchor>
      <arglist>(const index_t *si, const index_t *sf)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_OrderRowMajor</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>0b7e0c4c184166c801b57994ad5919b4</anchor>
      <arglist>(const range_t &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD size_t</type>
      <name>totalSize</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>02bdf38f6736cd64f540e70f0f8d6417</anchor>
      <arglist>(unsigned short d) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD size_t</type>
      <name>reduce</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>fa6aa23273b2c3c81df41af928e44b90</anchor>
      <arglist>(index_t i, reduced_order_t &amp;new_order) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const range_t &amp;</type>
      <name>range</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>ee980e5df70194479d75aa06609bd1e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const MDA_OrderRowMajor &amp;</type>
      <name>setSizeAndStart</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>6acabb5833e39b77525255654ce03b23</anchor>
      <arglist>(const size_t *sz=((size_t *) 0), const index_t *st=((index_t *) 0))</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const MDA_OrderRowMajor &amp;</type>
      <name>setInclusiveRange</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>b471ba3093fdf5c2158115ecaddd0e99</anchor>
      <arglist>(const index_t first[MDA_DIM], const index_t final[MDA_DIM])</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const MDA_OrderRowMajor &amp;</type>
      <name>adjustDim</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>448b3105ea7853e761a55b3fa426b413</anchor>
      <arglist>(dim_t d, index_t first, index_t final)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>operator==</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>3f3bd281f7dda9af468313a58e52b64e</anchor>
      <arglist>(const MDA_OrderRowMajor &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>operator!=</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>fadc387e1dce483f0188ee70e4eb928d</anchor>
      <arglist>(const MDA_OrderRowMajor &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>offset</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>affb50cee9ef76e003ddfd4476073df1</anchor>
      <arglist>(const index_t i[MDA_DIM]) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>offset</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>7eede92a1ad69421cdadbf9c4b7c5e27</anchor>
      <arglist>(index_t i0) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>offset</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>278aa6918584f0ad37e2a4cdd76982ad</anchor>
      <arglist>(index_t i0, index_t i1) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>offset</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>e1029d012fa58492f20d0125a3b360f4</anchor>
      <arglist>(index_t i0, index_t i1, index_t i2) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>offset</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>79fba215ce532a35059d33316fa8e4eb</anchor>
      <arglist>(index_t i0, index_t i1, index_t i2, index_t i3) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>fixedOffset</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>0a5228782fc53726ae034b37e60d87f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>D0</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>0ffa20464ae4443331a182dd6e2b0ae5bc61c1e13d8acb1af908fcedb4128478</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>D1</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>0ffa20464ae4443331a182dd6e2b0ae523bb8d4f12a51802b64448abedd85377</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>D2</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>0ffa20464ae4443331a182dd6e2b0ae5215b1b9d510d52fe4ad1ed4bb17668c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>D3</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>0ffa20464ae4443331a182dd6e2b0ae5dbeae52f1df2b44227e4082c49e7c2b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D0</name>
      <anchor>0ffa20464ae4443331a182dd6e2b0ae5bc61c1e13d8acb1af908fcedb4128478</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D1</name>
      <anchor>0ffa20464ae4443331a182dd6e2b0ae523bb8d4f12a51802b64448abedd85377</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D2</name>
      <anchor>0ffa20464ae4443331a182dd6e2b0ae5215b1b9d510d52fe4ad1ed4bb17668c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D3</name>
      <anchor>0ffa20464ae4443331a182dd6e2b0ae5dbeae52f1df2b44227e4082c49e7c2b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tbox::DescribedClass</name>
    <filename>classtbox_1_1DescribedClass.html</filename>
  </compound>
  <compound kind="struct">
    <name>yy_buffer_state</name>
    <filename>structyy__buffer__state.html</filename>
    <member kind="variable">
      <type>FILE *</type>
      <name>yy_input_file</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>36fdc247449f87c2936e93b0180cacda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>yy_ch_buf</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>ba0fcc0c1fb7142973b1153e16d0adb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>yy_buf_pos</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>9ece5192721d9b79e0fd8d424def31ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>yy_size_t</type>
      <name>yy_buf_size</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>4c57d611edb5f85bad4c050bb1217d96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yy_n_chars</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>1755746e5aa165cbd699859e643e9d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yy_is_our_buffer</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>d311cd2905e239d80c3a381180ffb1ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yy_is_interactive</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>ff1f710d84e8e21f9e39dcf266ed536c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yy_at_bol</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>98804df2b9f86fe4b4826e23ff69fa9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yy_fill_buffer</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>807cbb3e9d674594e21b714eb2a332d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yy_buffer_status</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>403d12f8500441d7041162810c268b9b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>yyalloc</name>
    <filename>unionyyalloc.html</filename>
    <member kind="variable">
      <type>yytype_int16</type>
      <name>yyss</name>
      <anchorfile>unionyyalloc.html</anchorfile>
      <anchor>c57270b2396c760f70cc3bc1268b3359</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>YYSTYPE</type>
      <name>yyvs</name>
      <anchorfile>unionyyalloc.html</anchorfile>
      <anchor>e38534315c947d55ced8a98a3fb3a1c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>YYSTYPE</name>
    <filename>unionYYSTYPE.html</filename>
    <member kind="variable">
      <type>char</type>
      <name>u_char</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>82c682f02d7681d1d0382f914ef5cf8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>u_double</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>75e41ce99406f589f127be95ab15f96d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>u_integer</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>7aa977d8bd23608ee4376b5093c224d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>KeyData *</type>
      <name>u_keydata</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>b6ed9a1d136a9ef4ba2e3e680a0df6f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string *</type>
      <name>u_keyword</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>0cade16c31b47afb9c60c2c55450bae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string *</type>
      <name>u_string</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>6a60780b38d991d54a8e899013502120</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>KeyData *</type>
      <name>u_keydata</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>b6ed9a1d136a9ef4ba2e3e680a0df6f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string *</type>
      <name>u_keyword</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>0cade16c31b47afb9c60c2c55450bae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string *</type>
      <name>u_string</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>6a60780b38d991d54a8e899013502120</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Bdry</name>
    <filename>namespaceBdry.html</filename>
    <member kind="enumeration">
      <name>Type</name>
      <anchor>52c990a5e0784db2442f55637bf9ec3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNDEFINED</name>
      <anchor>52c990a5e0784db2442f55637bf9ec3b87794d61da5b437e4dbbb54735aa3103</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE3D</name>
      <anchor>52c990a5e0784db2442f55637bf9ec3b81d7711739c945d4d7fb5c8434c61e3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EDGE3D</name>
      <anchor>52c990a5e0784db2442f55637bf9ec3bc42ff0f5b96bc5a46c9ebd51053005ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NODE3D</name>
      <anchor>52c990a5e0784db2442f55637bf9ec3bdc8c230d2589ae50ae1226aac3b7f0a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EDGE2D</name>
      <anchor>52c990a5e0784db2442f55637bf9ec3b0678f089fa8d31093be940d29097da51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NODE2D</name>
      <anchor>52c990a5e0784db2442f55637bf9ec3b8d15f55d2df34a3c1db13ded8f3ecc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NODE1D</name>
      <anchor>52c990a5e0784db2442f55637bf9ec3b8b569395f6394b3bc0b44f0548e75be6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>BdryCond</name>
    <filename>namespaceBdryCond.html</filename>
    <member kind="enumeration">
      <name>Type</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6ef3d1ff2cb99f088dd675fc3869b3d5dce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REFLECT</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6efc640795181e834d1f1622dfd212b55fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIRICHLET</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6efcecfd335b109e4a3562ac85646f83fd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEUMANN</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6ef01f0c1539bff1dc9e4f38c7ce4e08cf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XFLOW</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6efcc8f13862d7855939becbad0dac032d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YFLOW</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6ef02ee0a0c2dd3303de1b2dd384ff555b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZFLOW</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6ef84e96ff1b920d0670692cf4050724c1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XREFLECT</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6efd1e3207e9bfd92726c298f1d80fa5c19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YREFLECT</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6ef3720981172ba0f340b448c01190785a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZREFLECT</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6ef0aa7648d872dbecab5dbc7a83b7ed123</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XDIRICHLET</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6ef9df91a0be611dac987a15ea40033ee23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YDIRICHLET</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6efc75bfbe5eef5c04e1db47057137de8ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZDIRICHLET</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6ef54b0000adab3b7b9ffeb42a39fe0cb32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XNEUMANN</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6efad29f0c31c337fb35164f15fa5487de0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YNEUMANN</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6ef8dad64347d7599fff79d8cb68cde11da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZNEUMANN</name>
      <anchor>52196a479e1210e9c7be5994fbc4d6ef7dd412e354961cd6cf3f138f0784db0a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>BdryLoc</name>
    <filename>namespaceBdryLoc.html</filename>
    <member kind="enumeration">
      <name>Type</name>
      <anchor>bb87b0aa85742a8675cb21995b759d13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO</name>
      <anchor>bb87b0aa85742a8675cb21995b759d13d30e6f712cc479009cc3b15e463554d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI</name>
      <anchor>bb87b0aa85742a8675cb21995b759d137d84bba3a075d7f5e78ae4cefa591c4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YLO</name>
      <anchor>bb87b0aa85742a8675cb21995b759d13cf9cab977e7b022f96158a63018198ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YHI</name>
      <anchor>bb87b0aa85742a8675cb21995b759d13b5f6518353096161edf6600c3005fda3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZLO</name>
      <anchor>bb87b0aa85742a8675cb21995b759d13e1afc80b918844c1b9a83b6c2789b313</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZHI</name>
      <anchor>bb87b0aa85742a8675cb21995b759d139fc63465d02195ccffe1820533d4fc8c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>EdgeBdyLoc3D</name>
    <filename>namespaceEdgeBdyLoc3D.html</filename>
    <member kind="enumeration">
      <name>Type</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YLO</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f7701e9dc84bbd5d8aa24260734c9c09eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YLO</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f768b32aa186a43825105b8fceeefb16ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YHI</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f715dd8a02a8a1ea7de8c5eba6c88c6bab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YHI</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f7937b5f552c923b6880ab3c73d388cced</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_ZLO</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f789ad9dcc27d8af018c6ce1ac2e3b6134</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_ZLO</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f79de6cb59c5ddacb63466b2878e147902</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_ZHI</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f75b951b0d3c8ae37a34a214241643e7b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_ZHI</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f7ea50d1fdf62b75ec3578f0b685ffa883</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YLO_ZLO</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f78c963d04b715711b246082cd9f451a4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YHI_ZLO</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f791119e9ff2b5079c03870fb70b410735</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YLO_ZHI</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f734d08bc49c23f6d5733e0c7f5cfe8759</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YHI_ZHI</name>
      <anchor>fea9dd6e8478a86a0ab3b0731b73a8f7df8df9332de2f8c613f36d98d1bde5d7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>NodeBdyLoc2D</name>
    <filename>namespaceNodeBdyLoc2D.html</filename>
    <member kind="enumeration">
      <name>Type</name>
      <anchor>8bd3d70bdda44686a0a23937c2c1b2af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YLO</name>
      <anchor>8bd3d70bdda44686a0a23937c2c1b2afad331534798408e811b946214061029d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YLO</name>
      <anchor>8bd3d70bdda44686a0a23937c2c1b2afaafc8044d343f9d33322f5ccedecdc97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YHI</name>
      <anchor>8bd3d70bdda44686a0a23937c2c1b2af61d8cb20da4fd1668705c60f56e66789</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YHI</name>
      <anchor>8bd3d70bdda44686a0a23937c2c1b2af310bfd15cadd4d9d399a51077b36ea7e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>NodeBdyLoc3D</name>
    <filename>namespaceNodeBdyLoc3D.html</filename>
    <member kind="enumeration">
      <name>Type</name>
      <anchor>938a9fde6a5e5abcd2c5ea6742b47c07</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YLO_ZLO</name>
      <anchor>938a9fde6a5e5abcd2c5ea6742b47c07fd89e38840c6de5ffdc9ce51c2b2cec9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YLO_ZLO</name>
      <anchor>938a9fde6a5e5abcd2c5ea6742b47c07d8e5341643bc482b0b2e943646d40dbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YHI_ZLO</name>
      <anchor>938a9fde6a5e5abcd2c5ea6742b47c07e60cb39d59d888e22889129f53158c26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YHI_ZLO</name>
      <anchor>938a9fde6a5e5abcd2c5ea6742b47c07a8b8b944e4a905853137cad650e46165</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YLO_ZHI</name>
      <anchor>938a9fde6a5e5abcd2c5ea6742b47c07303e1ff01d18270f022641b83dfbc98f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YLO_ZHI</name>
      <anchor>938a9fde6a5e5abcd2c5ea6742b47c07c4b73466b72686556ed0bbfe5ed587fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YHI_ZHI</name>
      <anchor>938a9fde6a5e5abcd2c5ea6742b47c0789fc650d427ee6726365695894212890</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YHI_ZHI</name>
      <anchor>938a9fde6a5e5abcd2c5ea6742b47c0758281c3c011cbe774e01cd686a4dade4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>SAMRAI</name>
    <filename>namespaceSAMRAI.html</filename>
    <namespace>SAMRAI::tbox</namespace>
    <namespace>SAMRAI::hier</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <namespace>SAMRAI::math</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <namespace>SAMRAI::geom</namespace>
    <namespace>SAMRAI::solv</namespace>
    <namespace>SAMRAI::algs</namespace>
    <namespace>SAMRAI::appu</namespace>
  </compound>
  <compound kind="namespace">
    <name>SAMRAI::algs</name>
    <filename>namespaceSAMRAI_1_1algs.html</filename>
    <class kind="class">SAMRAI::algs::HyperbolicLevelIntegrator</class>
    <class kind="class">SAMRAI::algs::HyperbolicPatchStrategy</class>
    <class kind="class">SAMRAI::algs::ImplicitEquationStrategy</class>
    <class kind="class">SAMRAI::algs::ImplicitIntegrator</class>
    <class kind="class">SAMRAI::algs::MblkPatchBoundaryNodeSum</class>
    <class kind="class">SAMRAI::algs::MethodOfLinesIntegrator</class>
    <class kind="class">SAMRAI::algs::MethodOfLinesPatchStrategy</class>
    <class kind="class">SAMRAI::algs::OuteredgeSumTransaction</class>
    <class kind="class">SAMRAI::algs::OuteredgeSumTransactionFactory</class>
    <class kind="class">SAMRAI::algs::OuternodeSumTransaction</class>
    <class kind="class">SAMRAI::algs::OuternodeSumTransactionFactory</class>
    <class kind="class">SAMRAI::algs::PatchBoundaryEdgeSum</class>
    <class kind="class">SAMRAI::algs::PatchBoundaryNodeSum</class>
    <class kind="class">SAMRAI::algs::TimeRefinementIntegrator</class>
    <class kind="class">SAMRAI::algs::TimeRefinementLevelStrategy</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::HyperbolicLevelIntegrator</name>
    <filename>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</filename>
    <base>SAMRAI::algs::TimeRefinementLevelStrategy</base>
    <base>SAMRAI::mesh::StandardTagAndInitStrategy</base>
    <base>SAMRAI::tbox::Serializable</base>
    <member kind="enumvalue">
      <type>@</type>
      <name>TIME_DEP</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>661bc39ea32eef6aa99d475b213de013c96b7d63d56c5bef2679f8e9e60f8271</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>INPUT</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>661bc39ea32eef6aa99d475b213de013e4cc37f67b45f4c31ff92acf6d8cc44e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>NO_FILL</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>661bc39ea32eef6aa99d475b213de0130d72d6686eebf2a2f571561d03e3502b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>FLUX</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>661bc39ea32eef6aa99d475b213de013322d7b0015a4d4fb8c83dcc8a85ae650</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>TEMPORARY</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>661bc39ea32eef6aa99d475b213de0137ec0258d9ae2f76ad5a8943a7e409b62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>HYP_VAR_TYPE</name>
      <anchor>661bc39ea32eef6aa99d475b213de013</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIME_DEP</name>
      <anchor>661bc39ea32eef6aa99d475b213de013c96b7d63d56c5bef2679f8e9e60f8271</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT</name>
      <anchor>661bc39ea32eef6aa99d475b213de013e4cc37f67b45f4c31ff92acf6d8cc44e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NO_FILL</name>
      <anchor>661bc39ea32eef6aa99d475b213de0130d72d6686eebf2a2f571561d03e3502b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLUX</name>
      <anchor>661bc39ea32eef6aa99d475b213de013322d7b0015a4d4fb8c83dcc8a85ae650</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEMPORARY</name>
      <anchor>661bc39ea32eef6aa99d475b213de0137ec0258d9ae2f76ad5a8943a7e409b62</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HyperbolicLevelIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>b4594686f79f8f63b9280c7032eb0197</anchor>
      <arglist>(const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; input_db, HyperbolicPatchStrategy *patch_strategy, bool register_for_restart=true, bool use_time_refinement=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HyperbolicLevelIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>5fadd040b4f9c84bf087d6370587ef14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeLevelIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a3a6220ab9d1de88aa69078b15ebccb0</anchor>
      <arglist>(tbox::Pointer&lt; mesh::GriddingAlgorithmStrategy &gt; gridding_alg_strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getLevelDt</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>efcfb08640f90d177afec27578f3230a</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const double dt_time, const bool initial_time)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxFinerLevelDt</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>6bbc66a488be69a0733b39c1ff547af0</anchor>
      <arglist>(const int finer_level_number, const double coarse_dt, const hier::IntVector &amp;ratio_to_coarser)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>advanceLevel</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>1e8d1d2af92879c496919d7b7aa98130</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const double current_time, const double new_time, const bool first_step, const bool last_step, const bool regrid_advance=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>standardLevelSynchronization</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>cdd1fd593debe48b8d8caf1b654ec072</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level, const double sync_time, const tbox::Array&lt; double &gt; &amp;old_times)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>standardLevelSynchronization</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>aa1879d7bb828f59c9cdf3a04b2ff7cb</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level, const double sync_time, const double old_time)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>synchronizeNewLevels</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>3a7dbaee9b714a7b79271c23534edf4e</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level, const double sync_time, const bool initial_time)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetTimeDependentData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>651c978f4add72a6708a5c75f5c12144</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const double new_time, const bool can_be_refined)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetDataToPreadvanceState</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>735626a720099f6f07d1b6ab25467e63</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeLevelData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>ed4620fa421e552208bb87e1cfe868a8</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const double init_data_time, const bool can_be_refined, const bool initial_time, const tbox::Pointer&lt; hier::PatchLevel &gt; old_level=tbox::Pointer&lt; hier::PatchLevel &gt;(NULL), const bool allocate_data=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetHierarchyConfiguration</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>3c3007887659d95bb02a2f36108e4d14</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyGradientDetector</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>41b0368dce99165b8657dd7572854d29</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const double error_data_time, const int tag_index, const bool initial_time, const bool uses_richardson_extrapolation_too)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyRichardsonExtrapolation</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>268311866981c9a8060ef998219d37f5</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const double error_data_time, const int tag_index, const double deltat, const int error_coarsen_ratio, const bool initial_time, const bool uses_gradient_detector_too)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>coarsenDataForRichardsonExtrapolation</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>26ae03e8f3285baf05b3ab03ec39bd92</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const tbox::Pointer&lt; hier::PatchLevel &gt; coarse_level, const double coarsen_data_time, const bool before_advance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>registerVariable</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>d79d20a42da8b714a6e6d1723c9060b0</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; var, const hier::IntVector ghosts, const HYP_VAR_TYPE h_v_type, const tbox::Pointer&lt; hier::GridGeometry &gt; transfer_geom, const std::string &amp;coarsen_name=std::string(), const std::string &amp;refine_name=std::string())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>ab6ddbc74f8d314d2b337b07d55cc5d3</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>c5d65dfaa51d02801bf3ee652be19655</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::VariableContext &gt;</type>
      <name>getCurrentContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a3ec6348557e3ff3b0b190e5e00eb8ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::VariableContext &gt;</type>
      <name>getNewContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>31a862b003f2e2baddcf2f782085c13b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::VariableContext &gt;</type>
      <name>getOldContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>718834a1f8c9a264a00aad1408b15016</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::VariableContext &gt;</type>
      <name>getScratchContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>af0d7af99d5f8bfe37b4d1fc9bfa127d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::VariableContext &gt;</type>
      <name>getPlotContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>2a68e8e4d1e9baf7bcc7c9b09692cb78</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usingRefinedTimestepping</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>d9d82dbde4959be5801b25950cffc756</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printStatistics</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>b04c05a8a083d1f5d6939e655074912f</anchor>
      <arglist>(std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>3cf3d75740f6fdd913ce9b95850f3fb0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getFromInput</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>fed4a49137cf27b3e1ce1b6498ede6e2</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db, bool is_from_restart)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getFromRestart</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>45c4587705db88fdfd7b99be974ee0fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>preprocessFluxData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a07020501cae066e5927dab7ae4ec779</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const double cur_time, const double new_time, const bool regrid_advance, const bool first_step, const bool last_step)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessFluxData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>fdd90fd55b77042d1d45490c051fa947</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const bool regrid_advance, const bool first_step, const bool last_step)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>copyTimeDependentData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>40afeea91d70caf9e582478e18177051</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const tbox::Pointer&lt; hier::VariableContext &gt; src_context, const tbox::Pointer&lt; hier::VariableContext &gt; dst_context)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>synchronizeLevelWithCoarser</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a5690948ea711054280c718d57a10b9b</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; fine, const tbox::Pointer&lt; hier::PatchLevel &gt; coarse, const double sync_time, const double coarse_sim_time)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::HyperbolicPatchStrategy</name>
    <filename>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</filename>
    <base>SAMRAI::xfer::RefinePatchStrategy</base>
    <base>SAMRAI::xfer::CoarsenPatchStrategy</base>
    <member kind="function">
      <type></type>
      <name>HyperbolicPatchStrategy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>bfdd7c8bf839dd3eef9de00f5dc35d98</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HyperbolicPatchStrategy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>6dee35e53e3f2a906eae433ab747dd42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>registerModelVariables</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>cca2469b4f8659d5e7dc41c1572853d0</anchor>
      <arglist>(HyperbolicLevelIntegrator *integrator)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupLoadBalancer</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>0344a3099849a591f4d35ff3522745b0</anchor>
      <arglist>(HyperbolicLevelIntegrator *integrator, mesh::GriddingAlgorithm *gridding_algorithm)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initializeDataOnPatch</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>bcf54eff296e8898bb5c591aa17b5d68</anchor>
      <arglist>(hier::Patch &amp;patch, const double data_time, const bool initial_time)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>computeStableDtOnPatch</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>9e803926bda95a5fb351472d082a1cfe</anchor>
      <arglist>(hier::Patch &amp;patch, const bool initial_time, const double dt_time)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>computeFluxesOnPatch</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>c6440f00550554375dc58e31fe4bfb97</anchor>
      <arglist>(hier::Patch &amp;patch, const double time, const double dt)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>conservativeDifferenceOnPatch</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>932547caed02bc084f8efce9e2d1d1e8</anchor>
      <arglist>(hier::Patch &amp;patch, const double time, const double dt, bool at_syncronization)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preprocessAdvanceLevelState</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>df9cb776823440d62de812382fffb86d</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; &amp;level, double current_time, double dt, bool first_step, bool last_step, bool regrid_advance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessAdvanceLevelState</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>41982c51ee4f02590de5ea26c79fbaa3</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; &amp;level, double current_time, double dt, bool first_step, bool last_step, bool regrid_advance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>tagGradientDetectorCells</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>780ff3b9eb4b2b686bd152a381ab80ec</anchor>
      <arglist>(hier::Patch &amp;patch, const double regrid_time, const bool initial_error, const int tag_index, const bool uses_richardson_extrapolation_too)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>tagRichardsonExtrapolationCells</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>6fb37f917f199c5f10f6501414d5291c</anchor>
      <arglist>(hier::Patch &amp;patch, const int error_level_number, const tbox::Pointer&lt; hier::VariableContext &gt; coarsened_fine, const tbox::Pointer&lt; hier::VariableContext &gt; advanced_coarse, const double regrid_time, const double deltat, const int error_coarsen_ratio, const bool initial_error, const int tag_index, const bool uses_gradient_detector_too)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPhysicalBoundaryConditions</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>31f097ee69de5a175f4b34d31c469bf8</anchor>
      <arglist>(hier::Patch &amp;patch, const double fill_time, const hier::IntVector &amp;ghost_width_to_fill)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hier::IntVector</type>
      <name>getRefineOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>63c4c0520b3c8eee51d337c2f6d337c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preprocessRefine</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>1c416232cfbb5e1ef07d860cff23f5fc</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessRefine</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>a48e4adfa76b1e3a672abef8a27c53f8</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hier::IntVector</type>
      <name>getCoarsenOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>d9f2e566fe1cd9c77c65eaf2d396a0c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preprocessCoarsen</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>3480ca32124e2c7bb9964946b29db3b3</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessCoarsen</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>c049b88562fdf98350513952fb604176</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::VariableContext &gt;</type>
      <name>getDataContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>e77e049ab5a575dc4eef7b870e8e428a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDataContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>abb02eb6de95b63c5dd7d54c4b5cf340</anchor>
      <arglist>(tbox::Pointer&lt; hier::VariableContext &gt; context)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearDataContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>bd85a561841ad406095e47db1d6d7e64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>81deadcfc673b84af5ca41898f4cd8c2</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::ImplicitEquationStrategy</name>
    <filename>classSAMRAI_1_1algs_1_1ImplicitEquationStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>ImplicitEquationStrategy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitEquationStrategy.html</anchorfile>
      <anchor>23353529704020bb54bb3b4358a52d4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ImplicitEquationStrategy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitEquationStrategy.html</anchorfile>
      <anchor>b06c7c22db2b624c5087dc47e3dad0e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setupSolutionVector</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitEquationStrategy.html</anchorfile>
      <anchor>1b52d89bcaafdd8fe4d37fd278c840d8</anchor>
      <arglist>(tbox::Pointer&lt; solv::SAMRAIVectorReal&lt; double &gt; &gt; solution)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getInitialDt</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitEquationStrategy.html</anchorfile>
      <anchor>d44ae285312f20364cbaef636105b1ab</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getNextDt</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitEquationStrategy.html</anchorfile>
      <anchor>3c92f83e99f5b5ee223b2830aa90f1db</anchor>
      <arglist>(const bool good_solution, const int solver_retcode)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setInitialGuess</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitEquationStrategy.html</anchorfile>
      <anchor>24fd9ffa713163136f91084f6989e794</anchor>
      <arglist>(const bool first_step, const double current_time, const double current_dt, const double old_dt)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>checkNewSolution</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitEquationStrategy.html</anchorfile>
      <anchor>b2e19e7220e12e80239080cab2ec114a</anchor>
      <arglist>(const int solver_retcode)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updateSolution</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitEquationStrategy.html</anchorfile>
      <anchor>3c190fde873b8bd90208d0d247618f5e</anchor>
      <arglist>(const double new_time)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::ImplicitIntegrator</name>
    <filename>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</filename>
    <base>SAMRAI::tbox::Serializable</base>
    <member kind="function">
      <type></type>
      <name>ImplicitIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>45c6c7142ca74631e474773a15d55774</anchor>
      <arglist>(const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; input_db, ImplicitEquationStrategy *implicit_equations, solv::NonlinearSolverStrategy *nonlinear_solver, const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ImplicitIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>8740a8cf73a8cbac01ef825f12fcb4a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>8666654fa6bacc390beff5335c51c8f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>advanceSolution</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>84525ba5819736d7077277c6a909e8fb</anchor>
      <arglist>(const double dt, const bool first_step)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNextDt</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>6047612a48c22b081ceab4d1a937704c</anchor>
      <arglist>(const bool good_solution, const int solver_retcode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkNewSolution</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>0d4452efbc2d441a2b6778a94aaec2f2</anchor>
      <arglist>(const int solver_retcode) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>updateSolution</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>e55acf1d451620c041b1dad84ce8da75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialTime</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>cadafe6c8a778882f41ba2314cb92f7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFinalTime</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>23dbf51e3969ccef8f6ab49ec6292dde</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCurrentTime</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>0f290e6741ea3fd03d64a2f941623c7f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCurrentDt</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>5e709c253315f21ada9db484e61b9224</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIntegratorStep</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>9263eb0aa5d907fa3b04bb5db39dfb99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxIntegratorSteps</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>34bdbacf3798f71356aa505dda5601e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stepsRemaining</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>331d7767db383399566dd2742ca71d0e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>4d2e26dbc9b455faf7926fb36b1a9233</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>5446f37200ebf89bf248067671fcb3f5</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>428376b2dad0c9eafbdb56bb7f106f56</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::MblkPatchBoundaryNodeSum</name>
    <filename>classSAMRAI_1_1algs_1_1MblkPatchBoundaryNodeSum.html</filename>
    <member kind="function">
      <type></type>
      <name>MblkPatchBoundaryNodeSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MblkPatchBoundaryNodeSum.html</anchorfile>
      <anchor>377099af4179ff8d6e71134c861b4203</anchor>
      <arglist>(const std::string &amp;object_name, tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MblkPatchBoundaryNodeSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MblkPatchBoundaryNodeSum.html</anchorfile>
      <anchor>98afbe7c97647ed90d13b193618ee6ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MblkPatchBoundaryNodeSum.html</anchorfile>
      <anchor>d5f5679e01dcd42af6f98d0198e721dc</anchor>
      <arglist>(int node_data_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MblkPatchBoundaryNodeSum.html</anchorfile>
      <anchor>b1f3770e3ad97ba06ee36ed24121284b</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MblkPatchBoundaryNodeSum.html</anchorfile>
      <anchor>3f761cc39c7ed14b71c8453653978392</anchor>
      <arglist>(const bool fill_hanging_nodes=false) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MblkPatchBoundaryNodeSum.html</anchorfile>
      <anchor>2b96fafb466271e5487d34d0cff2d7c4</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::MethodOfLinesIntegrator</name>
    <filename>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</filename>
    <base>SAMRAI::tbox::Serializable</base>
    <base>SAMRAI::mesh::StandardTagAndInitStrategy</base>
    <member kind="enumvalue">
      <type>@</type>
      <name>SOLN</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>4a95e922ac9692cefd58905930e16c55e41bc45c095fbc064c18b57579eb2eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>RHS</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>4a95e922ac9692cefd58905930e16c55f328b2dbd2cb10a2698014f4f2278e84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>MOL_VAR_TYPE</name>
      <anchor>4a95e922ac9692cefd58905930e16c55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLN</name>
      <anchor>4a95e922ac9692cefd58905930e16c55e41bc45c095fbc064c18b57579eb2eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RHS</name>
      <anchor>4a95e922ac9692cefd58905930e16c55f328b2dbd2cb10a2698014f4f2278e84</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MethodOfLinesIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>092f1b978309de4543140d4c73a1ee14</anchor>
      <arglist>(const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; input_db, MethodOfLinesPatchStrategy *patch_strategy, bool register_for_restart=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MethodOfLinesIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>5d6ab79320741e0b09187cbcd90e7f18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>6d4ee17eaa06e24b5ffc83340587c461</anchor>
      <arglist>(tbox::Pointer&lt; mesh::GriddingAlgorithm &gt; gridding_alg)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTimestep</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>30fe3f25c80f6d37af5d0a0e8b072249</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const double time) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>advanceHierarchy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>392a84bf5c4b4b5560451ad3f6099de5</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const double time, const double dt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerVariable</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>2b607c92dafd14a8b010e44a847c46ac</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; variable, const hier::IntVector &amp;ghosts, const MOL_VAR_TYPE m_v_type, const tbox::Pointer&lt; hier::GridGeometry &gt; &amp;transfer_geom, const std::string &amp;coarsen_name=std::string(), const std::string &amp;refine_name=std::string())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>84753dd2f1959d799046f56cc2331466</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeLevelData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>b6635182499afd4c4ebd15369eebb8f1</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const double init_time, const bool can_be_refined, const bool initial_time, const tbox::Pointer&lt; hier::PatchLevel &gt; old_level=tbox::Pointer&lt; hier::PatchLevel &gt;(NULL), const bool allocate_data=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetHierarchyConfiguration</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>76341d68a40e8a3ddb4f5bb83bebfbe2</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyGradientDetector</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>e182d310f275ab4b1a44da351b44ff8e</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const double time, const int tag_index, const bool initial_time, const bool uses_richardson_extrapolation_too)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>28636ac3fcc89cf8eaffb205e0ff45a3</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>73aa2d6bf96fccc3a41d4c8d81793e63</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::MethodOfLinesPatchStrategy</name>
    <filename>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</filename>
    <base>SAMRAI::xfer::RefinePatchStrategy</base>
    <base>SAMRAI::xfer::CoarsenPatchStrategy</base>
    <member kind="function">
      <type></type>
      <name>MethodOfLinesPatchStrategy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>ee3fc9e1f6419ca882ae31361834b849</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>~MethodOfLinesPatchStrategy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>e5e6e006a8aa441a2921f50702c90067</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>registerModelVariables</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>aa9ded3da1bf20cd89f27e6a33777c2c</anchor>
      <arglist>(MethodOfLinesIntegrator *integrator)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initializeDataOnPatch</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>12b6eb8c71e53d24efb9e91d0fe645cf</anchor>
      <arglist>(hier::Patch &amp;patch, const double time, const bool initial_time) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>computeStableDtOnPatch</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>b793f2cb40ed9ec5bc907686c6b85570</anchor>
      <arglist>(hier::Patch &amp;patch, const double time) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>singleStep</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>f485d275c43539dafbf2e1dd49ec75f7</anchor>
      <arglist>(hier::Patch &amp;patch, const double dt, const double alpha_1, const double alpha_2, const double beta) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>tagGradientDetectorCells</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>6716b4dbc826aac199d4f0333b514071</anchor>
      <arglist>(hier::Patch &amp;patch, const double regrid_time, const bool initial_error, const int tag_index, const bool uses_richardson_extrapolation_too)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPhysicalBoundaryConditions</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>668799adc09b7daf8ebc70b2e42e468b</anchor>
      <arglist>(hier::Patch &amp;patch, const double fill_time, const hier::IntVector &amp;ghost_width_to_fill)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hier::IntVector</type>
      <name>getRefineOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>ca5e9dcdd92b8a4f1854fd8c380d4ccd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preprocessRefine</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>9f2177c83b08c26e64cad592596362b4</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessRefine</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>3349efc98f6723722667845cafc4331b</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hier::IntVector</type>
      <name>getCoarsenOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>b4de45d0c0fcc7579194760edaaa25e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preprocessCoarsen</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>6ecbada7a80d8ee71b8fb65d9c173bf9</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessCoarsen</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>b7df1fdfa6dd40c99fb692a489a5a301</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::VariableContext &gt;</type>
      <name>getInteriorWithGhostsContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>75ec0f87352faca2543aa21c622fc2cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::VariableContext &gt;</type>
      <name>getInteriorContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>f27b56fe669c4b07f0cc631383d40b7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInteriorWithGhostsContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>f03d76662f290b0f962da0f0ae620df9</anchor>
      <arglist>(tbox::Pointer&lt; hier::VariableContext &gt; context)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInteriorContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>6199c4ed20e37f290579379ad5f853c3</anchor>
      <arglist>(tbox::Pointer&lt; hier::VariableContext &gt; context)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>c84b57386287c74dd3f326f182ef3172</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::OuteredgeSumTransaction</name>
    <filename>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</filename>
    <base>SAMRAI::tbox::Transaction</base>
    <member kind="function">
      <type></type>
      <name>OuteredgeSumTransaction</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>95c6e884eb8245ffcfea6fc0721a5954</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_node, const hier::Box &amp;src_node, int refine_item_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuteredgeSumTransaction</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>9f0d8a7c5457fc1ac6904a12ba2ac8c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>b5f35765d3e2ca2cc10493a16b16116c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>ddfc2f48f9a492d1ab909ed08185ffa8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeOutgoingMessageSize</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>aa50cb77044fd8cbbd41fa8edf8d7267</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getSourceProcessor</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>23653a8fb9a167faead4304eae4dfe1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDestinationProcessor</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>40402954c7486017496656f359deaf9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>66bf5e0a5a056ca6737a6ad3f5aa2652</anchor>
      <arglist>(tbox::MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>3556e0d3e15fdfa8c8abd372e671b344</anchor>
      <arglist>(tbox::MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copyLocalData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>640ab8d124b98e07a2b038dccdde14f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>43e2d21c5d1c1054ced74a8ded36e7c0</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setRefineItems</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>9bf3bc70e596bce1daf7023507168e0f</anchor>
      <arglist>(const xfer::RefineClasses::Data **refine_items, int num_refine_items)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unsetRefineItems</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>2638765467b15a0d2140d6e5f82e0ee1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::OuteredgeSumTransactionFactory</name>
    <filename>classSAMRAI_1_1algs_1_1OuteredgeSumTransactionFactory.html</filename>
    <base>SAMRAI::xfer::RefineTransactionFactory</base>
    <member kind="function">
      <type></type>
      <name>OuteredgeSumTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransactionFactory.html</anchorfile>
      <anchor>5af9df7a1a8ca7b6c938c2a4b8d6404e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuteredgeSumTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransactionFactory.html</anchorfile>
      <anchor>1afd1c650f7f64ef7786dbc056fcbfcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRefineItems</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransactionFactory.html</anchorfile>
      <anchor>802f9a120e4b19707259b10c07691712</anchor>
      <arglist>(const xfer::RefineClasses::Data **refine_items, int num_refine_items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsetRefineItems</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransactionFactory.html</anchorfile>
      <anchor>a1f8b67bc9593abe1ea284ab1ae6ec83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; tbox::Transaction &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransactionFactory.html</anchorfile>
      <anchor>87398065e28e3024ab23ac773f76805f</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_node, const hier::Box &amp;src_node, int ritem_id, const hier::Box &amp;box, bool use_time_interpolation=false) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; tbox::Transaction &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransactionFactory.html</anchorfile>
      <anchor>e74aab79ea14a4ba99cdf5f9471bc9d4</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_node, const hier::Box &amp;src_node, int ritem_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preprocessScratchSpace</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransactionFactory.html</anchorfile>
      <anchor>00a56a8977e23aff589c41b17b06e577</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; level, double fill_time, const hier::ComponentSelector &amp;preprocess_vector) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::OuternodeSumTransaction</name>
    <filename>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</filename>
    <base>SAMRAI::tbox::Transaction</base>
    <member kind="function">
      <type></type>
      <name>OuternodeSumTransaction</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>634bf86e13529b44fe2629c4d7464bcf</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_node, const hier::Box &amp;src_node, int refine_item_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuternodeSumTransaction</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>7c8feb5e0122e905916c61bf0dd92f85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>a6abf0327e6e72dcd361e94fac3ac4d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>5ab945778f52ed9180717de47c541005</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeOutgoingMessageSize</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>63863ffa7fe8681b80a09cd89fd4c40e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getSourceProcessor</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>92467f725bc8e7051c52555bd050e2e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDestinationProcessor</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>4a2fa81fbdedf3900b568503721723fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>8bb922bf664517affef0ed4d8fc6694d</anchor>
      <arglist>(tbox::MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>befea2d435e175a7ffe03567d71aaef6</anchor>
      <arglist>(tbox::MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copyLocalData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>a0e21fe2dc6274f31f8ac1bcf55f405c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>cada004e240700342cb86a616c75438d</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setRefineItems</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>a15055cd5e62cfbb30f39c006f34b18f</anchor>
      <arglist>(const xfer::RefineClasses::Data **refine_items, int num_refine_items)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unsetRefineItems</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>0ada376e46532cbb21747afec3c706f9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::OuternodeSumTransactionFactory</name>
    <filename>classSAMRAI_1_1algs_1_1OuternodeSumTransactionFactory.html</filename>
    <base>SAMRAI::xfer::RefineTransactionFactory</base>
    <member kind="function">
      <type></type>
      <name>OuternodeSumTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransactionFactory.html</anchorfile>
      <anchor>8b3942bc9441d74551bd69951147479f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuternodeSumTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransactionFactory.html</anchorfile>
      <anchor>4bcbf4ca52bdb020c6e93b7791c65857</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRefineItems</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransactionFactory.html</anchorfile>
      <anchor>ba5c49a0d55f56f362cc9ddca43cc4f5</anchor>
      <arglist>(const xfer::RefineClasses::Data **refine_items, int num_refine_items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsetRefineItems</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransactionFactory.html</anchorfile>
      <anchor>3cc69f14c9dbce86b892d40518645c1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; tbox::Transaction &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransactionFactory.html</anchorfile>
      <anchor>9abd6a6fc132f84d6a84d8cfc0e71e22</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_node, const hier::Box &amp;src_node, int ritem_id, const hier::Box &amp;box, bool use_time_interpolation=false) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; tbox::Transaction &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransactionFactory.html</anchorfile>
      <anchor>5a7cad065e3b29a249243ea97657ba7e</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_node, const hier::Box &amp;src_node, int ritem_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preprocessScratchSpace</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransactionFactory.html</anchorfile>
      <anchor>a12c81eda0f8cf8b77c7221490726283</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; level, double fill_time, const hier::ComponentSelector &amp;preprocess_vector) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::PatchBoundaryEdgeSum</name>
    <filename>classSAMRAI_1_1algs_1_1PatchBoundaryEdgeSum.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchBoundaryEdgeSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryEdgeSum.html</anchorfile>
      <anchor>9e7e751ee56f57736fb6a52aca8071da</anchor>
      <arglist>(const std::string &amp;object_name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PatchBoundaryEdgeSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryEdgeSum.html</anchorfile>
      <anchor>f071339590a6dc734dc59a219f745e86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryEdgeSum.html</anchorfile>
      <anchor>35c32c00942fb52c8a354e7c9b118728</anchor>
      <arglist>(int edge_data_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryEdgeSum.html</anchorfile>
      <anchor>47c15390b5e19b394959607b7a3e9475</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryEdgeSum.html</anchorfile>
      <anchor>3f199e4ff1f07fab2bacd9035bbc1264</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryEdgeSum.html</anchorfile>
      <anchor>65f33d16470b96629fc0d584b8e64faa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getNumSharedPatchDataSlots</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryEdgeSum.html</anchorfile>
      <anchor>c085d8efcffe88ae995252e094235d17</anchor>
      <arglist>(int max_variables_to_register)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getNumUniquePatchDataSlots</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryEdgeSum.html</anchorfile>
      <anchor>47ae11a4ed8882126e4b22148dec4ec3</anchor>
      <arglist>(int max_variables_to_register)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::PatchBoundaryNodeSum</name>
    <filename>classSAMRAI_1_1algs_1_1PatchBoundaryNodeSum.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchBoundaryNodeSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryNodeSum.html</anchorfile>
      <anchor>6b67e61d9206b7db283c6126fcf83924</anchor>
      <arglist>(const std::string &amp;object_name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PatchBoundaryNodeSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryNodeSum.html</anchorfile>
      <anchor>41041e829cffc9ff04befcb04221fb53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryNodeSum.html</anchorfile>
      <anchor>97dc195503dbf6d21c7eb2c4194bc1ac</anchor>
      <arglist>(int node_data_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryNodeSum.html</anchorfile>
      <anchor>440e40c790514064364eea5d93ed10e6</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryNodeSum.html</anchorfile>
      <anchor>75a506c14813e503e4f00067b90c4ba3</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryNodeSum.html</anchorfile>
      <anchor>2be0a033db98b02ced7743b8a68c0492</anchor>
      <arglist>(const bool fill_hanging_nodes=false) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryNodeSum.html</anchorfile>
      <anchor>52895d444a3f704c97bd6d41a3ba67c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getNumSharedPatchDataSlots</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryNodeSum.html</anchorfile>
      <anchor>c123f0ca14ac45e49664df09f1014a5b</anchor>
      <arglist>(int max_variables_to_register)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getNumUniquePatchDataSlots</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryNodeSum.html</anchorfile>
      <anchor>e81eab6820986ca8b78cc3e527a2c1e9</anchor>
      <arglist>(int max_variables_to_register)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::TimeRefinementIntegrator</name>
    <filename>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</filename>
    <base>SAMRAI::tbox::Serializable</base>
    <member kind="function">
      <type></type>
      <name>TimeRefinementIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>6a62814319a1226500376d44468987fd</anchor>
      <arglist>(const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; input_db, tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, tbox::Pointer&lt; TimeRefinementLevelStrategy &gt; level_integrator, tbox::Pointer&lt; mesh::GriddingAlgorithmStrategy &gt; gridding_algorithm, bool register_for_restart=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TimeRefinementIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>9bcbb540cfea4b0ac1dc9aef90fcdce0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>initializeHierarchy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>4ecf1480095713fd40f994e1585799f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>advanceHierarchy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>321fd27a5945c0df6266ad0d5bc71b17</anchor>
      <arglist>(const double dt, const bool rebalance_coarsest=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>atRegridPoint</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>5911c97d3d4e79ce007c01fbf6afb9bd</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getIntegratorTime</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>6b4f3f7e54a2eb9315d531996db757f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStartTime</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>8f42492e34cf286bf1525d58291c2532</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEndTime</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>b8848bc63ca1b48c2ff7c49e75ff6a0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIntegratorStep</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>6c0414e48f823fb2f730917b65844d84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxIntegratorSteps</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>450da3ae4d30e94184b789eba8cd66e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stepsRemaining</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>0b9277a53ae474f0c6ec69fae4dfb0ed</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stepsRemaining</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>3e46283cf8b57d63f1baa8e0edfdca2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLevelDtActual</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>f17e49a5f18f8ac8c166d6dd41959a98</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLevelDtMax</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>5aa0b33c0a78c27d71d7b3bf550b96bf</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLevelSimTime</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>40f9a9165141056e03a08466da3e695e</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLevelStep</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>2af08d0392e1e0ae284853444123e186</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLevelMaxSteps</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>2b5c9923618f1bbb244b587e0237f668</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>4ac161972bda128037b095f3e0caada7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; TimeRefinementLevelStrategy &gt;</type>
      <name>getLevelIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>ad87d6c7eecff4ab84380a16cf56a5c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; mesh::GriddingAlgorithmStrategy &gt;</type>
      <name>getGriddingAlgorithm</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>c87b89a14dbb3024fcf426eaeee8b713</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>firstLevelStep</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>66b0088f31cbc2567442b10bcf097dd5</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lastLevelStep</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>3267b367ca9f986e0b82513f25b48350</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRegridInterval</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>e3ce6a40fc1f056dbab445eabd57f9b1</anchor>
      <arglist>(const int regrid_interval)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>bb00151d81b84962509150af4d2ea878</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printDataForLevel</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>543f2fcd8ee9b3df5c83eb45740c1558</anchor>
      <arglist>(std::ostream &amp;os, const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>960c010c44d2b9efb9ca7aa339252c22</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>69411bbbb23ca12adec80584fc20e643</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::TimeRefinementLevelStrategy</name>
    <filename>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>TimeRefinementLevelStrategy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>e55bf0bc2758e11e98892f080e59ad20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TimeRefinementLevelStrategy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>bb6b67834d2bc075d58f41a25fa8aa26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initializeLevelIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>7624a7a4dd9971d187e4a5b4b66387c5</anchor>
      <arglist>(tbox::Pointer&lt; mesh::GriddingAlgorithmStrategy &gt; gridding_alg)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getLevelDt</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>b1f019ba7e3b830a1f4e90305f731097</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const double dt_time, const bool initial_time)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxFinerLevelDt</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>c96eb05681ab7c0dfd03bb2f1ef9bbb0</anchor>
      <arglist>(const int finer_level_number, const double coarse_dt, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>advanceLevel</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>eda0400e68313c0365dee1a53f0130e6</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const double current_time, const double new_time, const bool first_step, const bool last_step, const bool regrid_advance=false)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>standardLevelSynchronization</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>556f0b8cbf9c3b4462006470bcad863a</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level, const double sync_time, const tbox::Array&lt; double &gt; &amp;old_times)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>standardLevelSynchronization</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>77170fea2c25115bb2207400b17c6183</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level, const double sync_time, const double old_time)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>synchronizeNewLevels</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>cdcd8c55189dab25cb3af79c7fd78621</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level, const double sync_time, const bool initial_time)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetTimeDependentData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>4b199ba4374d995ded1b68cc14ca2fee</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const double new_time, const bool can_be_refined)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetDataToPreadvanceState</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>8c4a7fb0107db830c186e372761db50a</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>usingRefinedTimestepping</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>1b4f253112df684c60c8769d51bc5115</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>SAMRAI::appu</name>
    <filename>namespaceSAMRAI_1_1appu.html</filename>
    <class kind="class">SAMRAI::appu::BoundaryUtilityStrategy</class>
    <class kind="struct">SAMRAI::appu::CartesianBoundaryUtilities2</class>
    <class kind="struct">SAMRAI::appu::CartesianBoundaryUtilities3</class>
    <class kind="class">SAMRAI::appu::VisDerivedDataStrategy</class>
    <class kind="class">SAMRAI::appu::VisItDataWriter</class>
    <class kind="class">SAMRAI::appu::VisMaterialsDataStrategy</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::appu::BoundaryUtilityStrategy</name>
    <filename>classSAMRAI_1_1appu_1_1BoundaryUtilityStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>BoundaryUtilityStrategy</name>
      <anchorfile>classSAMRAI_1_1appu_1_1BoundaryUtilityStrategy.html</anchorfile>
      <anchor>448c8490da0dbb6f08ab64432fb34829</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BoundaryUtilityStrategy</name>
      <anchorfile>classSAMRAI_1_1appu_1_1BoundaryUtilityStrategy.html</anchorfile>
      <anchor>c2446b0c4ba956237901fef54264a483</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>readDirichletBoundaryDataEntry</name>
      <anchorfile>classSAMRAI_1_1appu_1_1BoundaryUtilityStrategy.html</anchorfile>
      <anchor>b8316707aa3bd3d3c972568b7a3eff82</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db, std::string &amp;db_name, int bdry_location_index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>readNeumannBoundaryDataEntry</name>
      <anchorfile>classSAMRAI_1_1appu_1_1BoundaryUtilityStrategy.html</anchorfile>
      <anchor>64cb61852d78250e6ad92c80d8bdbc2e</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db, std::string &amp;db_name, int bdry_location_index)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::appu::CartesianBoundaryUtilities2</name>
    <filename>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities2.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>readBoundaryInput</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities2.html</anchorfile>
      <anchor>5197203793de714df5aef65a1bc313e1</anchor>
      <arglist>(BoundaryUtilityStrategy *bdry_strategy, tbox::Pointer&lt; tbox::Database &gt; bdry_db, tbox::Array&lt; int &gt; &amp;edge_conds, tbox::Array&lt; int &gt; &amp;node_conds, const hier::IntVector &amp;periodic)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fillEdgeBoundaryData</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities2.html</anchorfile>
      <anchor>7bf78a6ae23814aa0fd12cbe64fe40e0</anchor>
      <arglist>(const std::string &amp;varname, tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; &amp;vardata, const hier::Patch &amp;patch, const hier::IntVector &amp;ghost_width_to_fill, const tbox::Array&lt; int &gt; &amp;bdry_edge_conds, const tbox::Array&lt; double &gt; &amp;bdry_edge_values)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fillNodeBoundaryData</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities2.html</anchorfile>
      <anchor>d0d9894340aef11b15770433593198cb</anchor>
      <arglist>(const std::string &amp;varname, tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; &amp;vardata, const hier::Patch &amp;patch, const hier::IntVector &amp;ghost_width_to_fill, const tbox::Array&lt; int &gt; &amp;bdry_node_conds, const tbox::Array&lt; double &gt; &amp;bdry_edge_values)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getEdgeLocationForNodeBdry</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities2.html</anchorfile>
      <anchor>5b71e80e5265bd65f23a4ecfc08b4cb4</anchor>
      <arglist>(int node_loc, int node_btype)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>checkBdryData</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities2.html</anchorfile>
      <anchor>601d4cf39c7d5d9614ad6cd908ad9946</anchor>
      <arglist>(const std::string &amp;varname, const hier::Patch &amp;patch, int data_id, int depth, const hier::IntVector &amp;gcw_to_check, const hier::BoundaryBox &amp;bbox, int bcase, double bstate)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::appu::CartesianBoundaryUtilities3</name>
    <filename>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities3.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>readBoundaryInput</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities3.html</anchorfile>
      <anchor>3e80b07f78ae48bf3cedfb852c96fd2f</anchor>
      <arglist>(BoundaryUtilityStrategy *bdry_strategy, tbox::Pointer&lt; tbox::Database &gt; bdry_db, tbox::Array&lt; int &gt; &amp;face_conds, tbox::Array&lt; int &gt; &amp;edge_conds, tbox::Array&lt; int &gt; &amp;node_conds, const hier::IntVector &amp;periodic)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fillFaceBoundaryData</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities3.html</anchorfile>
      <anchor>63cc5740f0faa026872ede8fa27b6f37</anchor>
      <arglist>(const std::string &amp;varname, tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; &amp;vardata, const hier::Patch &amp;patch, const hier::IntVector &amp;ghost_width_to_fill, const tbox::Array&lt; int &gt; &amp;bdry_face_conds, const tbox::Array&lt; double &gt; &amp;bdry_face_values)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fillEdgeBoundaryData</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities3.html</anchorfile>
      <anchor>c758f6f9a96d683bb28fc14b44fe29fb</anchor>
      <arglist>(const std::string &amp;varname, tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; &amp;vardata, const hier::Patch &amp;patch, const hier::IntVector &amp;ghost_width_to_fill, const tbox::Array&lt; int &gt; &amp;bdry_edge_conds, const tbox::Array&lt; double &gt; &amp;bdry_face_values)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fillNodeBoundaryData</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities3.html</anchorfile>
      <anchor>f448de6c94dba07db5812ba59e2ada8d</anchor>
      <arglist>(const std::string &amp;varname, tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; &amp;vardata, const hier::Patch &amp;patch, const hier::IntVector &amp;ghost_width_to_fill, const tbox::Array&lt; int &gt; &amp;bdry_node_conds, const tbox::Array&lt; double &gt; &amp;bdry_face_values)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getFaceLocationForEdgeBdry</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities3.html</anchorfile>
      <anchor>46def28f0e4889bae1c93528c735c7e9</anchor>
      <arglist>(int edge_loc, int edge_btype)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getFaceLocationForNodeBdry</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities3.html</anchorfile>
      <anchor>4882760652f6bbbcaf864410091d391d</anchor>
      <arglist>(int node_loc, int node_btype)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>checkBdryData</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities3.html</anchorfile>
      <anchor>939fff8382c7cf48622ae8aa9ea63c7b</anchor>
      <arglist>(const std::string &amp;varname, const hier::Patch &amp;patch, int data_id, int depth, const hier::IntVector &amp;gcw_to_check, const hier::BoundaryBox &amp;bbox, int bcase, double bstate)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::appu::VisDerivedDataStrategy</name>
    <filename>classSAMRAI_1_1appu_1_1VisDerivedDataStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>VisDerivedDataStrategy</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisDerivedDataStrategy.html</anchorfile>
      <anchor>af72764ad5a9e63707f27261a24d39cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VisDerivedDataStrategy</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisDerivedDataStrategy.html</anchorfile>
      <anchor>0518367ff3fdcbc10693b61b61395773</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>packDerivedDataIntoDoubleBuffer</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisDerivedDataStrategy.html</anchorfile>
      <anchor>adb7651ad7cf9fe6c8cfc37b687a9699</anchor>
      <arglist>(double *buffer, const hier::Patch &amp;patch, const hier::Box &amp;region, const std::string &amp;variable_name, int depth_index) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>packMixedDerivedDataIntoDoubleBuffer</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisDerivedDataStrategy.html</anchorfile>
      <anchor>36e1e738ff636af37be3177a25785f54</anchor>
      <arglist>(double *buffer, std::vector&lt; double &gt; &amp;mixbuffer, const hier::Patch &amp;patch, const hier::Box &amp;region, const std::string &amp;variable_name, int depth_index) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::appu::VisItDataWriter</name>
    <filename>classSAMRAI_1_1appu_1_1VisItDataWriter.html</filename>
    <member kind="function">
      <type></type>
      <name>VisItDataWriter</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>650c6d58ebeb55b4997b9ec85335b4d6</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name, const std::string &amp;dump_directory_name, int number_procs_per_file=1, bool is_multiblock=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VisItDataWriter</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>a21821fa3e5c5e1101727c12ab020e01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultDerivedDataWriter</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>45da5f564956048f569b91f00e2cbc8c</anchor>
      <arglist>(VisDerivedDataStrategy *default_derived_writer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaterialsDataWriter</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>942bb04eeb4ca2b430d6dd13918ecd81</anchor>
      <arglist>(VisMaterialsDataStrategy *materials_data_writer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerPlotQuantity</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>7cf40e8cd471b1cea58261a175ac1a32</anchor>
      <arglist>(const std::string &amp;variable_name, const std::string &amp;variable_type, const int patch_data_index, const int start_depth_index=0, const double scale_factor=1.0, const std::string &amp;variable_centering=&quot;UNKNOWN&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerDerivedPlotQuantity</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>7aea592f160b032f35a8042ecffb247c</anchor>
      <arglist>(const std::string &amp;variable_name, const std::string &amp;variable_type, VisDerivedDataStrategy *derived_writer=(VisDerivedDataStrategy *) NULL, const double scale_factor=1.0, const std::string &amp;variable_centering=&quot;CELL&quot;, const std::string &amp;variable_mix_type=&quot;CLEAN&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevelPlotQuantity</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>272af94d7a46aa1f1f218dbce87f4f67</anchor>
      <arglist>(const std::string &amp;variable_name, const int level_number, const int patch_data_index, const int start_depth_index=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerNodeCoordinates</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>a2c870de6df03abc1c85de47ae9261ce</anchor>
      <arglist>(const int patch_data_index, const int start_depth_index=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerSingleNodeCoordinate</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>eab5fd26469cb22a98769ee0e29aa22c</anchor>
      <arglist>(const int coordinate_number, const int patch_data_index, const int depth_index=0, const double scale_factor=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerMaterialNames</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>8cf4f5f59c2ce0466205e614d48ac163</anchor>
      <arglist>(const tbox::Array&lt; std::string &gt; &amp;material_names)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerSparseMaterialNames</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>a7525ccfebd7fc3d8bb4977b6d0cf867</anchor>
      <arglist>(const tbox::Array&lt; std::string &gt; &amp;material_names)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerSpeciesNames</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>a80f223e3adf67a57765faa282dbb4b3</anchor>
      <arglist>(const std::string &amp;material_name, const tbox::Array&lt; std::string &gt; &amp;species_names)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerVisItExpressions</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>6173979ca3ae02f218a7ecc36e5b7e7d</anchor>
      <arglist>(const tbox::Array&lt; std::string &gt; &amp;expression_keys, const tbox::Array&lt; std::string &gt; &amp;expressions, const tbox::Array&lt; std::string &gt; &amp;expression_types)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePlotData</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>876e5e6e2db02b85cd219927c000bf17</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, int time_step, double simulation_time=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSummaryFilename</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>221e89a092a2df3eb507d277bf3cecc1</anchor>
      <arglist>(std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>cad9155544df4bd4673f6f86e02cefe8</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::appu::VisMaterialsDataStrategy</name>
    <filename>classSAMRAI_1_1appu_1_1VisMaterialsDataStrategy.html</filename>
    <member kind="enumvalue">
      <type>@</type>
      <name>VISIT_ALLZERO</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisMaterialsDataStrategy.html</anchorfile>
      <anchor>5351bb23ad236aaba4c1d0b998197c8541267a7e9dbb898fee38df5af2c2f27c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>VISIT_ALLONE</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisMaterialsDataStrategy.html</anchorfile>
      <anchor>5351bb23ad236aaba4c1d0b998197c859fa06894639639466ad5680915b39474</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>VISIT_MIXED</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisMaterialsDataStrategy.html</anchorfile>
      <anchor>5351bb23ad236aaba4c1d0b998197c85108f67889aa5979d35a145df607ef19d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PACK_RETURN_TYPE</name>
      <anchor>5351bb23ad236aaba4c1d0b998197c85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISIT_ALLZERO</name>
      <anchor>5351bb23ad236aaba4c1d0b998197c8541267a7e9dbb898fee38df5af2c2f27c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISIT_ALLONE</name>
      <anchor>5351bb23ad236aaba4c1d0b998197c859fa06894639639466ad5680915b39474</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISIT_MIXED</name>
      <anchor>5351bb23ad236aaba4c1d0b998197c85108f67889aa5979d35a145df607ef19d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VisMaterialsDataStrategy</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisMaterialsDataStrategy.html</anchorfile>
      <anchor>ab5344b10616567e3a7557f7d27aa1c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VisMaterialsDataStrategy</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisMaterialsDataStrategy.html</anchorfile>
      <anchor>b5af0697184d143d0dec2917ec4343ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>packMaterialFractionsIntoDoubleBuffer</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisMaterialsDataStrategy.html</anchorfile>
      <anchor>ad75fab73468c31895f03424a423ac43</anchor>
      <arglist>(double *buffer, const hier::Patch &amp;patch, const hier::Box &amp;region, const std::string &amp;material_name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>packMaterialFractionsIntoSparseBuffers</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisMaterialsDataStrategy.html</anchorfile>
      <anchor>0536f7c52d31b5edda36b2beaaa26642</anchor>
      <arglist>(int *mat_list, std::vector&lt; int &gt; &amp;mix_zones, std::vector&lt; int &gt; &amp;mix_mat, std::vector&lt; double &gt; &amp;vol_fracs, std::vector&lt; int &gt; &amp;next_mat, const hier::Patch &amp;patch, const hier::Box &amp;region) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>packSpeciesFractionsIntoDoubleBuffer</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisMaterialsDataStrategy.html</anchorfile>
      <anchor>9e575e29d9ec0445eec62aad03aa4c25</anchor>
      <arglist>(double *buffer, const hier::Patch &amp;patch, const hier::Box &amp;region, const std::string &amp;material_name, const std::string &amp;species_name) const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>SAMRAI::geom</name>
    <filename>namespaceSAMRAI_1_1geom.html</filename>
    <class kind="class">SAMRAI::geom::CartesianCellComplexConservativeLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianCellComplexLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianCellComplexWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianCellDoubleConservativeLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianCellDoubleLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianCellDoubleWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianCellFloatConservativeLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianCellFloatLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianCellFloatWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianEdgeComplexWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianEdgeDoubleConservativeLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianEdgeDoubleWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianEdgeFloatConservativeLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianEdgeFloatWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianFaceComplexWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianFaceDoubleConservativeLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianFaceDoubleWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianFaceFloatConservativeLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianFaceFloatWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianGridGeometry</class>
    <class kind="class">SAMRAI::geom::CartesianNodeComplexLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianNodeDoubleLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianNodeFloatLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianOuterfaceComplexWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianOuterfaceDoubleWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianOuterfaceFloatWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianOutersideDoubleWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianPatchGeometry</class>
    <class kind="class">SAMRAI::geom::CartesianSideComplexWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianSideDoubleConservativeLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianSideDoubleWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianSideFloatConservativeLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianSideFloatWeightedAverage</class>
    <class kind="class">SAMRAI::geom::SAMRAITransferOperatorRegistry</class>
    <class kind="class">SAMRAI::geom::SkeletonCoarsen</class>
    <class kind="class">SAMRAI::geom::SkeletonGridGeometry</class>
    <class kind="class">SAMRAI::geom::SkeletonPatchGeometry</class>
    <class kind="class">SAMRAI::geom::SkeletonRefine</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianCellComplexConservativeLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianCellComplexConservativeLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianCellComplexConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexConservativeLinearRefine.html</anchorfile>
      <anchor>225a14a368d7c37468a52c649615708f</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianCellComplexConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexConservativeLinearRefine.html</anchorfile>
      <anchor>1f313a9a2b6d2d45ef19f5ef834e92fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexConservativeLinearRefine.html</anchorfile>
      <anchor>27a26ea7ff581193334a5b6a67d9332f</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexConservativeLinearRefine.html</anchorfile>
      <anchor>30f07f2fe32c3bd314c5d4cf208edd2d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexConservativeLinearRefine.html</anchorfile>
      <anchor>09728b2fd3f86149f9a93789f4dc17b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexConservativeLinearRefine.html</anchorfile>
      <anchor>ed2b18646423b1ff5fc6def83ba4dbcf</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexConservativeLinearRefine.html</anchorfile>
      <anchor>51d8f97f6ba822078b3cda580a3aef31</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianCellComplexLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianCellComplexLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianCellComplexLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexLinearRefine.html</anchorfile>
      <anchor>0a92a96edcb2b0d9f176e9a61a23e74e</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianCellComplexLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexLinearRefine.html</anchorfile>
      <anchor>23ba039952c73459b17d61bcca6845a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexLinearRefine.html</anchorfile>
      <anchor>ee09fda0959d300f988b77937bd6e8d6</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexLinearRefine.html</anchorfile>
      <anchor>b9ce8a9ee66313c5b7d047b33363c72a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexLinearRefine.html</anchorfile>
      <anchor>34b3f0a32af190d38a42b5bfc8bd1004</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexLinearRefine.html</anchorfile>
      <anchor>5ba166d96159101203ee9896f4626ccc</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexLinearRefine.html</anchorfile>
      <anchor>9a6be20f19cfa2b75e854681bda41c12</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianCellComplexWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianCellComplexWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianCellComplexWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexWeightedAverage.html</anchorfile>
      <anchor>f1f304ac6a004f92e8e69583211dc3f2</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianCellComplexWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexWeightedAverage.html</anchorfile>
      <anchor>5eaa84dc16f32801aee3617581d4dff5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexWeightedAverage.html</anchorfile>
      <anchor>cc70d7946dfc495b462aef96486abdc4</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexWeightedAverage.html</anchorfile>
      <anchor>4a2933c92401415725c9f371cf23872a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexWeightedAverage.html</anchorfile>
      <anchor>2a6cd8be6a0a7ba96bbd6a45c70a2d26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexWeightedAverage.html</anchorfile>
      <anchor>35b56b0c53107e5c81422630267ba297</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianCellDoubleConservativeLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianCellDoubleConservativeLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianCellDoubleConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>1b500aa3754013959481bf8e34cff2cb</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianCellDoubleConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>68ace53a57eeb4fd9a35750db9df5395</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>66934745d86a9187c0500faa02258a8d</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>dccf2b5e79a3e139e4ee3c4020a6b7b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>dc436977172f6ed09e80a66a22d81f06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>dcee2bcc949f89c3d92026d57b01681f</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>17f2fe7163106466d7da4ae52ba4eacc</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianCellDoubleLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianCellDoubleLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianCellDoubleLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleLinearRefine.html</anchorfile>
      <anchor>cab6e8489f6c28bdb38943fadc8c0d88</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianCellDoubleLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleLinearRefine.html</anchorfile>
      <anchor>8588aaf7f9e28362d1d8e74213754a7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleLinearRefine.html</anchorfile>
      <anchor>1ac4c5f6ef2d9404a6c2731fd29e3a33</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleLinearRefine.html</anchorfile>
      <anchor>cdd0d53111a9708820288038126c7286</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleLinearRefine.html</anchorfile>
      <anchor>de478e1a9a7a8289e0b458b6803d7b3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleLinearRefine.html</anchorfile>
      <anchor>66eb120c081c9ee0a8f8077d63703e5e</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleLinearRefine.html</anchorfile>
      <anchor>95130edcc688a031faf028a90feb59ab</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianCellDoubleWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianCellDoubleWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianCellDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleWeightedAverage.html</anchorfile>
      <anchor>2e5624c4d550e34773e87f21ec1d05f6</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianCellDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleWeightedAverage.html</anchorfile>
      <anchor>b9649c6c366edc98af393f5565a5bfb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleWeightedAverage.html</anchorfile>
      <anchor>1f8b8d282bc3b60553fcb59464395350</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleWeightedAverage.html</anchorfile>
      <anchor>3ae169673e7abc8ed6ccbd8900cd890e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleWeightedAverage.html</anchorfile>
      <anchor>27e52b4e83893797c715bfc14ed2676e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleWeightedAverage.html</anchorfile>
      <anchor>296a0ec7767d6409a6587f551f7a056f</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianCellFloatConservativeLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianCellFloatConservativeLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianCellFloatConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatConservativeLinearRefine.html</anchorfile>
      <anchor>1b946cf178cb194b9a1df49bb1e396c6</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianCellFloatConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatConservativeLinearRefine.html</anchorfile>
      <anchor>2a99f798c65b6926650b8a578b1c5a77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatConservativeLinearRefine.html</anchorfile>
      <anchor>9cc3afb9a195be9fd88d484a2634120a</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatConservativeLinearRefine.html</anchorfile>
      <anchor>c693bb5ae4d42c1dbbee48ef9a1b9aa1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatConservativeLinearRefine.html</anchorfile>
      <anchor>112c857691aa27b00ae8b36c94f2dcea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatConservativeLinearRefine.html</anchorfile>
      <anchor>eaaa3e874c124faf06445dfb76b36e1c</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatConservativeLinearRefine.html</anchorfile>
      <anchor>3d18be74ae05b042fba317bb6c584cdc</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianCellFloatLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianCellFloatLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianCellFloatLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatLinearRefine.html</anchorfile>
      <anchor>b90a58b70c84cc25a57c23340e351fad</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianCellFloatLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatLinearRefine.html</anchorfile>
      <anchor>aae6a4c4c5b035b81c9b536a88d204fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatLinearRefine.html</anchorfile>
      <anchor>051b409f3163e75952795f04ee7c68d8</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatLinearRefine.html</anchorfile>
      <anchor>7a9036139d9189c14ca781af646be927</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatLinearRefine.html</anchorfile>
      <anchor>a310a0bb479e9dbe53b8f2b84bda8852</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatLinearRefine.html</anchorfile>
      <anchor>2d75ec1729e320811b5956b85b529a17</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatLinearRefine.html</anchorfile>
      <anchor>9f169ea009a1109b0a7ea0c5faa1f4a3</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianCellFloatWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianCellFloatWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianCellFloatWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatWeightedAverage.html</anchorfile>
      <anchor>84d9568ce1ac5b5072a8b5992554eeb2</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianCellFloatWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatWeightedAverage.html</anchorfile>
      <anchor>629255f34834b03fca2a36cbe95251c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatWeightedAverage.html</anchorfile>
      <anchor>3147f2292c78a8c3be87ab8d3621804f</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatWeightedAverage.html</anchorfile>
      <anchor>12aa150c3a5d87d7e27ab89e2a8e02ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatWeightedAverage.html</anchorfile>
      <anchor>8db4c363172f941a5bdd18d91db034e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatWeightedAverage.html</anchorfile>
      <anchor>d64278ac248c80569e095ffc3caf19b6</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianEdgeComplexWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianEdgeComplexWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianEdgeComplexWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeComplexWeightedAverage.html</anchorfile>
      <anchor>411d22f039cf3b76588690793a67e975</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianEdgeComplexWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeComplexWeightedAverage.html</anchorfile>
      <anchor>460b7cae89aeacc6268274d940c5d6b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeComplexWeightedAverage.html</anchorfile>
      <anchor>e4b9bf1c489191fcaf554ee5d4ed3faf</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeComplexWeightedAverage.html</anchorfile>
      <anchor>baf183391e844e273cc47632ebb94c96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeComplexWeightedAverage.html</anchorfile>
      <anchor>03897fcddb9fcc7ac7deb9f2522b68ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeComplexWeightedAverage.html</anchorfile>
      <anchor>8e65b4177899d203c995936be429d722</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianEdgeDoubleConservativeLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleConservativeLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianEdgeDoubleConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>a140bc9e73723d2644472b9f66457740</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianEdgeDoubleConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>47b72509803585c9e4673abd3894b58f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>100a089016805fb6842ed37de332749f</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>413ea2016481abe7a36734a3662eee74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>a3dceb37ebfe6b93872cdb4ffa3d0898</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>787a6613b04679af71d9e6f740c06bee</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianEdgeDoubleWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianEdgeDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleWeightedAverage.html</anchorfile>
      <anchor>782384e5012eb9b0b8ef42c6d70e1982</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianEdgeDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleWeightedAverage.html</anchorfile>
      <anchor>9667d1c2cbc612156477864988411aa5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleWeightedAverage.html</anchorfile>
      <anchor>d7568f9a3cbf408f39e8bca58652f0bd</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleWeightedAverage.html</anchorfile>
      <anchor>2b01ffc769a3c22d21dfccd84c6de21d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleWeightedAverage.html</anchorfile>
      <anchor>32eec847742bef7006b390822f063b2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleWeightedAverage.html</anchorfile>
      <anchor>59e0b1c1b634afeacfb63e801608fa56</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianEdgeFloatConservativeLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianEdgeFloatConservativeLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianEdgeFloatConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatConservativeLinearRefine.html</anchorfile>
      <anchor>0003beda5af5f9e2ff3b2adf4fd4cf3b</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianEdgeFloatConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatConservativeLinearRefine.html</anchorfile>
      <anchor>187982572313af2a62b66b695a46e2aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatConservativeLinearRefine.html</anchorfile>
      <anchor>03979daecfd60f47805b791d828bdb42</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatConservativeLinearRefine.html</anchorfile>
      <anchor>24f71ff11407a7f71878324e8985f30c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatConservativeLinearRefine.html</anchorfile>
      <anchor>d72e2b5224bb6084d565129f1da315af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatConservativeLinearRefine.html</anchorfile>
      <anchor>a38100d14044f3a631b89d338432f454</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianEdgeFloatWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianEdgeFloatWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianEdgeFloatWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatWeightedAverage.html</anchorfile>
      <anchor>39fdbc57f7e5f4855f30714528927ed0</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianEdgeFloatWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatWeightedAverage.html</anchorfile>
      <anchor>4fd9ffea782f7247bd127776a9e51474</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatWeightedAverage.html</anchorfile>
      <anchor>8ab34c866a13cd8511adf5ca52fe96ac</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatWeightedAverage.html</anchorfile>
      <anchor>d3b7f9f837dd8f8f6a74be0db307d157</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatWeightedAverage.html</anchorfile>
      <anchor>95fd792f20b3bea3b8788f5679208375</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatWeightedAverage.html</anchorfile>
      <anchor>d76c5817225e9507aca2bcb8cc44cf6f</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianFaceComplexWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianFaceComplexWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianFaceComplexWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceComplexWeightedAverage.html</anchorfile>
      <anchor>4dfd4ab134a88eac346c61e02a9fef01</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianFaceComplexWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceComplexWeightedAverage.html</anchorfile>
      <anchor>15a00cd12c6e3c3ecc721b73fbb3a8ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceComplexWeightedAverage.html</anchorfile>
      <anchor>e885fd039755018ee4288264922f2636</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceComplexWeightedAverage.html</anchorfile>
      <anchor>822d782506c4c7b7187fde32a3f75b43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceComplexWeightedAverage.html</anchorfile>
      <anchor>3ab1132884fa972b00122c13e7fb6e0e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceComplexWeightedAverage.html</anchorfile>
      <anchor>f460f16cb624c64179c92fc1998974a8</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianFaceDoubleConservativeLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianFaceDoubleConservativeLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianFaceDoubleConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>172cb193eb2a2980f1aa791de201d643</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianFaceDoubleConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>3c3ddd9c356d6b37a02226255aea55d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>4af307065356eb08094828fb7117ec6b</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>b9df7de4c9e466b0059d84b5b876ac67</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>b594b6c6e0c9994cf6c9e5766c32422f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>d08a58ac066a4cd535f356fb9b873baf</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianFaceDoubleWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianFaceDoubleWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianFaceDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleWeightedAverage.html</anchorfile>
      <anchor>5a7697ea3002c6da830d440f52486d82</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianFaceDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleWeightedAverage.html</anchorfile>
      <anchor>d99cdb6a223275b1f3650ee3267d10fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleWeightedAverage.html</anchorfile>
      <anchor>5b2dd2bfcb0f1b9ac4e158279a3929d0</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleWeightedAverage.html</anchorfile>
      <anchor>43b0fe67f46140e29162ad6d186ae9fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleWeightedAverage.html</anchorfile>
      <anchor>55a43174077e509a39d38154632b920c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleWeightedAverage.html</anchorfile>
      <anchor>f17d683b826d44d07fdd020ebcf53ed8</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianFaceFloatConservativeLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianFaceFloatConservativeLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianFaceFloatConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatConservativeLinearRefine.html</anchorfile>
      <anchor>fdf484fab0d3bfeafef4de2f265a9f0d</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianFaceFloatConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatConservativeLinearRefine.html</anchorfile>
      <anchor>c7e3079d2200917b3d80d51dd4b70f18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatConservativeLinearRefine.html</anchorfile>
      <anchor>cb1f42e7fcb6bbf8e25fd8fa66866b41</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatConservativeLinearRefine.html</anchorfile>
      <anchor>54c5890948a2b3f97f37a666e761e2f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatConservativeLinearRefine.html</anchorfile>
      <anchor>83a7a00af1a2ef3dbcd53450bfcc30d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatConservativeLinearRefine.html</anchorfile>
      <anchor>1739cc806908145a94ef803d3c73dad1</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianFaceFloatWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianFaceFloatWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianFaceFloatWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatWeightedAverage.html</anchorfile>
      <anchor>8cec17eac2cf360a6abfc4b69dacd80e</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianFaceFloatWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatWeightedAverage.html</anchorfile>
      <anchor>fa0900c425468fac8703c8a1cecda0a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatWeightedAverage.html</anchorfile>
      <anchor>551b9836c3487c21412c58cf3024b2af</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatWeightedAverage.html</anchorfile>
      <anchor>a18a40ca926264ef0e58f116f56fa266</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatWeightedAverage.html</anchorfile>
      <anchor>7a8620d9cd6637f05a6986379d8a02b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatWeightedAverage.html</anchorfile>
      <anchor>ca768b5b2e520b52eeea5f0948d54b7f</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianGridGeometry</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</filename>
    <base>SAMRAI::hier::GridGeometry</base>
    <member kind="function">
      <type></type>
      <name>CartesianGridGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>dffe099faf7bd1404fbce965fa813a79</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; input_db, bool register_for_restart=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CartesianGridGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>de82a566b82d84755b4d2b963afd4488</anchor>
      <arglist>(const std::string &amp;object_name, const double *x_lo, const double *x_up, const hier::BoxContainer &amp;domain, bool register_for_restart=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianGridGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>938c3f762b511270d80e9a468ebc28ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::GridGeometry &gt;</type>
      <name>makeRefinedGridGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>a10363ea7202d51159354000de170b52</anchor>
      <arglist>(const std::string &amp;fine_geom_name, const hier::IntVector &amp;refine_ratio, bool register_for_restart) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::GridGeometry &gt;</type>
      <name>makeCoarsenedGridGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>92dc6a4f7e11b47c850a78b55e6926bc</anchor>
      <arglist>(const std::string &amp;coarse_geom_name, const hier::IntVector &amp;coarsen_ratio, bool register_for_restart) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGeometryDataOnPatch</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>85122a9d54d3f375585ffd3c41e908ed</anchor>
      <arglist>(hier::Patch &amp;patch, const hier::IntVector &amp;ratio_to_level_zero, const TwoDimBool &amp;touches_regular_bdry, const TwoDimBool &amp;touches_periodic_bdry) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGeometryData</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>4359edc133c696da66801d5cd678ca81</anchor>
      <arglist>(const double *x_lo, const double *x_up, const hier::BoxContainer &amp;domain)</arglist>
    </member>
    <member kind="function">
      <type>const double *</type>
      <name>getDx</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>c1e57add74326c74e297e54003d45b49</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const double *</type>
      <name>getXLower</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>ce8d2195148a531217e2eec3cb4728d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const double *</type>
      <name>getXUpper</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>30189b111cc9a69467981769ae466d89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>6b2ff51d7f095807d59eac0d488337a5</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>3660dcab5751f0b43e179bd16cfa7921</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianNodeComplexLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianNodeComplexLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianNodeComplexLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeComplexLinearRefine.html</anchorfile>
      <anchor>c0ac0ad53bedcd9e353484abd10a6009</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianNodeComplexLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeComplexLinearRefine.html</anchorfile>
      <anchor>b50694cd35c31050effde3e72784d4b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeComplexLinearRefine.html</anchorfile>
      <anchor>84d6b7a0f1ff3949714f7e096b0d9073</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeComplexLinearRefine.html</anchorfile>
      <anchor>3c59f521193e578be5f3dbd5fda57744</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeComplexLinearRefine.html</anchorfile>
      <anchor>a0ad23247ae0734c6526a07f78a64616</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeComplexLinearRefine.html</anchorfile>
      <anchor>8742c4c2021a594297575320078c4f8b</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeComplexLinearRefine.html</anchorfile>
      <anchor>f43f007da70b33a0ede2d08f45878c54</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianNodeDoubleLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianNodeDoubleLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianNodeDoubleLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeDoubleLinearRefine.html</anchorfile>
      <anchor>096dff97d7a6ee21f476f71188dc94ae</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianNodeDoubleLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeDoubleLinearRefine.html</anchorfile>
      <anchor>cb72d864dd891cf4750c81bbed5632da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeDoubleLinearRefine.html</anchorfile>
      <anchor>4c363e512d43d32b8760e56cffc1c672</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeDoubleLinearRefine.html</anchorfile>
      <anchor>f4b1f496f89b139f61aacacbe8b74b3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeDoubleLinearRefine.html</anchorfile>
      <anchor>5e40cc0e37d3526e0bb1531f343c20a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeDoubleLinearRefine.html</anchorfile>
      <anchor>5a3fb7e6061d9eb91f85751039399399</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeDoubleLinearRefine.html</anchorfile>
      <anchor>38fb995b335035f07e5127f6214de2cb</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianNodeFloatLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianNodeFloatLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianNodeFloatLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeFloatLinearRefine.html</anchorfile>
      <anchor>78972bbcfe0a24488956e8febacd7dc5</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianNodeFloatLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeFloatLinearRefine.html</anchorfile>
      <anchor>ae82532c7f70a576169ad463268adc84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeFloatLinearRefine.html</anchorfile>
      <anchor>c55d4e783d318c2db5ebba1cce3c074d</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeFloatLinearRefine.html</anchorfile>
      <anchor>2ae6d35d9084b09fcd2ec97033d2efb6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeFloatLinearRefine.html</anchorfile>
      <anchor>3e86903ab238b53e5914f56e821fabc6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeFloatLinearRefine.html</anchorfile>
      <anchor>537ea54b6429bc6e6e4aa72671fca143</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeFloatLinearRefine.html</anchorfile>
      <anchor>2f3cc980930837636de3a05003066924</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianOuterfaceComplexWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianOuterfaceComplexWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianOuterfaceComplexWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceComplexWeightedAverage.html</anchorfile>
      <anchor>d62dbb28e94c145377b4aa8e869e4034</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianOuterfaceComplexWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceComplexWeightedAverage.html</anchorfile>
      <anchor>0dc51bebead6e1d3a716dc8402c09d45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceComplexWeightedAverage.html</anchorfile>
      <anchor>8f8f9f9e8a9bf73968d2e745dec6faa6</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceComplexWeightedAverage.html</anchorfile>
      <anchor>4ec868e2bc038771c828cc7e53af9c81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceComplexWeightedAverage.html</anchorfile>
      <anchor>062f8bfb064901ac3a1c42fc400a2594</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceComplexWeightedAverage.html</anchorfile>
      <anchor>144bf8007d8e267f38e987c034b5402a</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianOuterfaceDoubleWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianOuterfaceDoubleWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianOuterfaceDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceDoubleWeightedAverage.html</anchorfile>
      <anchor>10684afe55eac0a906cc2f68947ab162</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianOuterfaceDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceDoubleWeightedAverage.html</anchorfile>
      <anchor>1a3c6e3e88585bb528c17f9414f255e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceDoubleWeightedAverage.html</anchorfile>
      <anchor>c7513fa56c6648e54705679e73e07e2c</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceDoubleWeightedAverage.html</anchorfile>
      <anchor>836de8e2d1947e8ba4ec1c788aaab107</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceDoubleWeightedAverage.html</anchorfile>
      <anchor>d63534e76abfda75ea232ceaf3408df9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceDoubleWeightedAverage.html</anchorfile>
      <anchor>dcebcb71d94d07657fc8f477d845dcb7</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianOuterfaceFloatWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianOuterfaceFloatWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianOuterfaceFloatWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceFloatWeightedAverage.html</anchorfile>
      <anchor>cb7649ef048912cd342520d3fbc44272</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianOuterfaceFloatWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceFloatWeightedAverage.html</anchorfile>
      <anchor>92d3c5e62b9f27698223a1f9588e55da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceFloatWeightedAverage.html</anchorfile>
      <anchor>a192e402dceba7166a835767c24df772</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceFloatWeightedAverage.html</anchorfile>
      <anchor>ad85242894189c1d21368f61ca920fc9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceFloatWeightedAverage.html</anchorfile>
      <anchor>d0cd6dbe7d8277b032ba9e9d48b94527</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceFloatWeightedAverage.html</anchorfile>
      <anchor>0dfaa752904a1721f74ba72f93cf4cf6</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianOutersideDoubleWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianOutersideDoubleWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianOutersideDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOutersideDoubleWeightedAverage.html</anchorfile>
      <anchor>f9624ec4bad744785ced4d1c0c3e703a</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianOutersideDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOutersideDoubleWeightedAverage.html</anchorfile>
      <anchor>c3325b1b8c879efceff389611c0c52ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOutersideDoubleWeightedAverage.html</anchorfile>
      <anchor>cde1ab3b3864bdf2ed8404beaff73c59</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOutersideDoubleWeightedAverage.html</anchorfile>
      <anchor>1dbafcbf797528effe07eb445494ad00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOutersideDoubleWeightedAverage.html</anchorfile>
      <anchor>dcf8b3e475010670c4a314d169563b4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOutersideDoubleWeightedAverage.html</anchorfile>
      <anchor>3808ab454acb0022665ac4dde7b07c63</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianPatchGeometry</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianPatchGeometry.html</filename>
    <base>SAMRAI::hier::PatchGeometry</base>
    <member kind="typedef">
      <type>hier::PatchGeometry::TwoDimBool</type>
      <name>TwoDimBool</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianPatchGeometry.html</anchorfile>
      <anchor>f1ac177dd998e2179aa562d8e292deef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CartesianPatchGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianPatchGeometry.html</anchorfile>
      <anchor>3002dba6d008a50d59a106d1504b334f</anchor>
      <arglist>(const hier::IntVector &amp;ratio_to_level_zero, const TwoDimBool &amp;touches_regular_bdry, const TwoDimBool &amp;touches_periodic_bdry, const double *dx, const double *x_lo, const double *x_hi)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CartesianPatchGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianPatchGeometry.html</anchorfile>
      <anchor>f37367a7c22ae92adcd69f0e5e56e3ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const double *</type>
      <name>getDx</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianPatchGeometry.html</anchorfile>
      <anchor>a99ce3f06e60f8128fdab947002d4c54</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const double *</type>
      <name>getXLower</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianPatchGeometry.html</anchorfile>
      <anchor>1bba4c745b5b63a01774a6eecc7b7ad8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const double *</type>
      <name>getXUpper</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianPatchGeometry.html</anchorfile>
      <anchor>b2f5c2ee6028bbf70a44aa8735163c46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianPatchGeometry.html</anchorfile>
      <anchor>c66f200f651a1fe7410598fee0ff2107</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianSideComplexWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianSideComplexWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianSideComplexWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideComplexWeightedAverage.html</anchorfile>
      <anchor>16e92354063ab0d44e77ba5cb5e2ce39</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianSideComplexWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideComplexWeightedAverage.html</anchorfile>
      <anchor>f6f32cdde5ad4a9684b8a174ac6f29d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideComplexWeightedAverage.html</anchorfile>
      <anchor>184dd8a85a45f08865fc290f97f8f187</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideComplexWeightedAverage.html</anchorfile>
      <anchor>9188e7c127037efd958dda4711d71ae4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideComplexWeightedAverage.html</anchorfile>
      <anchor>93502b619f5c6362c0dc8813077b91ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideComplexWeightedAverage.html</anchorfile>
      <anchor>87d07ec8c7d4cea89a23e1db419e4c0e</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianSideDoubleConservativeLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianSideDoubleConservativeLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianSideDoubleConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>caf2cae72074d5ee34666c2bf745b735</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianSideDoubleConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>ec5fc22ce94c0ec627169fc3b3f20688</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>62ab2128a22671664d33abf13d774eed</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>6c109db73ebe533958d098c32c4a73de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>681dfe0060e42144c68399fd76186eff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>fd706faf6db83c80e7d952b454c814c8</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianSideDoubleWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianSideDoubleWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianSideDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleWeightedAverage.html</anchorfile>
      <anchor>f8a46bcbc36275e7ae51d3d7c879e6df</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianSideDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleWeightedAverage.html</anchorfile>
      <anchor>b421531a764e2c327bdadd61882e013f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleWeightedAverage.html</anchorfile>
      <anchor>9c6c1372bf0806b73178a405edd4b986</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleWeightedAverage.html</anchorfile>
      <anchor>55427c80c951d91c704116c8b55c6609</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleWeightedAverage.html</anchorfile>
      <anchor>866285d5bfd14e0e5f4a67fc4298f1f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleWeightedAverage.html</anchorfile>
      <anchor>bc53743db410feef42b6b5350a468347</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianSideFloatConservativeLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianSideFloatConservativeLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianSideFloatConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatConservativeLinearRefine.html</anchorfile>
      <anchor>4a5f4b0e91ac5297a074fc2fd7fda059</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianSideFloatConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatConservativeLinearRefine.html</anchorfile>
      <anchor>684228f3e5506962c8eddc6e15de5c4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatConservativeLinearRefine.html</anchorfile>
      <anchor>2dd3864964cb917ce5216248d81a4b04</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatConservativeLinearRefine.html</anchorfile>
      <anchor>2a6919af7249e79f2f23e20831426a04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatConservativeLinearRefine.html</anchorfile>
      <anchor>ca54a714a032f9f0f0f052eb4c6a1335</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatConservativeLinearRefine.html</anchorfile>
      <anchor>44f6a0e7acca0b03b7fbf65ea5d198f9</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianSideFloatWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianSideFloatWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianSideFloatWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatWeightedAverage.html</anchorfile>
      <anchor>1656d96f787c5dd7dade62d392923cc1</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianSideFloatWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatWeightedAverage.html</anchorfile>
      <anchor>68f6ce5d69bd9106800fce00980daf06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatWeightedAverage.html</anchorfile>
      <anchor>1b0ec7006b0feaef26c08ac614625114</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatWeightedAverage.html</anchorfile>
      <anchor>757a9e01ef64bc988e3105622279aa3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatWeightedAverage.html</anchorfile>
      <anchor>349e24aa27e01baba7a3c2ea12ebb02c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatWeightedAverage.html</anchorfile>
      <anchor>df6c7e30c5f8ade18e1d8b27651115d6</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::SAMRAITransferOperatorRegistry</name>
    <filename>classSAMRAI_1_1geom_1_1SAMRAITransferOperatorRegistry.html</filename>
    <base>SAMRAI::hier::TransferOperatorRegistry</base>
    <member kind="function">
      <type></type>
      <name>SAMRAITransferOperatorRegistry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SAMRAITransferOperatorRegistry.html</anchorfile>
      <anchor>d463f63e1ffbd46ca4427d35c219f1fd</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SAMRAITransferOperatorRegistry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SAMRAITransferOperatorRegistry.html</anchorfile>
      <anchor>2cef921e9e3f283833713a32a7cc7ccf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tbox::Pointer&lt; hier::CoarsenOperator &gt;</type>
      <name>buildCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SAMRAITransferOperatorRegistry.html</anchorfile>
      <anchor>f5155d03fe70bf44ce3c62ac7aab19e8</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tbox::Pointer&lt; hier::RefineOperator &gt;</type>
      <name>buildRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SAMRAITransferOperatorRegistry.html</anchorfile>
      <anchor>418dcd5c2bd794ca5f62c4055fc84d0f</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tbox::Pointer&lt; hier::TimeInterpolateOperator &gt;</type>
      <name>buildTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SAMRAITransferOperatorRegistry.html</anchorfile>
      <anchor>34962c100a127a19bd736a25eedbd67f</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::SkeletonCoarsen</name>
    <filename>classSAMRAI_1_1geom_1_1SkeletonCoarsen.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>SkeletonCoarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonCoarsen.html</anchorfile>
      <anchor>8ca3061146fafb774ea65127b9973ab7</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SkeletonCoarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonCoarsen.html</anchorfile>
      <anchor>5a8e384830939a10d84cb4bf5d637733</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonCoarsen.html</anchorfile>
      <anchor>e83d131a37096871874c39322c8563f0</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonCoarsen.html</anchorfile>
      <anchor>52c461456934965c7987a3c635631cab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonCoarsen.html</anchorfile>
      <anchor>e76c8b4bc8b08a846eec0cccf818466c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonCoarsen.html</anchorfile>
      <anchor>627407414f6292c6929c2def5d6bdaf9</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::SkeletonGridGeometry</name>
    <filename>classSAMRAI_1_1geom_1_1SkeletonGridGeometry.html</filename>
    <base>SAMRAI::hier::GridGeometry</base>
    <member kind="function">
      <type></type>
      <name>SkeletonGridGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonGridGeometry.html</anchorfile>
      <anchor>b33e29eab07d89a8ddd00c5444b44300</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; input_db, bool register_for_restart=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SkeletonGridGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonGridGeometry.html</anchorfile>
      <anchor>25bc689b5f7b55fd6606ba39c1fb4f99</anchor>
      <arglist>(const std::string &amp;object_name, const hier::BoxContainer &amp;level_domain, bool register_for_restart=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SkeletonGridGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonGridGeometry.html</anchorfile>
      <anchor>15fd4c5ddd4f174055aa2c6b54aa3ce4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::GridGeometry &gt;</type>
      <name>makeRefinedGridGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonGridGeometry.html</anchorfile>
      <anchor>f52014c6dec6ece5629a87fe248e7240</anchor>
      <arglist>(const std::string &amp;fine_geom_name, const hier::IntVector &amp;refine_ratio, bool register_for_restart) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::GridGeometry &gt;</type>
      <name>makeCoarsenedGridGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonGridGeometry.html</anchorfile>
      <anchor>1053f1e92de8c1be1347277c8414e834</anchor>
      <arglist>(const std::string &amp;coarse_geom_name, const hier::IntVector &amp;coarsen_ratio, bool register_for_restart) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGeometryDataOnPatch</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonGridGeometry.html</anchorfile>
      <anchor>47b2b2063a84814cf020a34562da113e</anchor>
      <arglist>(hier::Patch &amp;patch, const hier::IntVector &amp;ratio_to_level_zero, const TwoDimBool &amp;touches_regular_bdry, const TwoDimBool &amp;touches_periodic_bdry) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonGridGeometry.html</anchorfile>
      <anchor>96fc7365bf23c65859b773d961f3605d</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonGridGeometry.html</anchorfile>
      <anchor>253a616c566ca299d134346752217270</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::SkeletonPatchGeometry</name>
    <filename>classSAMRAI_1_1geom_1_1SkeletonPatchGeometry.html</filename>
    <base>SAMRAI::hier::PatchGeometry</base>
    <member kind="typedef">
      <type>hier::PatchGeometry::TwoDimBool</type>
      <name>TwoDimBool</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonPatchGeometry.html</anchorfile>
      <anchor>a0d696466cb7b23dd51b4198743d3279</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SkeletonPatchGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonPatchGeometry.html</anchorfile>
      <anchor>449776672ab7ed7d09891a3bc1daf0d5</anchor>
      <arglist>(const hier::IntVector &amp;ratio_to_level_zero, const TwoDimBool &amp;touches_regular_bdry, const TwoDimBool &amp;touches_periodic_bdry)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SkeletonPatchGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonPatchGeometry.html</anchorfile>
      <anchor>90781ecdc2059e304857c5ff9b1fbf4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonPatchGeometry.html</anchorfile>
      <anchor>52dfa831e38b04e836b46183289a8246</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::SkeletonRefine</name>
    <filename>classSAMRAI_1_1geom_1_1SkeletonRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>SkeletonRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonRefine.html</anchorfile>
      <anchor>2c49cda8973893d3c73eeaa4b2106432</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SkeletonRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonRefine.html</anchorfile>
      <anchor>a7aadf53d681272c076c825c0cb87aec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonRefine.html</anchorfile>
      <anchor>5b6e64cac0e294882f88d0f74b394e8e</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonRefine.html</anchorfile>
      <anchor>64a6bbaaadc841133acede86ca9807d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonRefine.html</anchorfile>
      <anchor>68202adb9e803b52c2ba857ff7e8384f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonRefine.html</anchorfile>
      <anchor>4ba41b49a995852625cf22c6be4cc58e</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>SAMRAI::hier</name>
    <filename>namespaceSAMRAI_1_1hier.html</filename>
    <class kind="class">SAMRAI::hier::BaseConnectorAlgorithm</class>
    <class kind="class">SAMRAI::hier::BlockId</class>
    <class kind="class">SAMRAI::hier::BoundaryBox</class>
    <class kind="class">SAMRAI::hier::BoundaryBoxUtils</class>
    <class kind="class">SAMRAI::hier::BoundaryLookupTable</class>
    <class kind="class">SAMRAI::hier::Box</class>
    <class kind="class">SAMRAI::hier::BoxIterator</class>
    <class kind="class">SAMRAI::hier::BoxContainer</class>
    <class kind="class">SAMRAI::hier::BoxContainerConstIterator</class>
    <class kind="class">SAMRAI::hier::BoxContainerIterator</class>
    <class kind="class">SAMRAI::hier::BoxContainerSingleBlockIterator</class>
    <class kind="class">SAMRAI::hier::BoxContainerSingleOwnerIterator</class>
    <class kind="class">SAMRAI::hier::BoxContainerUtils</class>
    <class kind="class">SAMRAI::hier::BoxGeometry</class>
    <class kind="class">SAMRAI::hier::BoxId</class>
    <class kind="class">SAMRAI::hier::BoxIOUtility</class>
    <class kind="class">SAMRAI::hier::BoxLevel</class>
    <class kind="class">SAMRAI::hier::BoxLevelConnectorUtils</class>
    <class kind="class">SAMRAI::hier::BoxLevelHandle</class>
    <class kind="class">SAMRAI::hier::BoxLevelStatistics</class>
    <class kind="class">SAMRAI::hier::BoxNeighborhoodCollection</class>
    <class kind="class">SAMRAI::hier::BoxOverlap</class>
    <class kind="class">SAMRAI::hier::BoxTree</class>
    <class kind="struct">SAMRAI::hier::BoxUtilities</class>
    <class kind="class">SAMRAI::hier::CoarseFineBoundary</class>
    <class kind="class">SAMRAI::hier::CoarsenOperator</class>
    <class kind="class">SAMRAI::hier::ComponentSelector</class>
    <class kind="class">SAMRAI::hier::Connector</class>
    <class kind="class">SAMRAI::hier::ConnectorStatistics</class>
    <class kind="struct">SAMRAI::hier::PatchNumber</class>
    <class kind="struct">SAMRAI::hier::LevelNumber</class>
    <class kind="struct">SAMRAI::hier::PatchDataId</class>
    <class kind="class">SAMRAI::hier::GlobalId</class>
    <class kind="class">SAMRAI::hier::GridGeometry</class>
    <class kind="class">SAMRAI::hier::Index</class>
    <class kind="class">SAMRAI::hier::IntVector</class>
    <class kind="class">SAMRAI::hier::LocalId</class>
    <class kind="class">SAMRAI::hier::MappingConnectorAlgorithm</class>
    <class kind="class">SAMRAI::hier::MultiblockBoxTree</class>
    <class kind="class">SAMRAI::hier::MultiblockDataTranslator</class>
    <class kind="class">SAMRAI::hier::NeighborhoodSet</class>
    <class kind="class">SAMRAI::hier::OverlapConnectorAlgorithm</class>
    <class kind="class">SAMRAI::hier::Patch</class>
    <class kind="class">SAMRAI::hier::PatchBoundaries</class>
    <class kind="class">SAMRAI::hier::PatchData</class>
    <class kind="class">SAMRAI::hier::PatchDataFactory</class>
    <class kind="class">SAMRAI::hier::PatchDescriptor</class>
    <class kind="class">SAMRAI::hier::PatchFactory</class>
    <class kind="class">SAMRAI::hier::PatchGeometry</class>
    <class kind="class">SAMRAI::hier::PatchHierarchy</class>
    <class kind="class">SAMRAI::hier::PatchLevel</class>
    <class kind="class">SAMRAI::hier::PatchLevelFactory</class>
    <class kind="class">SAMRAI::hier::PeriodicId</class>
    <class kind="class">SAMRAI::hier::PeriodicShiftCatalog</class>
    <class kind="class">SAMRAI::hier::PersistentOverlapConnectors</class>
    <class kind="class">SAMRAI::hier::ProcessorMapping</class>
    <class kind="class">SAMRAI::hier::RealBoxConstIterator</class>
    <class kind="class">SAMRAI::hier::RefineOperator</class>
    <class kind="class">SAMRAI::hier::TimeInterpolateOperator</class>
    <class kind="class">SAMRAI::hier::TransferOperatorRegistry</class>
    <class kind="class">SAMRAI::hier::Transformation</class>
    <class kind="class">SAMRAI::hier::Variable</class>
    <class kind="class">SAMRAI::hier::VariableContext</class>
    <class kind="class">SAMRAI::hier::VariableDatabase</class>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>8c7a23e2e4fac62ed92bddf6035be0f8</anchor>
      <arglist>(std::ostream &amp;co, const BlockId &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>std::istream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>c43e983101059d46398e841d8fca3ec6</anchor>
      <arglist>(std::istream &amp;s, Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a0820922464e7dc374beaafcfea67604</anchor>
      <arglist>(std::ostream &amp;s, const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxContainer::operator tbox::Array&lt; tbox::DatabaseBox &gt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>fad879231dbfbe65d0fd73897fcd26bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>5f436178546c1296721a49a46d51cdf6</anchor>
      <arglist>(std::ostream &amp;s, const BoxContainer::Outputter &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>c886464826dcf915f2030fff34579acf</anchor>
      <arglist>(std::ostream &amp;co, const BoxId &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>1480c4185e5e2c44efdc60634c21ed76</anchor>
      <arglist>(std::ostream &amp;s, const BoxLevel::Outputter &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>b9f9b79fab29ee11528289ccc6cd7470</anchor>
      <arglist>(std::ostream &amp;os, const Connector::Outputter &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>3612a4c52989f5d072c75b5709f0df59</anchor>
      <arglist>(std::ostream &amp;co, const GlobalId &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>std::istream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a0a5592bc14e0355fba38234338e0277</anchor>
      <arglist>(std::istream &amp;s, IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>41a8218749c24ccb72cd05c90fc38ae9</anchor>
      <arglist>(std::ostream &amp;s, const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>f73e29591e12538fdccc01552511862d</anchor>
      <arglist>(std::ostream &amp;co, const LocalId &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>e91d3853cdfae967ee3325f17b3fa5f1</anchor>
      <arglist>(std::ostream &amp;s, const NeighborhoodSet::Outputter &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>757f3c29403905053db1cbf64724c897</anchor>
      <arglist>(std::ostream &amp;s, const Patch &amp;patch)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>ec4c406f7d490a9fca63b204542b65d7</anchor>
      <arglist>(std::ostream &amp;co, const PeriodicId &amp;r)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_level_constructor</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>8fa3a09c400b40492b9c38f332bdccd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_constructor_setup</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>7dd3a83a389a5a94fa51b5874aaf52d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_constructor_phys_domain</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>695c20a8bc76d6714d6328b1cb050543</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_constructor_touch_boundaries</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>1b24774454386ecdbca73a2156c7f6a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_constructor_set_geometry</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>3213594eb9aa2486f656c934f313a176</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_set_patch_touches</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>f98b9666f0a2d02e84d94bd08ca6f1b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_constructor_compute_shifts</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>3339f4401b64dcb352a1da65dc4a96c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BaseConnectorAlgorithm</name>
    <filename>classSAMRAI_1_1hier_1_1BaseConnectorAlgorithm.html</filename>
    <member kind="function" protection="protected">
      <type></type>
      <name>BaseConnectorAlgorithm</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BaseConnectorAlgorithm.html</anchorfile>
      <anchor>e1af248dbc696468817eb8b59dd80c06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~BaseConnectorAlgorithm</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BaseConnectorAlgorithm.html</anchorfile>
      <anchor>487153669e765777e2d77e843a57a0cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setupCommunication</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BaseConnectorAlgorithm.html</anchorfile>
      <anchor>f866c54fc3ba684b3ccbbf242684da66</anchor>
      <arglist>(tbox::AsyncCommPeer&lt; int &gt; *&amp;all_comms, tbox::AsyncCommStage &amp;comm_stage, tbox::AsyncCommStage::MemberVec &amp;completed, const tbox::SAMRAI_MPI &amp;mpi, const std::set&lt; int &gt; &amp;incoming_ranks, const std::set&lt; int &gt; &amp;outgoing_ranks, tbox::Pointer&lt; tbox::Timer &gt; &amp;mpi_wait_timer, int &amp;operation_mpi_tag) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sendDiscoveryToOneProcess</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BaseConnectorAlgorithm.html</anchorfile>
      <anchor>38b24799042a7a3d8a5a46d620b86e17</anchor>
      <arglist>(std::vector&lt; int &gt; &amp;send_mesg, const int idx_offset_to_ref, BoxContainer &amp;referenced_new_head_nabrs, BoxContainer &amp;referenced_new_base_nabrs, tbox::AsyncCommPeer&lt; int &gt; &amp;outgoing_comm, const tbox::Dimension &amp;dim) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>receiveAndUnpack</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BaseConnectorAlgorithm.html</anchorfile>
      <anchor>bc901813eea27cf246ca873f0a64c259</anchor>
      <arglist>(Connector &amp;new_base_to_new_head, Connector *new_head_to_new_base, std::set&lt; int &gt; &amp;incoming_ranks, tbox::AsyncCommPeer&lt; int &gt; all_comms[], tbox::AsyncCommStage &amp;comm_stage, tbox::AsyncCommStage::MemberVec &amp;completed, tbox::Pointer&lt; tbox::Timer &gt; &amp;receive_and_unpack_timer) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unpackDiscoveryMessage</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BaseConnectorAlgorithm.html</anchorfile>
      <anchor>b47888e55765270c6319ea97681d90f4</anchor>
      <arglist>(const tbox::AsyncCommPeer&lt; int &gt; *incoming_comm, Connector &amp;west_to_east, Connector *east_to_west) const </arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static char</type>
      <name>s_print_steps</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BaseConnectorAlgorithm.html</anchorfile>
      <anchor>7fb0461a3ac829fc793cb77d0c772f35</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BlockId</name>
    <filename>classSAMRAI_1_1hier_1_1BlockId.html</filename>
    <member kind="function">
      <type></type>
      <name>BlockId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>5338d12bd157d0f5c223bfa39db6830c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>d7c99526491492594edbc024273b4226</anchor>
      <arglist>(const BlockId &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>36142f762d2ebd5b5e43732eaf06f55d</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BlockId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>153a867d996518d3ff5e809120c8bc24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BlockId &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>23e24a8256e0325f741db00eca225796</anchor>
      <arglist>(const BlockId &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>c5e0efb7d7bf59483637495aff85b1f4</anchor>
      <arglist>(const int &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>4b7f9f9a43f0f045bfd8b96319203fb9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const int &amp;</type>
      <name>getBlockValue</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>8ab30b3a497f557f9729cc747a42e44f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>73fbe6855586d9af95df35b4f0e33cb9</anchor>
      <arglist>(const BlockId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>8643db26c693464f7d8ed23e66738d86</anchor>
      <arglist>(const BlockId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>1f88267b47bfb0343b0da027ad2e69e3</anchor>
      <arglist>(const BlockId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>f5486bc4e634d5cdd09c5b259319f81f</anchor>
      <arglist>(const BlockId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>bcd3825b8e8dd49808a5e5bc9d53af56</anchor>
      <arglist>(const BlockId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>81596b2de07899dda19514d33527368c</anchor>
      <arglist>(const BlockId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>44db866802f41d0940adb1c322c9bb70</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>b9748af9099f2360b0e27951c65e7f09</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>1899b3a44ba2648a8e4d1fb8e6839b71</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>cd0c238fb4265000a19a8ef3cb6a650f</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>c1020220484989c53109f9f8f9447770</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>c6fe5881f803835c71e20d2610ebd7c5</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const BlockId &amp;</type>
      <name>zero</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>836947ace6f241b73b1514a14a46b03c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const BlockId &amp;</type>
      <name>invalidId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>35a4977621c8a2056638baf8c75d9aca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>92dcca2a1f7b5e75f0ba803ea7c67286</anchor>
      <arglist>(std::ostream &amp;co, const BlockId &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoundaryBox</name>
    <filename>classSAMRAI_1_1hier_1_1BoundaryBox.html</filename>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOWER</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>13f91eccea35180adfdc51f3ad7df718f326d9271e789e994daf2cd79990b64e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MIDDLE</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>13f91eccea35180adfdc51f3ad7df718bce18c8383061bfd932a399424c57814</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UPPER</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>13f91eccea35180adfdc51f3ad7df718a97bcf37aff63deb429b3260ae196a9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>BoundaryOrientation</name>
      <anchor>13f91eccea35180adfdc51f3ad7df718</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOWER</name>
      <anchor>13f91eccea35180adfdc51f3ad7df718f326d9271e789e994daf2cd79990b64e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIDDLE</name>
      <anchor>13f91eccea35180adfdc51f3ad7df718bce18c8383061bfd932a399424c57814</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPPER</name>
      <anchor>13f91eccea35180adfdc51f3ad7df718a97bcf37aff63deb429b3260ae196a9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoundaryBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>9b41d99a7193d34bba4ef908d54581a2</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoundaryBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>7c0b03cbcb65225fcfdef102d6f0f892</anchor>
      <arglist>(const Box &amp;box, const int bdry_type, const int location_index)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoundaryBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>3c56ac0b2b30611b2ddf80fed3825898</anchor>
      <arglist>(const BoundaryBox &amp;boundary_box)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BoundaryBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>74243032051f188182eb182b18d494ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>bd7e085ca2e42f91338e525e799e3ce2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBoundaryType</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>092318c61cc0441a3c07f3d13c1eb865</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLocationIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>9c2bb57c98acb107bec940417d009c5b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsMultiblockSingularity</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>539f350de9572694bc2083ced86fda51</anchor>
      <arglist>(bool is_mblk_singularity)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsMultiblockSingularity</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>60b62f246945949c5a3f9752d154f827</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BoundaryBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>fac053263163b423dd6a3fb3f059193b</anchor>
      <arglist>(const BoundaryBox &amp;boundary_box)</arglist>
    </member>
    <member kind="function">
      <type>BoundaryOrientation</type>
      <name>getBoundaryOrientation</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>a9612f68a5bb62cbb2c3f3f9913103fc</anchor>
      <arglist>(const int dir) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>0fd4a6f1a151f78226404714adde4bd9</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoundaryBoxUtils</name>
    <filename>classSAMRAI_1_1hier_1_1BoundaryBoxUtils.html</filename>
    <member kind="function">
      <type></type>
      <name>BoundaryBoxUtils</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBoxUtils.html</anchorfile>
      <anchor>70bbf75a4634c21d69c1a0a3f47fd4fc</anchor>
      <arglist>(const BoundaryBox &amp;bbox)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BoundaryBoxUtils</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBoxUtils.html</anchorfile>
      <anchor>269886e5ed545c70c0d831f063e0fcaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundaryBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBoxUtils.html</anchorfile>
      <anchor>f6dc66e4d373838206f0ce397277c83e</anchor>
      <arglist>(const BoundaryBox &amp;bbox)</arglist>
    </member>
    <member kind="function">
      <type>const BoundaryBox &amp;</type>
      <name>getBoundaryBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBoxUtils.html</anchorfile>
      <anchor>1b18428b906abe6c4abbf91767b60758</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getOutwardShift</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBoxUtils.html</anchorfile>
      <anchor>428cba909d8573fcb591d13505769cf7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stretchBoxToGhostWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBoxUtils.html</anchorfile>
      <anchor>8050dc87106934fcb5cf5d8c9225f5de</anchor>
      <arglist>(Box &amp;box, const hier::IntVector &amp;ghost_cell_width) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extendBoxOutward</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBoxUtils.html</anchorfile>
      <anchor>e44ba49d9c7a0f20af332526ec849d91</anchor>
      <arglist>(Box &amp;box, const IntVector &amp;extension) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>normalDir</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBoxUtils.html</anchorfile>
      <anchor>8d38c1f04a2c4228ce9cd63bc6437286</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::BoundaryBox</type>
      <name>trimBoundaryBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBoxUtils.html</anchorfile>
      <anchor>37b1d0b7cb168cab7703d5948368b5ff</anchor>
      <arglist>(const hier::Box &amp;limit_box) const </arglist>
    </member>
    <member kind="function">
      <type>hier::Box</type>
      <name>getSurfaceBoxFromBoundaryBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBoxUtils.html</anchorfile>
      <anchor>eb4e29dd3234a23fad713ac74278125c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoundaryLookupTable</name>
    <filename>classSAMRAI_1_1hier_1_1BoundaryLookupTable.html</filename>
    <member kind="function">
      <type>const tbox::Array&lt; int &gt; &amp;</type>
      <name>getDirections</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryLookupTable.html</anchorfile>
      <anchor>26542f2aa1f1238df9662a840f945668</anchor>
      <arglist>(int loc, int codim) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; int &gt; &amp;</type>
      <name>getMaxLocationIndices</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryLookupTable.html</anchorfile>
      <anchor>55dc106715f248541ac1e0d519848d47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLower</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryLookupTable.html</anchorfile>
      <anchor>440bdd4e010add5901bb24832e13a1fd</anchor>
      <arglist>(int loc, int codim, int dim_index) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUpper</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryLookupTable.html</anchorfile>
      <anchor>6846ec1172dddee669e43300b5cab0ff</anchor>
      <arglist>(int loc, int codim, int index) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; IntVector &gt; &amp;</type>
      <name>getBoundaryDirections</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryLookupTable.html</anchorfile>
      <anchor>030934a35b29d62748f5fab2cae8ffc2</anchor>
      <arglist>(int codim) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static BoundaryLookupTable *</type>
      <name>getLookupTable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryLookupTable.html</anchorfile>
      <anchor>1fe9805ac40b892846b4fced2bdc21eb</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>BoundaryLookupTable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryLookupTable.html</anchorfile>
      <anchor>7cbb5ae92c66a825a34d733428e29b2c</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~BoundaryLookupTable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryLookupTable.html</anchorfile>
      <anchor>74f6436356562c049880a70d0f945f5f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::Box</name>
    <filename>classSAMRAI_1_1hier_1_1Box.html</filename>
    <member kind="typedef">
      <type>BoxIterator</type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>d104aa5bdf75fdc115427f8b850d3f04</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>65bacf55556ffb026b5c38516f1bbae4</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>89a765cad50743c5c6d8f432bd938e8e</anchor>
      <arglist>(const Index &amp;lower, const Index &amp;upper)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>ad8562f782df44aa9889dc638b2c448d</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>6bd056e85f2e0052ddf93e2707bce23e</anchor>
      <arglist>(const tbox::DatabaseBox &amp;box)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>904e9aa6f102ff1ef6d1aeb96cb1de49</anchor>
      <arglist>(const hier::Box &amp;box, const LocalId &amp;local_id, const int owner_rank, const BlockId &amp;block_id=BlockId::zero(), const PeriodicId &amp;periodic_id=PeriodicId::zero())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>c994559e0d8c75fe4c3d46001f020774</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const LocalId &amp;local_id, const int owner_rank, const BlockId &amp;block_id=BlockId::zero(), const PeriodicId &amp;periodic_id=PeriodicId::zero())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>3ad8daf46ca1d43b31d21b70fb0ca762</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const GlobalId &amp;id, const BlockId &amp;block_id=BlockId::zero(), const PeriodicId &amp;periodic_id=PeriodicId::zero())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>cfd80a0a2b924cda49ce510dcb01d4a6</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const BoxId &amp;mapped_box_id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>81dc50ca9aee220bf36438969abaf1b2</anchor>
      <arglist>(const Box &amp;other, const PeriodicId &amp;periodic_id, const IntVector &amp;refinement_ratio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>cfadc651bd120e1fd8c8198de0abe0bf</anchor>
      <arglist>(const hier::Box &amp;box, const LocalId &amp;local_id, const int owner_rank, const BlockId &amp;block_id=BlockId::zero(), const PeriodicId &amp;periodic_id=PeriodicId::zero())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>1ea09afed22788bddfc089cfc5e264a0</anchor>
      <arglist>(const Box &amp;other, const PeriodicId &amp;periodic_id, const IntVector &amp;refinement_ratio)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Box</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>6d811cca1199f1dc6db7ecc78d30b649</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BoxId &amp;</type>
      <name>getId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>0a0c2ee41647b17395bec2f32c890ff3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BoxId &amp;</type>
      <name>getId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>0a5baa4f5b763cfcd707b2a772f92ab2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const BlockId &amp;</type>
      <name>getBlockId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>b47fcd7ca27f0a365863aaff0c7b342b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const LocalId &amp;</type>
      <name>getLocalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>8df14df95ff9caa6012116f5c90cba0e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const GlobalId &amp;</type>
      <name>getGlobalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>e68f999c17f9663a1c01f48396597e05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOwnerRank</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>f93a37e297d49c730083b22f27b50b0e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const PeriodicId &amp;</type>
      <name>getPeriodicId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>9e13d00a1c67275c5f4dc73591e464cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPeriodicImage</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>20411085edeb8a4927a1e3cb8991a9d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdEqual</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>d7d3aaaf93bc8f06bdd7ecd76ab14bc8</anchor>
      <arglist>(const Box &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToIntBuffer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>c5a11a48799dbfeae87409c4277f7197</anchor>
      <arglist>(int *buffer) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromIntBuffer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a5e624eecb37448bb2e65b41c4d12551</anchor>
      <arglist>(const int *buffer)</arglist>
    </member>
    <member kind="function">
      <type>Box &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a358b5a3a34c696dbe402e3dc454fce6</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>lower</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>bac8e299e48cc30ae590e0074e6862cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>upper</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>c3cd17a4c9c2570ba175cfcdb2f9deaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Index &amp;</type>
      <name>lower</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>8dfd6c2cb9d386b2821e009f2912f68e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Index &amp;</type>
      <name>upper</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>d818d38c0b6ce14b6e7eadf9413a376a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int &amp;</type>
      <name>lower</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>cd6227b7642b557ee9fb269dbc8fe4d8</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <type>int &amp;</type>
      <name>upper</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>0c052d766424dd1d139d16dfc88de55d</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <type>const int &amp;</type>
      <name>lower</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>b0f767aa817f477e408cc9af0de641c0</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <type>const int &amp;</type>
      <name>upper</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>7ee0222e3a463128aa29afe3198437c5</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEmpty</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>37da5fab418ba5cd94c628dbab683ca5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>02228d94b7546b0dd22629f1b82acfb0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>d4ab39e239285712c36bb13b85bf6149</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberCells</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>c31534989d40a3f254acf4071a957708</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>numberCells</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>16e1afa59b3747a080f2fcd385c3fbcb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>eb447a0965ebaa802cb5de4d1bb0bbcd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>longestDimension</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a8d6d725d36be9b51305fa687cf1b92c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>offset</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>7c43da9e179dfdf84fed13a65a279f32</anchor>
      <arglist>(const Index &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>index</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>c0e1b7816503853b8e38b1eb9d3d42c7</anchor>
      <arglist>(const int offset) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>475e1a0026de5c0a16f4e004d308cdc0</anchor>
      <arglist>(const Index &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>1533925515e42d274eaf43fd8979cbb9</anchor>
      <arglist>(const Box &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSpatiallyEqual</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>73985a6c5a67ebc0f888bebac68fdfc9</anchor>
      <arglist>(const Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>Box</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>d26787f035ab700acdc98dd786924a53</anchor>
      <arglist>(const Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>Box &amp;</type>
      <name>operator *=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a057cfd316a039bb6f70fdf7af5b3a98</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>intersect</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>325d58acc1cc35c7edbc9f3a520a393d</anchor>
      <arglist>(const Box &amp;other, Box &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>513cbc725c2ac6e3f2709c9881aa942c</anchor>
      <arglist>(const Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>Box</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>1512e6be7c7393b442a032a1e7f0becc</anchor>
      <arglist>(const Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>Box &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>9353ec6a0cebfdd4c37889c551e3b850</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>coalesceWith</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>d1486f0b7b2b526182ae68834ee59827</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>grow</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>87c847d00f1e80b32f3c7473702f4d4c</anchor>
      <arglist>(const IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>grow</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>d28c94492967fe51849b34c5ae0f3dba</anchor>
      <arglist>(const int direction, const int ghosts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>growLower</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>16fe262c51a92b974cc5bf4c5ae87ccb</anchor>
      <arglist>(const IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>growLower</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>9466982df16c3f4c149c56082f6eecc5</anchor>
      <arglist>(const int direction, const int ghosts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>growUpper</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>0023c5492a9b514258c7cd81e4a4a8b7</anchor>
      <arglist>(const IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>growUpper</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>5acb8db0e7d977ed31c91473cc30976a</anchor>
      <arglist>(const int direction, const int ghosts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lengthen</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>c87d37c98f8e9f26d041d95bade55747</anchor>
      <arglist>(const int direction, const int ghosts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shorten</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>4a446e8c3893eecb20e9c7af3133042d</anchor>
      <arglist>(const int direction, const int ghosts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shift</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>b7f61bf090cd749a7ff6d06efc3ef618</anchor>
      <arglist>(const IntVector &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shift</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>62fee9167918ac779f75b70ed191788b</anchor>
      <arglist>(const int direction, const int offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotate</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>0b8209eee46144ba4af4c2a95de58782</anchor>
      <arglist>(const Transformation::RotationIdentifier rotation_ident)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>41f7b30ae22cfab7a66525e47c999f8b</anchor>
      <arglist>(const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>7e9631afa6ba695c78489e2ed6412aca</anchor>
      <arglist>(const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>Box &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>ed8c9bb5cf679c6c638e725a5d33537a</anchor>
      <arglist>(const tbox::DatabaseBox &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>Box &amp;</type>
      <name>Box_from_DatabaseBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>4c7951e26a1a8bb431419af180cc7ce8</anchor>
      <arglist>(const tbox::DatabaseBox &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_Box_from_DatabaseBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>45bb396d385c73e80a5970d9e1479f2d</anchor>
      <arglist>(const tbox::DatabaseBox &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>tbox::DatabaseBox</type>
      <name>DatabaseBox_from_Box</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>1e878fcf287ed06cc6135dc6bbad6b65</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator tbox::DatabaseBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>e4fc140e8c8c724c2ebecd4793cde0c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator tbox::DatabaseBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>68b0437441b6fbe39d5706dec5836356</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>edd875e9194c26fbd9cfb72d24b3675d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lockId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>e0589046fa785f69b2a18d7a8a83694c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlockId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>8562b0f90fa3a2c5a817e7b0bdd53f6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>commBufferSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>2d0e0533bdde3273118e7b0992b413d6</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Box</type>
      <name>grow</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>cc9b5455ebd8d7978c1cf56b703aa174</anchor>
      <arglist>(const Box &amp;box, const IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Box</type>
      <name>shift</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>9cdf93f211ed1ca220489e77b3560c76</anchor>
      <arglist>(const Box &amp;box, const IntVector &amp;offset)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Box</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>cec7c8a80138f65e4f96864b5280834c</anchor>
      <arglist>(const Box &amp;box, const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Box</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>075dfffa6035203a70ab4e2c2c2f4baf</anchor>
      <arglist>(const Box &amp;box, const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Box &amp;</type>
      <name>getEmptyBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>5c24ae46011a552d457bd4c72e596da6</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Box &amp;</type>
      <name>getUniverse</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>be7648fb4662e06afefce3fa1b5c9140</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>BoxIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>95d29f10dd52f5550b38333f130055b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>std::vector&lt; Box &gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>d3a1217f0befb961fea0bf146f823dcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend std::istream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>736e4706ab9bb6b384176bc9c693daa6</anchor>
      <arglist>(std::istream &amp;s, Box &amp;box)</arglist>
    </member>
    <member kind="friend">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>e01e41a34a4583b053e918bc67e8a431</anchor>
      <arglist>(std::ostream &amp;s, const Box &amp;box)</arglist>
    </member>
    <class kind="struct">SAMRAI::hier::Box::box_equality</class>
    <class kind="struct">SAMRAI::hier::Box::id_equal</class>
    <class kind="struct">SAMRAI::hier::Box::id_less</class>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::hier::Box::box_equality</name>
    <filename>structSAMRAI_1_1hier_1_1Box_1_1box__equality.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structSAMRAI_1_1hier_1_1Box_1_1box__equality.html</anchorfile>
      <anchor>c9ec1236a4448cada1f98f02f6feec80</anchor>
      <arglist>(const Box &amp;b1, const Box &amp;b2) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::hier::Box::id_equal</name>
    <filename>structSAMRAI_1_1hier_1_1Box_1_1id__equal.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structSAMRAI_1_1hier_1_1Box_1_1id__equal.html</anchorfile>
      <anchor>60fa67ee9e7dbf5a0ff72c549764f254</anchor>
      <arglist>(const Box &amp;b1, const Box &amp;b2) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structSAMRAI_1_1hier_1_1Box_1_1id__equal.html</anchorfile>
      <anchor>19ce6df911d8a5127b571f24ab95a89c</anchor>
      <arglist>(const Box *b1, const Box *b2) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::hier::Box::id_less</name>
    <filename>structSAMRAI_1_1hier_1_1Box_1_1id__less.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structSAMRAI_1_1hier_1_1Box_1_1id__less.html</anchorfile>
      <anchor>c1ea0f785acd37feb66c32232f114f1e</anchor>
      <arglist>(const Box &amp;b1, const Box &amp;b2) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structSAMRAI_1_1hier_1_1Box_1_1id__less.html</anchorfile>
      <anchor>0aad828d5231b5c28d8ae2b78c91ff71</anchor>
      <arglist>(const Box *b1, const Box *b2) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxIterator</name>
    <filename>classSAMRAI_1_1hier_1_1BoxIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>46ce94850a6d7b33deb69f5030dc5f9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>7ae6b48438b47d763b7d9765fba55cd7</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>37529a92f5c10b6470db2ead3dd57077</anchor>
      <arglist>(const BoxIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type>BoxIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>3ed822a5b8170ceb1ce2b955941b73fd</anchor>
      <arglist>(const BoxIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BoxIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>1847ced8c075acffe37bcbb203e513f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>d9a19b68b7ff7a52f18e64cd520a47ed</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>const Index &amp;</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>3084d09eddcd9b458d81ebc2ab3cec3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Index &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>4d7866d7358fadc82410737c5231247e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>1150ca63a0120eff82f28a0ce3b9c2e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const void *</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>86c6973045fa030c744c27c542182e41</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>a156694d7ac635c4e779abceb638aee4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>087bf527727b39d7955fcb80a777fa04</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>f68a178f519570e84f0e2f2c1ede2ff6</anchor>
      <arglist>(const BoxIterator &amp;iterator) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>7717475f1991c054a228d109123beac2</anchor>
      <arglist>(const BoxIterator &amp;iterator) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxContainer</name>
    <filename>classSAMRAI_1_1hier_1_1BoxContainer.html</filename>
    <member kind="typedef">
      <type>BoxContainerIterator</type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>deef42045897a1e8dbfea7a3fade2f83</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BoxContainerConstIterator</type>
      <name>ConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>d3d322f7840b589e07585df11cfede3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>21802da16a8fa9c77bb8bb25335cc5f0</anchor>
      <arglist>(const BoxContainer &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>f57e6cc1675a9d285b7637be2024c339</anchor>
      <arglist>(const BoxContainer &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>b27b87aae9a373dd436a0ed24e5ed204</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>c0975260ba398ddb588fa28aeb7daa37</anchor>
      <arglist>(const bool ordered)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>3b35aff15ff6e03b2686ec505d1a781a</anchor>
      <arglist>(ConstIterator first, ConstIterator last, const bool ordered=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>2132d68290b7bddc283c0fb15e2b9355</anchor>
      <arglist>(const Box &amp;box, const bool ordered=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>c3f95e28a1102e673fa5b838e48fa0e3</anchor>
      <arglist>(const BoxContainer &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>eb104387994247fcc68ae1f92fb90b4a</anchor>
      <arglist>(const tbox::Array&lt; tbox::DatabaseBox &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>f20815f3f4424bbae5f652fb04dd0ed3</anchor>
      <arglist>(const BoxContainer &amp;other, const BlockId &amp;block_id)</arglist>
    </member>
    <member kind="function">
      <type>BoxContainer &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>62e67be6b75e9502376ff83501e2526f</anchor>
      <arglist>(const BoxContainer &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>BoxContainer &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>644afbf90cf331ea477fe07eb1375c82</anchor>
      <arglist>(const tbox::Array&lt; tbox::DatabaseBox &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>978b12ff2b91ca572ee48d8b7442dd16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>7e8ab96d0ce568a89888b2519ce87c8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>02dea41e8bc5fcf978b92001a37bdf7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>da77c807c5c5feb38d3898a703e692a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>83dd05446b696664d3a4ec203df8c9a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>6d086752150dc0966f17564aa4ea276b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>ba7dfb2f7e4f029ba0ef99709e785c8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>front</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>4a25478936120594662f11810cea8fc8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>back</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>4ba655e541c19a4f03032c9b540c357a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>ec1aea7a7523a8a9c82fbb593289e393</anchor>
      <arglist>(Iterator iter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>74c27db13c4fe2ccc0f4381e9e43d1f7</anchor>
      <arglist>(Iterator first, Iterator last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>1d0e24f289051a707a3dde89fa348146</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>ce38eb2efe8a47130407d4762dc5ba86</anchor>
      <arglist>(BoxContainer &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getOwners</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>b95c210cb7f2dd530bf5eba4fe5f69c2</anchor>
      <arglist>(std::set&lt; int &gt; &amp;owners) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>grow</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>d1d4d96561c33f3ea028a608c1824204</anchor>
      <arglist>(const IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shift</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>9c93c1a65f4fab7a8cbbdb4db299781b</anchor>
      <arglist>(const IntVector &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>5c13effcf90923d2df027a0b7337128c</anchor>
      <arglist>(const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>5ba6e8abcdd9e6dfadde01cef02a550a</anchor>
      <arglist>(const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTotalSizeOfBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a2d8de978269e205b5fe379b1642226f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a4f3374b945cf0b15933299344869eeb</anchor>
      <arglist>(const Index &amp;idx, const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>Box</type>
      <name>getBoundingBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>1b98970d6381bf50f7a4e288debaec74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Box</type>
      <name>getBoundingBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>0de5fd4497d32eced847e66d07cf77ca</anchor>
      <arglist>(const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>boxesIntersect</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>d60339d4aaa53505afb84ef88f1d96fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>order</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>731fc8ee508231087f37e1da002c1296</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unorder</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>45d4d5bcb82292aaaad45e8ced732e04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOrdered</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>f469b81678357b673ee16177152d91b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pushFront</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>43274a6d8bc3dcfd2b68a6105cd52e4b</anchor>
      <arglist>(const Box &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pushBack</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>95923a733ca42a685ebd5891bfa88b3f</anchor>
      <arglist>(const Box &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertBefore</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>18d8ac91a97d40c5629ac4aa30c05607</anchor>
      <arglist>(Iterator iter, const Box &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertAfter</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>7404ed175207fe3b3d76a7a5c5e7a433</anchor>
      <arglist>(Iterator iter, const Box &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>spliceFront</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>d6b5ceaad909c096d23207dc26d5b77d</anchor>
      <arglist>(BoxContainer &amp;boxes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>spliceBack</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>1badc4e0582d1a91b3f9359a824a3074</anchor>
      <arglist>(BoxContainer &amp;boxes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popFront</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>f23637df06afa8e4e0d0ef754ac667ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popBack</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>5dd17c79dfcc034351b95340a08d647e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>simplify</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>ab8f157713a170dd685a5e862722e2fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coalesce</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>340464abe18be386fa5689587a1431d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotate</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>f7c1d208178fd5e6652ad311a9c9f79b</anchor>
      <arglist>(const Transformation::RotationIdentifier rotation_ident)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeIntersections</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>7c25839cc04833346267c7e5f0543f5d</anchor>
      <arglist>(const Box &amp;takeaway)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeIntersections</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>aacfeb43141079913b122055d95598cc</anchor>
      <arglist>(const BoxContainer &amp;takeaway)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeIntersections</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>cf6d6a2c4d64de786d33372dd239b3b4</anchor>
      <arglist>(const BoxTree &amp;takeaway)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeIntersections</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>69055adb28f09ab9264a0426fce985d6</anchor>
      <arglist>(const IntVector &amp;refinement_ratio, const MultiblockBoxTree &amp;takeaway, const bool include_singularity_block_neighbors=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeIntersections</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>e29775b20abd5a22b786fae171bbd2ba</anchor>
      <arglist>(const Box &amp;box, const Box &amp;takeaway)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>intersectBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>ae61c71f43a24e0e6312a23c5c912b54</anchor>
      <arglist>(const Box &amp;keep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>intersectBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>ddb0d21cb8c15144a2bc56b44007efae</anchor>
      <arglist>(const BoxContainer &amp;keep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>intersectBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>2c8477dfd79ee87bc814cf4b5d8d6b5d</anchor>
      <arglist>(const BoxTree &amp;keep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>intersectBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>040eee6478ceb4bcdb203c33fb707e5b</anchor>
      <arglist>(const IntVector &amp;refinement_ratio, const MultiblockBoxTree &amp;keep, bool include_singularity_block_neighbors=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>53b21b9664f7bfbdc277b7923d89ff3a</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>bf876741297117622afb4f3907150ad4</anchor>
      <arglist>(Iterator position, const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>99dfd75009fa70411ca3b431ef183231</anchor>
      <arglist>(ConstIterator first, ConstIterator last)</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>find</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>21c0fc94469eec085031bebdece99de5</anchor>
      <arglist>(const Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>lowerBound</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>2a07eff64069531e4744dcdbb09ea88b</anchor>
      <arglist>(const Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>upperBound</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>2532849e2cbbb51925ff92ddae375e79</anchor>
      <arglist>(const Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>128bb671cf84252e0f427f09c75e39a7</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>separatePeriodicImages</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>62ced82a28e45cba8f63e632c275a652</anchor>
      <arglist>(std::vector&lt; Box &gt; &amp;real_mapped_box_vector, std::vector&lt; Box &gt; &amp;periodic_image_mapped_box_vector) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePeriodicImageBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>2a6449b4569cdda49b2911988a2aea33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unshiftPeriodicImageBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>d2b53b56653aa208809c07dee130168d</anchor>
      <arglist>(BoxContainer &amp;output_mapped_boxes, const IntVector &amp;refinement_ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>3e8196f60e52decf407e0b7ed760b68d</anchor>
      <arglist>(tbox::Database &amp;database) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>35ca65e2f2e662b2a239726532622ef1</anchor>
      <arglist>(tbox::Database &amp;database)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator tbox::Array</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>5077a949df4f80ea3328b09e6ce8674e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>df4b80b769976db2a8908e73165aeb0d</anchor>
      <arglist>(std::ostream &amp;os=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>Outputter</type>
      <name>format</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>eeea90d0140decc7b42cc6f1f01717e8</anchor>
      <arglist>(const std::string &amp;border=std::string(), int detail_depth=0) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxContainerIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>6c006974115c91b2c29848bd3dbad4c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxContainerConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>cfb2020e400392ece198eba5795ea740</anchor>
      <arglist></arglist>
    </member>
    <class kind="class">SAMRAI::hier::BoxContainer::Outputter</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxContainer::Outputter</name>
    <filename>classSAMRAI_1_1hier_1_1BoxContainer_1_1Outputter.html</filename>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer_1_1Outputter.html</anchorfile>
      <anchor>1b1f8ac666e781600900b353253c50cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer_1_1Outputter.html</anchorfile>
      <anchor>20819cc8bda4d7e0d70747057be6c4a8</anchor>
      <arglist>(std::ostream &amp;s, const Outputter &amp;f)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxContainerConstIterator</name>
    <filename>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxContainerConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>a0ceef9c2873104d8813121313312355</anchor>
      <arglist>(const BoxContainer &amp;container, bool from_start=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxContainerConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>8de7d40b073537d5ddbfc1d386c692a2</anchor>
      <arglist>(const BoxContainerConstIterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxContainerConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>f6113f362d57b5713b063e2be977a1ae</anchor>
      <arglist>(const BoxContainerIterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>BoxContainerConstIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>94a891c416ce657fd0f8388df6fc1fa2</anchor>
      <arglist>(const BoxContainerConstIterator &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BoxContainerConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>740adf2041d381125c303f4abe3f3a29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>b7f361f19d83c459d917e1075dc76d6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>fbad4f0a0d0401463b6083f522e59b95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Box *</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>c7b152a6848ec9b398a2e5d4db329795</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BoxContainerConstIterator</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>57300a57e5cf49f1145d6efbd45848f1</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>const BoxContainerConstIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>bc2324e4942cd9c68f9ff0babe368eb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BoxContainerConstIterator</type>
      <name>operator--</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>ddbe08e1522bfdbbc18c794ab4c6f46f</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>const BoxContainerConstIterator &amp;</type>
      <name>operator--</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>090851094e1da446e488f3292557f1e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>41ea15175c1a3ccae0c5d6f876f7a56a</anchor>
      <arglist>(const BoxContainerConstIterator &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>d6cabcb1341b54a0c7865e5808a924e1</anchor>
      <arglist>(const BoxContainerConstIterator &amp;other) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>1b1f8ac666e781600900b353253c50cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxContainerIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>6c006974115c91b2c29848bd3dbad4c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxContainerIterator</name>
    <filename>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxContainerIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>8f98af2db74b6d9da51cee571b3d2b39</anchor>
      <arglist>(BoxContainer &amp;container, bool from_start=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxContainerIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>dcf2fb3b3ad2027b8c313f90bb6a30fc</anchor>
      <arglist>(const BoxContainerIterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>BoxContainerIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>c2f82cfa961c6869db710ca378db9452</anchor>
      <arglist>(const BoxContainerIterator &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BoxContainerIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>bbe60eab1f817f6ef0a0caa4364c9741</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Box &amp;</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>119cb28275da5ae473b557d52d8d21a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Box &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>5653590bf5701310f49eb3e97136be6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Box *</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>1a8968a95a75bb8306758d04f28e1680</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BoxContainerIterator</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>b0e27c476f8311e9474b2c978b8db1af</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>const BoxContainerIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>18d02968331a64ca88761a3fa80455fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BoxContainerIterator</type>
      <name>operator--</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>b1ca0c4ab73e2535c49e5ee0496f199a</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>const BoxContainerIterator &amp;</type>
      <name>operator--</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>6096511bf09501ca4b41cbb432f3da37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>eb1362d27135456bc453b95b2cb42553</anchor>
      <arglist>(const BoxContainerIterator &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>b4445692dc1e575b1c628f60c9cb4bc0</anchor>
      <arglist>(const BoxContainerConstIterator &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>48a3d918dd479423d2a5c798a631b60e</anchor>
      <arglist>(const BoxContainerIterator &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>b12361f58907e3b23b01710544ba3e8f</anchor>
      <arglist>(const BoxContainerConstIterator &amp;other) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>1b1f8ac666e781600900b353253c50cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxContainerConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>cfb2020e400392ece198eba5795ea740</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxContainerSingleBlockIterator</name>
    <filename>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxContainerSingleBlockIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</anchorfile>
      <anchor>6c275fa55c9507bfb3deebcf5cef7371</anchor>
      <arglist>(const BoxContainer &amp;container, const BlockId &amp;block_id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BoxContainerSingleBlockIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</anchorfile>
      <anchor>7501ac78cec59e13917149d3f6dc0590</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BoxContainerSingleBlockIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</anchorfile>
      <anchor>cf3fa95e56eb02227e1730481fd2ac5a</anchor>
      <arglist>(const BoxContainerSingleBlockIterator &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</anchorfile>
      <anchor>6e8a7a3739ed5a4dbd8115009f660f5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Box *</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</anchorfile>
      <anchor>5695908866c98107916dcc31ed9ad42a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</anchorfile>
      <anchor>90628cd0c7c2a7d85381e2fbae4ac4f5</anchor>
      <arglist>(const BoxContainerSingleBlockIterator &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</anchorfile>
      <anchor>42a82dc7f9cd32b8375fca8b50755901</anchor>
      <arglist>(const BoxContainerSingleBlockIterator &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</anchorfile>
      <anchor>cace2c93815d551ca05548066ef9c568</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BoxContainerSingleBlockIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</anchorfile>
      <anchor>49a0c190059e9b6e75bd4651df98d1ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BoxContainerSingleBlockIterator</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</anchorfile>
      <anchor>ff3cf8d226b52f66994dde2424b9bb36</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</anchorfile>
      <anchor>4cd66b0ffe2d975b3b8fda29f18484af</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxContainerSingleOwnerIterator</name>
    <filename>classSAMRAI_1_1hier_1_1BoxContainerSingleOwnerIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxContainerSingleOwnerIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleOwnerIterator.html</anchorfile>
      <anchor>dbec0ee0fa7b8d0437041a44201381ea</anchor>
      <arglist>(const BoxContainer &amp;container, const int &amp;owner_rank)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BoxContainerSingleOwnerIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleOwnerIterator.html</anchorfile>
      <anchor>7d4af0dcf290ada6812fb255f229c663</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BoxContainerSingleOwnerIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleOwnerIterator.html</anchorfile>
      <anchor>952ba2893656a7a81392c2d45a6e6820</anchor>
      <arglist>(const BoxContainerSingleOwnerIterator &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleOwnerIterator.html</anchorfile>
      <anchor>2936ea17dd790e6d3e209bb8061014bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Box *</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleOwnerIterator.html</anchorfile>
      <anchor>d7fc88b2ce4cd6ea924e4e38eb53d502</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleOwnerIterator.html</anchorfile>
      <anchor>9b981e198b779310cf13d0fd72fdfdbd</anchor>
      <arglist>(const BoxContainerSingleOwnerIterator &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleOwnerIterator.html</anchorfile>
      <anchor>34462558791b00958d8ec267acbdbd0b</anchor>
      <arglist>(const BoxContainerSingleOwnerIterator &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleOwnerIterator.html</anchorfile>
      <anchor>85781fb73ec82acdb6efc99f1cfe02f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BoxContainerSingleOwnerIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleOwnerIterator.html</anchorfile>
      <anchor>abd410df5d0d302238c3deb37ce2f47b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BoxContainerSingleOwnerIterator</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleOwnerIterator.html</anchorfile>
      <anchor>c4d590fb3e863d65d99991d8e29c6c78</anchor>
      <arglist>(int)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxContainerUtils</name>
    <filename>classSAMRAI_1_1hier_1_1BoxContainerUtils.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>recursivePrintBoxVector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerUtils.html</anchorfile>
      <anchor>49f31686082dc5706d3a3f6588bcc3f7</anchor>
      <arglist>(const std::vector&lt; Box &gt; &amp;mapped_boxes, std::ostream &amp;output_stream=tbox::plog, const std::string &amp;border=std::string(), int detail_depth=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxGeometry</name>
    <filename>classSAMRAI_1_1hier_1_1BoxGeometry.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxGeometry.html</anchorfile>
      <anchor>fcc772deafb73c1714c393522e9e135a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BoxGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxGeometry.html</anchorfile>
      <anchor>d5c64577103e67dee8e39ed75cd516df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxGeometry.html</anchorfile>
      <anchor>1b5d206006cdfca45196130460d6025a</anchor>
      <arglist>(const BoxGeometry &amp;src_geometry, const Box &amp;src_mask, const Box &amp;fill_box, const bool overwrite_interior, const Transformation &amp;transformation, const BoxContainer &amp;dst_restrict_boxes=BoxContainer()) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tbox::Pointer&lt; BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxGeometry.html</anchorfile>
      <anchor>29665dece6037638c48af693e615b87e</anchor>
      <arglist>(const BoxGeometry &amp;dst_geometry, const BoxGeometry &amp;src_geometry, const Box &amp;src_mask, const Box &amp;fill_box, const bool overwrite_interior, const Transformation &amp;src_offset, const bool retry, const BoxContainer &amp;dst_restrict_boxes=BoxContainer()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tbox::Pointer&lt; BoxOverlap &gt;</type>
      <name>setUpOverlap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxGeometry.html</anchorfile>
      <anchor>e78d82615211c06087ee3d63cda98a56</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;offset) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxId</name>
    <filename>classSAMRAI_1_1hier_1_1BoxId.html</filename>
    <member kind="function">
      <type>void</type>
      <name>putToIntBuffer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>f6d18145e69a0149a6cc968ae2fd1e9c</anchor>
      <arglist>(int *buffer) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromIntBuffer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>a14620c18ef8ae73642408b01f70c94b</anchor>
      <arglist>(const int *buffer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>commBufferSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>f14817fc974bb1ea2c7ecb5bc5b5c731</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>c9e107e1152fb9a78aefd460a580cc29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>61db33535676834126678c2f5ab61d69</anchor>
      <arglist>(const LocalId &amp;local_id, const int owner_rank, const BlockId &amp;block_id=BlockId::zero(), const PeriodicId &amp;periodic_id=PeriodicId::zero())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>f6cb90da85e326b8971d9e800d447d8f</anchor>
      <arglist>(const GlobalId &amp;id, const BlockId &amp;block_id=BlockId::zero(), const PeriodicId &amp;periodic_id=PeriodicId::zero())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>9615088610cde688612bca3f8dfd528a</anchor>
      <arglist>(const BoxId &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BoxId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>f5a53113ba38555e5ffb50d56d32ceec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>35ef935b7b78d742cdc8fbaca92b1d2c</anchor>
      <arglist>(const LocalId &amp;local_id, const int owner_rank, const BlockId &amp;block_id=BlockId::zero(), const PeriodicId &amp;periodic_id=PeriodicId::zero())</arglist>
    </member>
    <member kind="function">
      <type>const GlobalId &amp;</type>
      <name>getGlobalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>16c6638abd8ca57293905aa344b64a68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOwnerRank</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>dffbc082214278ec4c67802cfd7738fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const LocalId &amp;</type>
      <name>getLocalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>ef8ca10139810c4889aef7693e9c4b35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const BlockId &amp;</type>
      <name>getBlockId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>afc6665141133ea1e6c8fedb3abe48ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const PeriodicId &amp;</type>
      <name>getPeriodicId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>8bffdbdc936aaf154d8ddb103ced5895</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPeriodicImage</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>8b65f05172a9d33d693a622d9145f8e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>0199503767080888bbabace1c066e9de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>3640a74abe6f839f11b3a2b019989390</anchor>
      <arglist>(const BoxId &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>6a240e3cfce34cd88c1fff4d2735b7d7</anchor>
      <arglist>(const BoxId &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>a7fca54a185f2a3f9ae37d11b1193e3a</anchor>
      <arglist>(const BoxId &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>1262289efb0d436717928a53b48013f7</anchor>
      <arglist>(const BoxId &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>e398b8bf788af49d6e26ef6b8008903b</anchor>
      <arglist>(const BoxId &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>f78f159f187e7aee9a92b1ab61adb543</anchor>
      <arglist>(const BoxId &amp;r) const </arglist>
    </member>
    <member kind="friend">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>ea1fbb89dffc3cfbb305086b5ce81fef</anchor>
      <arglist>(std::ostream &amp;co, const BoxId &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxIOUtility</name>
    <filename>classSAMRAI_1_1hier_1_1BoxIOUtility.html</filename>
    <member kind="enumvalue">
      <type>@</type>
      <name>READ</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIOUtility.html</anchorfile>
      <anchor>b4a441a2447a8a0e7a9ab13a39732eb2d826606280ef4aa2a3b3ca0c3240ca06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WRITE</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIOUtility.html</anchorfile>
      <anchor>b4a441a2447a8a0e7a9ab13a39732eb214ee99ad35e312984df90c7273e284f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>IOTYPE</name>
      <anchor>b4a441a2447a8a0e7a9ab13a39732eb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>READ</name>
      <anchor>b4a441a2447a8a0e7a9ab13a39732eb2d826606280ef4aa2a3b3ca0c3240ca06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRITE</name>
      <anchor>b4a441a2447a8a0e7a9ab13a39732eb214ee99ad35e312984df90c7273e284f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxIOUtility</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIOUtility.html</anchorfile>
      <anchor>79621eb971d24529a09e625b0ce5c0e6</anchor>
      <arglist>(const std::string &amp;filename, const IOTYPE iotype)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BoxIOUtility</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIOUtility.html</anchorfile>
      <anchor>439920fe6881186a96b10e363548c858</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLevelBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIOUtility.html</anchorfile>
      <anchor>9124025c3548ca36e72742207b208d24</anchor>
      <arglist>(BoxContainer &amp;level_boxes, const int level_number, const int entry_number)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putLevelBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIOUtility.html</anchorfile>
      <anchor>cbf8a82bcdaccf925eb11b415e445890</anchor>
      <arglist>(const BoxContainer &amp;level_boxes, const int level_number, const int entry_number)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfLevels</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIOUtility.html</anchorfile>
      <anchor>25349ac97e870cb34744b86201f845a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfEntries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIOUtility.html</anchorfile>
      <anchor>9e87f32ae4b5fe62378681c596b27b02</anchor>
      <arglist>(const int level_number)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeLevelBoxesDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIOUtility.html</anchorfile>
      <anchor>41eb1740be58ed6ac8fdeeca67509f8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIOUtility.html</anchorfile>
      <anchor>b957450681c02e4358340a25989df6aa</anchor>
      <arglist>(std::ostream &amp;os)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxLevel</name>
    <filename>classSAMRAI_1_1hier_1_1BoxLevel.html</filename>
    <member kind="enumvalue">
      <type>@</type>
      <name>DISTRIBUTED</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>25e22f80d254d035cab74ae07032c228ed64b0ef3f3b9fe551c2a39a3f8f1b16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>GLOBALIZED</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>25e22f80d254d035cab74ae07032c228ff24ef90739a7fb75f8ddd6116ae57d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ParallelState</name>
      <anchor>25e22f80d254d035cab74ae07032c228</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISTRIBUTED</name>
      <anchor>25e22f80d254d035cab74ae07032c228ed64b0ef3f3b9fe551c2a39a3f8f1b16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GLOBALIZED</name>
      <anchor>25e22f80d254d035cab74ae07032c228ff24ef90739a7fb75f8ddd6116ae57d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>115042428e91396f4e208ce0bff37598</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>8a7df5000273f99c391159d8152772ac</anchor>
      <arglist>(const BoxLevel &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>d1502a0c227330048685d5b7f4e96753</anchor>
      <arglist>(const IntVector &amp;ratio, const tbox::ConstPointer&lt; GridGeometry &gt; &amp;grid_geom, const tbox::SAMRAI_MPI &amp;mpi=tbox::SAMRAI_MPI::getSAMRAIWorld(), const ParallelState parallel_state=DISTRIBUTED)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>7fa75a29ec71054d03182857d690e99f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>BoxLevel &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>9bc21c1578447fb17ffb146afb84013a</anchor>
      <arglist>(const BoxLevel &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>50a1cc83c4871d8773403812e5fe742a</anchor>
      <arglist>(const BoxLevel &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>030c2ed92f964d8f5b43794923396ab0</anchor>
      <arglist>(const BoxLevel &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>PersistentOverlapConnectors &amp;</type>
      <name>getPersistentOverlapConnectors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>f86fbfacb3f47f8f317e087c43d7f5a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; BoxLevelHandle &gt; &amp;</type>
      <name>getBoxLevelHandle</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>73d3dc18601e6894097687c3be37ad8f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>99e6efd2d4d00e52c262cefc63acda7e</anchor>
      <arglist>(const IntVector &amp;ratio, const tbox::ConstPointer&lt; GridGeometry &gt; &amp;grid_geom, const tbox::SAMRAI_MPI &amp;mpi=tbox::SAMRAI_MPI::getSAMRAIWorld(), const ParallelState parallel_state=DISTRIBUTED)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapInitialize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>4cc6a448783c22195111ebb1eb876f10</anchor>
      <arglist>(BoxContainer &amp;boxes, const IntVector &amp;ratio, const tbox::ConstPointer&lt; GridGeometry &gt; &amp;grid_geom, const tbox::SAMRAI_MPI &amp;mpi=tbox::SAMRAI_MPI::getSAMRAIWorld(), const ParallelState parallel_state=DISTRIBUTED)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finalize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a171283d1d5bc3f5d11732ac14e2df24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>cb570cf9bb21f0c9a13bbbf02a8e5e71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePeriodicImageBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>e5d1505eb27d9868ed5512ae882b4b01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>453187b7a435ed78ad8cf2819342f20f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearForBoxChanges</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>d9a1b39e0af9ef5b9f6f7fe303b2685e</anchor>
      <arglist>(bool isInvalid=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParallelState</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>0599cc9d03e8586f32b37882f2551908</anchor>
      <arglist>(const ParallelState parallel_state)</arglist>
    </member>
    <member kind="function">
      <type>ParallelState</type>
      <name>getParallelState</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>cb9ad832c354cec1e0532aab3c219243</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cacheGlobalReducedData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>183b36593e2211131739690181396e99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const BoxLevel &amp;</type>
      <name>getGlobalizedVersion</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>4b99ccba3c6901f6fb072d286fc32c21</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocateGlobalizedVersion</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>7672296c2c28dbec23f1e62666cda327</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::SAMRAI_MPI &amp;</type>
      <name>getMPI</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>4fc089edbb7b29b818b04b278dbd1e84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const BoxContainer &amp;</type>
      <name>getBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>103a1737e8f78f7b9c87a8a04a255ebb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const BoxContainer &amp;</type>
      <name>getGlobalBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>7dccf592a42b50e478f5a98d12cc582e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>0ffab2fec2c0a3b512eccee8f3cc5863</anchor>
      <arglist>(BoxContainer &amp;global_boxes) const </arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>getFirstLocalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>ed1c0a59d5722909a989c51647693ae8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>getLastLocalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>9b7759b1500134a61010519bab181517</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getRefinementRatio</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>599291ac31bd6f8f62c37604789e293c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getLocalNumberOfBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>97e1d5dd27021b9bc8966967ebeee826</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getLocalNumberOfBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>6e3a3e628b903fd9d31c51c3294b1163</anchor>
      <arglist>(int rank) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGlobalNumberOfBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>2587c43d3bd495e4db0690a014bf2eb1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxNumberOfBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>c04928996f56ba42127c956e976610f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMinNumberOfBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>5cb56e921d2f7af5cbd809a0bbdfa4ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getLocalNumberOfCells</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>cd5bbb4bb04a3d70914ccd4163615df0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxNumberOfCells</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>78975b8d6869c071db8b66bc0c8fa34c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMinNumberOfCells</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>1fcedeb0804d152f78e9e3791f2cabff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getLocalNumberOfCells</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>855b4fb52630d13fef41eb54235890f0</anchor>
      <arglist>(int rank) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGlobalNumberOfCells</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>364de76d3c5e21bea6a6398db5ea68e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>getLocalBoundingBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>0d56e62f65f0c7caf83a1d79f26077c1</anchor>
      <arglist>(int block_number) const </arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>getGlobalBoundingBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>8f7a236eb693e4043d597632f66478f0</anchor>
      <arglist>(int block_number) const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getLocalMaxBoxSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>80def675f24a967cc1008c35cd1a4fef</anchor>
      <arglist>(int block_number) const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getLocalMinBoxSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a2b27db058f392b8e2631346c024143e</anchor>
      <arglist>(int block_number) const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getGlobalMaxBoxSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>6b34b27e0ab3fb006ef75b460e5a06f6</anchor>
      <arglist>(int block_number) const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getGlobalMinBoxSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>89ef06c1cbdadc4fe0623301c114f001</anchor>
      <arglist>(int block_number) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>7f0a3b736eba55ac4b75e5b5a5ff82bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::ConstPointer&lt; GridGeometry &gt; &amp;</type>
      <name>getGridGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>f6ca362e975232c148495a423dcec5e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refineBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>4278fe56881640392e9fa8fc0a047fb2</anchor>
      <arglist>(BoxLevel &amp;finer, const IntVector &amp;ratio, const IntVector &amp;final_ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsenBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>781a2e5bcc0ce41aa657eb006487789f</anchor>
      <arglist>(BoxLevel &amp;coarser, const IntVector &amp;ratio, const IntVector &amp;final_ratio) const </arglist>
    </member>
    <member kind="function">
      <type>BoxContainer::ConstIterator</type>
      <name>addBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>cb76fcb9b7df92b3b9515bd1d4d11499</anchor>
      <arglist>(const Box &amp;box, const BlockId &amp;block_id, const bool use_vacant_index=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>04569f993cb446a57d8d69de7067e579</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBoxWithoutUpdate</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>0021b5651c94464d34c5bffce3fecbf4</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPeriodicBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>7a0aa4f5f03e39893cca82987ffb8401</anchor>
      <arglist>(const Box &amp;existing_box, const PeriodicId &amp;shift_number)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eraseBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>58607b76a19319a1584992d661d44e18</anchor>
      <arglist>(BoxContainer::Iterator &amp;ibox)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eraseBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>d8b2f4c0e0cdf0da1885734c7307be47</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eraseBoxWithoutUpdate</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>c629faeea80bc319a1b1a215d1ff74b5</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>BoxContainer::ConstIterator</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a5f1d82d960154716aa0f733500eb1be</anchor>
      <arglist>(const Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>BoxContainer::ConstIterator</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>53c7808364a7fd6343625d28c7e216cf</anchor>
      <arglist>(const BoxId &amp;box_id) const </arglist>
    </member>
    <member kind="function">
      <type>BoxContainer::ConstIterator</type>
      <name>getBoxStrict</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>8ed6837b0e517a2d176f89e743d6e7f3</anchor>
      <arglist>(const Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>BoxContainer::ConstIterator</type>
      <name>getBoxStrict</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>cf8f112c1084dd02fd2b0036218e450c</anchor>
      <arglist>(const BoxId &amp;box_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getSpatiallyEqualBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>035bb795c44bc499f32f60e9b4e0bebc</anchor>
      <arglist>(const Box &amp;box_to_match, const BlockId &amp;block_id, Box &amp;matching_box) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>42f05fe1e6b3aca7a0f15056f6d718ff</anchor>
      <arglist>(const BoxId &amp;box_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>087e16ee5b57b5523cee4c0934773daa</anchor>
      <arglist>(const GlobalId &amp;global_id, const BlockId &amp;block_id, const PeriodicId &amp;periodic_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>b483a55d3ccf2c5b03913e0523e4bebd</anchor>
      <arglist>(const Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>3971c4376fd5e70f4dfaf2087c86c39e</anchor>
      <arglist>(tbox::Database &amp;database) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>03f0d7b1ea8660eadb53fefa1566dc79</anchor>
      <arglist>(tbox::Database &amp;database, const tbox::ConstPointer&lt; GridGeometry &gt; &amp;grid_geom)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recursivePrint</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>e7eee9eaf5843c1f34ff54d036c42bc2</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;border, int detail_depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>Outputter</type>
      <name>format</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>63c33f123d563234febc5abfed9ba8f4</anchor>
      <arglist>(const std::string &amp;border=std::string(), int detail_depth=0) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>swap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>125a90d67a15e87724013e21c5773e6a</anchor>
      <arglist>(BoxLevel &amp;level_a, BoxLevel &amp;level_b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initializeCallback</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>f68ff21b3002815bc8d9c70498b435bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>finalizeCallback</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>74774c8ef32970fb40643ab1d7915759</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>std::vector&lt; BoxLevel &gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>0ffde531e623d3f0ab07261aa48769ba</anchor>
      <arglist></arglist>
    </member>
    <class kind="class">SAMRAI::hier::BoxLevel::Outputter</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxLevel::Outputter</name>
    <filename>classSAMRAI_1_1hier_1_1BoxLevel_1_1Outputter.html</filename>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel_1_1Outputter.html</anchorfile>
      <anchor>cf045e30a508d246fb9f39fc632f03a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel_1_1Outputter.html</anchorfile>
      <anchor>20819cc8bda4d7e0d70747057be6c4a8</anchor>
      <arglist>(std::ostream &amp;s, const Outputter &amp;f)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxLevelConnectorUtils</name>
    <filename>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxLevelConnectorUtils</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>4d5cb7988f2a2a0e20faae4dc9694bed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSanityCheckMethodPreconditions</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>97074be16f5026eea98984df78e1fdbc</anchor>
      <arglist>(bool do_check)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSanityCheckMethodPostconditions</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>5c1f03a9ba4faae88a8c2b00dda74abd</anchor>
      <arglist>(bool do_check)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeBoxesAroundBoundary</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>34672f5817c55e50c8ddd965ca0a5b7e</anchor>
      <arglist>(BoxContainer &amp;boundary, const IntVector &amp;refinement_ratio, const tbox::ConstPointer&lt; GridGeometry &gt; &amp;grid_geometry, const bool simplify_boundary_boxes=true) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>baseNestsInHead</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>f45ce7b1130fa809039bb0a6997a6f09</anchor>
      <arglist>(bool *locally_nests, const Connector &amp;connector, const IntVector &amp;base_swell, const IntVector &amp;head_swell, const IntVector &amp;head_nesting_margin, const MultiblockBoxTree *domain=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>baseNestsInHead</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>4f9b61bba2e15c987404e7a998413c1c</anchor>
      <arglist>(bool *locally_nests, const BoxLevel &amp;base, const BoxLevel &amp;head, const IntVector &amp;base_swell, const IntVector &amp;head_swell, const IntVector &amp;head_margin, const MultiblockBoxTree *domain=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeExternalParts</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>f763509c5767c8e742d2c5a0fcec51f3</anchor>
      <arglist>(BoxLevel &amp;external, Connector &amp;input_to_external, const Connector &amp;input_to_reference, const IntVector &amp;nesting_width, const MultiblockBoxTree &amp;domain=MultiblockBoxTree()) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeInternalParts</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>b1abacda9bfacbde903152968ff2c970</anchor>
      <arglist>(BoxLevel &amp;internal, Connector &amp;input_to_internal, const Connector &amp;input_to_reference, const IntVector &amp;nesting_width, const MultiblockBoxTree &amp;domain=MultiblockBoxTree()) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeSortingMap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>823b8901f408c2826d137c247d1f9474</anchor>
      <arglist>(BoxLevel &amp;sorted_mapped_box_level, Connector &amp;output_map, const BoxLevel &amp;unsorted_mapped_box_level, bool sort_mapped_boxes_by_corner=true, bool sequentialize_global_indices=true, LocalId initial_sequential_index=LocalId::getZero()) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeRemainderMap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>53f3d12fae576eab2826b8c5b5fe5b0a</anchor>
      <arglist>(BoxLevel &amp;remainder, Connector &amp;orig_to_remainder, const Connector &amp;orig_to_rejections) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPeriodicImages</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>484d39178c42f477855ab6e924271e2f</anchor>
      <arglist>(BoxLevel &amp;mapped_box_level, const BoxTree &amp;domain_search_tree, const IntVector &amp;threshold_distance) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPeriodicImagesAndRelationships</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>32cd9392cddf80bed02ac654cac0b0df</anchor>
      <arglist>(BoxLevel &amp;mapped_box_level, Connector &amp;mapped_box_level_to_anchor, Connector &amp;anchor_to_mapped_box_level, const BoxTree &amp;domain_search_tree, const Connector &amp;anchor_to_anchor) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxLevelHandle</name>
    <filename>classSAMRAI_1_1hier_1_1BoxLevelHandle.html</filename>
    <member kind="function">
      <type></type>
      <name>~BoxLevelHandle</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelHandle.html</anchorfile>
      <anchor>b201914868a2a5d0bbd0b82549ab75e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BoxLevel &amp;</type>
      <name>getBoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelHandle.html</anchorfile>
      <anchor>ef68a47a2d45a76f4235a246727eb007</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAttached</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelHandle.html</anchorfile>
      <anchor>3a00ae3e09ad8df0ff5a7d25e81a7ab2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelHandle.html</anchorfile>
      <anchor>cf045e30a508d246fb9f39fc632f03a5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxLevelStatistics</name>
    <filename>classSAMRAI_1_1hier_1_1BoxLevelStatistics.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxLevelStatistics</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelStatistics.html</anchorfile>
      <anchor>315e00db51780128209d0005ce9f1afe</anchor>
      <arglist>(const BoxLevel &amp;box_level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printBoxStats</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelStatistics.html</anchorfile>
      <anchor>a3f8feca0d6ad284a61be675d6d163de</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;border) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxNeighborhoodCollection</name>
    <filename>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</filename>
    <member kind="typedef">
      <type>std::pair&lt; Iterator, bool &gt;</type>
      <name>InsertRetType</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>2ccabfeda7897226ffadf62a35979d06</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxNeighborhoodCollection</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>595713783ab85ad4620e8c5d283b57fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxNeighborhoodCollection</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>1a6a355e14257df593699aeec33416bf</anchor>
      <arglist>(const BoxContainer &amp;base_boxes)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxNeighborhoodCollection</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>2ccde78ae0f44105ba48f6d5a50a78e8</anchor>
      <arglist>(const BoxNeighborhoodCollection &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>BoxNeighborhoodCollection &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>924c3792a84138bafaede9e99e9c01c4</anchor>
      <arglist>(const BoxNeighborhoodCollection &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BoxNeighborhoodCollection</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>f3129f5a3d8325e013672f964170a632</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a564a78e552c4e67d65aa9c1a16c3bda</anchor>
      <arglist>(const BoxNeighborhoodCollection &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>e827d4f8a2808132721d1d64134d9e9c</anchor>
      <arglist>(const BoxNeighborhoodCollection &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getOwners</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>f93f6c381a08ffe2f59b8de898e6a874</anchor>
      <arglist>(std::set&lt; int &gt; &amp;owners) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getOwners</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>322b072ca863c81c15c54f76ba1e4840</anchor>
      <arglist>(ConstIterator &amp;itr, std::set&lt; int &gt; &amp;owners) const </arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>0c6f73810f75f56e532bae6076873a9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>87839f9ff2914eb34e72ee83dbb14ad6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>29df3f2e5b0140f9bfe1482544a984c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>aeff9397a951711d33e5b8e266e5b404</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NeighborIterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>e8c1ba7b80ee86abcd177728fcbb9bf2</anchor>
      <arglist>(const BoxId &amp;base_box_id)</arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborIterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>cbe2cc9849ec9d09ee67be9c5dbed15a</anchor>
      <arglist>(const BoxId &amp;base_box_id) const </arglist>
    </member>
    <member kind="function">
      <type>NeighborIterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>c3c88aa0914d754cafc8b424173f3ae7</anchor>
      <arglist>(Iterator &amp;base_box_itr)</arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborIterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>b52ce913dedb44ed35e6645a6518117d</anchor>
      <arglist>(const ConstIterator &amp;base_box_itr) const </arglist>
    </member>
    <member kind="function">
      <type>NeighborIterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>8785fb5bd84c4547a9bc41bfa35b4c82</anchor>
      <arglist>(const BoxId &amp;base_box_id)</arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborIterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>9788e452eda98a4b23ce982ed24f70cd</anchor>
      <arglist>(const BoxId &amp;base_box_id) const </arglist>
    </member>
    <member kind="function">
      <type>NeighborIterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>2acdc69050eadc5d72e1c0b8c10da3b8</anchor>
      <arglist>(Iterator &amp;base_box_itr)</arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborIterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>146f656b6fc175ce15900db49ef54940</anchor>
      <arglist>(const ConstIterator &amp;base_box_itr) const </arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>find</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>ffd6f554259b4afbe8176466a40460e2</anchor>
      <arglist>(const BoxId &amp;base_box_id) const </arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>find</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>e4c8b48bad57f2ee21fea613e3d8705d</anchor>
      <arglist>(const BoxId &amp;base_box_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>295ce3bc9c20335a3e47561ac46e829a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numBoxNeighborhoods</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>b46aba1922c0b95aa9b88b46f566063e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>emptyBoxNeighborhood</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>41b2208b539acc60e8b6b467893a00fb</anchor>
      <arglist>(const BoxId &amp;base_box_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>emptyBoxNeighborhood</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a6da5f98838c4cc37887aba74fdb78cd</anchor>
      <arglist>(const ConstIterator &amp;base_box_itr) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>f962861b0423831a74203d078779c18f</anchor>
      <arglist>(const BoxId &amp;base_box_id) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>32f004f2879038dc9187ce634fe03806</anchor>
      <arglist>(const ConstIterator &amp;base_box_itr) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sumNumNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>d0bd38dd20ff5b4bbf3665e591ec41a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasNeighbor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>c8b9dc3b80349c3df72a90e5f0aac769</anchor>
      <arglist>(const BoxId &amp;base_box_id, const Box &amp;nbr) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasNeighbor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>1d4d184f37e0106548c84a2e7b104a2a</anchor>
      <arglist>(const ConstIterator &amp;base_box_itr, const Box &amp;nbr) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>neighborhoodEqual</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>40b676ec7438e3b9772860be9f4ae044</anchor>
      <arglist>(const BoxId &amp;base_box_id, const BoxNeighborhoodCollection &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBaseBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a21769efae9d066f3f79496d4190f4ea</anchor>
      <arglist>(const BoxId &amp;base_box_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocal</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>878c8e875edb2bbc6ca2adfd7648772a</anchor>
      <arglist>(int rank) const </arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>1a6e03268462497a2b42aff7a973c4a1</anchor>
      <arglist>(const BoxId &amp;base_box_id, const Box &amp;new_nbr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>ffe7ed99a2329be83a96a8534e0233bb</anchor>
      <arglist>(Iterator &amp;base_box_itr, const Box &amp;new_nbr)</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>012eebc68bb6f2d2527095879d90a812</anchor>
      <arglist>(const BoxId &amp;base_box_id, const BoxContainer &amp;new_nbrs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>9897ee356dc2a0948995bb6147b04171</anchor>
      <arglist>(Iterator &amp;base_box_itr, const BoxContainer &amp;new_nbrs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>b861e9fb1720ee0b390f113dcfadab60</anchor>
      <arglist>(const BoxId &amp;base_box_id, const Box &amp;nbr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>c1ba9b992d6cb0dc83771ec917cfbc34</anchor>
      <arglist>(Iterator &amp;base_box_itr, const Box &amp;nbr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>26a1348b37c9934db7ed8d93b359cc32</anchor>
      <arglist>(const BoxId &amp;base_box_id, const BoxContainer &amp;nbrs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>6d1e681bf94e5ffa257cd1ee16ad74fe</anchor>
      <arglist>(Iterator &amp;base_box_itr, const BoxContainer &amp;nbrs)</arglist>
    </member>
    <member kind="function">
      <type>InsertRetType</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>687c469d96358ba8154e56e9cad91e21</anchor>
      <arglist>(const BoxId &amp;new_base_box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>f6917be38c3235c4d674d3efbf301169</anchor>
      <arglist>(const BoxId &amp;base_box_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>b1d6447d991db5ff8f0448ed23f5d98e</anchor>
      <arglist>(Iterator &amp;base_box_itr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a0b05fbf86326601ea587e8fddc01013</anchor>
      <arglist>(Iterator &amp;first_base_box_itr, Iterator &amp;last_base_box_itr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eraseNonLocalNeighborhoods</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>4ad38c57cfe90d79a5f750d8e55ee26b</anchor>
      <arglist>(int rank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eraseEmptyNeighborhoods</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>34c4689c55e67e5bb688827e94ae4ca8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erasePeriodicNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>4b1320f417673cc0dbc1c1974db16423</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>032a5e35cdd5f8c25ff6ef05dd348ec5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsenNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>440766dedc68e04ed740aaf96c346dbc</anchor>
      <arglist>(const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refineNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a9d6bb38663f811e7fbbed0b41e5de65</anchor>
      <arglist>(const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>growNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>62c8223f22a8faa9ce9eae829aa64331</anchor>
      <arglist>(const IntVector &amp;growth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>c228989e91e348854bd69d87efed2a9d</anchor>
      <arglist>(BoxContainer &amp;neighbors) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>c07ac323c1bfbaec40e850c92bd4145f</anchor>
      <arglist>(BoxContainer &amp;neighbors, const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>90c354316999c4a4e91416a264917ecc</anchor>
      <arglist>(std::map&lt; BlockId, BoxContainer &gt; &amp;neighbors) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a335748b4d7599c5a76bf8bb88e975d6</anchor>
      <arglist>(const BoxId &amp;base_box_id, BoxContainer &amp;neighbors) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getPeriodicNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>6c7b50b3826292bebe8fa24be9921cd7</anchor>
      <arglist>(BoxContainer &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToIntBuffer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>89000ace227753b23c9c4520e3ce9947</anchor>
      <arglist>(std::vector&lt; int &gt; &amp;send_mesg, const tbox::Dimension &amp;dim, int buff_init) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromIntBuffer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>1502494f317645cea3c482afc6820384</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;recv_mesg, const std::vector&lt; int &gt; &amp;proc_offset, const tbox::Dimension &amp;dim, int num_proc, int rank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>302e101685450dfd226724511b0e8933</anchor>
      <arglist>(tbox::Database &amp;database) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>92921946add1b286683ff83b975e1cc8</anchor>
      <arglist>(tbox::Database &amp;database)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>52c2c237fb844d65a3a2842e9068cddf</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>52c3ffe00e72278997cc143ca6a0ec3f</anchor>
      <arglist></arglist>
    </member>
    <class kind="class">SAMRAI::hier::BoxNeighborhoodCollection::ConstIterator</class>
    <class kind="class">SAMRAI::hier::BoxNeighborhoodCollection::ConstNeighborIterator</class>
    <class kind="class">SAMRAI::hier::BoxNeighborhoodCollection::Iterator</class>
    <class kind="class">SAMRAI::hier::BoxNeighborhoodCollection::NeighborIterator</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxNeighborhoodCollection::ConstIterator</name>
    <filename>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>ConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>2d709d96812a115435cc307e804739b3</anchor>
      <arglist>(const BoxNeighborhoodCollection &amp;nbrhds, bool from_start=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>e8676ceb64b9d8d49483d6063bae3444</anchor>
      <arglist>(const ConstIterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>13c3b1b8f947cee810800362abfc898d</anchor>
      <arglist>(const Iterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ConstIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>b5178912173a06f4ebc3c955a37098ed</anchor>
      <arglist>(const ConstIterator &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>ConstIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>7b5f385329a884313dadd2d1efc1c02a</anchor>
      <arglist>(const Iterator &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>6203bc2e6a051ab4eca9fce9b4df9183</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BoxId &amp;</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>0a7089ac2791f28d750e4c3e2a378213</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const BoxId *</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>0550a064c4fe94436f787311850504e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConstIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>cb06ca5e1723ed093109985283bf4538</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>81061a9c37e5f185c93ae590ec619dfc</anchor>
      <arglist>(const ConstIterator &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>b5805a5c75b0c0a89009a55308846436</anchor>
      <arglist>(const ConstIterator &amp;rhs) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxNeighborhoodCollection</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>a08e14c0af0ff2f44ad949644532caa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Connector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>b303507eab483298598714526020bcd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ConstNeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>406d4b8f895d44f1efbe49a4144bf41b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxNeighborhoodCollection::ConstNeighborIterator</name>
    <filename>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>ConstNeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>be4d11e81769cb2a173c66b95cbd982c</anchor>
      <arglist>(const ConstIterator &amp;base_box_itr, bool from_start=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstNeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>2d05776832fb42f43fdaec0c1352823e</anchor>
      <arglist>(const ConstNeighborIterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstNeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>69089b7d8c20ecf1d41ad5e9ae4368d4</anchor>
      <arglist>(const NeighborIterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>03e5fd1de86894f0b5e523f4559ecf39</anchor>
      <arglist>(const ConstNeighborIterator &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>70e1a624d20477669022b5c59048e30e</anchor>
      <arglist>(const NeighborIterator &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ConstNeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>d1ae3d35fca26f46f7773c2a9a44cf9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>c01e4fb3bec6940e2d37cd537913db56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Box *</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>78a09d9555c6f64ca2e09c8376f6cf3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>0064dc115a6f3213b2f48604f74bfadd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>f3f1a530d7193ab9b8d0598833759b86</anchor>
      <arglist>(const ConstNeighborIterator &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>aabce50cc3ec33e0a638cc22b0638e82</anchor>
      <arglist>(const ConstNeighborIterator &amp;rhs) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxNeighborhoodCollection</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>a08e14c0af0ff2f44ad949644532caa5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxNeighborhoodCollection::Iterator</name>
    <filename>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</filename>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>b5094fb8162a3d8622ff91c405358ecf</anchor>
      <arglist>(BoxNeighborhoodCollection &amp;nbrhds, bool from_start=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>d6d795ab7068f577bf8d7db5ce90fd0e</anchor>
      <arglist>(const Iterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Iterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>054cfad7ea2a54b0fb22e5531b81385a</anchor>
      <arglist>(const Iterator &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>41bcb70311d420b76abfe7ec9fc48386</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BoxId &amp;</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>999af8b8e4291a2c1421089cedb8401d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const BoxId *</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>00d490ea80c7b46ae51de363b3e8f5fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Iterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>c616ebfe02a15cc36564e04c0251e15d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>d4b46a4ad55f5f97788a0ff627534a14</anchor>
      <arglist>(const Iterator &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>5200c44c6e4784339f7ba7fac4bd3082</anchor>
      <arglist>(const Iterator &amp;rhs) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxNeighborhoodCollection</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>a08e14c0af0ff2f44ad949644532caa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Connector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>b303507eab483298598714526020bcd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>52c3ffe00e72278997cc143ca6a0ec3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>NeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>818ce8041edee94c61cdf5f9bf73c58b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxNeighborhoodCollection::NeighborIterator</name>
    <filename>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>NeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</anchorfile>
      <anchor>96cd9d922234ddc0f2dc69b0bb2f3154</anchor>
      <arglist>(Iterator &amp;base_box_itr, bool from_start=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</anchorfile>
      <anchor>ac593fcf92aa9bf76575068401e229c3</anchor>
      <arglist>(const NeighborIterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>NeighborIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</anchorfile>
      <anchor>53135196fe646330bcf9f35b39daf131</anchor>
      <arglist>(const NeighborIterator &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</anchorfile>
      <anchor>b0e2194cb0dc34851341f4d27a2f7652</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</anchorfile>
      <anchor>29ea53257b4174aa32ef9d7da85a34e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Box *</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</anchorfile>
      <anchor>3ff7f843de5a5b81b31bc76aaee58965</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NeighborIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</anchorfile>
      <anchor>9e8a95ab4a023ff22136a51956a1e9bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</anchorfile>
      <anchor>3054f7e618f6debffcc9a5a2982d9560</anchor>
      <arglist>(const NeighborIterator &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</anchorfile>
      <anchor>024b96227b61c4ade420a3f8acd32dab</anchor>
      <arglist>(const NeighborIterator &amp;rhs) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxNeighborhoodCollection</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</anchorfile>
      <anchor>a08e14c0af0ff2f44ad949644532caa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ConstNeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</anchorfile>
      <anchor>406d4b8f895d44f1efbe49a4144bf41b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxOverlap</name>
    <filename>classSAMRAI_1_1hier_1_1BoxOverlap.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxOverlap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxOverlap.html</anchorfile>
      <anchor>bd198aaa66f994482591d01e4ab561ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BoxOverlap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxOverlap.html</anchorfile>
      <anchor>13d330aff33e51e8af0a4e9863fb1530</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isOverlapEmpty</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxOverlap.html</anchorfile>
      <anchor>ebb4098c7aaacd9cdcf453e60cdd8d76</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const IntVector &amp;</type>
      <name>getSourceOffset</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxOverlap.html</anchorfile>
      <anchor>197e1dc21bd7f93398790e913a1aba49</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Transformation &amp;</type>
      <name>getTransformation</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxOverlap.html</anchorfile>
      <anchor>68b6bfbf0e31dd349295e00a9a59f325</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxOverlap.html</anchorfile>
      <anchor>b5d9d701e7e26fbbbc12748c4aa7b209</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxTree</name>
    <filename>classSAMRAI_1_1hier_1_1BoxTree.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>f0661fade3acf005e43ac8b1da61fc05</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>98e0ab82a41f6263822d7c2f8a666edb</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const BoxContainer &amp;mapped_boxes, int min_number=10)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>fa4f8e113770961c21ec1195604723b9</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const BoxContainer &amp;boxes, const BlockId &amp;block_id, int min_number=10)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BoxTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>4d42e99c5140993f35d4a5f064708635</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>33152073d23107c0ccf70ee4b9b4c8f1</anchor>
      <arglist>(BoxContainer &amp;mapped_boxes, int min_number=10)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>132c7b3262b76eeb8f8270c4915be884</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>0b5da0fb1188e00ea5fa3d36b0cd38be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; BoxTree &gt;</type>
      <name>createRefinedTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>b908c544535e613680b1d57fd8ca72ac</anchor>
      <arglist>(const IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>const BlockId &amp;</type>
      <name>getBlockId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>b0fb24f9755d4a21287814e74959e9f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BoxTree &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>589b9b177ce28590a822a5b607e43f0d</anchor>
      <arglist>(const BoxTree &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>19dd121481b2d8da0c9f2628ceb2aa78</anchor>
      <arglist>(std::vector&lt; Box &gt; &amp;mapped_boxes) const </arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>getBoundingBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>e673fc715016cc828cd120b5ebe4205a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>0c7c63c37e7fc95aefa7f7105048fcba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasOverlap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>ff82a3585a533fca8052dac3f5f98805</anchor>
      <arglist>(const Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findOverlapBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>3e816a5ffe55bf7a9f361aeb246b0bd6</anchor>
      <arglist>(Connector &amp;overlap_connector, const Box &amp;box, bool recursive_call=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findOverlapBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>56ec5b82b5488ccab56f78edd0403cf4</anchor>
      <arglist>(std::vector&lt; Box &gt; &amp;overlap_mapped_boxes, const Box &amp;box, bool recursive_call=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findOverlapBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>20713ebe12db541696ba16cdff834cfd</anchor>
      <arglist>(std::vector&lt; const Box * &gt; &amp;overlap_mapped_boxes, const Box &amp;box, bool recursive_call=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findOverlapBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>69e038775d2e6c851853b6875f4f2ca6</anchor>
      <arglist>(BoxContainer &amp;overlap_boxes, const Box &amp;box, bool recursive_call=false) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>printStatistics</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>599905cddc09c541df3b8ca826c5d524</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>resetStatistics</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>c4387c4560c3ff78bd3bbe9cd7393fb6</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::hier::BoxUtilities</name>
    <filename>structSAMRAI_1_1hier_1_1BoxUtilities.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>checkBoxConstraints</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>a76f0f0bd9a88a66ec4350c9a8f3ba98</anchor>
      <arglist>(const Box &amp;box, const IntVector &amp;min_size, const IntVector &amp;cut_factor, const IntVector &amp;bad_interval, const BoxContainer &amp;physical_boxes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>chopBoxes</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>b848873ced363a81d1084ba8f6b02a56</anchor>
      <arglist>(BoxContainer &amp;boxes, const IntVector &amp;max_size, const IntVector &amp;min_size, const IntVector &amp;cut_factor, const IntVector &amp;bad_interval, const BoxContainer &amp;physical_boxes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>chopBox</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>30310972e88a0b3f66f591580fc8bbcf</anchor>
      <arglist>(BoxContainer &amp;boxes, const Box &amp;box, const tbox::Array&lt; tbox::List&lt; int &gt; &gt; cut_points)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>extendBoxToDomainBoundary</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>b167369ff453a5d125d54ca9d2a4fe02</anchor>
      <arglist>(Box &amp;box, const BoxContainer &amp;domain, const IntVector &amp;ext_ghosts)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>extendBoxesToDomainBoundary</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>1687f6c14ffeeeb81858fda7b4662af0</anchor>
      <arglist>(BoxContainer &amp;boxes, const BoxContainer &amp;domain, const IntVector &amp;ext_ghosts)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>growBoxesWithinDomain</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>e4f7d512e71d582b67a9412790a55be1</anchor>
      <arglist>(BoxContainer &amp;boxes, const BoxContainer &amp;domain, const IntVector &amp;min_size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>growBoxWithinDomain</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>92ad807482ac35ef806cd543a75fa174</anchor>
      <arglist>(Box &amp;box, const BoxContainer &amp;local_domain_complement, const IntVector &amp;min_size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>findBestCutPointsGivenMax</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>bc4585f4758674c2a05f968045724084</anchor>
      <arglist>(tbox::Array&lt; tbox::List&lt; int &gt; &gt; &amp;cut_points, const Box &amp;box, const IntVector &amp;max_size, const IntVector &amp;min_size, const IntVector &amp;cut_factor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>findBestCutPointsForDirectionGivenMax</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>4d0028023c19418e9891734fd94b86e8</anchor>
      <arglist>(const int idir, tbox::List&lt; int &gt; &amp;cut_points, const Box &amp;box, const int max_size, const int min_size, const int cut_factor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>findBestCutPointsGivenNumber</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>1dc5f1f92b36497d434bd622dffacf24</anchor>
      <arglist>(tbox::Array&lt; tbox::List&lt; int &gt; &gt; &amp;cut_points, const Box &amp;box, const IntVector &amp;number_boxes, const IntVector &amp;min_size, const IntVector &amp;cut_factor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>findBestCutPointsForDirectionGivenNumber</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>d85e4d073d4385d89f17950ee23e2e42</anchor>
      <arglist>(const int idir, tbox::List&lt; int &gt; &amp;cut_points, const Box &amp;box, const int num_boxes, const int min_size, const int cut_factor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkBoxForBadCutPoints</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>6cd08d6fa42d299adfc23ee36dfdb3f9</anchor>
      <arglist>(IntVector &amp;bad_cut_information, const Box &amp;box, const BoxContainer &amp;physical_boxes, const IntVector &amp;bad_interval)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkBoxForBadCutPointsInDirection</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>5cc81d2c29e441b4b0a1200583197977</anchor>
      <arglist>(const int dir, const Box &amp;box, const BoxContainer &amp;physical_boxes, const IntVector &amp;bad_interval)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>findBadCutPoints</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>38b85860bc7e0f0568178082f8de6a69</anchor>
      <arglist>(tbox::Array&lt; tbox::Array&lt; bool &gt; &gt; &amp;bad_cuts, const Box &amp;box, const BoxContainer &amp;physical_boxes, const IntVector &amp;bad_interval)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>findBadCutPointsForDirection</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>9ab86664ba277fda3ba47a2fc1f09672</anchor>
      <arglist>(const int dir, tbox::Array&lt; bool &gt; &amp;bad_cuts, const Box &amp;box, const BoxContainer &amp;physical_boxes, const IntVector &amp;bad_interval)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fixBadCutPoints</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>dad47224700d7a5ec2378f67643791a3</anchor>
      <arglist>(tbox::Array&lt; tbox::List&lt; int &gt; &gt; &amp;cuts, const tbox::Array&lt; tbox::Array&lt; bool &gt; &gt; &amp;bad_cuts, const Box &amp;box, const IntVector &amp;min_size, const IntVector &amp;cut_factor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fixBadCutPointsForDirection</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>298c20c9748abc6288783feb3c8793a7</anchor>
      <arglist>(const int dir, tbox::List&lt; int &gt; &amp;cuts, const tbox::Array&lt; bool &gt; &amp;bad_cuts, const Box &amp;box, const int min_size, const int cut_factor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>findBadCutPointsForBorderAndDirection</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>906fce06a805709264e79a62ed13485e</anchor>
      <arglist>(const int id, tbox::Array&lt; bool &gt; &amp;bad_cuts, const Box &amp;box, const Box &amp;border, const int bad_interval)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>makeNonOverlappingBoxContainers</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>aae13268acca044c3e64176a924d3933</anchor>
      <arglist>(tbox::Array&lt; BoxContainer &gt; &amp;box_list_array, const BoxContainer &amp;boxes)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::CoarseFineBoundary</name>
    <filename>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</filename>
    <member kind="function">
      <type></type>
      <name>CoarseFineBoundary</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>ecb29c11342c64e5a4badf1413d9dba4</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoarseFineBoundary</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>2d5c54bb3dc47d9941aefbc6be930848</anchor>
      <arglist>(const CoarseFineBoundary &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoarseFineBoundary</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>94fa246bf0a3282052b4e6173237efcf</anchor>
      <arglist>(const PatchHierarchy &amp;hierarchy, int level_num, const IntVector &amp;max_ghost_width)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoarseFineBoundary</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>9590af01dfe011bcacfdb9c2f4ec089c</anchor>
      <arglist>(const PatchLevel &amp;level, const Connector &amp;mapped_box_level_to_domain, const Connector &amp;mapped_box_level_to_self, const IntVector &amp;max_ghost_width)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CoarseFineBoundary</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>410c66ad98d0bb614ff13978e20e12ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>477a51a793be9a9e0e869193e737be4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>3a1d4cf739b92f9104625c3f3236203b</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>CoarseFineBoundary &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>be580964eeb8845bb42c5b35a66dd40a</anchor>
      <arglist>(const CoarseFineBoundary &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; BoundaryBox &gt; &amp;</type>
      <name>getBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>40a15c5e3f73003abc180f5e5b19ff04</anchor>
      <arglist>(const GlobalId &amp;global_id, const int boundary_type, const BlockId &amp;block_id=BlockId::zero()) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; BoundaryBox &gt; &amp;</type>
      <name>getNodeBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>bd7b1933ba7a12af3f1f906b12dcc5c1</anchor>
      <arglist>(const GlobalId &amp;global_id, const BlockId &amp;block_id=BlockId::zero()) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; BoundaryBox &gt; &amp;</type>
      <name>getEdgeBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>41db3f33a2a46ad33d15e51890ce412e</anchor>
      <arglist>(const hier::GlobalId &amp;global_id, const BlockId &amp;block_id=BlockId::zero()) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; BoundaryBox &gt; &amp;</type>
      <name>getFaceBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>44b88acdffd27d036cb20a361a1ee986</anchor>
      <arglist>(const hier::GlobalId &amp;global_id, const BlockId &amp;block_id=BlockId::zero()) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::CoarsenOperator</name>
    <filename>classSAMRAI_1_1hier_1_1CoarsenOperator.html</filename>
    <member kind="function">
      <type></type>
      <name>CoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarsenOperator.html</anchorfile>
      <anchor>5c902ec0720d3281ff0565dfdcb7687f</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarsenOperator.html</anchorfile>
      <anchor>a1655c42ab67eecebac70a9b3f539726</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarsenOperator.html</anchorfile>
      <anchor>45028db865f82444809773a07cb28138</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const =0</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getOperatorName</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarsenOperator.html</anchorfile>
      <anchor>0eac4ea24db202a133d2447fbd344d26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarsenOperator.html</anchorfile>
      <anchor>c35826baea5e71b75c1691f10940128a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarsenOperator.html</anchorfile>
      <anchor>549c9a8090f27cff92d4742507c98aa3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarsenOperator.html</anchorfile>
      <anchor>29396bcc3a492149287a09ba3ccd5cf1</anchor>
      <arglist>(Patch &amp;coarse, const Patch &amp;fine, const int dst_component, const int src_component, const Box &amp;coarse_box, const IntVector &amp;ratio) const =0</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarsenOperator.html</anchorfile>
      <anchor>93a9ce5e80feb6f4f1a2c0efa99aba76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IntVector</type>
      <name>getMaxCoarsenOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarsenOperator.html</anchorfile>
      <anchor>dd34063d8a6f6033fcf6ef6d979206de</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::ComponentSelector</name>
    <filename>classSAMRAI_1_1hier_1_1ComponentSelector.html</filename>
    <member kind="function">
      <type></type>
      <name>ComponentSelector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>13a98181b44de572e6851b412c2f93da</anchor>
      <arglist>(const bool flag=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComponentSelector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>c2fdea5631bfda6e893d2142fa3e3c3b</anchor>
      <arglist>(const ComponentSelector &amp;flags)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ComponentSelector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>bdf6c224a485bc8783c503c1dfc3b8b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>99fe920fe0a1e29656b17eb357ab3fdc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ComponentSelector &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>9518f48113513e0cca3cfd24d8054aef</anchor>
      <arglist>(const ComponentSelector &amp;flags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>487881325ce6e9418e883f4d59bd5355</anchor>
      <arglist>(const ComponentSelector &amp;flags) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>e09c3db7ae51e1a5d02dad8fd709cb08</anchor>
      <arglist>(const ComponentSelector &amp;flags) const </arglist>
    </member>
    <member kind="function">
      <type>ComponentSelector</type>
      <name>operator|</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>0dadbebcf57f0035bf53f66129c6af4f</anchor>
      <arglist>(const ComponentSelector &amp;flags) const </arglist>
    </member>
    <member kind="function">
      <type>ComponentSelector</type>
      <name>operator &amp;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>5e03864e5accb5806c64d6841c23f0b1</anchor>
      <arglist>(const ComponentSelector &amp;flags) const </arglist>
    </member>
    <member kind="function">
      <type>ComponentSelector</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>7b48fc553241f1a1c82c530bb5516ee1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ComponentSelector &amp;</type>
      <name>operator|=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>5b7694169f6c43a9da1af14ac0cb01bb</anchor>
      <arglist>(const ComponentSelector &amp;flags)</arglist>
    </member>
    <member kind="function">
      <type>ComponentSelector &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>3dbe8bcd33e5f9d17ed64b3ff11cedc7</anchor>
      <arglist>(const ComponentSelector &amp;flags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSet</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>089b8becf0e4f280add0355373455a4c</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFlag</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>6ca185e67b61c536279d796c08784477</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clrFlag</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>0237abb5b89dafe89584dda4a60a702f</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllFlags</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>52a06e8bd09b53bcbfa9367a519f4ef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clrAllFlags</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>a2fb0c4c81189627c34860513b51e85f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>1126b4636bdefdfc22ce63021a070e80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>any</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>593df278989859f53b9f8ca0d91b171b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>none</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>7f4bd4d5ba7c02025b1df5bec1fbc07e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>f0521566d7bd947ebc31db6ba4b49fc4</anchor>
      <arglist>(std::ostream &amp;os=tbox::plog) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::Connector</name>
    <filename>classSAMRAI_1_1hier_1_1Connector.html</filename>
    <member kind="function">
      <type>void</type>
      <name>recursivePrint</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>9ac178ac928773a6d6eb36b65711b3c7</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;border, int detail_depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTransposeOf</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>6d698bef0fdbff456fbc393f9e18d657</anchor>
      <arglist>(const Connector &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>checkConsistencyWithBase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>49a84230be56f85f9985e64a3ef068c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assertConsistencyWithBase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>ddc5d71cccfd2e515b627922a11e77c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>checkConsistencyWithHead</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>23a2b140cabb7c817b648ac3457b8969</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assertConsistencyWithHead</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>31d2c122446b2e4e22bc2be956eee608</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>checkTransposeCorrectness</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>9e3b2ad2b3e578780b2f79b4878c4530</anchor>
      <arglist>(const Connector &amp;transpose, const bool ignore_periodic_relationships=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assertTransposeCorrectness</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>27d0562d5d68012180dbc5de71aca2f3</anchor>
      <arglist>(const Connector &amp;transpose, const bool ignore_periodic_relationships=false) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IntVector</type>
      <name>convertHeadWidthToBase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>e1341d467eef4b0fa5c93d4d2769e840</anchor>
      <arglist>(const IntVector &amp;base_refinement_ratio, const IntVector &amp;head_refinement_ratio, const IntVector &amp;head_gcw)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeNeighborhoodDifferences</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>5cc55f42d8c700d0dd02b6735ed6727a</anchor>
      <arglist>(Connector &amp;left_minus_right, const Connector &amp;left_connector, const Connector &amp;right_connector)</arglist>
    </member>
    <member kind="typedef">
      <type>BoxContainer</type>
      <name>NeighborSet</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>f090ec5431c25fe5dbef2cd26378f7b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BoxNeighborhoodCollection::ConstIterator</type>
      <name>ConstNeighborhoodIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>92d136ef67ccfba94f5cda7398e74200</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BoxNeighborhoodCollection::Iterator</type>
      <name>NeighborhoodIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>d65f8ff86852ee00736c28eca9f20ae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BoxNeighborhoodCollection::ConstNeighborIterator</type>
      <name>ConstNeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>91ac94b4a87b075af0979c6b23be8cff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BoxNeighborhoodCollection::NeighborIterator</type>
      <name>NeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>6f2523bb66a9e83272156fe1891210eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>COMPLETE_OVERLAP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>8279997d6a41fb6f91020741fa9fc6009826ac0d4e33ee3fa7738c341863c62c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>COMPLETE_OVERLAP_NO_PERIODIC</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>8279997d6a41fb6f91020741fa9fc600e354a4dd29704e94e0e40b004f82fe67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>INCOMPLETE_OVERLAP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>8279997d6a41fb6f91020741fa9fc600ec4b9ebf2e9df63f3d14562390dde623</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BASE_GENERATED</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>8279997d6a41fb6f91020741fa9fc600a0ff0b72912ebda8f7c0fc9287e87712</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MAPPING</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>8279997d6a41fb6f91020741fa9fc600fef0643c5bf1d2a0ffb44e5b0ebf10e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UNKNOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>8279997d6a41fb6f91020741fa9fc60094d44ff0aa0d747707b4bcc0b2715038</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ConnectorType</name>
      <anchor>8279997d6a41fb6f91020741fa9fc600</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COMPLETE_OVERLAP</name>
      <anchor>8279997d6a41fb6f91020741fa9fc6009826ac0d4e33ee3fa7738c341863c62c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COMPLETE_OVERLAP_NO_PERIODIC</name>
      <anchor>8279997d6a41fb6f91020741fa9fc600e354a4dd29704e94e0e40b004f82fe67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INCOMPLETE_OVERLAP</name>
      <anchor>8279997d6a41fb6f91020741fa9fc600ec4b9ebf2e9df63f3d14562390dde623</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASE_GENERATED</name>
      <anchor>8279997d6a41fb6f91020741fa9fc600a0ff0b72912ebda8f7c0fc9287e87712</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAPPING</name>
      <anchor>8279997d6a41fb6f91020741fa9fc600fef0643c5bf1d2a0ffb44e5b0ebf10e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWN</name>
      <anchor>8279997d6a41fb6f91020741fa9fc60094d44ff0aa0d747707b4bcc0b2715038</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Connector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>7a1af6ad01664e746fba3f1f2433b796</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Connector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>0571e3610e6b6f47ab22c1ab5afe556a</anchor>
      <arglist>(const Connector &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Connector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>50bb0ccf43ab3c4b17e4c1d80e2de9eb</anchor>
      <arglist>(const BoxLevel &amp;base_mapped_box_level, const BoxLevel &amp;head_mapped_box_level, const IntVector &amp;base_width, const BoxLevel::ParallelState parallel_state=BoxLevel::DISTRIBUTED)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Connector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>3602859eaa03b56bca29d674e22b562e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>39058e8d4024c7c77dccba740570baf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearNeighborhoods</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>3de564d577049e4412eda1b244ec2b2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFinalized</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>880ab304fd974f0d5deb5b8738461f0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborhoodIterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>288732406bd1d0e0528251c36dbdcf84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NeighborhoodIterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>9ccd8caff3ea73c4d3711923feef5927</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborhoodIterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>254de8b55764d76d6ca027213a843247</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NeighborhoodIterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>4c28d6d624f6becdc972d057a8424b4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborIterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a2709b3fbc3e2f8cfe2b78c72fc8450f</anchor>
      <arglist>(ConstNeighborhoodIterator &amp;nbrhd) const </arglist>
    </member>
    <member kind="function">
      <type>NeighborIterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>115239ac4cf66ca7fd0381f6c3b303a1</anchor>
      <arglist>(NeighborhoodIterator &amp;nbrhd)</arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborIterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>426067cff9ae35e0dff66410c70d4fd4</anchor>
      <arglist>(ConstNeighborhoodIterator &amp;nbrhd) const </arglist>
    </member>
    <member kind="function">
      <type>NeighborIterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>df159b7602bc819a23503e44c64eb735</anchor>
      <arglist>(NeighborhoodIterator &amp;nbrhd)</arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborhoodIterator</type>
      <name>findLocal</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>205492278c6e82efc419fa8822a68c53</anchor>
      <arglist>(const BoxId &amp;box_id) const </arglist>
    </member>
    <member kind="function">
      <type>NeighborhoodIterator</type>
      <name>findLocal</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>fda034db811dedc23a94246bafcaa8e2</anchor>
      <arglist>(const BoxId &amp;box_id)</arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborhoodIterator</type>
      <name>find</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>820ac6b51672e84caae4269050754524</anchor>
      <arglist>(const BoxId &amp;box_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>localNeighborhoodsEqual</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>e5d259c31445d97d4f0e6d59ac3066e4</anchor>
      <arglist>(const Connector &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>neighborhoodEqual</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>e993d1b52efa17d6a2ab532c08a69426</anchor>
      <arglist>(const BoxId &amp;box_id, const Connector &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasNeighborSet</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>22dfbc591b2c67f142fdd81be46209d1</anchor>
      <arglist>(const BoxId &amp;mapped_box_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasLocalNeighbor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>3281100ddea6d4463bd3d9cea105254f</anchor>
      <arglist>(const BoxId &amp;box_id, const Box &amp;neighbor) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNeighborBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>c1381fdf585e1428c8e7c8998336c18d</anchor>
      <arglist>(const BoxId &amp;box_id, BoxContainer &amp;nbr_boxes) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a7b082c75a302359a05dc95a3c2e86f5</anchor>
      <arglist>(BoxContainer &amp;neighbors) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>bc2dad7448715dd02c2a7cbc52169931</anchor>
      <arglist>(std::map&lt; BlockId, BoxContainer &gt; &amp;neighbors) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numLocalNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>d753592a7b15f7ab7e7580e5e86a396b</anchor>
      <arglist>(const BoxId &amp;box_id) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numLocalEmptyNeighborhoods</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>8c08a46c7c2cdbe9741333bc531f39fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalOwners</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>7c6d7192a6375f0d462cdf0ab90b67b6</anchor>
      <arglist>(std::set&lt; int &gt; &amp;owners) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalOwners</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>cd08e64e0096d58dc6f2f7b4586da43c</anchor>
      <arglist>(ConstNeighborhoodIterator &amp;base_boxes_itr, std::set&lt; int &gt; &amp;owners) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finalizeContext</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>ab0f0fc771ba74776d0091e5f03990cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>7a372e808c0751b3c8942ba70e680595</anchor>
      <arglist>(const BoxLevel &amp;new_base, bool finalize_context=false)</arglist>
    </member>
    <member kind="function">
      <type>const BoxLevel &amp;</type>
      <name>getBase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>c52c91c1f67b79bc97978b6b8a8732a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHead</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>b196da89b0e0e798273708cf8544f47e</anchor>
      <arglist>(const BoxLevel &amp;new_head, bool finalize_context=false)</arglist>
    </member>
    <member kind="function">
      <type>const BoxLevel &amp;</type>
      <name>getHead</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>8cdef9365f6cfa1e1b220e4b65e290fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getRatio</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>6c7eb0600b519087158cf5653d1b52f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ratioIsExact</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>fd1e172ae7262d56b12e421240f7449e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getHeadCoarserFlag</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>1e37d3109a499cd2c3bf6529c19b765c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocal</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>93f6de3021a8f4da84bc22265d73c6ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeToLocalTranspose</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>3abf19cace384017f57995d28eacccd6</anchor>
      <arglist>(const Connector &amp;connector)</arglist>
    </member>
    <member kind="function">
      <type>const Connector &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>1155b6da1172b92e4a0091a27bdbb12a</anchor>
      <arglist>(const Connector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>2ce71e6f5f82e92658bcf39956860314</anchor>
      <arglist>(const Connector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>edac1f355be7e7b7c5a8779adde06a92</anchor>
      <arglist>(const Connector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParallelState</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>0503273e17eab4b37241bafaa4ec7af3</anchor>
      <arglist>(const BoxLevel::ParallelState parallel_state)</arglist>
    </member>
    <member kind="function">
      <type>BoxLevel::ParallelState</type>
      <name>getParallelState</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>f74586987147f80917c50fe891f09d87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::SAMRAI_MPI &amp;</type>
      <name>getMPI</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>06579d0695179f2b0e8e2c5b94e1452b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>2c2c248587b318d01aeadcd23b0277da</anchor>
      <arglist>(const IntVector &amp;new_width, bool finalize_context=false)</arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getConnectorWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>22865f17560881d06ca591bcec720f70</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shrinkWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>c5664771cc53c0c142d2d1d292937058</anchor>
      <arglist>(const IntVector &amp;new_width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConnectorType</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>74607a5c7ea3dcd864c16ae23feffb61</anchor>
      <arglist>(ConnectorType connector_type)</arglist>
    </member>
    <member kind="function">
      <type>ConnectorType</type>
      <name>getConnectorType</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>00c3698c6f3268d50e2239c2332c95fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLocalNumberOfNeighborSets</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>47b4d653987ee533b438e804ecd57291</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLocalNumberOfRelationships</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>44265100ad9163f264f8c4c5c2ec0846</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGlobalNumberOfNeighborSets</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>2c794b6586e3a3fb7f490ad066566a89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGlobalNumberOfRelationships</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>2ef6a44788533111d11f5a7b53c43977</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cacheGlobalReducedData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>251e4d5e60d39e61990db68e618c0227</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putNeighborhoodsToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>8ba5756f0911556bca6d98f059cda295</anchor>
      <arglist>(tbox::Database &amp;database) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNeighborhoodsFromDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>bc37efe8149ba5238a84aeeef2d25d7e</anchor>
      <arglist>(tbox::Database &amp;database)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeNeighborhoodsToErrorStream</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>4677d5ee248d46bd780042c0910bf8ab</anchor>
      <arglist>(const std::string &amp;border) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeNeighborhoodToErrorStream</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a5e2427a3b08dd709317746fa8c21c87</anchor>
      <arglist>(const BoxId &amp;box_id) const </arglist>
    </member>
    <member kind="function">
      <type>Outputter</type>
      <name>format</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>efa1f2924af336026519318624474322</anchor>
      <arglist>(const std::string &amp;border=std::string(), int detail_depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>dbd62c4a11264190540cf48bb4c998ce</anchor>
      <arglist>(const BoxContainer &amp;neighbors, const BoxId &amp;base_box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eraseNeighbor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>552ac2e1eb0102a365614ceb7b326f83</anchor>
      <arglist>(const Box &amp;neighbor, const BoxId &amp;mapped_box_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLocalNeighbor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>dd9e4524c378f774d589fe2a4339baa7</anchor>
      <arglist>(const Box &amp;neighbor, const BoxId &amp;box_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLocalNeighbor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>ea0738b5e77e760871d08983cf0e38b1</anchor>
      <arglist>(const Box &amp;neighbor, NeighborhoodIterator &amp;base_box_itr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eraseLocalNeighborhood</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>693ab0d94791c9524cbc07450accc8e1</anchor>
      <arglist>(const BoxId &amp;box_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePeriodicRelationships</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>3bf9759acb8c5eb18246aadd1e025f22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePeriodicLocalNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>bafcb1a6471344941894626d7e95ee45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPeriodicLocalNeighborhoodBaseBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>96fb689c2a79c62018262f521a21412a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NeighborhoodIterator</type>
      <name>makeEmptyLocalNeighborhood</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>9a41e0d8c26aca2c56cd0191e136e5ae</anchor>
      <arglist>(const BoxId &amp;box_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eraseEmptyNeighborSets</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>abca38b326708a4b18e891371c19e5d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmptyNeighborhood</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>9bc03141505a488f3ba11febfa1c4da3</anchor>
      <arglist>(const BoxId &amp;box_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsenLocalNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>0ac89290c809e9c59c652f99a8c543b1</anchor>
      <arglist>(const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refineLocalNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>4a1fe2193fba7e59a9b794c6066d3040</anchor>
      <arglist>(const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>growLocalNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>8cd86db200e1924ef3d89820edbda8f8</anchor>
      <arglist>(const IntVector &amp;growth)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeRatioInfo</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>bd43152f451eac121366664a78e8dda8</anchor>
      <arglist>(const IntVector &amp;baseRefinementRatio, const IntVector &amp;headRefinementRatio, IntVector &amp;ratio, bool &amp;head_coarser, bool &amp;ratio_is_exact)</arglist>
    </member>
    <class kind="class">SAMRAI::hier::Connector::Outputter</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::Connector::Outputter</name>
    <filename>classSAMRAI_1_1hier_1_1Connector_1_1Outputter.html</filename>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Connector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector_1_1Outputter.html</anchorfile>
      <anchor>b303507eab483298598714526020bcd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector_1_1Outputter.html</anchorfile>
      <anchor>20819cc8bda4d7e0d70747057be6c4a8</anchor>
      <arglist>(std::ostream &amp;s, const Outputter &amp;f)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::ConnectorStatistics</name>
    <filename>classSAMRAI_1_1hier_1_1ConnectorStatistics.html</filename>
    <member kind="function">
      <type></type>
      <name>ConnectorStatistics</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ConnectorStatistics.html</anchorfile>
      <anchor>8b9fcba3c4296a3ddc9562a5fbb43002</anchor>
      <arglist>(const Connector &amp;connector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printNeighborStats</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ConnectorStatistics.html</anchorfile>
      <anchor>159eb04b20ddcf58b12204b7ca9ee2d3</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;border) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::hier::PatchNumber</name>
    <filename>structSAMRAI_1_1hier_1_1PatchNumber.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchNumber</name>
      <anchorfile>structSAMRAI_1_1hier_1_1PatchNumber.html</anchorfile>
      <anchor>a44d6a6b9fa1f751a382160709404254</anchor>
      <arglist>(int patch_num)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pn</name>
      <anchorfile>structSAMRAI_1_1hier_1_1PatchNumber.html</anchorfile>
      <anchor>7987cf784a08a97a6138f2630cb7b921</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::hier::LevelNumber</name>
    <filename>structSAMRAI_1_1hier_1_1LevelNumber.html</filename>
    <member kind="function">
      <type></type>
      <name>LevelNumber</name>
      <anchorfile>structSAMRAI_1_1hier_1_1LevelNumber.html</anchorfile>
      <anchor>f23ad16b6af08b9e3c4945b49f3d12bc</anchor>
      <arglist>(int level_num)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ln</name>
      <anchorfile>structSAMRAI_1_1hier_1_1LevelNumber.html</anchorfile>
      <anchor>6f06bda05f0d94e7a5a7d990e8c45808</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::hier::PatchDataId</name>
    <filename>structSAMRAI_1_1hier_1_1PatchDataId.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchDataId</name>
      <anchorfile>structSAMRAI_1_1hier_1_1PatchDataId.html</anchorfile>
      <anchor>a13a4ead318433f2f6ce37e420615124</anchor>
      <arglist>(int patch_data_id)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pd</name>
      <anchorfile>structSAMRAI_1_1hier_1_1PatchDataId.html</anchorfile>
      <anchor>ab2125570bc48849c028fffa175311b8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::GlobalId</name>
    <filename>classSAMRAI_1_1hier_1_1GlobalId.html</filename>
    <member kind="function">
      <type></type>
      <name>GlobalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>4fbd5c23b901382efb5acae8e51b7f8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlobalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>35a7f7b69b39569738a7f74c888e61cd</anchor>
      <arglist>(const LocalId &amp;local_id, const int owner_rank)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlobalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>8679a3aa3582b667c73598bb3d257e43</anchor>
      <arglist>(const GlobalId &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GlobalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>61a5ba0b05148db06f7c9932c048b39a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int &amp;</type>
      <name>getOwnerRank</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>5b86acb21d54bcdbea5e0589fd8e3777</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const int &amp;</type>
      <name>getOwnerRank</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>5200e070b7f191b271016e3f46c2b908</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalId &amp;</type>
      <name>getLocalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>aa8797a5e003c90ac20d3af6123002ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const LocalId &amp;</type>
      <name>getLocalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>33f737ba565712cf21642778d9230c13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>7e07ac0b3f6a3ffcfb9d7417c7757637</anchor>
      <arglist>(const GlobalId &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>4bbd90ccd46f08b52979b18e125cd60b</anchor>
      <arglist>(const GlobalId &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>6b7e8c4e8abdf13b38c2fac847697d84</anchor>
      <arglist>(const GlobalId &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>cabbfc24f0bb8d556f2d17a4fbf66240</anchor>
      <arglist>(const GlobalId &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>db650650602e9b0c0592f90042c97380</anchor>
      <arglist>(const GlobalId &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>59ddca3079be9a0886ffcf6996ab7589</anchor>
      <arglist>(const GlobalId &amp;r) const </arglist>
    </member>
    <member kind="friend">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>6942e0e7f4bff8038c462f01d89988e6</anchor>
      <arglist>(std::ostream &amp;co, const GlobalId &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::GridGeometry</name>
    <filename>classSAMRAI_1_1hier_1_1GridGeometry.html</filename>
    <base virtualness="virtual">SAMRAI::tbox::Serializable</base>
    <member kind="typedef">
      <type>PatchGeometry::TwoDimBool</type>
      <name>TwoDimBool</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a067b43bb245f7db27f1d9c6a6fe60df</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GridGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>4039a270748db76a5b168ba04b932014</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name, tbox::Pointer&lt; TransferOperatorRegistry &gt; op_reg, tbox::Pointer&lt; tbox::Database &gt; input_db, bool register_for_restart=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GridGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>8bf4551d1b881009ba582d1562a58a1e</anchor>
      <arglist>(const std::string &amp;object_name, const BoxContainer &amp;domain, tbox::Pointer&lt; TransferOperatorRegistry &gt; op_reg, bool register_for_restart=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GridGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>2596b5f1aaebff123e0c700f24bef2a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computePhysicalDomain</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>bb788a82cee88858e6c1f14f985c30ff</anchor>
      <arglist>(BoxContainer &amp;domain, const IntVector &amp;ratio_to_level_zero, const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computePhysicalDomainWithPeriodicImages</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a4602967279869484958b255fdef9687</anchor>
      <arglist>(BoxContainer &amp;domain, const IntVector &amp;ratio_to_level_zero, const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computePhysicalDomain</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>d9d00cec612bb863e5530052c993255a</anchor>
      <arglist>(BoxLevel &amp;box_level, const IntVector &amp;ratio_to_level_zero, const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computePhysicalDomain</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>95e260740993b88bbc314bf1c167e4b0</anchor>
      <arglist>(BoxContainer &amp;domain_mapped_boxes, const IntVector &amp;ratio_to_level_zero) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computePhysicalDomain</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>910ac179ae4a2e11e8482ab1dfa4d0b9</anchor>
      <arglist>(BoxLevel &amp;box_level, const IntVector &amp;ratio_to_level_zero) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPhysicalDomain</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>c26e3fd28ea905ce58e2bae7e7b1c2e6</anchor>
      <arglist>(const BoxContainer &amp;domain, const int number_blocks)</arglist>
    </member>
    <member kind="function">
      <type>const BoxContainer &amp;</type>
      <name>getPhysicalDomain</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>ada304bdcf24d9f43ccf96d43bbc90f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::MultiblockBoxTree &amp;</type>
      <name>getDomainSearchTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>92176376dade52932d2ba180f6131807</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::MultiblockBoxTree &amp;</type>
      <name>getPeriodicDomainSearchTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>9d4baca19e485a64caed7c011f5a8165</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDomainIsSingleBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>e86d6921cc850b1f1faf46912c8fc2b7</anchor>
      <arglist>(const hier::BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializePeriodicShift</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>276b1a57b1936b82db997db1fb68d5ae</anchor>
      <arglist>(const IntVector &amp;directions)</arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>getPeriodicShift</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>303b28d43f00b8d2f70c328d9980f09a</anchor>
      <arglist>(const IntVector &amp;ratio_to_level_zero) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberBlocks</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>565340eb5479af6144f5f94ebd018983</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>getMaxTransferOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>aedff762bf58267e0f04643c54b0eff5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; GridGeometry &gt;</type>
      <name>makeRefinedGridGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>163389d7c32ac0bd63cc1b423d4c29ae</anchor>
      <arglist>(const std::string &amp;fine_geom_name, const IntVector &amp;refine_ratio, bool register_for_restart) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; GridGeometry &gt;</type>
      <name>makeCoarsenedGridGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>2b74abf55f7dbcbb2c0c0da0ff2281fa</anchor>
      <arglist>(const std::string &amp;coarse_geom_name, const IntVector &amp;coarsen_ratio, bool register_for_restart) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setGeometryDataOnPatch</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>450641490d60bee95396607bb657a200</anchor>
      <arglist>(Patch &amp;patch, const IntVector &amp;ratio_to_level_zero, const TwoDimBool &amp;touches_regular_bdry, const TwoDimBool &amp;touches_periodic_bdry) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeBoundaryBoxesOnLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>10100ad2eb58db0fc733d1ee3a45e4aa</anchor>
      <arglist>(std::map&lt; BoxId, PatchBoundaries &gt; &amp;boundaries, const PatchLevel &amp;level, const IntVector &amp;periodic_shift, const IntVector &amp;ghost_width, const tbox::Array&lt; BoxContainer &gt; &amp;domain, bool do_all_patches=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBoundaryBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>3a080e93fea5e637c44d302c54a221f8</anchor>
      <arglist>(PatchBoundaries &amp;patch_boundaries, const Box &amp;box, const BoxContainer &amp;domain_boxes, const IntVector &amp;ghosts, const IntVector &amp;periodic_shift) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>adjustMultiblockPatchLevelBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>6d1b0986f56769b47a1fa20632796c84</anchor>
      <arglist>(PatchLevel &amp;patch_level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>e729afebacb7c28b91971d6e14c6953f</anchor>
      <arglist>(tbox::Pointer&lt; CoarsenOperator &gt; coarsen_op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addRefineOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>470a3d7189169675e7ef2372d1fffdcd</anchor>
      <arglist>(tbox::Pointer&lt; RefineOperator &gt; refine_op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>3ec574be30faf410e8a85bb524eef980</anchor>
      <arglist>(tbox::Pointer&lt; TimeInterpolateOperator &gt; time_op)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; CoarsenOperator &gt;</type>
      <name>lookupCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>13568e6dc5d25c1cf4493631753bd7f2</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; &amp;var, const std::string &amp;op_name)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; RefineOperator &gt;</type>
      <name>lookupRefineOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>de29d884bc838dbcaf83c90cf870c762</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; &amp;var, const std::string &amp;op_name)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; TimeInterpolateOperator &gt;</type>
      <name>lookupTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>d1ece0d12058bf8ebd05ae5cbe4b063e</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; &amp;var, const std::string &amp;op_name=&quot;STD_LINEAR_TIME_INTERPOLATE&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinTransferOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>5d9d8719877289c4d90b56a3d04327b0</anchor>
      <arglist>(const IntVector &amp;min_value)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>35b725f27cb55767ce368321bcd5b72a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>d86c032af40967330aeec23e9045e4c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>816bc77a0a929abf0c4a6ec17fcde11e</anchor>
      <arglist>(const BlockId &amp;block_a, const BlockId &amp;block_b, const Transformation::RotationIdentifier rotation_b_to_a, const IntVector &amp;shift_b_to_a, const int neighbor_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getDomainOutsideBlock</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>d59c74e6976cd369dc2c69014f850516</anchor>
      <arglist>(BoxContainer &amp;domain_outside_block, const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfBlockSingularities</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>d9b60652d713a1ff3ce7721c647c8d45</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const BoxContainer &amp;</type>
      <name>getSingularityBoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>1a3ff8d09d283250fc144ffaae4ccb09</anchor>
      <arglist>(const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; int &gt; &amp;</type>
      <name>getSingularityIndices</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>0c4b5a9bd8b6a24a61706c7a75698b37</anchor>
      <arglist>(const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>reducedConnectivityExists</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>01cdbc71930809e425f4b3c09d8f6ec2</anchor>
      <arglist>(const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transformBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>f486765951cef181c91a3b84a3b5e799</anchor>
      <arglist>(Box &amp;box, const IntVector &amp;ratio, const BlockId &amp;output_block, const BlockId &amp;input_block) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transformBoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>c57e694962a56f62ba5602125b0819db</anchor>
      <arglist>(BoxContainer &amp;boxes, const IntVector &amp;ratio, const BlockId &amp;output_block, const BlockId &amp;input_block) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getTransformedBlock</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>07dcda0cc3204ae0c8e86cef7006f4ef</anchor>
      <arglist>(BoxContainer &amp;block_boxes, const BlockId &amp;base_block, const BlockId &amp;transformed_block)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::List&lt; Neighbor &gt; &amp;</type>
      <name>getNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>0b23ed4d51934326c8e3dad30465b7b9</anchor>
      <arglist>(const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>417bd4a8a3ec5e760262d9202ee716ad</anchor>
      <arglist>(const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>4855bd2bfe4091f7b43fc85153109864</anchor>
      <arglist>(const BlockId &amp;block_a, const BlockId &amp;block_b) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areSingularityNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>5d808205801fc6a990d9964c6bcb682a</anchor>
      <arglist>(const BlockId &amp;block_a, const BlockId &amp;block_b) const </arglist>
    </member>
    <member kind="function">
      <type>Transformation::RotationIdentifier</type>
      <name>getRotationIdentifier</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a0ff3bcadf6b95294cfe27a7d0ccd82c</anchor>
      <arglist>(const BlockId &amp;dst, const BlockId &amp;src) const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getOffset</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>7c5c47a23cfe6e0842e4f71d63fa71f9</anchor>
      <arglist>(const BlockId &amp;dst, const BlockId &amp;src) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasEnhancedConnectivity</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>59943bac359d3bb97bdf8a6931c4d1c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>6e7001b9263ee5058128e75c1126cbd0</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>49293d85dc8096cd4bf0200d82d9da0c</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findPatchesTouchingBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>b6e9ce99ee266a95a635430dba31c0b9</anchor>
      <arglist>(std::map&lt; BoxId, TwoDimBool &gt; &amp;touches_regular_boundary, std::map&lt; BoxId, TwoDimBool &gt; &amp;touches_periodic_boundary, const PatchLevel &amp;level) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeBoxTouchingBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>e3dcc868ff2f9db1b40567cfff2b6f71</anchor>
      <arglist>(TwoDimBool &amp;touches_regular_bdry, TwoDimBool &amp;touches_periodic_bdry, const Box &amp;box, const hier::IntVector &amp;refinement_ratio, const MultiblockBoxTree &amp;refined_periodic_domain_tree) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setGeometryOnPatches</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>39c4a254f5a5ce2639ef25929282ab68</anchor>
      <arglist>(PatchLevel &amp;level, const IntVector &amp;ratio_to_level_zero, std::map&lt; BoxId, TwoDimBool &gt; &amp;touches_regular_bdry, std::map&lt; BoxId, TwoDimBool &gt; &amp;touches_periodic_bdry, bool defer_boundary_box_creation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundaryBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>e9e024b37b16c6e9bcfc37b7af1415af</anchor>
      <arglist>(PatchLevel &amp;level)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GridGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>fa180e64507f33c6c34a4ab36855c799</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name, tbox::Pointer&lt; TransferOperatorRegistry &gt; op_reg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>readBlockDataFromInput</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>339d863d111f08499f1f34109fa002fe</anchor>
      <arglist>(const tbox::Pointer&lt; tbox::Database &gt; &amp;input_db)</arglist>
    </member>
    <class kind="class">SAMRAI::hier::GridGeometry::Neighbor</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::GridGeometry::Neighbor</name>
    <filename>classSAMRAI_1_1hier_1_1GridGeometry_1_1Neighbor.html</filename>
    <member kind="function">
      <type></type>
      <name>Neighbor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry_1_1Neighbor.html</anchorfile>
      <anchor>60baf2ed6548a1f8dd144e257bb2c5fd</anchor>
      <arglist>(const BlockId &amp;block_id, const BoxContainer &amp;domain, const Transformation &amp;transformation, const bool is_singularity)</arglist>
    </member>
    <member kind="function">
      <type>const BlockId &amp;</type>
      <name>getBlockId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry_1_1Neighbor.html</anchorfile>
      <anchor>2aca59b8c92ffce28927a3e04c1b4292</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const BoxContainer &amp;</type>
      <name>getTransformedDomain</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry_1_1Neighbor.html</anchorfile>
      <anchor>6fc9722be2b66a8b783557568fe1e0f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Transformation &amp;</type>
      <name>getTransformation</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry_1_1Neighbor.html</anchorfile>
      <anchor>7540c45165f3a36bae53b998e191dc56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Transformation::RotationIdentifier</type>
      <name>getRotationIdentifier</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry_1_1Neighbor.html</anchorfile>
      <anchor>0a5edcc56ad794ee093fa57f6486a6c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getShift</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry_1_1Neighbor.html</anchorfile>
      <anchor>ab6bbd9e67f30c1bfe38deb546f95f7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSingularity</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry_1_1Neighbor.html</anchorfile>
      <anchor>2cea6216b9776efeea0e7cb6b5fd1662</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::Index</name>
    <filename>classSAMRAI_1_1hier_1_1Index.html</filename>
    <base>SAMRAI::hier::IntVector</base>
    <member kind="function">
      <type></type>
      <name>Index</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>d3ebdf9474c35d426dc377f35cd68b3d</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Index</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>002f19f4afccf88f69b0e2419997fadb</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const int i)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Index</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>cf5505710555d56a44d1f324740086ee</anchor>
      <arglist>(const int i, const int j)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Index</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>e23b382ee1b381dd0b25db9b1187567f</anchor>
      <arglist>(const int i, const int j, const int k)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Index</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>b7382bc7a80fc725ce3f27df1f0304ec</anchor>
      <arglist>(const tbox::Array&lt; int &gt; &amp;i)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Index</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>526c8201e60e5abd67825547af7e2667</anchor>
      <arglist>(const Index &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Index</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>03a6c1c780a0e3d7c9c9ac0a2de94619</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Index</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>3e5cde94c859164fb43f330aaf2e4e3c</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const int array[])</arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>c1c197603b85c696e857e919aeee3614</anchor>
      <arglist>(const Index &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>5cefe5a2b17b75683c84a1a8c71b0d25</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Index</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>48bd04d2e1d8d7f15f5020ad02608930</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>b37bd10e81806f0f85d19541428ff500</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>386b3a1148995453d29ba97e47e87237</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>9d00c72399001983d45921ad3548a9e9</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>1b583440d05ca3112440bb5a44f6bc66</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>57d20a6974e376efab8bf11600e80fbf</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>7bf2086fb460d6775a66f54af59e9516</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>b32fc66e5716ebfdcab3ebd53c7b36ae</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>7ec6ca3410eaea4ac608c54cdee065db</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>operator *=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>0e2fbc2534366d652dedb2a375c48fbb</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>8a2e7ee7848960b5ca4efa4c1cdc250f</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>operator *=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>306bf26a143800efbb623eb9192ed781</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>5efbd024dcb4fcc49dd8bc5f2a78b643</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>operator/=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>e2558fa4a71de45320d1ed33e1b1f8b8</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>operator/</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>9a73409db7cb9b851fee0ad0eb7f01d2</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>operator/=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>d1ad5650317217e030cd30da3d753866</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>operator/</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>8a205633fe4a95226b1b7083acba1284</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>44f87f5faad65807ee6260a9e7f84e08</anchor>
      <arglist>(const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Index &amp;</type>
      <name>getZeroIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>dae0e3889e5f29f9aabb45b87669bec1</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Index &amp;</type>
      <name>getOneIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>b0de92eddce0ef385d745c71f3db7943</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Index &amp;</type>
      <name>getMinIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>312ae10d623101fb3746a8baa9f99a79</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Index &amp;</type>
      <name>getMaxIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>d1067a747c7235e0447f869868a521ef</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Index</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>e8b857461cd5eb604ac90904935d9c99</anchor>
      <arglist>(const Index &amp;index, const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>std::vector&lt; Index &gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>ea197d0eab6547fb685f4a24af096a2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::IntVector</name>
    <filename>classSAMRAI_1_1hier_1_1IntVector.html</filename>
    <member kind="function">
      <type></type>
      <name>IntVector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>9c2266b84e908300a6f3514e0dbbed7e</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IntVector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>4b0e09da47bd1802a485c54e76ac71fd</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const int i)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IntVector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>0b2b6df86f240840969b292e9fbef5b6</anchor>
      <arglist>(const tbox::Array&lt; int &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IntVector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>eb77444b7e4d7e044d1522770a15b04f</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const int array[])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IntVector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>83172a701b5266907fbf28ededa1d296</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>IntVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>d170f86d46ca6075833e8d1f55764743</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IntVector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>ee7eba06245c4d2d040eaad77c8a7261</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int &amp;</type>
      <name>operator[]</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>23bdbff922be66d84db77b5312dc1bd4</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <type>const int &amp;</type>
      <name>operator[]</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a2bee5ca66f1887ca143ebfe258b3430</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <type>int &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>e4874bb6f17b25861b2c47bd6c0633d9</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <type>const int &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>e9758acc92b6b71bc3eb2a8da43a7b2e</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <type>IntVector &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>e9ef86d8ef4744ae8fdcf058ef0df2e8</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>1a692c6671134c21df7f6bd07e50e8a9</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>IntVector &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>942d1c1a7d0bb1f01edefaa42c54c340</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>884d7a1d014ea60134415941c381d54e</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>IntVector &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>ccd5210f3782c1ca176d03b5d35f0c55</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a16b6d614078db22f37c4d61a58f496f</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>IntVector &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>3f3433cd2af6932b95144cf783561525</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>ba219bcc06839865216de5981a456dd0</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>IntVector &amp;</type>
      <name>operator *=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>93a7d54c1bc490837d4be32d0da2c0c4</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>642323473012e0d6a828f844f928058b</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>IntVector &amp;</type>
      <name>operator *=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>de832b5a914faa5a9ff9d1081c8b3435</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>df319f43b8eff341f8ced3b1e05c80a7</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>IntVector &amp;</type>
      <name>operator/=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>d1273d61680a686e6777119f530212b7</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ceilingDivide</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>57ad927776d1fd89692e4877eb595ef8</anchor>
      <arglist>(const IntVector &amp;denominator)</arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>operator/</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a518de7b3935a9d7d70dd447d63eb06f</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>IntVector &amp;</type>
      <name>operator/=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>631000977a4b9712aa7ce6cd41d3ce5d</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>operator/</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>cafe0cfacfd1b86187aad22f2f8b9e7d</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>30ef631bd649929c3585b60ef2b43d57</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>8f5d1799cac384a9b27d9ba53e0a7e29</anchor>
      <arglist>(int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>cf1c1fa18e6df53211a5f76c9579e2fc</anchor>
      <arglist>(int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>256fad60c92f8f6a488fbbf54db560f9</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>b133d229d69cff7f4e62080d50814c51</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>99c8b890d0015f65923e80776c318536</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>eb34d54375f54378b8a470bd3363e848</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a4599849992364014f67bad01c0b5c4d</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>814237cf394e3b5257243d348f1eb833</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>7829d27d6a95db77be4b0ba6f20aaa66</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>37f3b0c48fee8cb70c0364980c49ec18</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>5b7667d2e7bb9bbd2e19119e2a24e0d6</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>29e98a66f838c18e2527d033b9e0088c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getProduct</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>89d79e70028965ae824859a253910a57</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>f062cdbf32888a4811727db518909951</anchor>
      <arglist>(tbox::Database &amp;database, const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFromDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>3a3c4d2bbaacbea2a47a57e6c25171f9</anchor>
      <arglist>(tbox::Database &amp;database, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>041fe294a37d899cd307a741aaf9b12b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sortIntVector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>ba65625d5e4315bd7c6e9e68be510bb3</anchor>
      <arglist>(const hier::IntVector &amp;values)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IntVector</type>
      <name>ceilingDivide</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>2789a7ba61c03cf9d521f30ec26681ef</anchor>
      <arglist>(const IntVector &amp;numerator, const IntVector &amp;denominator)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IntVector</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>9aaa2b7db31416e96fcfb496479a70f5</anchor>
      <arglist>(const IntVector &amp;a, const IntVector &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IntVector</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>9cf155b09fa617c5a30f446e6d07a063</anchor>
      <arglist>(const IntVector &amp;a, const IntVector &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const IntVector &amp;</type>
      <name>getZero</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>df3cf6d3bf615b0181cd54cfd548d058</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const IntVector &amp;</type>
      <name>getOne</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>adaf4006253b5eb991095a7b13cb6328</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>IntVector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>2e50dd8c6329dae8d4be8a35cdae388b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>std::vector&lt; IntVector &gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>e3c70c1116581626ab3accf47bded8fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend std::istream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>6c1c934aa154594a48f7272ad4685b72</anchor>
      <arglist>(std::istream &amp;s, IntVector &amp;rhs)</arglist>
    </member>
    <member kind="friend">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>9d5d771300975a7a47bf70f2960963b2</anchor>
      <arglist>(std::ostream &amp;s, const IntVector &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::LocalId</name>
    <filename>classSAMRAI_1_1hier_1_1LocalId.html</filename>
    <member kind="function">
      <type></type>
      <name>LocalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>9e3f631f209ff78d32f79d59971205ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LocalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>00f334b3d9163c848ffa4e163e7ccd95</anchor>
      <arglist>(const LocalId &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LocalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>4cabaeb02084d8538e25f306814db526</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LocalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>a09c496c0b7cf64cb2f522687fc228c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LocalId &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>feeb18dd442351024a64dcbd9589fc79</anchor>
      <arglist>(const LocalId &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>LocalId &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>6f42c44da66527c7bbb790da2a9e988a</anchor>
      <arglist>(const int &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>int &amp;</type>
      <name>getValue</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>6cb94cbc6c6a83ed4ede0f4f56902b4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const int &amp;</type>
      <name>getValue</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>01ab2ce0243539e55fccd1dfea29b11f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>3bef6e98c95503e3e80515963bd3d833</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>2aac141b7c76ac64f549f313130df5b4</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>ddefd29938296ec1bed1f882811477fa</anchor>
      <arglist>(const LocalId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>a05babf126e8c406942328d26bea4962</anchor>
      <arglist>(const LocalId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>1fc1854d3b271201bf942e18839aead1</anchor>
      <arglist>(const LocalId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator/</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>fa66883862a1f0d0228963abce759bf3</anchor>
      <arglist>(const LocalId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator%</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>77689847136d233e522f482d6f927133</anchor>
      <arglist>(const LocalId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>LocalId &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>f5e79cb9035b6b9c93547f982a0eb02c</anchor>
      <arglist>(const LocalId &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>LocalId &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>8b76f57b8e59760a0f8f22184271fa97</anchor>
      <arglist>(const LocalId &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>214465fc440f27723e7afab04e4009e4</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>29e734d10604b9f796b114d4eff26f64</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>4fa0c6d6fd32e0a1db5fb4b9bffade93</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator/</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>c6f61b032691aa8eaa5f3e5aa3351e92</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator%</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>2c9525635ae4211882ca8fe0b4560be8</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>LocalId &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>4d16d410c47649ddce2f741b838d3ca5</anchor>
      <arglist>(const int &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>LocalId &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>553b17cf3a96c599b552df554cfd001e</anchor>
      <arglist>(const int &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>10f9b185232d1fe7c2fa7c384404fae8</anchor>
      <arglist>(const LocalId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>d1f40471ea641fc8701274c1254272f2</anchor>
      <arglist>(const LocalId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>ce57e37b91ee4765e90fb618acc55290</anchor>
      <arglist>(const LocalId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>f388137b3ed4f7c52de9a66f93bd1f13</anchor>
      <arglist>(const LocalId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>5609ef0f169fb097561523291f7998aa</anchor>
      <arglist>(const LocalId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>8918231a2bc20ccd2024af1a6011b7b2</anchor>
      <arglist>(const LocalId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>4dfdf0fd70e42e4dc824bf4b0751fc20</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>2586dc38da18354cc09497c552ea4aca</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>4dc2e4318caf79327773f16e17fcccaa</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>472c50395c874355ed3cb5332e52ddb1</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>8a742bbc600a77826329a9cb43f9f46a</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>6d47111654405a022ab67c7177a440ed</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const LocalId &amp;</type>
      <name>getZero</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>7b477b69e338954cfcb8bd3f91ca3a6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const LocalId &amp;</type>
      <name>getInvalidId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>52199c02616d257404e1ad67b67648a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>20f771c388329aecfda95ce82927f4df</anchor>
      <arglist>(std::ostream &amp;co, const LocalId &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::MappingConnectorAlgorithm</name>
    <filename>classSAMRAI_1_1hier_1_1MappingConnectorAlgorithm.html</filename>
    <base>SAMRAI::hier::BaseConnectorAlgorithm</base>
    <member kind="function">
      <type></type>
      <name>MappingConnectorAlgorithm</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MappingConnectorAlgorithm.html</anchorfile>
      <anchor>594e0a52f11eb01dbc7ffadd22668666</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MappingConnectorAlgorithm</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MappingConnectorAlgorithm.html</anchorfile>
      <anchor>7a41a652eeff560a4696564027c959d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSanityCheckMethodPreconditions</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MappingConnectorAlgorithm.html</anchorfile>
      <anchor>b2c06ea1afecb93ddc0be071f5965d3d</anchor>
      <arglist>(bool do_check)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSanityCheckMethodPostconditions</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MappingConnectorAlgorithm.html</anchorfile>
      <anchor>4251939d90f3f19f3ae5bc4a986ef796</anchor>
      <arglist>(bool do_check)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>modify</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MappingConnectorAlgorithm.html</anchorfile>
      <anchor>05fd569d515c1eb4d6e80e04e18009ba</anchor>
      <arglist>(Connector &amp;anchor_to_mapped, Connector &amp;mapped_to_anchor, const Connector &amp;old_to_new, const Connector &amp;new_to_old, BoxLevel *mutable_new=NULL, BoxLevel *mutable_old=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>modify</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MappingConnectorAlgorithm.html</anchorfile>
      <anchor>12036fe2cb4658ab3599817d6f430914</anchor>
      <arglist>(Connector &amp;anchor_to_mapped, Connector &amp;mapped_to_anchor, const Connector &amp;old_to_new, BoxLevel *mutable_new=NULL, BoxLevel *mutable_old=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>modify</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MappingConnectorAlgorithm.html</anchorfile>
      <anchor>c088e2ca48e529dcccd414bee98bfc11</anchor>
      <arglist>(Connector &amp;anchor_to_mapped, const Connector &amp;old_to_new, BoxLevel *mutable_new=NULL, BoxLevel *mutable_old=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>findMappingErrors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MappingConnectorAlgorithm.html</anchorfile>
      <anchor>f1e281b38eea7fe4c48a97a08bdf6dd0</anchor>
      <arglist>(const Connector &amp;connector, char is_local_map= &apos;\0&apos;) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assertMappingValidity</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MappingConnectorAlgorithm.html</anchorfile>
      <anchor>ac5ef4f972bcf75a63bf521402331999</anchor>
      <arglist>(const Connector &amp;connector, char is_local_map= &apos;\0&apos;) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::MultiblockBoxTree</name>
    <filename>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</filename>
    <member kind="function">
      <type></type>
      <name>MultiblockBoxTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>e7f8584568a14cf4d8394b26b0c16a60</anchor>
      <arglist>(const GridGeometry &amp;grid_geometry, const BoxContainer &amp;boxes, size_t min_number=10)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiblockBoxTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>11b540babc8ad0bc9688f14e2d398017</anchor>
      <arglist>(const GridGeometry &amp;grid_geometry, const std::vector&lt; Box &gt; &amp;boxes, size_t min_number=10)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiblockBoxTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>cb3f9c78df338759dab3ae64e60e9413</anchor>
      <arglist>(const GridGeometry &amp;grid_geometry, const std::map&lt; BlockId, BoxContainer &gt; &amp;boxes, size_t min_number=10)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiblockBoxTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>341f8d1cadcc6ab62da394283f671121</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MultiblockBoxTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>10448246be1d50eed7260b3cfbe0c343</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>477bd3dafacab150bcce5369a2a6a235</anchor>
      <arglist>(const GridGeometry &amp;grid_geometry, const BoxContainer &amp;boxes, size_t min_number=10)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>3e6a59b88567d97f85d0aaa4d3271a36</anchor>
      <arglist>(const GridGeometry &amp;grid_geometry, const std::map&lt; BlockId, BoxContainer &gt; &amp;boxes, size_t min_number=10)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateNonPeriodicTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>06a55cc29f672d074c1660c5d94e3d0a</anchor>
      <arglist>(const GridGeometry &amp;grid_geometry, const BoxContainer &amp;boxes, size_t min_number=10)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasBoxInBlock</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>25fd9390864ddf5f1b9f4d1aa7d530b9</anchor>
      <arglist>(const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>const BoxTree &amp;</type>
      <name>getSingleBlockBoxTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>b5fd0eaba7a07c0adb62dae9a4fdb5e2</anchor>
      <arglist>(const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>3302e4ee7186eba88169dd1e98e9bc17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>5a1218a3bd6a1a4fbd3209ca151e414a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const GridGeometry &amp;</type>
      <name>getGridGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>643857469cc397e3e3a0c30eb2cf2cb0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasOverlap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>97b0b05c1e5f60927f4575db20a38dc5</anchor>
      <arglist>(const Box &amp;box, bool include_singularity_block_neighbors=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findOverlapBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>c3c69cafd801dfc3669de8d3f1bac919</anchor>
      <arglist>(Connector &amp;overlap_connector, const Box &amp;box, const IntVector &amp;refinement_ratio, bool include_singularity_block_neighbors=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findOverlapBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>1d17457839ef8b25d17fe744c2030141</anchor>
      <arglist>(std::vector&lt; Box &gt; &amp;overlap_boxes, const Box &amp;box, const IntVector &amp;refinement_ratio, bool include_singularity_block_neighbors=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findOverlapBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>a599bfb5e60afe00be62b0a4951510b5</anchor>
      <arglist>(std::vector&lt; const Box * &gt; &amp;overlap_boxes, const Box &amp;box, const IntVector &amp;refinement_ratio, bool include_singularity_block_neighbors=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findOverlapBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>b66ce08f60094c82cab0bdbf385986d2</anchor>
      <arglist>(BoxContainer &amp;overlap_boxes, const Box &amp;box, const IntVector &amp;refinement_ratio, bool include_singularity_block_neighbors=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>bb222597c3504d8d5eff7bba9f27063e</anchor>
      <arglist>(std::vector&lt; Box &gt; &amp;boxes) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; MultiblockBoxTree &gt;</type>
      <name>createRefinedTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>71d06d4d3d22c41799eacb321fcc9c94</anchor>
      <arglist>(const IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::MultiblockDataTranslator</name>
    <filename>classSAMRAI_1_1hier_1_1MultiblockDataTranslator.html</filename>
    <member kind="function">
      <type></type>
      <name>MultiblockDataTranslator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockDataTranslator.html</anchorfile>
      <anchor>e28c5236d66841ecbcb46d06c29a098b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiblockDataTranslator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockDataTranslator.html</anchorfile>
      <anchor>ac17bbbc74a27774d678061e452da2bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>translateAndCopyData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockDataTranslator.html</anchorfile>
      <anchor>fd611c7201d896a44f956d7875c320bf</anchor>
      <arglist>(Patch &amp;dst_patch, const int dst_id, const Patch &amp;src_patch, const int src_id, const IntVector &amp;shift, const Transformation::RotationIdentifier rotate)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>translateAndFillData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockDataTranslator.html</anchorfile>
      <anchor>70c62f571ceb3f81c9cf99e577832009</anchor>
      <arglist>(Patch &amp;dst_patch, const int dst_id, const Patch &amp;src_patch, const int src_id, const IntVector &amp;shift, const Transformation::RotationIdentifier rotate)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::NeighborhoodSet</name>
    <filename>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</filename>
    <member kind="typedef">
      <type>BoxContainer</type>
      <name>NeighborSet</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>22a3e8fa6799ae5aeadc10463d17dc18</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; BoxId, NeighborSet &gt;::iterator</type>
      <name>iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>8c1474179e93cb1bb88ae015241f3fa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; BoxId, NeighborSet &gt;::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>8150e799fbbdbba06a416b64c0ebb706</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; BoxId, NeighborSet &gt;::reverse_iterator</type>
      <name>reverse_iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>3f7d38d62cc95c2c4f342bcbd388e949</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; BoxId, NeighborSet &gt;::key_type</type>
      <name>key_type</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>c5ce1d4eb6a98ee382c9a19189565a2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; BoxId, NeighborSet &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>74416753c34e90c61f8ba4fb796330f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; BoxId, NeighborSet &gt;::size_type</type>
      <name>size_type</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>40412c6b6f0f78f6089319f8d9659b11</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; iterator, iterator &gt;</type>
      <name>Range</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>e80036c2bdf623cf93459d94969a9b18</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; const_iterator, const_iterator &gt;</type>
      <name>ConstRange</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>c8af51369bf5e870bc466e6be8040ef3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NeighborhoodSet</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>47acc35d096325014bad461c21d302d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NeighborhoodSet</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>775e81f95db39441d6e49e0127875a06</anchor>
      <arglist>(const NeighborhoodSet &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NeighborhoodSet</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a17e9731ed4405fa68f53abb4843e602</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>Range</type>
      <name>findRanksRange</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>d1e9c39c5bfada8a6a3beef5d7022832</anchor>
      <arglist>(int rank)</arglist>
    </member>
    <member kind="function">
      <type>ConstRange</type>
      <name>findRanksRange</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>e630c87d6fb210339d21636b5b222500</anchor>
      <arglist>(int rank) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refineNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>fd2bb52733a7c81cf2a55064fdc5c68c</anchor>
      <arglist>(NeighborhoodSet &amp;output_neighborhood_set, const IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsenNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>cc25bb93a5ed85dbeddabdd705c8947f</anchor>
      <arglist>(NeighborhoodSet &amp;output_neighborhood_set, const IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>growNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>bbd54b31c38c9286e713bff2d301e258</anchor>
      <arglist>(NeighborhoodSet &amp;output_neighborhood_set, const IntVector &amp;growth) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePeriodicNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a47469085610e1b22e30b34941422e45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>ea88793b805fa463da6fbb4b2cb8e3f3</anchor>
      <arglist>(NeighborSet &amp;all_neighbors) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>9b64acbc812e23cdd60955d245fb1dda</anchor>
      <arglist>(BoxContainer &amp;all_neighbors, const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>41fd9e6920b269c8c58dbefbf4c9dac0</anchor>
      <arglist>(std::map&lt; BlockId, BoxContainer &gt; &amp;all_neighbors) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getOwners</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>e75a18ddde93c97580699f95a6cd9c30</anchor>
      <arglist>(std::set&lt; int &gt; &amp;owners) const </arglist>
    </member>
    <member kind="function">
      <type>Outputter</type>
      <name>format</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>fc509a0ed38d9c7623583d845d1c2606</anchor>
      <arglist>(const std::string &amp;border=std::string(), int detail_depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recursivePrint</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>e3fe1949ff4ebe6b0c2516e6167371ee</anchor>
      <arglist>(std::ostream &amp;output_stream, const std::string &amp;left_border, int detail_depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>066679e0dcb879bc96238211b90e0289</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>bbc5f3b6dabc4b6aeaf2413c1c31c05b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>d8ee3e3e986a392cc439e3264d55eba2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a5dbdb7f93210fe9efcb64e97dc9500f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>11aed26adf73232d6842913a9b771b2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>66b73cec567d207c7205dee824f39772</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>bd1e4584b923927c849dc64893017f0c</anchor>
      <arglist>(iterator i, const value_type &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>b29a1e55b72ee5269efdf8d5509611c8</anchor>
      <arglist>(iterator i)</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>33cbaa811e312a339a95c948b76f4707</anchor>
      <arglist>(const key_type &amp;k)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>1548cfbb7def74d29c5a05d4aeabb98b</anchor>
      <arglist>(iterator first, iterator last)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>6353da43916d24cc92c9157589769fe4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a179b4eac4da098387db7c51e15a0991</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>05aa0478c11605d0ed79c6a4e2b66820</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NeighborSet &amp;</type>
      <name>operator[]</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>5f834a13b0fa5e2aab41f315813bee90</anchor>
      <arglist>(const key_type &amp;k)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>find</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>49a2e7dd4b1e0e071967bd3127b3e905</anchor>
      <arglist>(const key_type &amp;k)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>find</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>9b5ca6cc2199b5d3cffdc4dc8b7653a6</anchor>
      <arglist>(const key_type &amp;k) const </arglist>
    </member>
    <member kind="function">
      <type>NeighborhoodSet &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>5558bccf3d53bb5291c75ddc1c37a2c4</anchor>
      <arglist>(const NeighborhoodSet &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>84428df9a6fee8349a3f821addc9c258</anchor>
      <arglist>(const NeighborhoodSet &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>8b6ba6c9ec9f404d4a19ecc45e15fc40</anchor>
      <arglist>(const NeighborhoodSet &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>957d312ca56fdd64ce4e37c36a1ef67a</anchor>
      <arglist>(NeighborhoodSet &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>7e3e38c119c575645502434e4d2ff3c5</anchor>
      <arglist>(tbox::Database &amp;database) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a34b4dfd5a67540060d0cdec4e544a85</anchor>
      <arglist>(tbox::Database &amp;database)</arglist>
    </member>
    <class kind="class">SAMRAI::hier::NeighborhoodSet::Outputter</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::NeighborhoodSet::Outputter</name>
    <filename>classSAMRAI_1_1hier_1_1NeighborhoodSet_1_1Outputter.html</filename>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>NeighborhoodSet</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet_1_1Outputter.html</anchorfile>
      <anchor>616a1cf0dfb3c08537be2fd621394790</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet_1_1Outputter.html</anchorfile>
      <anchor>20819cc8bda4d7e0d70747057be6c4a8</anchor>
      <arglist>(std::ostream &amp;s, const Outputter &amp;f)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::OverlapConnectorAlgorithm</name>
    <filename>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</filename>
    <base>SAMRAI::hier::BaseConnectorAlgorithm</base>
    <member kind="function">
      <type></type>
      <name>OverlapConnectorAlgorithm</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>3816b852b894e431191c6ff7c61dfd6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OverlapConnectorAlgorithm</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>90218cfdc150d7e56b4f25330d346d6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findOverlaps</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>aeb2a9183e1adeaef6e8552240ec6624</anchor>
      <arglist>(Connector &amp;connector, const bool ignore_self_overlap=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findOverlaps</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>a30826df671e488dd62f87eefd8efaec</anchor>
      <arglist>(Connector &amp;connector, const BoxLevel &amp;globalized_head, const bool ignore_self_overlap=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>0329e8e110f6222eddbd081f34a2542f</anchor>
      <arglist>(Connector::NeighborSet &amp;neighbors, const Connector &amp;connector, const BoxId &amp;mapped_box_id, const IntVector &amp;connector_width) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>0c36dc4a1eea5474267c9bd6d953e689</anchor>
      <arglist>(Connector &amp;other, const Connector &amp;connector, const IntVector &amp;connector_width) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bridgeWithNesting</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>9fa58741bbeb04e1525bc92a7268ee06</anchor>
      <arglist>(Connector &amp;west_to_east, Connector &amp;east_to_west, const Connector &amp;west_to_center, const Connector &amp;center_to_east, const Connector &amp;east_to_center, const Connector &amp;center_to_west, const IntVector &amp;center_growth_to_nest_west, const IntVector &amp;center_growth_to_nest_east, const IntVector &amp;connector_width_limit) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bridge</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>4debde1f26932a4050fec4d61761eca0</anchor>
      <arglist>(Connector &amp;west_to_east, Connector &amp;east_to_west, const Connector &amp;west_to_center, const Connector &amp;center_to_east, const Connector &amp;east_to_center, const Connector &amp;center_to_west, const IntVector &amp;connector_width_limit) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bridge</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>41d69d3d8c596d129f4bc45f0aaa1e07</anchor>
      <arglist>(Connector &amp;west_to_east, const Connector &amp;west_to_center, const Connector &amp;center_to_east, const Connector &amp;east_to_center, const Connector &amp;center_to_west, const IntVector &amp;connector_width_limit) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bridge</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>4248b08930383a412de23d809c398776</anchor>
      <arglist>(Connector &amp;west_to_east, Connector &amp;east_to_west, const Connector &amp;west_to_center, const Connector &amp;center_to_east, const Connector &amp;east_to_center, const Connector &amp;center_to_west) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bridge</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>68947d22fece70b312ce40abcf6b2710</anchor>
      <arglist>(Connector &amp;west_to_east, const Connector &amp;west_to_center, const Connector &amp;center_to_east, const Connector &amp;east_to_center, const Connector &amp;center_to_west) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bridge</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>fffd905fc36f41261fb30a024b1ec4cc</anchor>
      <arglist>(Connector &amp;west_to_center, const Connector &amp;center_to_east, const Connector &amp;east_to_center, Connector &amp;center_to_west, const IntVector &amp;connector_width_limit) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSanityCheckMethodPreconditions</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>ff719242417e8086878d5941cb8c293d</anchor>
      <arglist>(bool do_check)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSanityCheckMethodPostconditions</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>339ad465e31ef297b5945059c7d6146a</anchor>
      <arglist>(bool do_check)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>checkOverlapCorrectness</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>6092581cda1052709d62f3bcf6a0117a</anchor>
      <arglist>(const Connector &amp;connector, bool ignore_self_overlap=false, bool assert_completeness=true, bool ignore_periodic_images=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assertOverlapCorrectness</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>415cfe698a24fca05018d81273db4e80</anchor>
      <arglist>(const Connector &amp;connector, bool ignore_self_overlap=false, bool assert_completeness=true, bool ignore_periodic_images=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findOverlapErrors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>79c7b4cbf8d2d9aec3c7befdb9a18f29</anchor>
      <arglist>(const Connector &amp;connector, Connector &amp;missing, Connector &amp;extra, bool ignore_self_overlap=false) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::Patch</name>
    <filename>classSAMRAI_1_1hier_1_1Patch.html</filename>
    <member kind="function">
      <type></type>
      <name>Patch</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>89b34bfdcb5a89d8b08e0da76ca196a4</anchor>
      <arglist>(const Box &amp;mapped_box, tbox::Pointer&lt; PatchDescriptor &gt; descriptor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Patch</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>db4a29c48c6750858eae54d3f2a22d53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>394ce8c5407821d0d5cd720490a81aa4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const GlobalId &amp;</type>
      <name>getGlobalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>6ce744b58212636f5c7d67af03f68c97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const LocalId &amp;</type>
      <name>getLocalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>4771c3984d0928f5ee2e9c07925c689f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; PatchDescriptor &gt;</type>
      <name>getPatchDescriptor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>52330c19c4f93bfeb71d09a606ea96df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; PatchData &gt;</type>
      <name>getPatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>285d354101aaebf62cb1a0ad6f865aaf</anchor>
      <arglist>(const int id) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; PatchData &gt;</type>
      <name>getPatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>a06c3835da39e5e1e64ebf489c728d8b</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; variable, const tbox::Pointer&lt; VariableContext &gt; context) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>94faef9c73a5cba82877e229fa3e336b</anchor>
      <arglist>(const int id, tbox::Pointer&lt; PatchData &gt; data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkAllocated</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>6c4097e7bd3ab1768eb415bdb4dbf707</anchor>
      <arglist>(const int id) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSizeOfPatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>eb36618b36981baed6762ae949be27af</anchor>
      <arglist>(const int id) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSizeOfPatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>df99d20d2c988ac5a4a0df774e8d9bb0</anchor>
      <arglist>(const ComponentSelector &amp;components) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocatePatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>3add9b392205b2d548ece0d01aa47278</anchor>
      <arglist>(const int id, const double time=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocatePatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>6980d1ce48652eae811373d6ec56cb2e</anchor>
      <arglist>(const ComponentSelector &amp;components, const double time=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocatePatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>aff9376d84dc6db49b12be721c8e141b</anchor>
      <arglist>(const int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocatePatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>f2be52a1c2efcba1b24cee5330aa31fc</anchor>
      <arglist>(const ComponentSelector &amp;components)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>cb04379a7e0f4618a2480931eda02bbd</anchor>
      <arglist>(tbox::Pointer&lt; PatchGeometry &gt; geometry)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; PatchGeometry &gt;</type>
      <name>getPatchGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>228ddd4ea63bf3b33cb3862f6a021610</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>dcbcacb7509a3cb522cd061f049667ba</anchor>
      <arglist>(const double timestamp, const int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>b0933e8b1e2023c07d19df99633108ea</anchor>
      <arglist>(const double timestamp, const ComponentSelector &amp;components)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>dfc9377fe6848ab736422764df73ff99</anchor>
      <arglist>(const double timestamp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPatchLevelNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>585d44405a109709cf3c0337182351db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchLevelNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>9cc854f3778c2179b6b09b3c37e0bbd6</anchor>
      <arglist>(const int level_number)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inHierarchy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>360f365299a917bd079b3d6cfbefe2ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchInHierarchy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>5502fc784de7cd9a1b98dc5b6ff0c7f5</anchor>
      <arglist>(bool in_hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>229341f50e8bae4cb82cd936c53c1404</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database, const ComponentSelector &amp;component_selector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>0adc9d900d6eaae4f3cdea949cf6f0df</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database, const ComponentSelector &amp;patchdata_write_table)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>recursivePrint</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>418252ce638a694ca94558d2586754fe</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;border=std::string(), int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>143b9688e2e3409bad1f57ce1e4f938c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>1b20bb8bdfb563d7e611dfa29a45592c</anchor>
      <arglist>(std::ostream &amp;s, const Patch &amp;patch)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchBoundaries</name>
    <filename>classSAMRAI_1_1hier_1_1PatchBoundaries.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchBoundaries.html</anchorfile>
      <anchor>286d6ac6ce73b3604d4b13527809ee69</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PatchBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchBoundaries.html</anchorfile>
      <anchor>a5eae3fea0f1426726cc648a2a8153a2</anchor>
      <arglist>(const PatchBoundaries &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>const PatchBoundaries &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchBoundaries.html</anchorfile>
      <anchor>278215a1dc869e898397e76a8284f8c6</anchor>
      <arglist>(const PatchBoundaries &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Array&lt; hier::BoundaryBox &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchBoundaries.html</anchorfile>
      <anchor>93cbe0d3b0787d4a2e6a9990b54d7694</anchor>
      <arglist>(unsigned int i)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; hier::BoundaryBox &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchBoundaries.html</anchorfile>
      <anchor>2556f1fab0c47034b12f97ab6a4a438a</anchor>
      <arglist>(unsigned int i) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Array&lt; tbox::Array&lt; hier::BoundaryBox &gt; &gt;</type>
      <name>getArrays</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchBoundaries.html</anchorfile>
      <anchor>0938a677e00bdaf793e1f8df7b0cef6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; tbox::Array&lt; hier::BoundaryBox &gt; &gt;</type>
      <name>getArrays</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchBoundaries.html</anchorfile>
      <anchor>40f2b4b69b832cb9ec37a1673683ddc0</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchData</name>
    <filename>classSAMRAI_1_1hier_1_1PatchData.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>d6fd990749a0cc610903629093397829</anchor>
      <arglist>(const Box &amp;domain, const IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>f7c1f3f025b9119f22fb406973e8b8f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>a88559825586b3a3debc725ed7c9ee87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>getGhostBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>35ed47dbf1e3b1ed5416155d5f3d786f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getGhostCellWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>6be66e6aa063e0efb450534b445bf1d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>7536521c4b27f734db29b963f151366e</anchor>
      <arglist>(const double timestamp)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTime</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>18b0756e788aa73ab553038349e3e884</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>1eceef85e707249a51fd6e8719b8b888</anchor>
      <arglist>(const PatchData &amp;src)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>09c4b4a8c05efa18ad83662db4ba5351</anchor>
      <arglist>(PatchData &amp;dst) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>60dd0fcc44ae5ef062a4249dad8a4f47</anchor>
      <arglist>(const PatchData &amp;src, const BoxOverlap &amp;overlap)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>bd068fc4e5d159b2f927d59ea2ffda40</anchor>
      <arglist>(PatchData &amp;dst, const BoxOverlap &amp;overlap) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>e9cfe3b5f5cb132e6968467154f46521</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>c70a44451c3a87e5744328e09b33efa8</anchor>
      <arglist>(const BoxOverlap &amp;overlap) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>5f351ded8a02c75ecf9eb124cec0b509</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const BoxOverlap &amp;overlap) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>64f047f667adb684706c6a546176f460</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const BoxOverlap &amp;overlap)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFromDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>227265b546bc745910534f07011fa7a7</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>20228a1f13be4bae4c28252057605e47</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>5fb8db1f58940d0fd1f130ea857037a4</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>aa793038dcc04fee9bf96943b35951ee</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)=0</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>3337108025afc8c5072cd390025d2b73</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setGhostBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>ba24e6a7481dd82d985e16d7bca13608</anchor>
      <arglist>(const Box &amp;ghost_box)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchDataFactory</name>
    <filename>classSAMRAI_1_1hier_1_1PatchDataFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchDataFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>411c1ea78de35f40915b28ebe95cef20</anchor>
      <arglist>(const IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchDataFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>903632a5198a4cc72dd47d3a8f2d7017</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tbox::Pointer&lt; PatchDataFactory &gt;</type>
      <name>cloneFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>bf179906bf07b3728303846298207e06</anchor>
      <arglist>(const IntVector &amp;ghosts)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tbox::Pointer&lt; PatchData &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>c13970279dce72da9f83ca8bc6aea61b</anchor>
      <arglist>(const Patch &amp;patch) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tbox::Pointer&lt; BoxGeometry &gt;</type>
      <name>getBoxGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>925d25752481b06f0c036f70625380b5</anchor>
      <arglist>(const Box &amp;box) const =0</arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getGhostCellWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>a72042ab28bac47d3c92c607ebef674f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getSizeOfMemory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>81f1cf57f6d5e5d600b7dd439f5cdfbb</anchor>
      <arglist>(const Box &amp;box) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>f43fa01dd54c980fb6931f820100e57a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>cf3abe526e3c8bef87fbb1288fa8f421</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>validCopyTo</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>64fca62071266c37cc5b595fb2872454</anchor>
      <arglist>(const tbox::Pointer&lt; PatchDataFactory &gt; &amp;dst_pdf) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MultiblockDataTranslator *</type>
      <name>getMultiblockDataTranslator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>7e8b851c22a1dce748919aaeaf915b5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>16560e7c86cfd46c35ccd92ddf7a222a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IntVector</type>
      <name>d_ghosts</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>7e037f08a2059709e798bcd37faee464</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchDescriptor</name>
    <filename>classSAMRAI_1_1hier_1_1PatchDescriptor.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchDescriptor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>6a8985d4f5a084e036b24138370fbc27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchDescriptor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>5f7d331bd30fc752cbf66464b90bf0bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>definePatchDataComponent</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>a8a08e8fa8d85c7fef74a6e129c65f05</anchor>
      <arglist>(const std::string &amp;name, tbox::Pointer&lt; PatchDataFactory &gt; factory)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePatchDataComponent</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>df3b4a6a1292ee53513830a5a046cd49</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; PatchDataFactory &gt;</type>
      <name>getPatchDataFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>805655cc98a8741bae7f76ce543d2e5a</anchor>
      <arglist>(int id) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; PatchDataFactory &gt;</type>
      <name>getPatchDataFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>34c575c0250b2a71d8d4ba63b9db2e8c</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxNumberRegisteredComponents</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>4f1aea3a7dc436aff39521c0e66ea2e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mapNameToIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>84fe0765854c0dd9b0bf95cfc44a68bb</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>mapIndexToName</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>68290f55de9d446bbba692cd49386018</anchor>
      <arglist>(const int id) const </arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>getMaxGhostWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>5f58f58c823164c7c59ec7f3b75f52f8</anchor>
      <arglist>(const tbox::Dimension &amp;dim) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinGhostWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>bb3fe2ccfd346b05e96d160f1a64b1d9</anchor>
      <arglist>(const IntVector &amp;min_value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>ce449449d8fa32daeeac40b38c6dedf0</anchor>
      <arglist>(std::ostream &amp;stream=tbox::plog) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchFactory</name>
    <filename>classSAMRAI_1_1hier_1_1PatchFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchFactory.html</anchorfile>
      <anchor>cd2ff35a5e65eeef554477398c1e51e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchFactory.html</anchorfile>
      <anchor>ad9e2c47db2c5a5b5a4ead8491f2ca5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; Patch &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchFactory.html</anchorfile>
      <anchor>77b3beeade78679ace988e138d864d19</anchor>
      <arglist>(const Box &amp;mapped_box_level_mapped_box, tbox::Pointer&lt; PatchDescriptor &gt; descriptor) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchGeometry</name>
    <filename>classSAMRAI_1_1hier_1_1PatchGeometry.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>1e86cee825264b3117054ff9ec80d6ce</anchor>
      <arglist>(const IntVector &amp;ratio_to_level_zero, const TwoDimBool &amp;touches_regular_bdry, const TwoDimBool &amp;touches_periodic_bdry)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>f0063284d3424f8cf569fccfde9e6862</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; tbox::Array&lt; BoundaryBox &gt; &gt;</type>
      <name>getPatchBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>32cf627e5c072449709d7d3391b15233</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundaryBoxesOnPatch</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>d8347021050824a74a35ac828a4206a5</anchor>
      <arglist>(const tbox::Array&lt; tbox::Array&lt; BoundaryBox &gt; &gt; bdry)</arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getRatio</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>ed23013ab22a88e00abdbb8d185845cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersectsPhysicalBoundary</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>66c297a4923b28eb84b4b93d3008d7b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; BoundaryBox &gt; &amp;</type>
      <name>getNodeBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>96cdd85dde2f2ca87becab1917b2e422</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; BoundaryBox &gt; &amp;</type>
      <name>getEdgeBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>1e25c284e512f04e6e1f6d0c8183620a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; BoundaryBox &gt; &amp;</type>
      <name>getFaceBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>7b9a0ae886a629226ec575b5d00438ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; BoundaryBox &gt; &amp;</type>
      <name>getCodimensionBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>da54f123678b4c992942a6157d32088b</anchor>
      <arglist>(const int codim) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCodimensionBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>e1ded55e2f7bc95b69ec34a2540c52be</anchor>
      <arglist>(const tbox::Array&lt; BoundaryBox &gt; &amp;bdry_boxes, const int codim)</arglist>
    </member>
    <member kind="function">
      <type>Box</type>
      <name>getBoundaryFillBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>dc761d341223c80466a735b4c2855beb</anchor>
      <arglist>(const BoundaryBox &amp;bbox, const Box &amp;patch_box, const IntVector &amp;gcw) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getTouchesRegularBoundary</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>7bb0604a4b363dd9e21f5a9789dd10a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getTouchesPeriodicBoundary</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>943b4ff21f7e3f0b5ff82d05eb6a02b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getTouchesRegularBoundary</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>2a98b3afe736f831bc78fa1ad3bb66cd</anchor>
      <arglist>(int axis, int upperlower) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>3ce807dcf07127b3a7bb2e82d8d03d84</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <class kind="class">SAMRAI::hier::PatchGeometry::TwoDimBool</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchGeometry::TwoDimBool</name>
    <filename>classSAMRAI_1_1hier_1_1PatchGeometry_1_1TwoDimBool.html</filename>
    <member kind="function">
      <type></type>
      <name>TwoDimBool</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry_1_1TwoDimBool.html</anchorfile>
      <anchor>cce7e14248b927aff7dd21184be4dbce</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TwoDimBool</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry_1_1TwoDimBool.html</anchorfile>
      <anchor>896934d520118fab23d794f55e969693</anchor>
      <arglist>(const tbox::Dimension &amp;dim, bool v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAll</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry_1_1TwoDimBool.html</anchorfile>
      <anchor>37dadedaf61d0a9dea77adbca859a8fb</anchor>
      <arglist>(bool v)</arglist>
    </member>
    <member kind="function">
      <type>bool &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry_1_1TwoDimBool.html</anchorfile>
      <anchor>5067c88888d1c3fc014167675779e07f</anchor>
      <arglist>(int dim, int side)</arglist>
    </member>
    <member kind="function">
      <type>const bool &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry_1_1TwoDimBool.html</anchorfile>
      <anchor>7568cab35a9cbc08fd77be49293f7849</anchor>
      <arglist>(int dim, int side) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry_1_1TwoDimBool.html</anchorfile>
      <anchor>29a2a6ac98569a483e8a361023278920</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchHierarchy</name>
    <filename>classSAMRAI_1_1hier_1_1PatchHierarchy.html</filename>
    <base>SAMRAI::tbox::Serializable</base>
    <member kind="function">
      <type>void</type>
      <name>registerConnectorWidthRequestor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>98412048edc455b0ab6efbb02c9ce711</anchor>
      <arglist>(const ConnectorWidthRequestorStrategy &amp;cwrs)</arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>getRequiredConnectorWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>9afa657dccd500ee42468ac792ee5f9b</anchor>
      <arglist>(int base_ln, int head_ln) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerAutoConnectorWidthRequestorStrategy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>57056379dc5b6a6cb088289c4baffece</anchor>
      <arglist>(const ConnectorWidthRequestorStrategy &amp;cwrs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>e2930a2a2cffbf0cd9318e7c7ba48ef0</anchor>
      <arglist>(const std::string &amp;object_name, tbox::Pointer&lt; GridGeometry &gt; geometry, const tbox::Pointer&lt; tbox::Database &gt; &amp;database=tbox::Pointer&lt; tbox::Database &gt;(NULL), bool register_for_restart=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>5f81f08dcc6c0989ff2d1cdaa018bf15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>makeRefinedPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>1c5eae0a1aac52be6fb7fce9b6def0e6</anchor>
      <arglist>(const std::string &amp;fine_hierarchy_name, const hier::IntVector &amp;refine_ratio, bool register_for_restart) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>makeCoarsenedPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>d4d5455e741b0ce6ff7daa132f2aea1e</anchor>
      <arglist>(const std::string &amp;coarse_hierarchy_name, const hier::IntVector &amp;coarsen_ratio, bool register_for_restart) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeNewPatchLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>4c7d30e2e5ae3f0b86a4f9a5e0990568</anchor>
      <arglist>(const int level_number, const BoxLevel &amp;new_mapped_box_level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePatchLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>9b0968d197c29055bb92088a7dd93a0c</anchor>
      <arglist>(const int level)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; PatchLevel &gt;</type>
      <name>getPatchLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>b68cbf909731e7eae74de5e433eba9f4</anchor>
      <arglist>(const int level) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; PatchDescriptor &gt;</type>
      <name>getPatchDescriptor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>b9fc12579f3045ed1d71aa9a1852f01e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>levelExists</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>00944fb7510052c51f3dadf640c26c35</anchor>
      <arglist>(const int level) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>finerLevelExists</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>82f2a63f527bef26a8aafc9bd8ccc56a</anchor>
      <arglist>(const int level) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfLevels</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>deca265491a697d42afaf4a53220236b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFinestLevelNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>60ba9f20cb43e76ae51d5626087a72c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>levelCanBeRefined</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>4860021628fc98c9c232d00b24c87afd</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; BoxLevel &gt; &amp;</type>
      <name>getBoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>0b140451ddd2656f535bf0dfe4ab8d1b</anchor>
      <arglist>(const int level) const </arglist>
    </member>
    <member kind="function">
      <type>const Connector &amp;</type>
      <name>getConnector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>2d354d16b875b06a99fbad6b91fd27b4</anchor>
      <arglist>(const int base_ln, const int head_ln) const </arglist>
    </member>
    <member kind="function">
      <type>const BoxLevel &amp;</type>
      <name>getDomainBoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>3f9a31b6e99db652575812bc3c841a5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::SAMRAI_MPI &amp;</type>
      <name>getMPI</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>28110692bc13814b2d8b068561bfe3cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>0a311b31897550977a216ffcb7ad5f77</anchor>
      <arglist>(tbox::Pointer&lt; PatchFactory &gt; factory)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchLevelFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>d6d5e17ef0cf78e8b870eabd9f5a9bcb</anchor>
      <arglist>(tbox::Pointer&lt; PatchLevelFactory &gt; factory)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; GridGeometry &gt;</type>
      <name>getGridGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>16dc8acbc983c1d44ab554208e3d4ab1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>52f07260ea2f924717f29a74db4cb1f6</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>d6538f8827549844557a2b5ae7095b6c</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database, const ComponentSelector &amp;patchdata_write_table)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromRestart</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>ffca1ad2721ad099477511e0bccdc9f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>32c4f97634a2266561a2774dac5a9d9e</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database, const ComponentSelector &amp;component_selector)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>b057293003da155e42d0183254ead12e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>recursivePrint</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>50991b5650c92307c4117275fa6d8c61</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;border=std::string(), int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>0418f7869bc26bfecff8bfae5c147863</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxNumberOfLevels</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>2bb5dbb1ada0bec5e1cacc9a3db99ff3</anchor>
      <arglist>(int max_levels)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxNumberOfLevels</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>1cd47d9ad8ecfd56778a5b8c74841999</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRatioToCoarserLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>eb43a759db34c956bfeb672d5ffcd441</anchor>
      <arglist>(const IntVector &amp;ratio, int level)</arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getRatioToCoarserLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>34660bd33d86e67540bbe66bd07ba688</anchor>
      <arglist>(int level) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSmallestPatchSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>184235c71703cbea0e47a33f35ce9634</anchor>
      <arglist>(const IntVector &amp;size, int level)</arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getSmallestPatchSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>75987597c79a5cad02952def9809a9ed</anchor>
      <arglist>(int level) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLargestPatchSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>c006401fc695681fd3c148948d9bd069</anchor>
      <arglist>(const IntVector &amp;size, int level)</arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getLargestPatchSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>d506ff620d8ea6ce8e148f6bd39e486a</anchor>
      <arglist>(int level) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getProperNestingBuffer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>50adec89c2ac66e4b3f4cae897cfe481</anchor>
      <arglist>(int ln) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>allowPatchesSmallerThanGhostWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>790725502aaf031454e147479f171124</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>allowPatchesSmallerThanMinimumSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>2479c87fb7ecae87fa07287dc62d22e2</anchor>
      <arglist>() const </arglist>
    </member>
    <class kind="class">SAMRAI::hier::PatchHierarchy::ConnectorWidthRequestorStrategy</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchHierarchy::ConnectorWidthRequestorStrategy</name>
    <filename>classSAMRAI_1_1hier_1_1PatchHierarchy_1_1ConnectorWidthRequestorStrategy.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConnectorWidthRequestorStrategy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy_1_1ConnectorWidthRequestorStrategy.html</anchorfile>
      <anchor>f266f20c5a0b210f36244b2a80c180d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>computeRequiredConnectorWidths</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy_1_1ConnectorWidthRequestorStrategy.html</anchorfile>
      <anchor>41f676bd5f51f959167e15e2c3796cf4</anchor>
      <arglist>(std::vector&lt; hier::IntVector &gt; &amp;self_connector_widths, std::vector&lt; hier::IntVector &gt; &amp;fine_connector_widths, const PatchHierarchy &amp;patch_hierarchy) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchLevel</name>
    <filename>classSAMRAI_1_1hier_1_1PatchLevel.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>200e6f739f70f39e542a1f60e507c7d9</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PatchLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a7935f0be448387823cd3f17d1072a63</anchor>
      <arglist>(const BoxLevel &amp;mapped_box_level, const tbox::Pointer&lt; GridGeometry &gt; grid_geometry, const tbox::Pointer&lt; PatchDescriptor &gt; descriptor, tbox::Pointer&lt; PatchFactory &gt; factory=tbox::Pointer&lt; PatchFactory &gt;(NULL), bool defer_boundary_box_creation=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PatchLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>cf118496a09549de8d8b4e7a1db4b574</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; level_database, tbox::Pointer&lt; GridGeometry &gt; grid_geometry, tbox::Pointer&lt; PatchDescriptor &gt; descriptor, tbox::Pointer&lt; PatchFactory &gt; factory, const ComponentSelector &amp;component_selector=*(new ComponentSelector(false)), bool defer_boundary_box_creation=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>c5f14ea9d3a7fb54c638974e78f21632</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLevelNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>fa1029a03a313f77eca137c5b4fc0aef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLevelNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a5f378638f00b82d204b37df8bb5e21b</anchor>
      <arglist>(const int level)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNextCoarserHierarchyLevelNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>075ba40503220072582de98e4b3195a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNextCoarserHierarchyLevelNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>2a985a8efeca1e4f08b89e6498acb82d</anchor>
      <arglist>(const int level)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inHierarchy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>92c09f9c43bdb459c73115349dfc53fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLevelInHierarchy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>884c19a7bf9894213f2afc06f266fdbb</anchor>
      <arglist>(bool in_hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfPatches</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>ccd06ffa50cd00cdfb0a03fba9d9b340</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLocalNumberOfPatches</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>7fbb93435a13b9cc970995c577c20f7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGlobalNumberOfPatches</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>40ca79bfe5e5329e39224d9964ccc41d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLocalNumberOfCells</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>242213e2f2c48eef281ffade1b198458</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGlobalNumberOfCells</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>90dbb3dd47fd53154128e0f146e057c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; Patch &gt; &amp;</type>
      <name>getPatch</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>152233fddbd90baa9778eb19bd1d0486</anchor>
      <arglist>(const GlobalId &amp;gid, const BlockId &amp;bid) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; Patch &gt;</type>
      <name>getPatch</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>3f940f1ebc6d53f038ce761a803aeb55</anchor>
      <arglist>(const BoxId &amp;mbid) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; PatchDescriptor &gt;</type>
      <name>getPatchDescriptor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>0deb6d42bbce0e0e2a9634ee3694808a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; PatchFactory &gt;</type>
      <name>getPatchFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>998dddce587a5ef3aebd7df39d1a96bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; GridGeometry &gt;</type>
      <name>getGridGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>51d3d46e74eb3d635d10b8c9466cf156</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRefinedPatchLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>04bafd88a60ec0705937d010c507f733</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; coarse_level, const hier::IntVector &amp;refine_ratio, const tbox::Pointer&lt; hier::GridGeometry &gt; fine_grid_geometry=tbox::Pointer&lt; hier::GridGeometry &gt;(NULL), bool defer_boundary_box_creation=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoarsenedPatchLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>11cbed406551468f7a25ea9c1cfc45a4</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; fine_level, const hier::IntVector &amp;coarsen_ratio, const tbox::Pointer&lt; hier::GridGeometry &gt; coarse_grid_geom=tbox::Pointer&lt; hier::GridGeometry &gt;(NULL), bool defer_boundary_box_creation=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundaryBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>adc756f7924a3355bb11bb22e4ef959e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; BoxContainer &gt; &amp;</type>
      <name>getPhysicalDomainArray</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>ae775df56ac19ea0978a31ac57bff419</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const BoxContainer &amp;</type>
      <name>getPhysicalDomain</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>44e8f7733831fa5884940d0ed25ec944</anchor>
      <arglist>(const hier::BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>const BoxContainer &amp;</type>
      <name>getBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>bddcec8843c1ee714faff466628354f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>cf73571dd266ab0ca642e644436da526</anchor>
      <arglist>(BoxContainer &amp;boxes, const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; BoxLevel &gt; &amp;</type>
      <name>getBoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a7c876e2e3a3bb734c59f72620a9cf46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const BoxLevel &amp;</type>
      <name>getGlobalizedBoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a2d17dcfbf65e7e88db06aab7b60242d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ProcessorMapping &amp;</type>
      <name>getProcessorMapping</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>f6b70feda918e84ddd71850a5b10e621</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getRatioToLevelZero</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>d55b187cc508dbe881527ae7bc68cc23</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getRatioToCoarserLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>58eb35d8be574ae7b0e45db3d9f95dbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRatioToCoarserLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>8f5ae20726e0df4d934ebf181f54cd55</anchor>
      <arglist>(const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMappingForPatch</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>5d9a33d120ae97b6082d8a8433289a0f</anchor>
      <arglist>(const BoxId &amp;mapped_box_id) const </arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>getBoxForPatch</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>acbe85c54fb5832a2829413bc4c92eb9</anchor>
      <arglist>(const BoxId &amp;mapped_box_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>patchTouchesRegularBoundary</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>cd8a4f6aac996332deb88887ec272833</anchor>
      <arglist>(const BoxId &amp;mapped_box_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocatePatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>84d82d3137b6ddab72e68bdc1c850a14</anchor>
      <arglist>(const int id, const double timestamp=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocatePatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>e72a10a2e4efaee66b1571ab0765f5f3</anchor>
      <arglist>(const ComponentSelector &amp;components, const double timestamp=0.0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkAllocated</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a5303b79767765ad23bac35a7ef5fbf6</anchor>
      <arglist>(const int id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocatePatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>083e971f26d0b6fab65c53a72a996536</anchor>
      <arglist>(const int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocatePatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>9df56289678f1ce2754ab83ae740974f</anchor>
      <arglist>(const ComponentSelector &amp;components)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>55a1a497e2e6160774ade8bc0d2f0983</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>d6f088e034633873accb84c787bbb000</anchor>
      <arglist>(const double timestamp, const int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>c08ced32203809aa4ad44d0997354d43</anchor>
      <arglist>(const double timestamp, const ComponentSelector &amp;components)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>ff46b0eb8c82ac30f3d8b278eea31bda</anchor>
      <arglist>(const double timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>cf9f759b34cbf89b3221934e9f423820</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database, const ComponentSelector &amp;component_selector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>d27e15b6adcd4a814e1b506febe71efe</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database, const ComponentSelector &amp;patchdata_write_table)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>recursivePrint</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>4e7c7baeb880b1b780b7d8d959056919</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;border=std::string(), int depth=0)</arglist>
    </member>
    <class kind="class">SAMRAI::hier::PatchLevel::Iterator</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchLevel::Iterator</name>
    <filename>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</filename>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>34bd2aefc2f267d68232be2752d6b66c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>40aeb9f3d7ecf8271f4760bfcdfeb493</anchor>
      <arglist>(const Iterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>9b66c9e4fa4e4690bcaee663d3e8b027</anchor>
      <arglist>(const PatchContainer::const_iterator &amp;raw_iter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>7d0f5071b21e6e213beac23515128c09</anchor>
      <arglist>(const PatchLevel &amp;patch_level)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>5bd3821cd2ac6ab6163cb6a9e0987ea8</anchor>
      <arglist>(const PatchLevel *patch_level)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>7b62353f745621c84c45e8ddc9b9de56</anchor>
      <arglist>(const tbox::Pointer&lt; PatchLevel &gt; &amp;patch_level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>52cf4786230a95210dfbbc7b2e0b149f</anchor>
      <arglist>(const tbox::Pointer&lt; PatchLevel &gt; &amp;patch_level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>c8e774eac50a988b847cb96dd67541cf</anchor>
      <arglist>(const PatchLevel &amp;patch_level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>9dd2d5ae466b2eef0536df64686c8031</anchor>
      <arglist>(const PatchLevel *patch_level)</arglist>
    </member>
    <member kind="function">
      <type>Iterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>dbe22b9773c4703d87f3a532d5b096eb</anchor>
      <arglist>(const Iterator &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; Patch &gt; &amp;</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>5c9fe929377508a997b2238b1e894bb9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; Patch &gt; &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>e6713e88f8c65d358c762d1f175ef11a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; Patch &gt; &amp;</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>47c8a37a6e9766ed2beebc2f019624ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>460787a96527bf0bd915b7a79a1261cc</anchor>
      <arglist>(const Iterator &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>6a4c77915fb59ebf3ce9afb40f8ea9b5</anchor>
      <arglist>(const Iterator &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>const Iterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>30b9b4c5611628153247d2b86bc7b598</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>2dddf06f9f7e3ed8070d9104fcc7a8a5</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>13587639b917d8f1055404b09c5f5c80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchLevelFactory</name>
    <filename>classSAMRAI_1_1hier_1_1PatchLevelFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchLevelFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevelFactory.html</anchorfile>
      <anchor>8820af650e8e216c81863158a33cf61b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchLevelFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevelFactory.html</anchorfile>
      <anchor>3aaa1558115397658a50224394ff99ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; PatchLevel &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevelFactory.html</anchorfile>
      <anchor>5f8bcf8d713d70138f9e4f87feb9d3be</anchor>
      <arglist>(const BoxLevel &amp;mapped_box_level, const tbox::Pointer&lt; GridGeometry &gt; grid_geometry, const tbox::Pointer&lt; PatchDescriptor &gt; descriptor, tbox::Pointer&lt; PatchFactory &gt; factory=tbox::Pointer&lt; PatchFactory &gt;(NULL)) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; PatchLevel &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevelFactory.html</anchorfile>
      <anchor>ce40525df8d34379f736b1a548738722</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database, const tbox::Pointer&lt; GridGeometry &gt; grid_geometry, const tbox::Pointer&lt; PatchDescriptor &gt; descriptor, const ComponentSelector &amp;component_selector, tbox::Pointer&lt; PatchFactory &gt; factory=tbox::Pointer&lt; PatchFactory &gt;(NULL), const bool defer_boundary_box_creation=false) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PeriodicId</name>
    <filename>classSAMRAI_1_1hier_1_1PeriodicId.html</filename>
    <member kind="function">
      <type></type>
      <name>PeriodicId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>e208283a771e4790dc1ac3a4d5078734</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PeriodicId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>ad22a54e24f9de0fa8dc5dfd9ce50155</anchor>
      <arglist>(const PeriodicId &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PeriodicId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>8e61ee344176000f29c3843a81da5595</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PeriodicId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>6a170d821d310fea4c01a81448d5a628</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PeriodicId &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>c2d5bdf34246338e245ade4f23667c9b</anchor>
      <arglist>(const PeriodicId &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>PeriodicId &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>53237eef8b792cd7c7b2b26866891713</anchor>
      <arglist>(const int &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>const int &amp;</type>
      <name>getPeriodicValue</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>baf358bce6a21bcb9d951fb80046a1ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>ca75f28824ada704809f6eb4d13b95dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>383a8c66744a49f76afaf8d4ce9ef5ce</anchor>
      <arglist>(const PeriodicId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>e4d4f6d019a860d84fbdde22f6dd2a27</anchor>
      <arglist>(const PeriodicId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>596629becb4cea71a6b9804245f0fabf</anchor>
      <arglist>(const PeriodicId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>53a884451f18f977822b2d44aaa15a47</anchor>
      <arglist>(const PeriodicId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>14aa7ef33d9b8285ea75f9a8cc8f3557</anchor>
      <arglist>(const PeriodicId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>f393a5a3b0e10d66b2cc65b4fa65c8c4</anchor>
      <arglist>(const PeriodicId &amp;rhs) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const PeriodicId &amp;</type>
      <name>zero</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>e137d56ca63dc197ae53f49030033aa5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const PeriodicId &amp;</type>
      <name>invalidId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>318d180926f9811eb63ebbe90d4ba471</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>c379984e582eace5be219f314864fc79</anchor>
      <arglist>(std::ostream &amp;co, const PeriodicId &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PeriodicShiftCatalog</name>
    <filename>classSAMRAI_1_1hier_1_1PeriodicShiftCatalog.html</filename>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>shiftNumberToShiftDistance</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicShiftCatalog.html</anchorfile>
      <anchor>92a81c7b05d34d8854f19afcc6c99a43</anchor>
      <arglist>(const PeriodicId &amp;shift_number) const </arglist>
    </member>
    <member kind="function">
      <type>PeriodicId</type>
      <name>shiftDistanceToShiftNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicShiftCatalog.html</anchorfile>
      <anchor>483e0413a87981713a7e31fbfc450682</anchor>
      <arglist>(const IntVector &amp;shift_distance) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getInvalidShiftNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicShiftCatalog.html</anchorfile>
      <anchor>be4f28f4aa5279ad4cf9cdda5792cf92</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const PeriodicId &amp;</type>
      <name>getOppositeShiftNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicShiftCatalog.html</anchorfile>
      <anchor>97821a7bb78f285d89de4d5cd4d9169e</anchor>
      <arglist>(const PeriodicId &amp;shift_number) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPeriodic</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicShiftCatalog.html</anchorfile>
      <anchor>2511961f18d94014c530efdea2331f40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfShifts</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicShiftCatalog.html</anchorfile>
      <anchor>8db11b43c782c36eb2051e9cfa94a33b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const PeriodicId &amp;</type>
      <name>getZeroShiftNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicShiftCatalog.html</anchorfile>
      <anchor>d9a6117ad0f8c118a186dfa54462ba12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const PeriodicShiftCatalog *</type>
      <name>getCatalog</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicShiftCatalog.html</anchorfile>
      <anchor>e5af438e68ff1c0384b2ec2aa81b27ef</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initializeShiftsByIndexDirections</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicShiftCatalog.html</anchorfile>
      <anchor>73e410fbc27174e018b19ff20f3bd4b2</anchor>
      <arglist>(const IntVector &amp;shift_distance_along_index_directions)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PersistentOverlapConnectors</name>
    <filename>classSAMRAI_1_1hier_1_1PersistentOverlapConnectors.html</filename>
    <member kind="function">
      <type></type>
      <name>~PersistentOverlapConnectors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PersistentOverlapConnectors.html</anchorfile>
      <anchor>6a576fd413469a583ffc907175ef2b7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Connector &amp;</type>
      <name>createConnector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PersistentOverlapConnectors.html</anchorfile>
      <anchor>c9aa6af6f9b0cca4254ba2528486413d</anchor>
      <arglist>(const BoxLevel &amp;head, const IntVector &amp;connector_width)</arglist>
    </member>
    <member kind="function">
      <type>const Connector &amp;</type>
      <name>createConnector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PersistentOverlapConnectors.html</anchorfile>
      <anchor>ae877e1ad1e9275ba41db1a83d3b8d6e</anchor>
      <arglist>(const BoxLevel &amp;head, const IntVector &amp;connector_width, const Connector &amp;relationships)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cacheConnector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PersistentOverlapConnectors.html</anchorfile>
      <anchor>353a260002b0dd63251ce2a1ea622342</anchor>
      <arglist>(const BoxLevel &amp;head, Connector *connector)</arglist>
    </member>
    <member kind="function">
      <type>const Connector &amp;</type>
      <name>findConnector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PersistentOverlapConnectors.html</anchorfile>
      <anchor>ce4edec6ddae4bfb8735270b8f292f4c</anchor>
      <arglist>(const BoxLevel &amp;head, const IntVector &amp;min_connector_width, bool exact_width_only=false)</arglist>
    </member>
    <member kind="function">
      <type>const Connector &amp;</type>
      <name>findOrCreateConnector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PersistentOverlapConnectors.html</anchorfile>
      <anchor>6c6d7e4110a624e7b301c83e6457b619</anchor>
      <arglist>(const BoxLevel &amp;head, const IntVector &amp;min_connector_width, bool exact_width_only=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasConnector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PersistentOverlapConnectors.html</anchorfile>
      <anchor>a4694848a4afb207cd214374be74d89f</anchor>
      <arglist>(const BoxLevel &amp;head, const IntVector &amp;min_connector_width, bool exact_width_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PersistentOverlapConnectors.html</anchorfile>
      <anchor>e32981a847d4a51c820586e76c241dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PersistentOverlapConnectors.html</anchorfile>
      <anchor>cf045e30a508d246fb9f39fc632f03a5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::ProcessorMapping</name>
    <filename>classSAMRAI_1_1hier_1_1ProcessorMapping.html</filename>
    <member kind="function">
      <type></type>
      <name>ProcessorMapping</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>bc6981e2b1d4742071575b5c4907fd6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProcessorMapping</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>8923d5c7d91bf046c9f4c6b6ca3c60d0</anchor>
      <arglist>(const int n)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProcessorMapping</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>544ac166ee4be1f31c74d60a8f56a226</anchor>
      <arglist>(const ProcessorMapping &amp;mapping)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProcessorMapping</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>6c474fa2ca4d5dbc4185148b14a10f6a</anchor>
      <arglist>(const tbox::Array&lt; int &gt; &amp;mapping)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ProcessorMapping</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>2781c2606c914cb8e62b57794b905bd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMappingSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>7edca1b6b7934841eda761b3d0bdfd40</anchor>
      <arglist>(const int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumberNodes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>ae27a43ff0954e526a63624dd51448d1</anchor>
      <arglist>(const int n)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getProcessorAssignment</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>20502969766278130097b68304b9ec86</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProcessorAssignment</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>902b739c5be8719892cadf9a10a8de97</anchor>
      <arglist>(const int i, const int p)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Array&lt; int &gt;</type>
      <name>getProcessorMapping</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>e33366de95c8570a8aa35983df4af8e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProcessorMapping</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>1489b2fbfc6c1496bb2d6844e03f31e0</anchor>
      <arglist>(const tbox::Array&lt; int &gt; &amp;mapping)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfLocalIndices</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>0a1c27cc5af80de34fd19ca3f119cf5b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; int &gt; &amp;</type>
      <name>getLocalIndices</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>d0df8e7bf98d3de655fa6cb82906f691</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSizeOfMappingArray</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>c3598cc98c889699391ceb34ca74e7e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMappingLocal</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>813e8cabf4e013d20fb79fca10ac9a42</anchor>
      <arglist>(const int i) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::RealBoxConstIterator</name>
    <filename>classSAMRAI_1_1hier_1_1RealBoxConstIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>RealBoxConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RealBoxConstIterator.html</anchorfile>
      <anchor>8be0a73cd264aeed1a0363d8926862e0</anchor>
      <arglist>(const BoxContainer &amp;mapped_boxes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RealBoxConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RealBoxConstIterator.html</anchorfile>
      <anchor>9b5a90e7187b73c1cf97526b505b3a73</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>RealBoxConstIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RealBoxConstIterator.html</anchorfile>
      <anchor>dac2d8519ecaa26ced83f99d9b3abdb7</anchor>
      <arglist>(const RealBoxConstIterator &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RealBoxConstIterator.html</anchorfile>
      <anchor>b386067bf1d55ae2e6971790d069e341</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Box *</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RealBoxConstIterator.html</anchorfile>
      <anchor>9ac157efe2629ef7293061d9e977047c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RealBoxConstIterator.html</anchorfile>
      <anchor>acd07722fedeb0fbaf448a2d4d252cab</anchor>
      <arglist>(const RealBoxConstIterator &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RealBoxConstIterator.html</anchorfile>
      <anchor>4dfd578a9dff879e613636680a9d73ec</anchor>
      <arglist>(const RealBoxConstIterator &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>RealBoxConstIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RealBoxConstIterator.html</anchorfile>
      <anchor>df7c45a36be4c2ad518e0a8856a6b220</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RealBoxConstIterator</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RealBoxConstIterator.html</anchorfile>
      <anchor>97af917333b36ee60b97fa183288fe4c</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RealBoxConstIterator.html</anchorfile>
      <anchor>b64b5fb8fdd612ab655f4f1832260b90</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::RefineOperator</name>
    <filename>classSAMRAI_1_1hier_1_1RefineOperator.html</filename>
    <member kind="function">
      <type></type>
      <name>RefineOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RefineOperator.html</anchorfile>
      <anchor>06f766e5e505ee926831885eb0f08268</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RefineOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RefineOperator.html</anchorfile>
      <anchor>abeac2ce2f803826b021e42a64ddeeb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RefineOperator.html</anchorfile>
      <anchor>179871a2379def0a0979981db947a011</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; &amp;var, const std::string &amp;op_name) const =0</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getOperatorName</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RefineOperator.html</anchorfile>
      <anchor>6d4f637d8b4d66328939848116cee4fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RefineOperator.html</anchorfile>
      <anchor>b591c0ffa0be747cd1a388f8cf1c1766</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RefineOperator.html</anchorfile>
      <anchor>2ec1b461868ada200e3f99e6705d5f60</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RefineOperator.html</anchorfile>
      <anchor>3e64cd2e5352276f7bef4d48eede3ab9</anchor>
      <arglist>(Patch &amp;fine, const Patch &amp;coarse, const int dst_component, const int src_component, const BoxOverlap &amp;fine_overlap, const IntVector &amp;ratio) const =0</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RefineOperator.html</anchorfile>
      <anchor>387a7f929f4d465586b0444880854c8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IntVector</type>
      <name>getMaxRefineOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RefineOperator.html</anchorfile>
      <anchor>b976d26e0e6521cf138381e1470eef6c</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::TimeInterpolateOperator</name>
    <filename>classSAMRAI_1_1hier_1_1TimeInterpolateOperator.html</filename>
    <member kind="function">
      <type></type>
      <name>TimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TimeInterpolateOperator.html</anchorfile>
      <anchor>a090bd32bfb82caa8c8c87a17d6c5855</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TimeInterpolateOperator.html</anchorfile>
      <anchor>ed802e22dd6935dc479d37617ada5845</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TimeInterpolateOperator.html</anchorfile>
      <anchor>d79f57060b834eb627872f42f41586b6</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; &amp;var, const std::string &amp;op_name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TimeInterpolateOperator.html</anchorfile>
      <anchor>56d7e5919ce08caca121d0038a4abdd4</anchor>
      <arglist>(PatchData &amp;dst_data, const Box &amp;where, const PatchData &amp;src_data_old, const PatchData &amp;src_data_new) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::TransferOperatorRegistry</name>
    <filename>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</filename>
    <member kind="function">
      <type></type>
      <name>TransferOperatorRegistry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>02bd78b2b2ceb8456b84ee5ed9d75bbb</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TransferOperatorRegistry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>9bf284f43b861d8f95ff0cf979d6b0f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>43d14dad771939ec6a02a907b14c823f</anchor>
      <arglist>(tbox::Pointer&lt; CoarsenOperator &gt; coarsen_op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addRefineOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>e4840536f9882901181b8500194bd97c</anchor>
      <arglist>(tbox::Pointer&lt; RefineOperator &gt; refine_op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>b2765566e7c5792e957dbb5e6ba34cab</anchor>
      <arglist>(tbox::Pointer&lt; TimeInterpolateOperator &gt; time_op)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; CoarsenOperator &gt;</type>
      <name>lookupCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>745e219b5b21ad88c3e1fd2c60aeceda</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; &amp;var, const std::string &amp;op_name)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; RefineOperator &gt;</type>
      <name>lookupRefineOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>d72d9f255b4fb91a890d36c1a74be4fa</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; &amp;var, const std::string &amp;op_name)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; TimeInterpolateOperator &gt;</type>
      <name>lookupTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>c348148ec306064949c65ad50e9c8ac1</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; &amp;var, const std::string &amp;op_name=&quot;STD_LINEAR_TIME_INTERPOLATE&quot;)</arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>getMaxTransferOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>fd62b2eba263446bb4c4ed9812f66e94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinTransferOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>5f4cd36f58411e1f745356c4c50792a4</anchor>
      <arglist>(const IntVector &amp;min_value)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>2f7ed73c46293fbee054809d5b474a24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>df4264e99ce8f4bd5a2af8e7dd2d7562</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual tbox::Pointer&lt; CoarsenOperator &gt;</type>
      <name>buildCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>c6a51f159a36807539149d7d743a36e1</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; &amp;var, const std::string &amp;op_name)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual tbox::Pointer&lt; RefineOperator &gt;</type>
      <name>buildRefineOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>0fb480bf6478394b5b36ee98c82b7ff8</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; &amp;var, const std::string &amp;op_name)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual tbox::Pointer&lt; TimeInterpolateOperator &gt;</type>
      <name>buildTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>4b795f2c9148273b1077c2e7b190494c</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; &amp;var, const std::string &amp;op_name)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::Transformation</name>
    <filename>classSAMRAI_1_1hier_1_1Transformation.html</filename>
    <member kind="enumvalue">
      <type>@</type>
      <name>NO_ROTATE</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd994f3dbe86d535c7abd3bcf6ff504c769</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>IUP_JUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd94eee4750aaba945ea5648528c30015aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>JUP_IDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9d357402568d939a11530a460e7231cda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>IDOWN_JDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd930221204b03e62b459ae66fe7851fe20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>JDOWN_IUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd91f1e4eb725bc33694360ded7e5f398df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>IUP_JUP_KUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9c6d6f096d892afa6f7d0e3274bc39d3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>KUP_IUP_JUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd927a7ecf7c0f62f563b18382062d7c31c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>JUP_KUP_IUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd95caeec06ed966f09395422b37bce99af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>IDOWN_KUP_JUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd93b5e0b4afe1193845980a2ae245c7ee9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>KUP_JUP_IDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9cf3b8571c2e75dbaabb760fb394b0594</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>JUP_IDOWN_KUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9efc9c984bfa6417c545b543dbed7ec20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>KDOWN_JUP_IUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd912c0af226a5610101e10372a27eadde2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>IUP_KDOWN_JUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9185d40f448cab608f5c0c18cc081fd8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>JUP_IUP_KDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9d63fa76da532c37c366baeb82c1f4c94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>KDOWN_IDOWN_JUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd91fe1c10d550e45192c73535ec5fef0f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>IDOWN_JUP_KDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9ed144171fee529d20b146fb672a67eec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>JUP_KDOWN_IDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9d1f5019addac1713b6af8b7e155a638b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>JDOWN_IUP_KUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd93ace1dd55679c22241e291f1fe9701ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>IUP_KUP_JDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd97f6b26b9fbc626d96fdfd856254e8174</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>KUP_JDOWN_IUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd95548f503d00568687c32f862276cb9de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>JDOWN_KUP_IDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9a3c1c7465dfb5a95ff9048ca27dd6c5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>IDOWN_JDOWN_KUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9560ba91a7f0c24dab3867738eb0c12b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>KUP_IDOWN_JDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9581c4ca3c787158c505d16ff9483ae7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>JDOWN_KDOWN_IUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9b5790d962fc18fc157b4ef0af6f7775b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>KDOWN_IUP_JDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd98bb7c8efbde8f14c7df7f9f5d4dce183</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>IUP_JDOWN_KDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd927fe45fe47c6ca8dfe1853beeb004b1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>JDOWN_IDOWN_KDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd92f6d1dfffa259f36676dac0b70096520</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>KDOWN_JDOWN_IDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9e94f563557c2548adead15c1655c6fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>IDOWN_KDOWN_JDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9b3797d4c1b1671da73e4dfbf5b2bd2da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>RotationIdentifier</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NO_ROTATE</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd994f3dbe86d535c7abd3bcf6ff504c769</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IUP_JUP</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd94eee4750aaba945ea5648528c30015aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUP_IDOWN</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9d357402568d939a11530a460e7231cda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDOWN_JDOWN</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd930221204b03e62b459ae66fe7851fe20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JDOWN_IUP</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd91f1e4eb725bc33694360ded7e5f398df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IUP_JUP_KUP</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9c6d6f096d892afa6f7d0e3274bc39d3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KUP_IUP_JUP</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd927a7ecf7c0f62f563b18382062d7c31c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUP_KUP_IUP</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd95caeec06ed966f09395422b37bce99af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDOWN_KUP_JUP</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd93b5e0b4afe1193845980a2ae245c7ee9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KUP_JUP_IDOWN</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9cf3b8571c2e75dbaabb760fb394b0594</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUP_IDOWN_KUP</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9efc9c984bfa6417c545b543dbed7ec20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KDOWN_JUP_IUP</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd912c0af226a5610101e10372a27eadde2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IUP_KDOWN_JUP</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9185d40f448cab608f5c0c18cc081fd8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUP_IUP_KDOWN</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9d63fa76da532c37c366baeb82c1f4c94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KDOWN_IDOWN_JUP</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd91fe1c10d550e45192c73535ec5fef0f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDOWN_JUP_KDOWN</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9ed144171fee529d20b146fb672a67eec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUP_KDOWN_IDOWN</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9d1f5019addac1713b6af8b7e155a638b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JDOWN_IUP_KUP</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd93ace1dd55679c22241e291f1fe9701ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IUP_KUP_JDOWN</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd97f6b26b9fbc626d96fdfd856254e8174</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KUP_JDOWN_IUP</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd95548f503d00568687c32f862276cb9de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JDOWN_KUP_IDOWN</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9a3c1c7465dfb5a95ff9048ca27dd6c5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDOWN_JDOWN_KUP</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9560ba91a7f0c24dab3867738eb0c12b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KUP_IDOWN_JDOWN</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9581c4ca3c787158c505d16ff9483ae7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JDOWN_KDOWN_IUP</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9b5790d962fc18fc157b4ef0af6f7775b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KDOWN_IUP_JDOWN</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd98bb7c8efbde8f14c7df7f9f5d4dce183</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IUP_JDOWN_KDOWN</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd927fe45fe47c6ca8dfe1853beeb004b1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JDOWN_IDOWN_KDOWN</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd92f6d1dfffa259f36676dac0b70096520</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KDOWN_JDOWN_IDOWN</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9e94f563557c2548adead15c1655c6fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDOWN_KDOWN_JDOWN</name>
      <anchor>1908f436f2e3bec8b6c0c24b3fcb8cd9b3797d4c1b1671da73e4dfbf5b2bd2da</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Transformation</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>e97630d3c99eb0dfbca234522f1fbc04</anchor>
      <arglist>(const RotationIdentifier rotation, const IntVector &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Transformation</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>6e7a1571289c643bf015f0d639157ac8</anchor>
      <arglist>(const IntVector &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Transformation</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2b4a92c14df0046226482934c655535</anchor>
      <arglist>(const Transformation &amp;copy_trans)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Transformation</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>e2b7ed7775da356777a1e9a4eb95b8fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RotationIdentifier</type>
      <name>getRotation</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>87f317d9868ccaeba8196899437df81c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getOffset</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>d3e94ad948e85d88c8cb61414f09c4f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>6dc86a372b95e4c055e283a756e902cf</anchor>
      <arglist>(Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>inverseTransform</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>e3bd6fefcd558557ac959acb32e61234</anchor>
      <arglist>(Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>Transformation &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>9c43431f8b2ca26fe92ee67c0beb2417</anchor>
      <arglist>(const Transformation &amp;rhs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RotationIdentifier</type>
      <name>getRotationIdentifier</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>085a372ba59eaee294059da2c25d0ea0</anchor>
      <arglist>(const tbox::Array&lt; std::string &gt; &amp;rotation_string, const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RotationIdentifier</type>
      <name>getReverseRotationIdentifier</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>fc624297c3d047abaa8a1c6e8653218e</anchor>
      <arglist>(const RotationIdentifier rotation, const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>calculateReverseShift</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>d7bbae1c51d6bf835977cb553ed3587a</anchor>
      <arglist>(IntVector &amp;back_shift, const IntVector &amp;shift, const RotationIdentifier rotation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>translateAndCopyData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>14b1bb5e7810af392908908ce4522b01</anchor>
      <arglist>(Patch &amp;dst_patch, const int dst_id, const Patch &amp;src_patch, const int src_id, const IntVector &amp;shift, const RotationIdentifier rotate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>translateAndFillData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>9454e02c6396dc1209d3e41e2add5b24</anchor>
      <arglist>(Patch &amp;dst_patch, const int dst_id, const Patch &amp;src_patch, const int src_id, const IntVector &amp;shift, const RotationIdentifier rotate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>rotateIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>f677b2d6121dc61a0971d01310e01f25</anchor>
      <arglist>(int *index, const tbox::Dimension &amp;dim, const RotationIdentifier rotation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>rotateIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>bc8417e3a169982072eae77eef2d6266</anchor>
      <arglist>(Index &amp;index, const RotationIdentifier rotation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::Variable</name>
    <filename>classSAMRAI_1_1hier_1_1Variable.html</filename>
    <member kind="function">
      <type></type>
      <name>Variable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Variable.html</anchorfile>
      <anchor>d3993b15991486908df50e15c3bee265</anchor>
      <arglist>(const std::string &amp;name, const tbox::Pointer&lt; PatchDataFactory &gt; factory)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Variable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Variable.html</anchorfile>
      <anchor>f545a6d303dd6347e0540e028d138f7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getInstanceIdentifier</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Variable.html</anchorfile>
      <anchor>487cbb85449adb48e6ff7f954c51681e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Variable.html</anchorfile>
      <anchor>23e2ff7de47935114a550b0b5c07fcd8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Variable.html</anchorfile>
      <anchor>ae5ca9bf7ed5db50adb102733d04a14b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Variable.html</anchorfile>
      <anchor>123739a01dc795982995374c29e423f8</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchDataFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Variable.html</anchorfile>
      <anchor>219891b14fa32cde6ca950b3e1908c9d</anchor>
      <arglist>(tbox::Pointer&lt; PatchDataFactory &gt; factory)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; PatchDataFactory &gt;</type>
      <name>getPatchDataFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Variable.html</anchorfile>
      <anchor>e2c38c6b8e12a11927bf48c3dae52abf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Variable.html</anchorfile>
      <anchor>ebf04c9bef54e51ad923fe4c740e9756</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getCurrentMaximumInstanceNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Variable.html</anchorfile>
      <anchor>ff4ded6352642b20ba46ab0cd58f8dc7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::VariableContext</name>
    <filename>classSAMRAI_1_1hier_1_1VariableContext.html</filename>
    <member kind="function">
      <type></type>
      <name>VariableContext</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableContext.html</anchorfile>
      <anchor>b0668bab65b05453a362ec5ca493ed06</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VariableContext</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableContext.html</anchorfile>
      <anchor>2b11f9915931733b8956bf2ed09581b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableContext.html</anchorfile>
      <anchor>c3ea7639097e03460c160b574a998e52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableContext.html</anchorfile>
      <anchor>80552ffc6a3c46ac0922515c30613393</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableContext.html</anchorfile>
      <anchor>3d50cef4e03a5124fccae00008b4a610</anchor>
      <arglist>(const VariableContext &amp;other) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getCurrentMaximumInstanceNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableContext.html</anchorfile>
      <anchor>3bc5712624e39460fc22f46cad6b21fc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::VariableDatabase</name>
    <filename>classSAMRAI_1_1hier_1_1VariableDatabase.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumberOfRegisteredPatchDataIndices</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>05ecaeda092ecfc101658b8594869535</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumberOfRegisteredVariableContexts</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>49ea8779be802d19e0420603607feabc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchDescriptor &gt;</type>
      <name>getPatchDescriptor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>f3b07a3f018343900d67fc68677b4139</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::VariableContext &gt;</type>
      <name>getContext</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>b32e1d1ba798f4d014b6cd7013c4a571</anchor>
      <arglist>(const std::string &amp;context_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkContextExists</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>46c18bb71caa286ded495356ebe81107</anchor>
      <arglist>(const std::string &amp;context_name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addVariable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>4d8fb3f42be4a6b429d133c31e9c7b85</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; variable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeVariable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>4e2fe8c1097c27fc382a34b532cdae17</anchor>
      <arglist>(const std::string &amp;variable_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::Variable &gt;</type>
      <name>getVariable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>d8bebaff0bcc17bd4c2b49cf0228f576</anchor>
      <arglist>(const std::string &amp;variable_name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkVariableExists</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>1db45e26269e68e34f369cadf97f2745</anchor>
      <arglist>(const std::string &amp;variable_name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>registerClonedPatchDataIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>91e0833ca200cd173153a516592903a1</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; variable, int old_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>registerPatchDataIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>d99006293a9e8f1eb0195d1970cd4071</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; variable, int data_id=idUndefined())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removePatchDataIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>7a995f788eb37b37c1f0fd4296b8a0d3</anchor>
      <arglist>(int data_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkVariablePatchDataIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>a525af973d25990488b7b719e193ba17</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; variable, int data_id) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkVariablePatchDataIndexType</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>a51f777387ed4961d2011c53db2a2cb1</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; variable, int data_id) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>registerVariableAndContext</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>cb14965253783851fc935e0a784d63db</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; variable, const tbox::Pointer&lt; hier::VariableContext &gt; context, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mapVariableAndContextToIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>ceff73efe17061f44b9b21f8ebc3387c</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; variable, const tbox::Pointer&lt; hier::VariableContext &gt; context) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>mapIndexToVariable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>ff04ad27154b2b2f3231fc3d4567c5fc</anchor>
      <arglist>(const int index, tbox::Pointer&lt; hier::Variable &gt; &amp;variable) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>mapIndexToVariableAndContext</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>b8052ebae79ab131f0605e8be48c274a</anchor>
      <arglist>(const int index, tbox::Pointer&lt; hier::Variable &gt; &amp;variable, tbox::Pointer&lt; hier::VariableContext &gt; &amp;context) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hier::ComponentSelector</type>
      <name>getPatchDataRestartTable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>bae7c1f7f39b60f80856834f367dbcd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isPatchDataRegisteredForRestart</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>041c7c290931ca5f473bddb704eb0605</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>registerPatchDataForRestart</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>f44cad8a0a6fc7acee5e747cfedf03eb</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unregisterPatchDataForRestart</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>bfaf2bfec146963ced3c842ca22bd796</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>683b5ff653d050d156954402940efbe7</anchor>
      <arglist>(std::ostream &amp;os=tbox::plog, bool print_only_user_defined_variables=true) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>registerInternalSAMRAIVariable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>c467b97558c83507f4cb8e16aa64ca88</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; variable, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeInternalSAMRAIVariablePatchDataIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>134a204772420bba428f05bf0bd430c8</anchor>
      <arglist>(int data_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VariableDatabase *</type>
      <name>getDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>53dede87024da9e337e1e7d2e2c9a59f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>VariableDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>c9055ddab13797c4d95d912e1d733ae7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~VariableDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>2848d636f1a7460df302af8ac2cbb094</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getVariableId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>aa3306318544e7df28a1b6f5f022b3b7</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerSingletonSubclassInstance</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>2e4abb487560c820b11fe5dd7379504f</anchor>
      <arglist>(hier::VariableDatabase *subclass_instance)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static int</type>
      <name>idUndefined</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>d7a395e9092ab9be82130f6285b5597e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>SAMRAI::math</name>
    <filename>namespaceSAMRAI_1_1math.html</filename>
    <class kind="class">SAMRAI::math::ArrayDataBasicOps</class>
    <class kind="class">SAMRAI::math::ArrayDataMiscellaneousOpsReal</class>
    <class kind="class">SAMRAI::math::ArrayDataNormOpsComplex</class>
    <class kind="class">SAMRAI::math::ArrayDataNormOpsInteger</class>
    <class kind="class">SAMRAI::math::ArrayDataNormOpsReal</class>
    <class kind="class">SAMRAI::math::HierarchyCellDataOpsComplex</class>
    <class kind="class">SAMRAI::math::HierarchyCellDataOpsInteger</class>
    <class kind="class">SAMRAI::math::HierarchyCellDataOpsReal</class>
    <class kind="class">SAMRAI::math::HierarchyDataOpsComplex</class>
    <class kind="class">SAMRAI::math::HierarchyDataOpsInteger</class>
    <class kind="class">SAMRAI::math::HierarchyDataOpsManager</class>
    <class kind="class">SAMRAI::math::HierarchyDataOpsReal</class>
    <class kind="class">SAMRAI::math::HierarchyEdgeDataOpsComplex</class>
    <class kind="class">SAMRAI::math::HierarchyEdgeDataOpsInteger</class>
    <class kind="class">SAMRAI::math::HierarchyEdgeDataOpsReal</class>
    <class kind="class">SAMRAI::math::HierarchyFaceDataOpsComplex</class>
    <class kind="class">SAMRAI::math::HierarchyFaceDataOpsInteger</class>
    <class kind="class">SAMRAI::math::HierarchyFaceDataOpsReal</class>
    <class kind="class">SAMRAI::math::HierarchyNodeDataOpsComplex</class>
    <class kind="class">SAMRAI::math::HierarchyNodeDataOpsInteger</class>
    <class kind="class">SAMRAI::math::HierarchyNodeDataOpsReal</class>
    <class kind="class">SAMRAI::math::HierarchySideDataOpsComplex</class>
    <class kind="class">SAMRAI::math::HierarchySideDataOpsInteger</class>
    <class kind="class">SAMRAI::math::HierarchySideDataOpsReal</class>
    <class kind="class">SAMRAI::math::PatchCellDataBasicOps</class>
    <class kind="class">SAMRAI::math::PatchCellDataMiscellaneousOpsReal</class>
    <class kind="class">SAMRAI::math::PatchCellDataNormOpsComplex</class>
    <class kind="class">SAMRAI::math::PatchCellDataNormOpsReal</class>
    <class kind="class">SAMRAI::math::PatchCellDataOpsComplex</class>
    <class kind="class">SAMRAI::math::PatchCellDataOpsInteger</class>
    <class kind="class">SAMRAI::math::PatchCellDataOpsReal</class>
    <class kind="class">SAMRAI::math::PatchEdgeDataBasicOps</class>
    <class kind="class">SAMRAI::math::PatchEdgeDataMiscellaneousOpsReal</class>
    <class kind="class">SAMRAI::math::PatchEdgeDataNormOpsComplex</class>
    <class kind="class">SAMRAI::math::PatchEdgeDataNormOpsReal</class>
    <class kind="class">SAMRAI::math::PatchEdgeDataOpsComplex</class>
    <class kind="class">SAMRAI::math::PatchEdgeDataOpsInteger</class>
    <class kind="class">SAMRAI::math::PatchEdgeDataOpsReal</class>
    <class kind="class">SAMRAI::math::PatchFaceDataBasicOps</class>
    <class kind="class">SAMRAI::math::PatchFaceDataMiscellaneousOpsReal</class>
    <class kind="class">SAMRAI::math::PatchFaceDataNormOpsComplex</class>
    <class kind="class">SAMRAI::math::PatchFaceDataNormOpsReal</class>
    <class kind="class">SAMRAI::math::PatchFaceDataOpsComplex</class>
    <class kind="class">SAMRAI::math::PatchFaceDataOpsInteger</class>
    <class kind="class">SAMRAI::math::PatchFaceDataOpsReal</class>
    <class kind="class">SAMRAI::math::PatchNodeDataBasicOps</class>
    <class kind="class">SAMRAI::math::PatchNodeDataMiscellaneousOpsReal</class>
    <class kind="class">SAMRAI::math::PatchNodeDataNormOpsComplex</class>
    <class kind="class">SAMRAI::math::PatchNodeDataNormOpsReal</class>
    <class kind="class">SAMRAI::math::PatchNodeDataOpsComplex</class>
    <class kind="class">SAMRAI::math::PatchNodeDataOpsInteger</class>
    <class kind="class">SAMRAI::math::PatchNodeDataOpsReal</class>
    <class kind="class">SAMRAI::math::PatchSideDataBasicOps</class>
    <class kind="class">SAMRAI::math::PatchSideDataMiscellaneousOpsReal</class>
    <class kind="class">SAMRAI::math::PatchSideDataNormOpsComplex</class>
    <class kind="class">SAMRAI::math::PatchSideDataNormOpsReal</class>
    <class kind="class">SAMRAI::math::PatchSideDataOpsComplex</class>
    <class kind="class">SAMRAI::math::PatchSideDataOpsInteger</class>
    <class kind="class">SAMRAI::math::PatchSideDataOpsReal</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::ArrayDataBasicOps</name>
    <filename>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>ArrayDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>3aa6fda37464162c18423bc5bd49b8f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>e0aae9e5c43f45141d885a3f9e670bd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>ec79438a2479c61d9dd5e5e7361eaf0f</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const TYPE &amp;alpha, const pdat::ArrayData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>fac75a9070c94b6384671f505932c545</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const pdat::ArrayData&lt; TYPE &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>8b89fe9667a41816251251dbcd7145f3</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const pdat::ArrayData&lt; TYPE &gt; &amp;src1, const pdat::ArrayData&lt; TYPE &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>35937c3f2c2b64ae28cb7524a15769e6</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const pdat::ArrayData&lt; TYPE &gt; &amp;src1, const pdat::ArrayData&lt; TYPE &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>9d8a7d51763e91b0b05fb5246063f97e</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const pdat::ArrayData&lt; TYPE &gt; &amp;src1, const pdat::ArrayData&lt; TYPE &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>c4816c3914a42a59492003235ce6f272</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const pdat::ArrayData&lt; TYPE &gt; &amp;src1, const pdat::ArrayData&lt; TYPE &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>7b8b1f127cb6c729a1d4d7e9cd70598e</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const pdat::ArrayData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>a4d172abc2f1e818349f0afa7bd1a2fd</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const TYPE &amp;alpha, const pdat::ArrayData&lt; TYPE &gt; &amp;src1, const TYPE &amp;beta, const pdat::ArrayData&lt; TYPE &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>4f34ec834350fe4dd805932763ca23b6</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const TYPE &amp;alpha, const pdat::ArrayData&lt; TYPE &gt; &amp;src1, const pdat::ArrayData&lt; TYPE &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>188a392261893f416d8e031940e3184d</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const TYPE &amp;alpha, const pdat::ArrayData&lt; TYPE &gt; &amp;src1, const pdat::ArrayData&lt; TYPE &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>a1a59bbfd5c4a751e20fbc359ad4eef1</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>8c029193d46a67849e1de0a728ce2606</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>57204902c02aaa28c158da28b8a2ea11</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const TYPE &amp;width, const TYPE &amp;low, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::ArrayDataMiscellaneousOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1ArrayDataMiscellaneousOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>ArrayDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>6770adfe661f9a08605112d0b5fff202</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>7f9eba157bf7035a05c68e3b6c67133b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPosWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a0a9ecbed98ff71397cf4f0bed9ab6d7</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data1, const pdat::ArrayData&lt; TYPE &gt; &amp;data2, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>7389bfd7b376d293f1a491164fdf458d</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data1, const pdat::ArrayData&lt; TYPE &gt; &amp;data2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalarWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>6c59d358c43a31a9f330a7d5658af7df</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const pdat::ArrayData&lt; TYPE &gt; &amp;src, const TYPE &amp;alpha, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>657ccee61dc426ca2fc72071ea1965f7</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const pdat::ArrayData&lt; TYPE &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocalWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>f16eda2b608f54f088b82e8e0201eb83</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const pdat::ArrayData&lt; TYPE &gt; &amp;src, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>57b7eb372eee76bf6d93e5c42525761e</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const pdat::ArrayData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>95db34a990c42bd68fc34c49f2af33bf</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;numer, const pdat::ArrayData&lt; TYPE &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>d8a6e669286929e7c6fc83fac3422d73</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;numer, const pdat::ArrayData&lt; TYPE &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::ArrayDataNormOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</filename>
    <member kind="function">
      <type></type>
      <name>ArrayDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>e355921eb84e2a279976affe6f85ac1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>d2e6ff26b891b5ef078bea99eb8d92f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>167896f79c65667b98bc9a34acb335f8</anchor>
      <arglist>(pdat::ArrayData&lt; double &gt; &amp;dst, const pdat::ArrayData&lt; dcomplex &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>842a32787f607b855f66e4d03dfca8c4</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1NormWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>631d63e379a177c361448f54824f516c</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>ba46043e6db8683e7a7b098df229265d</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2NormWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>735a50b0f4c5f85e88b02565950aba41</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>d9c38c1eac1d854be13961a7348f64f4</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2NormWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>2aa6dcd9cdd27b9b5e2b1756c3b9d589</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data, const pdat::ArrayData&lt; dcomplex &gt; &amp;wgt, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>37bb734dd12d18ec1d0336b66f6087d5</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data, const pdat::ArrayData&lt; dcomplex &gt; &amp;wgt, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNormWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>62b0bba2177c3b411d6077a21d6714aa</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>881dc4c975e406761db809c48eb02ffe</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dotWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>16ab684e1a85838e598d5f2251057d54</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data1, const pdat::ArrayData&lt; dcomplex &gt; &amp;data2, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>c168ac88115c27a4e8039caec60d1dc8</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data1, const pdat::ArrayData&lt; dcomplex &gt; &amp;data2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>388793edcf5ac25fa0ebbb1a30914013</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data, const pdat::ArrayData&lt; double &gt; &amp;vol, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::ArrayDataNormOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1ArrayDataNormOpsInteger.html</filename>
    <member kind="function">
      <type></type>
      <name>ArrayDataNormOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsInteger.html</anchorfile>
      <anchor>ad6371eff2719474b4481fa892790b63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayDataNormOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsInteger.html</anchorfile>
      <anchor>7b63ffa9971249316eb87e2032fbb986</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsInteger.html</anchorfile>
      <anchor>9e1fc79eeecfb568acff7371db39207b</anchor>
      <arglist>(pdat::ArrayData&lt; int &gt; &amp;dst, const pdat::ArrayData&lt; int &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::ArrayDataNormOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>ArrayDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>e9409b8563af30cc2ed23338f14b03f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>d79632c7cf0276317413834cad03116b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>068b6eb81519437a16dae491e415bddf</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>3274cfff39f1f175545872d0806cd113</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const pdat::ArrayData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1NormWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>28d763f581ab493273d49cb0315c21a1</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>9d62cc0f2f9a651f4df8337ecb97fcdd</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2NormWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>de299ef61abb119dd51c20f2379005fe</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>a4086fe1889b3c19fc288ffa9b513148</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2NormWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>91261a465460bf80fe72dd944837ed9d</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const pdat::ArrayData&lt; TYPE &gt; &amp;weight, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>6815c66f1ec5b627daf5655103903d7b</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const pdat::ArrayData&lt; TYPE &gt; &amp;weight, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNormWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>adc46a167f62bfb7aaf18da2bdc6fe4f</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>723e405079270a2c4ddeff499d49403e</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dotWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>ab008b036de47c1f19c35714b24f063a</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data1, const pdat::ArrayData&lt; TYPE &gt; &amp;data2, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>210d3cc567f6cc806b86a558b23c985c</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data1, const pdat::ArrayData&lt; TYPE &gt; &amp;data2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>8ba58ad04bef3cad9e357f0a3f59428b</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const pdat::ArrayData&lt; double &gt; &amp;vol, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyCellDataOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</filename>
    <base>SAMRAI::math::HierarchyDataOpsComplex</base>
    <member kind="function">
      <type></type>
      <name>HierarchyCellDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>ea5be41758f455658f3137dd921094b3</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyCellDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>cdd7b24cfffd1ed4070236cadbdf6ed3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>0818d56370f8da3ff4fce5e189b3aec0</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>cf119c0e76a0db0509040c938c73ed3a</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>8431fcff9b6a82e31ea7ed7854c57606</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>871b310bae1cc328f9379b44663151fb</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>2a1faea3a5ad8b823fbe8c6d0abe3435</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>7e9a6ee1e033bb6829e39ec92cc0e55b</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>62db407c8dbcc6db26240fb1dfddf710</anchor>
      <arglist>(const int data_id, const dcomplex &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>b9805481127fd535ffbe049b717d61a7</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>a06dda93d605487ff61dfe1f239419a0</anchor>
      <arglist>(const int dst_id, const int src_id, const dcomplex &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>a55ad336ce1e8ec018e3d0a7c67fb721</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>c68cc06a4613b52a3ac9a72aed138414</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>741f64dbc19e045f5930a1731b0280dc</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>4b29557677863ea9f2f00c377acbb982</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>aec5f7fcb3ec43d1f3df8f1790d9c907</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>90552e1817d5c344923957186d71258d</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const dcomplex &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>43a42439eecbfd6d1840f97db98cb634</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>e10e4cefc05b95d4bdc68e5bc6a59c52</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>ae8cba3aa0dc99113b0fedc462d202c7</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>dd6bb39f508eb7a8a3b118f54ed43d7a</anchor>
      <arglist>(const int data_id, const dcomplex &amp;width, const dcomplex &amp;low, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>597f2439f7b7c247e874e083b5eb8255</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>d536a315f55e836c925ed235ecb33bab</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>81d31f3100841f0ee525b50e0d6a7c3a</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>b5de805a6b6f375c17d76f89d7893702</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>095895c3f0e687bfe5e844a3992a003e</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>79b2d276308d7384dabdc639a7971b9b</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>048600fff2d354d13c28f3fbcf2a8cc2</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>3a594793ca1ed4f081f34a3b322de4e8</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>80bd9a38bf55e1c2adfbb884af8d8fa9</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>c16146e4fc379911370fd54413bc31ed</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyCellDataOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</filename>
    <base>SAMRAI::math::HierarchyDataOpsInteger</base>
    <member kind="function">
      <type></type>
      <name>HierarchyCellDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>c5f01ef947c71b9e745adccb71a33b03</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyCellDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>1059bdf2141750a2a091dbb1407f0e9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>e24a40c5b47b7cb751cd367eb68d8745</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>ffc3673891ad2ccd01e5a5879158536f</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>80e29c94055414b343f541edadd3d0a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>9373caa59833bd3a0d577f0999389bd6</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>f305a9583711fb1c7c106d7ab2142fb9</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>312548f391634cad2b32d93c18d88e15</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>b9d47099f73ff38f82eb6f0e5a15b7a1</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>69463dc3ce9dc601d9ec97bf103d2b45</anchor>
      <arglist>(const int data_id, const int &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>897332b8f04333c174ffbdcdf7acbebe</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>83b5929ff0d18a48bbaa10a76c216e44</anchor>
      <arglist>(const int dst_id, const int src_id, const int &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>803190e1c73fb2f5aa93b065749de436</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>787f6cb1b98a0b1c149d8bd3c1a09f08</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>f2b364ffbe5e4d71087970dcddae7468</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>55387446803de2497a4ab0feafe56b60</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>96b2fd55ef494a6db6aaf4c67a6640bf</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>e5d74026330c2d1c07f4badf4559b3e7</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>6f99e8d1ff29e7a4bf8eda61d19708e6</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>4c5834a8210ed56dea79c42e942c5b58</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>2ed32b52a22af9d3dc3037db9dc74028</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>6f383f8b78e6792848fbfa9d29e6751b</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>5350e78c376935e23e7b1774482fa6d4</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>24a0e84943d60e5d8af1b3a4608ac68b</anchor>
      <arglist>(const int data_id, const int &amp;width, const int &amp;low, const bool interior_only=true) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyCellDataOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::math::HierarchyDataOpsReal</base>
    <member kind="function">
      <type></type>
      <name>HierarchyCellDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>0f07b4f21c46cdf505d305c8aec002d1</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyCellDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>b6ce413720d5731ff96106653df1093a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>ec0e915a5203952a2da5a14bfaa06801</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>fc508e61eb4f3992aa9835c95a60de9e</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>bf1fc2104b4b7a7b151c55c64e2c6530</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>05576bcc7e573b739e695883ebcaa069</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>f404aaac55a897df062f14f02b89e4e3</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>292a7147dcd81cd449fd34c004db2071</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>1b71c0cc056639890ac60cc44febf9cb</anchor>
      <arglist>(const int data_id, const TYPE &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>5eec9fc96a62a37e3b76bffda676f726</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>670e3c3ebd0bcda53fc232650053b46d</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>37d786f97b6e6ab6d3febb63baa2675c</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>39eea7fbc6e4fa31c4e14063ba16a8d9</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>b74c2d72232ca7b57559c7a65095f9fe</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>e04e13e8f1e64d21bf029e1be0a0cc5b</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>01598a65e73ed43340475d3f8ce4995a</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>b7f9e7325e9fe8bf2a560d414598d6c3</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const TYPE &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>0751f897968ef220a7b4eb7c9d503350</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>c5ff0faf72fc958089af0be98fefcc09</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>c762aa6ea5a57f7b80042d8170035898</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>03e1430af508ca675c081be5a9fc97a3</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>5a68cc063155dc9539cbe69a3b7e5fa2</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>99a038274f20b031830a8af09539ac24</anchor>
      <arglist>(const int data_id, const TYPE &amp;width, const TYPE &amp;low, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>9d621d091fe03af83694b99aa32a2e45</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>f2c63f4142fb19ea2f3f78d2cc13d974</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>699151e51bb908969e962d44701fbadf</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>656ecef16133528f27ac9177150d1416</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>d76164338d682d97f00cdbafd905ab8f</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>add8eca2df5f3f3ebb1a5d14e6b4559c</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>dcbfe2d5c3adf350f28b44324bd002cd</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>71f9e85f57865559821818442b1f8af4</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>c4f563572e9022bf81dc2e3379edba65</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>c7a23ba341476ca11195486cd5b51822</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>c422ee040bb88756749ffca0bbe50273</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>9a40a675a44630e0cef43dd0170d9a2b</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>2a750ae5e92419f17493ee8c57f31f63</anchor>
      <arglist>(const int dst_id, const int src_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>32cce2e8a20c0c9c89fe865c5d4c1961</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>dfae1e84a29d8acc4cf7c64503733ddf</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyDataOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</filename>
    <member kind="function">
      <type></type>
      <name>HierarchyDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>9668d640824bc1e1555567d8a234df5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>8e85c8464a7c2ba2787f3465a970ad9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>73fa303ff42948f2e0732d7889aa6922</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>b5b99262b034399b559f5b6963770752</anchor>
      <arglist>(const int coarsest_level, const int finest_level)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>1507f5699d79d75f766ec4c9e491dc34</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>9fba42ce7a485811d0149b2de19a279e</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>0261002394c72244f147672536f3de1e</anchor>
      <arglist>(const int data1_id, const int data2_id) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>aca57dc127ff16a99f98506eb8a6d876</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>4782b5e097678f9ba916c98a0f6d9fd7</anchor>
      <arglist>(const int data_id, const dcomplex &amp;alpha, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>3c5bffecd50594b0dc2ae727a77c9809</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>b4708151227624e9d2860c28460afc3b</anchor>
      <arglist>(const int dst_id, const int src_id, const dcomplex &amp;alpha, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>78b21104370c52855160546f794b1e08</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>f03f680b2ed89acb8eb98fe4d8df37a0</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>a33dba7de727af0b96c1c6718b444ae9</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>5e38c68541c8c79e1e51d8cf003b9a1c</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>0bfb93c6f1133733281350c7d0150fd1</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>48097d6a5bd0d369ee3d947c5ac4ab41</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const dcomplex &amp;beta, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>83d43ff7c32d1c8416ba0c8337d6e2d8</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>ce1f0d9781ec971c72a54f7692dafb87</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>e2d8228bb8641b2264759f5f2796ea6a</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>95a15e5c9e0409b3099be70aea2ce7cf</anchor>
      <arglist>(const int data_id, const dcomplex &amp;width, const dcomplex &amp;low, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>4147e221b99a21931123f2d0d103f902</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>ed0b8ae7453823191a917390df9e5059</anchor>
      <arglist>(const int data_id, const int vol_id) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>b53822f24558d20cb280e6d7df828ed8</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>f91263891d1040204ffca952f7cd33fb</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>edb98c39109fe2953426dbf9d1a4e1e6</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>2eaa48a51410dc4ad4eae60e3dc62747</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>f5788238f93eed33ba10768dd46d05f9</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>86cc160405f9889d2a83cc4cc8a09300</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>07e3016bfdc7f9b7298f0606c027ded0</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyDataOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</filename>
    <member kind="function">
      <type></type>
      <name>HierarchyDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>1a5f1ad61fe9e2856270fec53f3b78d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>806328469023110671af16fb9e9dc4b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>ed13448439e4f3832c01f4b5085c18d0</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>551d4136279a72e57c55f3430bb40d88</anchor>
      <arglist>(const int coarsest_level, const int finest_level)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>b5409c1ad9b96898842065b6a12c8d6a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>513eba98d98e419b9cbad8f969bd05bc</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>4bc2db7cb5878fa4d69cf1447be8ed05</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>b3d6d1257c17a9ac57dbe809fecc3295</anchor>
      <arglist>(const int data1_id, const int data2_id) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>eab0841d0d64ec237bb8034dd8355eb1</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>2b970749aeb7a3a1a57f55bb9f0998ef</anchor>
      <arglist>(const int data_id, const int &amp;alpha, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>6d88ebecc7645a2682cc8a0b85a87490</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>8c756781366bd8e2ec1a4dc3adcc3119</anchor>
      <arglist>(const int dst_id, const int src_id, const int &amp;alpha, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>44815e37412050a89f2898cb264d5eff</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>8ad9834867fa6727ae36cd9f98c12fdc</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>e39ba07fc6c74fbbb40defea09afa066</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>3f386c6112537c4b9480d11242ba03f5</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>7403bf2d5dcc046e9d3b54db289fd5b4</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>aad11c424cb8ad1f501a36150c7b514a</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int &amp;beta, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>8d143e7152af79fe285e14c247cbbed7</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>4f03b844ea387e15155510e6b488907e</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>e4b69ba245e95b5f834fb28373b4e351</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>92bc1c8c58758f96954f15327c8ae600</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>29cc3a685d94c887e61f59a03bc3f69d</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>976d0b6244a08bd6e2d85cd92a46e3a9</anchor>
      <arglist>(const int data_id, const int &amp;width, const int &amp;low, const bool interior_only=true) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyDataOpsManager</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyDataOpsManager.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; HierarchyDataOpsReal&lt; double &gt; &gt;</type>
      <name>getOperationsDouble</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsManager.html</anchorfile>
      <anchor>3b79832de7c57ea1e65f3a770af61ab1</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;variable, tbox::Pointer&lt; hier::PatchHierarchy &gt; &amp;hierarchy, bool get_unique=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; HierarchyDataOpsReal&lt; float &gt; &gt;</type>
      <name>getOperationsFloat</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsManager.html</anchorfile>
      <anchor>7ce6baa0d8bb73c123681c90ea79489f</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;variable, tbox::Pointer&lt; hier::PatchHierarchy &gt; &amp;hierarchy, bool get_unique=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; HierarchyDataOpsComplex &gt;</type>
      <name>getOperationsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsManager.html</anchorfile>
      <anchor>ea9793802738da7efc78200498fe454e</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;variable, tbox::Pointer&lt; hier::PatchHierarchy &gt; &amp;hierarchy, bool get_unique=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; HierarchyDataOpsInteger &gt;</type>
      <name>getOperationsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsManager.html</anchorfile>
      <anchor>1bfb639474acd60af2c9fe1c0857f7fc</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;variable, tbox::Pointer&lt; hier::PatchHierarchy &gt; &amp;hierarchy, bool get_unique=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static HierarchyDataOpsManager *</type>
      <name>getManager</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsManager.html</anchorfile>
      <anchor>55d65e0b551df632187a5e8174460d74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>HierarchyDataOpsManager</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsManager.html</anchorfile>
      <anchor>533a8151e15ec56aeb25f5a39d45b375</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyDataOpsManager</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsManager.html</anchorfile>
      <anchor>001e38077eef041a47e8710c130b52c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerSingletonSubclassInstance</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsManager.html</anchorfile>
      <anchor>6c012263bd7e10b5516191246b21a301</anchor>
      <arglist>(HierarchyDataOpsManager *subclass_instance)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyDataOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>HierarchyDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>62016acd8dfcb05bdc7f69129b402f5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>db51d5595fca6fba3841f97dce151302</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>943a05258be041397506055a482927f4</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>e138dd5ec7f619eaa6b46a336d91fa94</anchor>
      <arglist>(const int coarsest_level, const int finest_level)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>764d21d7ac2d38dbff8050da1fe035cc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>055f2ef8165ae39a917b56569681a13d</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>16c21401703d3e5c761b9a03e0a833e0</anchor>
      <arglist>(const int data1_id, const int data2_id) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>66791a6f83d798f44e58632be9531d41</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>9be02459663668cb56c1a1e15591cbed</anchor>
      <arglist>(const int data_id, const TYPE &amp;alpha, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>fe254a71a100912b37f7321a53e9a322</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>73ffe18b3d3fe2ca11493e497fcac9ca</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>438ef9d84b28b35e04441f910d8449fd</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>1b5b2331b95e1286ed598e63140556b7</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>26d930f8248a04298237c9827ca72b9b</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>97b1ea8f12d88e88a4930b6b9be491a3</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>f955f2ae34ce1a2f4fe8479e6791c82a</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>7a823594269035242b0f3c8311886763</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const TYPE &amp;beta, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>dc9e473cbe6150fb8253524a7df0407a</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>414c9e6f005d0c5ba0c2504e48d473fa</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a51b4c8572140ee284df72c8afc61675</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>b7385dfcab65cb1fc394c9c66c619352</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>416e13613bad7a460500b1d50a503b97</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>23b0bf8d2b0e5fa8bab4c2da0efc76d2</anchor>
      <arglist>(const int data_id, const TYPE &amp;width, const TYPE &amp;low, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>4726b5e0411e9f3d02ec020db9a61eed</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>3fb6816a588887287b9e4b06f1fd19d6</anchor>
      <arglist>(const int data_id, const int vol_id) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>9583d674061f941661f638b95fbbf253</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>06862fe325c4a45389b9ec0729126ace</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>45e3de9513ba9f475666ed1ad9ea61de</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>0290fac2419583bbc9cd189b1240877b</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>6f2b1c36b8664ca9116c71171b599e93</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>f3eba019afa95cb6623aad933c38111d</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>4ddbf0a949560b7e5c3891cb18d312b9</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1, bool local_only=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>6e3361a32c7d89d8a99887890baf2832</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>46cf83522ff7ff38edbc6bf46f93e191</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>366e85258f0500b06f7a1f274df5b3bd</anchor>
      <arglist>(const int dst_id, const int src_id, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>77d42c995eb63320c162655986471e20</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>92e5b286d9da3d5b5fa9681a41d63df5</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyEdgeDataOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</filename>
    <base>SAMRAI::math::HierarchyDataOpsComplex</base>
    <member kind="function">
      <type></type>
      <name>HierarchyEdgeDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>b0045761e41499b2a4bbf75997bea715</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyEdgeDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>00fe32940f453aa973adfa8684f97ba0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>c521e418ed29b617fe7e8707452b381a</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>2e4fb8a1d21a157d41401b38ddf4d311</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>550eb1fbc84a2533eba0e0148faa9980</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>8fe7213d10c140ab00bcd7b53b710373</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>96948d42462d38a101efb6dae90a48aa</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>15f302f5b770452c1e1dbf62d1138885</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>9ee4587ca6fca930f815439a4d64fb5d</anchor>
      <arglist>(const int data_id, const dcomplex &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>830e011a7b589aa628b72ed9e564f7b5</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>987cf2b3776172bca5f002b45025caa9</anchor>
      <arglist>(const int dst_id, const int src_id, const dcomplex &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>b8a78224af6b162e3f6c04ec12782449</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>09f3f974ebb40643013600873750c382</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>eacf8eff84d37664cf49514a11c4947a</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>8a616460a0cd36010523c88cbe3b4124</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>f94d3faf85353dae3f86a6acfeff29cd</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>c9a63d5e946057cc88c1ca7d0683fc3a</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const dcomplex &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>f76d948c67f5c38780481e53e6e327c8</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>89f2d1cc5cadc122ad965e7942eb9eea</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>c104bd0ac8a9cf2bad649fd934d24a21</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>b125c2036f9ff2d50edbd53fb5501759</anchor>
      <arglist>(const int data_id, const dcomplex &amp;width, const dcomplex &amp;low, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>97d66b667cb141b0b33d8f2dec199d2a</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>200922c0bc662153b7ffcbb7557820e8</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>105e0d07e9a81682d3725e40aec05cee</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>eeb5ef1b7027497b2d6da2f3fb5f63ed</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>abe7053a5d012cfb5cddfe1627c797ac</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>23580d79f8f69c20ad73eb25fa75adfd</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>e80e3c51a81213e6e10e9e0770589845</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>1b51f40bfb3391978b540bab94a64d9b</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>e4e2c36f76d0bd49a18e5e04bca29cbf</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>5cf9e7e96272e901d40258f6e8b75ff1</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyEdgeDataOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</filename>
    <base>SAMRAI::math::HierarchyDataOpsInteger</base>
    <member kind="function">
      <type></type>
      <name>HierarchyEdgeDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>eaf1cb65cd4166170e7973ae7ba77eb7</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyEdgeDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>e31334452adf0c7a07df1f13133cd1e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>b5dcd69e170d60800200d0ef0334bcc2</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>aebbb9f0cdfafdfbe6d22952e289a772</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>75de5d8bb89ea508b144fca8b0f1e8d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>46f899a034401ffafaf4fd7ff0960b84</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>d4affb614e6a1b7780b1e745e26678a9</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>302a9a802b86c072ac7e64e95ac9e0e0</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>68b549cc68f130f13fd6b92a9f2f8e30</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>990662395854aa7b73f5e36f1ce9c071</anchor>
      <arglist>(const int data_id, const int &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>6b63320bace826535f52e8104d0cb993</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>65a2ab4a8225ed147a6277e78cc004fd</anchor>
      <arglist>(const int dst_id, const int src_id, const int &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>1fb1a1ef26910bac9df18caa3b487393</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>620477834aa129b933f70c9bbab9171c</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>15a9c90adaaad51d08dc0d564d9a881c</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>9fc733dd18e61cd8629355d06a4b38e8</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>f8e540aea1e1f006cc446ec5cb8862dc</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>c0f67aec9c8175a270ba032a7c408869</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>cf2971adbfd5c51618d7773066364802</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>70255d1878ac06973c88230fff33caa6</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>361c7f239ff6275f64115852e4dcb9a0</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>29556c205158c2145614c604a0d88ebc</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>e7d37039e572a2d1690fb01c51d62da4</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>a79293ec3ea7201cb8920df26df8d14f</anchor>
      <arglist>(const int data_id, const int &amp;width, const int &amp;low, const bool interior_only=true) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyEdgeDataOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::math::HierarchyDataOpsReal</base>
    <member kind="function">
      <type></type>
      <name>HierarchyEdgeDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>4e42180bdcfb5f82347106af892630ef</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyEdgeDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>56b632393ebb76e386c22a9ff38457d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>6bc673cc1dd626ba6844aceed065bfb5</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>8f2ba3c6c749d1a08a3b6654356ea396</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>880196cb62d73402aaf0ab247ee11811</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>3e3c21606d2676cd12fba8c8dcdcc331</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>bc75f2eb62956427a3bc68f0b9bcfb7d</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>6032f9ff0afa1fb8106fc27780bd6d33</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>748da3d09223a932b9710192999aebfe</anchor>
      <arglist>(const int data_id, const TYPE &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>5f5453985b8406094ee304a5b91b53b3</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a36ce4f72271c381db2b6f127248ad88</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>1e0fab900952c0b7d3e1fface1122416</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>8b0baf850f3e9fe0f1d2b4600be9c37e</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>061711444385dd57f5a9d603441cdb11</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>115c2ebfa6c38422d9d6d9b0f011db56</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>53c7edac78751f89ccd44fb7759f1806</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>910d175e3323666185692f66fbf24e78</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const TYPE &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>4087f128e64ae9a143cfff3851ae00ad</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>c504b5f0d42106b65992e598f390f518</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>e01260310cf666abc99cbd46fb6cc004</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>d41ef0afd281646db38b73a78560fb50</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>b2d8740d36ec9b550c26e8a2457b60c4</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a376463ec3c7ea53a884b18f3b604a9d</anchor>
      <arglist>(const int data_id, const TYPE &amp;width, const TYPE &amp;low, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>7678337dc68e22da07169d3ee6f25c3c</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>2f5c8b4f6fac08acf42bc9dbb25e69ef</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>35c947b2e55c1dd846c3a533da800280</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>b6201fe4ac6cfbf091f791fad0fae576</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>20cc0e41110d11d90c80870f7497a9db</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>0c1d84da1aaa0135fab3fcfb771b06e6</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>c066d6454e216ca7b95454fd76ed2d39</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>939b2956e5296ac9eba131acfa043be5</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>0114ada875d64ca26e603873f8c2069a</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>6d03e7e2494a5c793e89554a7cb3adfa</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>1a092009fce4d25ae5aff22c288ed273</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>72fb7be7f2ea141afa01f09ceaf0aba5</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>b74aa8aa5dcb73f99fef522e2d2ef5be</anchor>
      <arglist>(const int dst_id, const int src_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>64b31937b6a033c040c684c367a17a9c</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>691485a703b9204633febfe999ebe749</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyFaceDataOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</filename>
    <base>SAMRAI::math::HierarchyDataOpsComplex</base>
    <member kind="function">
      <type></type>
      <name>HierarchyFaceDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>c9e48dc116a70e374d98bedec394f643</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyFaceDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>f3031a48907de3bf9c4a1b72d3c135c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>a5b765e139766cd2c5f982f6b961d0e0</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>65e113bf169154abcb57a69a2f29c35e</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>e648b232bea84d0f8e17717c763e56fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>1b5799ea7e55c2f06f7f09c5016c1128</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>33f39522097a42718526034b7a1df174</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>2edd944374429a07cf842ae1ec7db377</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>0b4da36e22ebc74b13e46330da5cf883</anchor>
      <arglist>(const int data_id, const dcomplex &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>d77f97121dcdad8caa2eceba9fdb1cbc</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>0b679d54630377703e236ee40f1f628a</anchor>
      <arglist>(const int dst_id, const int src_id, const dcomplex &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>ccb07e46ba0d21d57a9760e451b8c2b8</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>99c48c6c713b52f61d5680677941861d</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>e7db02f299e82a32beef41670a93bb90</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>b1657c95eef60986629e69872d8ed648</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>023465dac1c96e6104496c77b9392c7e</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>3ea1e93da75bfa776c09b0c9ac4b5174</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const dcomplex &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>690b8b1fe07cae1760033f3b8aecbf5a</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>4af1e0298b59339de6b58ff85c6e6311</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>4688ce5714fee4a70ba6a06c084e61e4</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>3719bdcdc684e9ed55f4d261f4b47135</anchor>
      <arglist>(const int data_id, const dcomplex &amp;width, const dcomplex &amp;low, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>4328b9f4cc481815c77406d56b1c4b73</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>d7189e84bbc620b0ada448910f615ba3</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>856feebe4dd8953988cb8ce3659892b6</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>dccf38aa398c71335f4c706ea63e9c29</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>ed12370b8d5e75a52617be6fe16be6f3</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>44cc07ed0caf72c3f171f290f6572eb9</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>20a2b603300352e28d389a290010d24f</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>a975511e9133e3c88868f19f73550d5e</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>691233d618c151b2bbc07814dd0fcf7c</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>4758635b94f2a6271c3b301c4733485b</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyFaceDataOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</filename>
    <base>SAMRAI::math::HierarchyDataOpsInteger</base>
    <member kind="function">
      <type></type>
      <name>HierarchyFaceDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>d584c92c728c3f9696ae3e808716aaf9</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyFaceDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>8b3d9a778495e3f8cae5e5e4a80c0239</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>f21a4a8bac810e90f75f39e0301552fa</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>b8811b10719b8664cd8a85c6549bd778</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>afc5205d52f41d3bc2c811e897a94566</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>d95fba165f50aa12bf8fb8e6c158cfa1</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>6cfa19215d5c21dd04664bb92923f129</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>dc2b55658461b5bc0e0660f6bb9ae2df</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>8e17dbe820e27d13daab72c3f2df326c</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>6f3f4d78b547dfbbba0a5f498b8ecdb3</anchor>
      <arglist>(const int data_id, const int &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>cbe26693b0a5dd4d473d695901fba819</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>ad87daf4630b28a07ae22dea4669ba31</anchor>
      <arglist>(const int dst_id, const int src_id, const int &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>1bdc79e629044532b9de98baffedf77f</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>335940fd47996c787f0f9c8ca7b918c7</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>e5c479f8e52d35137dd2b9919e825c25</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>2df315dbc7f1c5045c4b331d5e55e671</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>c2d28e7f0d28763fafa05210655de3d8</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>8340f656138dcecb84dbb7b8b1905f73</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>e8397abe49f8370ed8c59dff31093d77</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>8390c8a492b6458cb26b11b03c180af5</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>b1542696c64d786696bb984eedde5e70</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>18e8e13fb48baa42856602fd961086ce</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>2d681a99353c2592768bddef4514c228</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>9cca9c0c1608dda2740e106b82075c2b</anchor>
      <arglist>(const int data_id, const int &amp;width, const int &amp;low, const bool interior_only=true) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyFaceDataOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::math::HierarchyDataOpsReal</base>
    <member kind="function">
      <type></type>
      <name>HierarchyFaceDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>aa8cec3798b22bc0c498893665a8f35f</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyFaceDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>e37966784d9ce1a4992c0c504045eee7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>60c8dcf877fcc1b8f1bbf01838069c23</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>7d5e68555a83856f249f289ccbd11354</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>61b355f8337a70efc82534acb83bd26f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>0d3fb7aba8cc20231eb45d47f2f9792b</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>882a531b1c2c42c6f675afa543f8eb65</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>7c687a67661458e269d455024c3ddead</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>b37becbc4d3ed614c9bd26a9be1cae0b</anchor>
      <arglist>(const int data_id, const TYPE &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>b39c31470b0a9da8819d14b4258f9654</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>300b7c2ac6cdd3a91f1e22f5220fbc79</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>344487b9080e8a4707ddffaac6e500c6</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>15b34e9667fd30e3f834cd54111e4cd4</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>6afa39fb7c250dcc7e602095155d741b</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a9d8a274554e8abb98ca0e27a1330ed6</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>47760d60386a63936c3b2c9a70e9c37a</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>1479624aa2f48a13db04c6caf100291d</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const TYPE &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>fa31bce600e9a3cfacaf3d1268ff9f1c</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>880b1dae27ad3489550901edab27938d</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>d8a965e863ca02d3bde03fcb3c45cce0</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>e37d8a4df44bcf469c2f423cbe44faad</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>7bab2eb4d6f2490d07a69f4cc1d9a798</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>d0edd33a63e8eacbe18f0d4b52ea6723</anchor>
      <arglist>(const int data_id, const TYPE &amp;width, const TYPE &amp;low, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>129bff82a12ad491d71075a61b7dcc2c</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>0c0111721d78c21bfb1d6c775ac70618</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>f8117525b3d81af33a07c909947082a8</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>addb86a27da0cd56c9b111213012196e</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>c90b6096bd98b9b3ef22a687af4cb989</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>85922ee201e9c184853cd07649305bee</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>3c3c1f6f87d55452e2b326f7235dcdb5</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a68b08d20e69cc824e40f43ccfa1d0d6</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>18e9c46b6a43aa5c71f9bb7e87232f58</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>51ce85fa8eb546e4a0d501c3b2d6924d</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>2dcd03b2d0c266d418225505fd7a209d</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>103e26b6e7541706af99f69dea0cc648</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>c3ad466c324dcd83cf8e47fd6b08cdb4</anchor>
      <arglist>(const int dst_id, const int src_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>405e53d6b1858a126a79c47e160a46ba</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>1b4da8e40a2fb8f5603a51fbd41bf693</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyNodeDataOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</filename>
    <base>SAMRAI::math::HierarchyDataOpsComplex</base>
    <member kind="function">
      <type></type>
      <name>HierarchyNodeDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>648dac23508bfc323f452ef4d506d0f4</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyNodeDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>1eb32ab635e615e1173617ad888ed7b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>e9464a1fa28e89d7d16806fd3048b75a</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>b874ca65d6429591b62db65ee1d9c97b</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>59d10bd1aa591f9016689d3e3d11a71f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>f0af81a05682c89938be7d5fab595a44</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>aea4f5875a760413df0519d43f6ae2a5</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>35590357ea02fbbc89fb1493dbd3a723</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>30ec3a3293e6bd0869b9e0202f70feb1</anchor>
      <arglist>(const int data_id, const dcomplex &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>ca14defc3db54abcb4097d694c40b143</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>0ab434d1c12565a60f607ff7655fcb84</anchor>
      <arglist>(const int dst_id, const int src_id, const dcomplex &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>5601cf40e5fdb80d303749df0ff6a987</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>23daf41f962c69524bd76675359dbba7</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>0a146326367c6c4fd35a1457e5fdcb1b</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>29bc8810d70289b8c526eb164081b4db</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>658467cbb76cf5e38ec36b657c904930</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>151251f7af7c604c666b130a0609d303</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const dcomplex &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>f470cfd00e113777ac22267668b54ba8</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>c3a0c8e452cfa49e29c5fb8ec222356a</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>3422191309156abce4893df00a08eb79</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>8864786a60ae553cc2aa6f09b301bd71</anchor>
      <arglist>(const int data_id, const dcomplex &amp;width, const dcomplex &amp;low, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>c7d7b5a078a2a4ac5816feae4e310e37</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>aa5384e012d740b96f9b1b806872a55d</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>6d03b815d511012a39ab16754dcf18d1</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>be3454ebffcdf0bf948a0cba4dd5e022</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>b3b1c758fcb390ac0eb09865d3248224</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>27600dfe34819b87eaf4e6e0ae0c7898</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>408996e9d4f9cb5aaceac843555e4f7e</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>0ae7b79ab26fb9fe7dea2eb16a11ea30</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>675b46aec374950ff538d7044f15a384</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>81569deeb91e43b180e5e2bc3452aa23</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyNodeDataOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</filename>
    <base>SAMRAI::math::HierarchyDataOpsInteger</base>
    <member kind="function">
      <type></type>
      <name>HierarchyNodeDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>f4b561622a14b98c69a3a9c0462d3487</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyNodeDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>741e8cd6f93bf27d7ed681dbb8357108</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>7c7f4961aaf7a87ba6ac3ee925c71fe9</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>3b04bb6b605fcf611357d293992c9833</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>02dfc06c0db9ce13de4067a84bf9ff04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>e357fa6fb845cdf73d361cd94703d966</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>6e3737e9386a1d0c8841984a36f6d19c</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>6f9a577326275b4b249aeb2549ba078e</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>10d554db9299972e9fed96e394c5d8bf</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>3f6aecb1c720bb4199de61cfea7c624c</anchor>
      <arglist>(const int data_id, const int &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>dc7d11b9836a6f614b8899d27bc8d34a</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>047e0282fb68f22a4122036f24b91647</anchor>
      <arglist>(const int dst_id, const int src_id, const int &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>0db7a2e663613eccc5be72f07577938d</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>7d358bd4fa8dcda3a4ac6f63ed6a2efb</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>4918d23d00cbaea8c5bdd630a8e8497d</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>1ee761c5aa49108db2b37119216b8851</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>a443697424cc0feaed88e7c5aa098cf3</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>9540c28ee4b730c35e0ea8c305f9db9e</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>5185403d800e17803e4f66908b424a4b</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>029167dd66cc2e0a997f766b3db4907d</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>0e424ac06fca7fa34a51a596d20c8c6f</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>07e57bd0791bd695c7b7cde296fd46a0</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>5d5f51c831b3a7f6256314352b0a6f10</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>33688a5d8cc81d462b97023f75b61f2c</anchor>
      <arglist>(const int data_id, const int &amp;width, const int &amp;low, const bool interior_only=true) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyNodeDataOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::math::HierarchyDataOpsReal</base>
    <member kind="function">
      <type></type>
      <name>HierarchyNodeDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>6ea53d7cdce85321a28853b9ea1a7997</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyNodeDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>9d06c68682c13cf9cf058b3296e008ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>de010d87c2b674a7468dc9867cb7e293</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>26ce727db592005be9ec9596a062b2de</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>cecac8570b5cc4398873f71bf32ae7cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>8038572622ac927840ddacd103e38ab1</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>de15c9f326756c4cf5f8eef66bc06d53</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>befd6e54432180cf17b3781b8ed8e2c9</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>7d2da71450b4aa4c9d61b3b9bc065bb9</anchor>
      <arglist>(const int data_id, const TYPE &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>10085b7c3f5807c271659c907ccf71ba</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>55c902949af51c9514c4650bbbd5a63e</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>3b68fe06edad80c184fcdff4bbaece2e</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>2d03173a8bdb94784a3f555bb8cb5333</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>58006a73c46018325e81ed6d9aac890d</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>d295be04f3c50f40062dba71615b2f62</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>943d0a6e58ad4a58adec174a1d59dade</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>041bf0b572aa600c7a44bcd9165b04f5</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const TYPE &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>9167a3a24213f27c312059f1897f566a</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>9f275a0807a9a6a213203c81e1f622ee</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>0e77ee1cfa10a230b114bedd9e4d3b63</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>7968121ef062a7ea30f23d055cb873a3</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>ab348fa4515587de743e20ca5c9759c8</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>83c9478a5e0f28791a6361c6f0aeb672</anchor>
      <arglist>(const int data_id, const TYPE &amp;width, const TYPE &amp;low, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>78b6abf5b7188dcc7aca394826d42552</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>b7de2f23b2b0593fac5706bc15b20a5e</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>e4fcccedbbdba820639ba5e2fb60682a</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>8500887ef3709a80ca4ebb2f50c468b6</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>3fc6c1a2491703a2dc6c9f482f62c3e0</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>feda73de9d60d6150fb14a88d5a48745</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>9990c02ac0fd25b199b096aa1009dde6</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>8bd7d7d65d612ffcc5543838562297a5</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>963220f901460a5bf72177615b9d0ff2</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>615e732f34bd5b4a8cae62a218425bb5</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a2150634e0f8ec914eaf949e325e7dc3</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>8b64232465692baae79e96234fbd6dfb</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>08cdb26b3da2a15e334203a110f90fc4</anchor>
      <arglist>(const int dst_id, const int src_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>6fe6b6e31fa8e4cbf7f4103ea56faf21</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>27f4d78700a7958aa00001e9d8891c88</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchySideDataOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</filename>
    <base>SAMRAI::math::HierarchyDataOpsComplex</base>
    <member kind="function">
      <type></type>
      <name>HierarchySideDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>30f703198cd8755cbc7a8fe111f3bd1a</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchySideDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>76c833797478cfbfa702cf1812ee84c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>f60aa6d3f3fe393a09f2572eb21036a7</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>6f389834a81966f95de589f8959d3c72</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>ae816408fc26f1ad40e12d3be61f11c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>4e7081b34b4539d416f255e81cd215b6</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>248bbb63c7d4122fadcf5ae9932ae549</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>d875b7b5833f1f5fd80b2a30bd444250</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>597da9eb709168033f5a4366908c0def</anchor>
      <arglist>(const int data_id, const dcomplex &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>fbcd1611a4f5113fcc484f84d8e2239d</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>7e63218a8549a5de04427f9a51bc3e96</anchor>
      <arglist>(const int dst_id, const int src_id, const dcomplex &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>64812a3af7cca5f50253ea4cad3a3d51</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>73550cefe0e732083d5252bb8de259b4</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>4a6c90bcf668748ad36091a65938bc35</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>0df029ebee18e19171b8897af826ea03</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>ea16d03646068744c73d4e8d9d5a7405</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>c307acce51e716809b15814b5a42ccf0</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const dcomplex &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>b3bfc7ac3bd7cbe3587c42784edde105</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>b6c4bd0ac3e7d83c6a1c51b3a4a117c0</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>bd8177b7cfe948690dbadf265dd918e0</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>9ec8b0f829b05f8c6a720ee799508c38</anchor>
      <arglist>(const int data_id, const dcomplex &amp;width, const dcomplex &amp;low, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>ef5fea626abc9b6d87400701f884be9b</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>26a21e563813cf858bd113b83b5ec2fc</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>68fe160fc9af6c2c6d51f5e4b42bf5fc</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>8afe07753904441862f7e6e653f0820a</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>a6b3a90331c16e29a9d1dc18d6340e5f</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>414f74b05925b70c829e13bb3447e086</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>d4e3483576a5e0cf680bb6dde28fac7b</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>e1664246d67eb2703a8a730ab9fc6aea</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>949e90850a826d5522c317c35329c5df</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>7dd5d907c2163a892439f7c557da2470</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchySideDataOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</filename>
    <base>SAMRAI::math::HierarchyDataOpsInteger</base>
    <member kind="function">
      <type></type>
      <name>HierarchySideDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>0ec2e37b3eb865ac452328e93a1d7694</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchySideDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>c262785bfae73658b39df2818c50dd1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>3f3c94c674ed3444872859ca893cf415</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>a58d6dae93891707bc9838520eb48492</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>b04e4a71dcf22b6d1a73742613454f24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>e032921986586b1067d4c555d4ab5b0d</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>7b767edab7f5bc40ae496a1971352663</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>bcdcbfbfc08bdf73e3ff1527b6955638</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>a3f8eb8677a9a8e14db7e8074ee62491</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>f69194fa49d20f7b813d0dec22add4f8</anchor>
      <arglist>(const int data_id, const int &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>4d08330a0417d535090d8aebefc7de97</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>03c1cfd83f1071819f36d31e467fc92f</anchor>
      <arglist>(const int dst_id, const int src_id, const int &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>8ca84f67444ee4dae35097838d49ace8</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>4a7bcbc9e9dd4fcf73beefb8ac9f6e82</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>a0c0da13d04e29e283f736271e88e2ca</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>e9aa8b3fbce48555ccf125fa102a64e2</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>f406ae36493facd2d8b8a50bd6d45ab5</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>62863d9d7d6253047d1ecd99567f83b7</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>0455c1430a0f5af9cb4c0ccc98a7e90f</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>d52059890d5f758818512d2b10e543c3</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>21ae9847fa81ef12aaf032da2997f6e7</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>d8516d52e9336c5f78b585d0d51c35d5</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>3a9df003c86b7180dbf745d335c8174b</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>5c9c3c5a7d2de1898076352d2bd81d4e</anchor>
      <arglist>(const int data_id, const int &amp;width, const int &amp;low, const bool interior_only=true) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchySideDataOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::math::HierarchyDataOpsReal</base>
    <member kind="function">
      <type></type>
      <name>HierarchySideDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>c3d058db78aa2b5b24459e3ec5e00dbe</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchySideDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>9db43d56fbab58a07c232a51d871a5d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>7bca67094e9f1bde1aaac01482e4e85a</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>438b424420a7c210a15c7ebabe7e425a</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>f4ca01d11a59dddd02a78802bebd55ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>43f37257c5844f70f817106414e6dfa5</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>3392ac56008e7b8b53f12fb60334f9b5</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>b26a3bdc177c3f3fad1e1dc20c8a26ce</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>880224ceb77bcbae9671f2799ec1a50b</anchor>
      <arglist>(const int data_id, const TYPE &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>4f5a5c3d5d786b30be74f6fb0004058f</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>820c5422738067c395d4d0019715cd91</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>f07ae3322121f0515ba1c1abb044cd47</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>f793477066ede09b9d5ad5e96059a5fd</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>ecd3b30b005bef7e9e21737afb69209c</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>660ba4ded02464195d5b8385d39477af</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>4bf6277112165dbc50d75c87c06cf2fa</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>f8abaeb644e9a94710541330e773c730</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const TYPE &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>7795b8a8507b4ec66c56355584fe976d</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>ece043feb1dbbc38b6263490e1e85452</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>eb18362e2b01bf7aec3f3436c6d35cb2</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>ae236833b627e5835be60d94251a1712</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>faa94af9eab1ddaa3199aca09db73571</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>88b9507676484e3168ce4968a507168e</anchor>
      <arglist>(const int data_id, const TYPE &amp;width, const TYPE &amp;low, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>3b7ad2befdaa9dc47354120af87938f7</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>8013dbe83fcd8b1ccb81ee297697db45</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>fd53a024e64da50fcda328c38225b503</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>d0193e34e6e25d30406938736ec0e4ca</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>dc56299a8362ff1da777df74f72da23c</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>3be172f170c2739bab54bb67320d3a0a</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>db879b4b0117db33dd18f87fb12875e7</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>844be03b1c0cd6d7254d364bad74d395</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>5b58318ebb26df44f576ef95f5c5181b</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>9dd7171bc16162e5fb5de4ef41ddbc6e</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>b17f28aa59e1066cac6905a62d1bf40a</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>979ed98a442ce84a6111ca602b2d6eff</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>c6b6cb150bc5072e4dd8b72a5eb97cd8</anchor>
      <arglist>(const int dst_id, const int src_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>35e529dc576bca112618330ec7483519</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>4b18f043a0e13974023060b87e6bfae1</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchCellDataBasicOps</name>
    <filename>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchCellDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>02110542f8fcece6bb8e33eb92a0158c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchCellDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>2f91d517d75e4aefd7c65a468c3b5a98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>b0f3852c545946150f6dd020a4aa93d8</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>1b41647c4b124d7cd98296dca1e4e6b0</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>4480f1b40b837c4bf61a6b6be32489b7</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>fc408454f858832f5fcdc205c4a9ba9e</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>dc80784465a5d8e5c28e66d5d3b4e238</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>7075b1527227223ccd2affac844102fc</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>c6a5d8cb6ce7f8e210396b58f8ab9d56</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>f3527df519986291d015108f8088c326</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src1, const TYPE &amp;beta, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>9222db18384c9114056b2c5c28c07759</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>6fea90e8839154a258d69068a49ca43c</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>2ba7c7b0788ca679cf8cbc4d7ab47e62</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>10b810e1da199ac99e8fe2250f40d3bb</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>7672c77feb22483e2ce2b2a226726d25</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;width, const TYPE &amp;low, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchCellDataMiscellaneousOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchCellDataMiscellaneousOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchCellDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>715b530d827da1ecd5af24018f592604</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchCellDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>434bd483516b4d40c17b88266af0c83c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>957d77fec2982f21365dcb2e1e05124f</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>1f68575aacee047b6f035e86d90433ee</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>6e8ba722457ca0006b2e1fe108de0668</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>ae9517ad44233a619f3c6295ba84e3f5</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;numer, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>1e5ad0fda012c2957a690ad355eb215f</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;numer, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchCellDataNormOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchCellDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>bd7fcaf62e3c79d076227a68307d8b9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchCellDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>81c48d087439e1c9c8aff99121eed109</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>142a1ad0c5e430b05a5be9f60fb4b8c1</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>43bfc92b837c9d086263cabb17a92ac7</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>4fc7e3fb70885f6d51ba598d5eee34f6</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>32e029455908a5ce29bded2c25819918</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>7168d5ed469a795d3b4b8eb0ff566dcd</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>d1d5d9e542dedf9572b43d698a4159a5</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>30961741efdd9e456bf44385eafd859b</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>9bc19f80fd0c7723413d5cba6399860f</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>6166d03c9f9df8aa5f030a9c71cb0b07</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>54ce1a44c1758a2d97a11f0213cc0296</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>fc0e3da53d250f8ca546ace1f55e4cc5</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; vol) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchCellDataNormOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchCellDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>26bfcb21391534a40a0631558e4e2934</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchCellDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>3b1dca997448b1da34a8f7169e9c8639</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>4f633e317c64af53c8498a0c9e1facd8</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>87e7c4e70df474fe533e70c12f5caf5b</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>f0d5bfbd099d60263473d87f66ce861d</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>79fbad2693921a38305e9b98bbde0ed4</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>96b08b38c1ff82531650c8275ffa9766</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>46b28f177bc2f2b233a1bf4e9dea5431</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>be83bf02e7bb182e170e8a470e6f4f2e</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>df6d3a3a78f3d3482ea86e0e1e943daa</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>253bd769f4628403e6f4acd7e4ef7ca9</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>6c025ebe9f6fb440c651a80da79aa8a0</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>c21f84dc236899084268272466180c09</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; vol) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchCellDataOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1PatchCellDataOpsComplex.html</filename>
    <base>SAMRAI::math::PatchCellDataBasicOps</base>
    <base>SAMRAI::math::PatchCellDataNormOpsComplex</base>
    <member kind="function">
      <type></type>
      <name>PatchCellDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsComplex.html</anchorfile>
      <anchor>b3508a8599f178368cce031d32bdab58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchCellDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsComplex.html</anchorfile>
      <anchor>f4abeccb1cd0a37910177bbb8a558343</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsComplex.html</anchorfile>
      <anchor>fe484454a194991fe40b49e79be56282</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsComplex.html</anchorfile>
      <anchor>2d50dd667776911debf4d238d6a46b32</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsComplex.html</anchorfile>
      <anchor>9b2449a4960bf81072d0f865df40fce6</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsComplex.html</anchorfile>
      <anchor>9f34705bcab0673fd426484f88160f49</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;dst, const dcomplex &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchCellDataOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1PatchCellDataOpsInteger.html</filename>
    <base>SAMRAI::math::PatchCellDataBasicOps&lt; int &gt;</base>
    <member kind="function">
      <type></type>
      <name>PatchCellDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsInteger.html</anchorfile>
      <anchor>9b47b4b9fd8c88040cea9b764a4f1496</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchCellDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsInteger.html</anchorfile>
      <anchor>8a5dbd67049272536b5b6530606a602c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsInteger.html</anchorfile>
      <anchor>ddfb49b90f332c44030749da5ce111cd</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; int &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsInteger.html</anchorfile>
      <anchor>ec8ce2dc21162cda65c25e5df8d03724</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; int &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; int &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsInteger.html</anchorfile>
      <anchor>f95d03633fd61c12020b002837724aea</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsInteger.html</anchorfile>
      <anchor>c48c6abb55b2c5d4b6fb8ac749d2b07f</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; int &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsInteger.html</anchorfile>
      <anchor>90823c1fc75266e81b3232096b376f23</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; int &gt; &gt; &amp;dst, const int &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsInteger.html</anchorfile>
      <anchor>c656d0dca2dd57bf30eaccba9e6150a8</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; int &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; int &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchCellDataOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchCellDataOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::math::PatchCellDataBasicOps</base>
    <base>SAMRAI::math::PatchCellDataMiscellaneousOpsReal</base>
    <base>SAMRAI::math::PatchCellDataNormOpsReal</base>
    <member kind="function">
      <type></type>
      <name>PatchCellDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsReal.html</anchorfile>
      <anchor>528a960e4428e88a80eb335512d7f56f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchCellDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsReal.html</anchorfile>
      <anchor>5233b4e8785462d7492afb6697dd5f80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsReal.html</anchorfile>
      <anchor>9e820bce2010a2c0563c5227a0f261fb</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsReal.html</anchorfile>
      <anchor>c396f44ee77da05eb2a126422921a350</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsReal.html</anchorfile>
      <anchor>dfbaa11f795ab61bd45318418253e335</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsReal.html</anchorfile>
      <anchor>97f614aee86601b494ed24a7ca91778b</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchEdgeDataBasicOps</name>
    <filename>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchEdgeDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>995df7932edb34b548fe3a082d2dda33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchEdgeDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>3e1f89952ad674d3dd778428a1252129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>4561ff0a56e31b5fef74f50272bd202b</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>dee5e9dc5e71d4abfe76b1b6053e9e69</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>5b47985e1f47527ebad31a818d253def</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>99ed1ceb532e18bf55699feb28270297</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>7ed4ee2e57ed6e74bcaa0ba725d67f75</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>c9ab1399142701c0e7c5de18f617387d</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>51aad7317b0333a1025353ecde8ff519</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>72491b9ba1ff0998c842b664ee38fb1d</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src1, const TYPE &amp;beta, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>e070b9ecb715a85ec76678e0dbe0d34e</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>0d48b6283700f50baa297d7f766432c8</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>59b344426354d775f7aaf1bd525cd60d</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>7a8090bc7d764af8b323eb14da2a9b9d</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>2a042e06abab5699cd5fb8df934e5801</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;width, const TYPE &amp;low, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchEdgeDataMiscellaneousOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchEdgeDataMiscellaneousOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchEdgeDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>6a712081f8b1a7011da4c4dfb157d54d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchEdgeDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>484bfd6c5e0c4a682056f97053e936a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>ceece489c1405d400bc1c30c220166d9</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>0eb3dcbbe5bf805fb6545b6758b7c352</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>6e1f01d46b9a3a273412f5702afd2ce5</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>966010a3cda354121cd2ea05d58b886e</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;numer, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>b1bb65ff51344c127b23049c798f7b6b</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;numer, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchEdgeDataNormOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchEdgeDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>e0bd396124241f46fbeec62f75051df2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchEdgeDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>71e821c957635d98b97795d1f6f21931</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>514e69172503dcd1813e42a1b6877a86</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>f5507f33322c87b902f5395d0e418052</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>77c157491524389e4b904f3030241937</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>360210ba4078670a0a332760c2a9f9c8</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>3f699681bc120471d7ce87d553418fd3</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>12ffc121dd45e595d8b17ba342459a73</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>8364521acec113447a8c01136c320d49</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>47c8b1340b3631e738e4b713db2eab15</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>c69ee36b167690c2bfe74946de253eb1</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>489864ce98af8dd9422307ea3879c6e4</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>a728dee4aa323c6e36494cfab0282ea4</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; vol) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchEdgeDataNormOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchEdgeDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>751b6a708a17da4adfc109efafaec493</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchEdgeDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>18915ce8202df687bdcd17d3307b209b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>4f81ad2aa8f09b48943b74b5e3ee6f53</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>32c34bd0e3939be0d674c4bb2773c924</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>82b4a7da573110f42ac77b820185d303</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>31fca1c450ab315de6b2088732dcdb43</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>24bd950ec128a702b966c63ff9732ded</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>297aa12a7a9a3475b830aa27ee2d69d8</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>b5ea82f27c9497cf54f0905594e1095e</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>68361f381ef7a5eb40f9fd2f8560de65</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>dfb70cb2e12c9601b41d20df52e3d23f</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>0b99d93b6bdfbebf758d7d502441e253</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>1c89d43badfa2541c55c7d25399fe405</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; vol) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchEdgeDataOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1PatchEdgeDataOpsComplex.html</filename>
    <base>SAMRAI::math::PatchEdgeDataBasicOps</base>
    <base>SAMRAI::math::PatchEdgeDataNormOpsComplex</base>
    <member kind="function">
      <type></type>
      <name>PatchEdgeDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsComplex.html</anchorfile>
      <anchor>88af9a82d45c06ddd69bfbab3428ff66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchEdgeDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsComplex.html</anchorfile>
      <anchor>9ee75ad8624d8db13710261c482e1fff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsComplex.html</anchorfile>
      <anchor>f33ab0bd0aa20dfc35169cf1cd4265bf</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsComplex.html</anchorfile>
      <anchor>ff8fddeae6f193c380c2a000fa928615</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsComplex.html</anchorfile>
      <anchor>e670ad70d7812cd7d355b73154873136</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsComplex.html</anchorfile>
      <anchor>ee886bc716e113b613121e7cc432fd2d</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;dst, const dcomplex &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchEdgeDataOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1PatchEdgeDataOpsInteger.html</filename>
    <base>SAMRAI::math::PatchEdgeDataBasicOps&lt; int &gt;</base>
    <member kind="function">
      <type></type>
      <name>PatchEdgeDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsInteger.html</anchorfile>
      <anchor>9c3918f8b873fc62be23c33685b78080</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchEdgeDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsInteger.html</anchorfile>
      <anchor>d83cd479182182c103f1beeddc0f3f10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsInteger.html</anchorfile>
      <anchor>529c4bb4ca11f068fae095bce49100dc</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; int &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsInteger.html</anchorfile>
      <anchor>64b5ab64de9a5bec8b348aedf5b80a4e</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; int &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; int &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsInteger.html</anchorfile>
      <anchor>28933381e53cbabb27590fe502b5356b</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsInteger.html</anchorfile>
      <anchor>fbe4b93c93d55e067d8729995f9fdb7a</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; int &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsInteger.html</anchorfile>
      <anchor>18cefbe315bae4425536567f6880235c</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; int &gt; &gt; &amp;dst, const int &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsInteger.html</anchorfile>
      <anchor>3b769dfb1f4affffd440a8207a68e98e</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; int &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; int &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchEdgeDataOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchEdgeDataOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::math::PatchEdgeDataBasicOps</base>
    <base>SAMRAI::math::PatchEdgeDataMiscellaneousOpsReal</base>
    <base>SAMRAI::math::PatchEdgeDataNormOpsReal</base>
    <member kind="function">
      <type></type>
      <name>PatchEdgeDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsReal.html</anchorfile>
      <anchor>1c782a6cf38a4d1e0251977be6da937e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchEdgeDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsReal.html</anchorfile>
      <anchor>2fc3d84c46436b4328c89d3092ad1aab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsReal.html</anchorfile>
      <anchor>717bf1bad2733e9a8eb9424ec1e3aeff</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsReal.html</anchorfile>
      <anchor>db1720ecc46f164f57c8418c3a010928</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsReal.html</anchorfile>
      <anchor>d6640397db898982e42886591d8e3fa5</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsReal.html</anchorfile>
      <anchor>0bba9b0ff9dc13c006fd5a96a218ae40</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchFaceDataBasicOps</name>
    <filename>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchFaceDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>8c36506a25c8ee5b2f089e05fa63a2b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchFaceDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>335d6395bd4c6895d7953262482acd59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>550ffb2ec19508e5a73ce9d5649b8bac</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>7176312e034111965e049f15c49fd549</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>09d59304e7fbb8966891e869d7b46ab2</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>b35d058a517eb220321016126f9db682</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>50941c9c9c42acd1223f3d36da0adb2a</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>3240483b59492dac91bc6927d9e28102</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>f30730eb642544a6d022e58b3e54d0bf</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>d962fad3eda6e2d83f17333635a54c12</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src1, const TYPE &amp;beta, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>a01026678598820995c6055e0d41ae50</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>02f4ccc3ea69e2bcdcd31696e95e6e03</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>7daabbfc4487c9c6698a129897eb78d7</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>147095a4ffafc73f90bded927ff677f8</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>599718d7a218e40d76bef82ba9ad81cc</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;width, const TYPE &amp;low, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchFaceDataMiscellaneousOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchFaceDataMiscellaneousOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchFaceDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>6e4ecc2fd2fa7a02c99addef252a0b50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchFaceDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>14710307414c201e24bc5c7571eff981</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>b13b2a45be6d10604fdc22d20b2a6719</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>3f830166b579c0b18ec4d29805c21a8c</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>3136d8d9bf77e81bec46a845b421755c</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>3e4f04b08ae7b2f8765d192e9c90f9af</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;numer, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>89dee993934c929bd91d01b5e28d7336</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;numer, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchFaceDataNormOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchFaceDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>70ed3c785329074b5370601d7a1931b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchFaceDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>bb29350b3d11f74edaeb8b27f184100f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>578a13596a7f6d0e5003c498f20a73a9</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>cf2c1a0c963bcfd5f6bcbb9a0e9b8def</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>7cc0513b9b970ba514160599dff6e9e6</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>02a0361ba84a570c4b6ec093c05dcc35</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>f205916ae4b65689353e9537700649bf</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>a1cd13c94aa6b0d6f5627ea55c5261ea</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>d50438d52ac4f10fe877013d2ab1d2b9</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>13ebceaed22ef5596b13192d4065e1f6</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>0cf6e68c72d20574a14b7da3d1966e8b</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>26f41b9ba1db878c535810dad55fd51b</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>1d159ef21a49ba6e7e696f7c37f941be</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; vol) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchFaceDataNormOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchFaceDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>c82de6dafff45c1c45cceccd32fd692b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchFaceDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>a1a9dbffec62c399cd3812514e691c52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>d4ed51568ffc9932466c54f2ae77a17e</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>66291d7944ad6c6cb90d4a3967855220</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>b922ed48159b95fd1cda2d2a1d4431e2</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>9563c39e88c8c41741af693e5ac451bd</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>c0181afa1a9eda49eac450d230f1cc53</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>f8239f750d0fc1a31167debf0d3e0d53</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>3645e4b50c853029a68564f34fa03b6c</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>80f76ab3fd16cda8ca78594d64c2b201</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>36081f04035c035d582697c4e64e66ea</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>2cf07b99f77e3c42d092a73b1433b100</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>c0e1e913a8f8c0d13bf519cee3ae0044</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; vol) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchFaceDataOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1PatchFaceDataOpsComplex.html</filename>
    <base>SAMRAI::math::PatchFaceDataBasicOps</base>
    <base>SAMRAI::math::PatchFaceDataNormOpsComplex</base>
    <member kind="function">
      <type></type>
      <name>PatchFaceDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsComplex.html</anchorfile>
      <anchor>99fc10ad7b15d9914d8b7fc873b59765</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchFaceDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsComplex.html</anchorfile>
      <anchor>00e288ee709df2c6c52d06ba4589000a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsComplex.html</anchorfile>
      <anchor>ff188b1d0c0f1385f783b06f785b1c59</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsComplex.html</anchorfile>
      <anchor>3757468d2271e60d0e0256bcb12f7688</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsComplex.html</anchorfile>
      <anchor>a44ed360b1df8fcb83808dcedce65d5a</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsComplex.html</anchorfile>
      <anchor>6ca7f45f2adb7f9f9e5a27145924da86</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;dst, const dcomplex &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchFaceDataOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1PatchFaceDataOpsInteger.html</filename>
    <base>SAMRAI::math::PatchFaceDataBasicOps&lt; int &gt;</base>
    <member kind="function">
      <type></type>
      <name>PatchFaceDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsInteger.html</anchorfile>
      <anchor>afca3fa4c24737d3a7d17b8443e0cb31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchFaceDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsInteger.html</anchorfile>
      <anchor>64985a1891a54a6738f4a8fbc3462538</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsInteger.html</anchorfile>
      <anchor>e19c3782034848502de9d4f0a1c55dc0</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; int &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsInteger.html</anchorfile>
      <anchor>e765f4eed686f488f22ccdf4aac12309</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; int &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; int &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsInteger.html</anchorfile>
      <anchor>02dd5c5ebe8a66b0840cd5c3c23c66ff</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsInteger.html</anchorfile>
      <anchor>6258d14763a517bfe42547ae2e8318a3</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; int &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsInteger.html</anchorfile>
      <anchor>59415beb930e4b4f281f5ff8c886fdb1</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; int &gt; &gt; &amp;dst, const int &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsInteger.html</anchorfile>
      <anchor>c8308e6fc7149dbd9580f1e9df65558f</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; int &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; int &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchFaceDataOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchFaceDataOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::math::PatchFaceDataBasicOps</base>
    <base>SAMRAI::math::PatchFaceDataMiscellaneousOpsReal</base>
    <base>SAMRAI::math::PatchFaceDataNormOpsReal</base>
    <member kind="function">
      <type></type>
      <name>PatchFaceDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsReal.html</anchorfile>
      <anchor>4b1fd9f54d694da1b75265989e81c298</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchFaceDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsReal.html</anchorfile>
      <anchor>50bded515b6af6f492835e683de97162</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsReal.html</anchorfile>
      <anchor>da61b4627d12e02dba0f21e957a04bfe</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsReal.html</anchorfile>
      <anchor>1f6882388599777ff3d6b13bda8ce8a8</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsReal.html</anchorfile>
      <anchor>fc1f5adffc0e53b49fbab791fceaabf4</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsReal.html</anchorfile>
      <anchor>2f91286c55e1867e6703ab46c66b9058</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchNodeDataBasicOps</name>
    <filename>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchNodeDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>de51b7381a92b76bd416c15883aa09e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchNodeDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>48c6169242559a98599c224488bbdd99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>8068940925563d8e3782451837bd0fbe</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>c3542755aa1562f07b402d063e5d848b</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>bf900815503ec861def1e1f8aaa0c127</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>9169b0e9f114b6caa597bab29fe35b35</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>b4e09ffbd542740d7182d06de7045d1a</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>49bbf9ef3a18d89c873b2b41ec83538e</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>170ea8835e05ece5ccf10edd55215e11</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>5da0323f5b6d67972300543831f3c5e5</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src1, const TYPE &amp;beta, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>e36636643ad205035570f6aa6b9e748c</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>802e06d6f9cd08968a5069e210e013e7</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>4595c3bd63eb91ee8b0ab7117eb0cf0e</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>de07033c2df7b4be2bd9be8dfdf777c4</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>b6d1fd465f3e9db3a4f72eec9a4ec5aa</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;width, const TYPE &amp;low, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchNodeDataMiscellaneousOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchNodeDataMiscellaneousOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchNodeDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>dfe76695b9e187f75cb022f734dad483</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchNodeDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>7882bd8182bd3000ca20276350cabbd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>3d4f7293e17ff455ab388845052d47d4</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>74506a9730b48e966b9a284c033a9f60</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>e2031e1a016bc488a3503a0854ac2b34</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>1cb4539f97a0fbed9933f1c5eeffca21</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;numer, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>5aea7e4008664a5bf3eedf48d8473630</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;numer, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchNodeDataNormOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchNodeDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>d371ae638366fa0f33ac215edc5bd8c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchNodeDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>f69ca4f451bd238edc9799cac54697b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>752acf6acff090c5a5561a03cbd7e3e9</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>d1e10151e66ca98582584789bfc61d7d</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>81b2c5211cf5caf22551642d58246491</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>0c974a36e551225b4925dd8d3c1912c4</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>86b449d313ef50c5f37bed755b03795b</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>6f4059e7709b31cbe9639694dd3663c5</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>cf2b04309864c610fe54c145847b9e9b</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>11ae768e60f3ac73ccf0c20baa14d1cd</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>2610ca864dfc3cead6e8abc895d42834</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>93fd2d76331c12a742cae3f3dd47d859</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>a2b90f786e501b475925378e0e57d14a</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; vol) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchNodeDataNormOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchNodeDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>1a3a520eb79483b6b461b43907d2b831</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchNodeDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>8b5aad536747290d638d7fdea3e634d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>4b1c4dc975979e87cbe475b51420a8d5</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>32364318efc16499e666cd8c0aa0e03e</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>ffbc81d83e657f88ffdb87e30016091a</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>c2ceb898cef3c8a3af7ad2fc632664b0</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>d846964fafccd55857944d630b1ead04</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>4b3065b7d1fc4a9cb0ef0e3177702244</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>77105c0fe1d0618058c12563e5e29263</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>805b34514a56307fbb66ea09d883f501</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>582b2439d23aab10e3a796ac01a363cf</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>448017a621ac21fd45079d721681a9d4</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>5ad7005fed0c7d2158d6e965968cfafd</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; vol) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchNodeDataOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1PatchNodeDataOpsComplex.html</filename>
    <base>SAMRAI::math::PatchNodeDataBasicOps</base>
    <base>SAMRAI::math::PatchNodeDataNormOpsComplex</base>
    <member kind="function">
      <type></type>
      <name>PatchNodeDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsComplex.html</anchorfile>
      <anchor>d0d165dc6587ffea3c0a34b8f135bf5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchNodeDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsComplex.html</anchorfile>
      <anchor>f4c06dfa9b878f2af05eff8d8164f752</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsComplex.html</anchorfile>
      <anchor>4805804de8f53b60c3de81d562053ab8</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsComplex.html</anchorfile>
      <anchor>b81db179687a2c7142b4a26cb5646d2f</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsComplex.html</anchorfile>
      <anchor>f68667f6fb4a0c9739a70e4a91d3e772</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsComplex.html</anchorfile>
      <anchor>664e2983ab88143e5522c019296bbf03</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;dst, const dcomplex &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchNodeDataOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1PatchNodeDataOpsInteger.html</filename>
    <base>SAMRAI::math::PatchNodeDataBasicOps&lt; int &gt;</base>
    <member kind="function">
      <type></type>
      <name>PatchNodeDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsInteger.html</anchorfile>
      <anchor>bf5f8df03d368857f28aa454132621b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchNodeDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsInteger.html</anchorfile>
      <anchor>b118075d0cbb751ba9cdd17e1ce6c956</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsInteger.html</anchorfile>
      <anchor>5e48614477c3c3e1acbf22e8cac85faf</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; int &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsInteger.html</anchorfile>
      <anchor>544cd6ab89700d9dec1429f83ba23730</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; int &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; int &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsInteger.html</anchorfile>
      <anchor>caa7691b19c502107d9a48e24c2f7211</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsInteger.html</anchorfile>
      <anchor>2351896918aedaeb041e7650b92b3459</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; int &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsInteger.html</anchorfile>
      <anchor>ffc32b38d71fb5d8722b0d403f78cf38</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; int &gt; &gt; &amp;dst, const int &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsInteger.html</anchorfile>
      <anchor>4b6b0a5b9e71b05a77d28d22c60006a2</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; int &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; int &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchNodeDataOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchNodeDataOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::math::PatchNodeDataBasicOps</base>
    <base>SAMRAI::math::PatchNodeDataMiscellaneousOpsReal</base>
    <base>SAMRAI::math::PatchNodeDataNormOpsReal</base>
    <member kind="function">
      <type></type>
      <name>PatchNodeDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsReal.html</anchorfile>
      <anchor>e0265f0913d8c02d4b0ab0dc62ca5158</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchNodeDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsReal.html</anchorfile>
      <anchor>4e61612c545a9a5a2d71ed91d80ed08b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsReal.html</anchorfile>
      <anchor>806f3da22a2cd3d452c2ae8e2eb2f3ff</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsReal.html</anchorfile>
      <anchor>c86b256cceb9f4f7144d9a2405804569</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsReal.html</anchorfile>
      <anchor>1d4c035e455d1e07cb3bb8741073c782</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsReal.html</anchorfile>
      <anchor>d97f5650c45b1e0277227d86cfd7adc6</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchSideDataBasicOps</name>
    <filename>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchSideDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>7c872e403d96b72b1c75c1517bab73de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchSideDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>105f0f0909074f5a90dd7d3fde5d36f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>22c06ba2e0ca34a59caaa81b118be162</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>a0fccabc2649c4d61e3142abd565fd79</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>ec9b0083823a9edcaedbd32f08e4dfb8</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>c426bd90543b65ceeabb7d615e36549f</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>ef14eb6c9699dbd1395231d324c1dbec</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>b405c152703cf3b429b229f735f14cd6</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>61978caa4ea3b9448f4378557898023c</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>d9635ac4d6ecb78b45fe6fc59fa9391a</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src1, const TYPE &amp;beta, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>b273a53c497b373a719674c790706658</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>a18857b5314b422957d1f2db96ba2393</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>7ac9c212672f94415618dac52acf5e31</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>68e27160f2a391897d897d8735ce3ece</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>20fdb2c412dbf9ff9c06e82c49214df1</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;width, const TYPE &amp;low, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchSideDataMiscellaneousOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchSideDataMiscellaneousOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchSideDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>4b74498347b6404c6ab92cac9720c250</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchSideDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>3f1995821fd9ee5f25c9456e924c76f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>762d2b13f9866c0741a34c5412752198</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>c78f2b740f2e2979a96d2dcf2f453c63</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>6722f4194ace7bb204d28f80225dede9</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a0e7d85485dbd3261e4fa5dc524109f3</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;numer, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a641d325379ea7e9fd1ebcc032de7f15</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;numer, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchSideDataNormOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchSideDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>dd3dae94ca0d4c63529224230f9acc38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchSideDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>3b51a75e7c3d4fccd9d8718bc9e012e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>ef1295eaa7c335e3073a9030b6d14580</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>49cbd5b8dff4acece0521680d391adbe</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>7e9470d8965f2db3633ddbf26e246a40</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>4b171753d13cc2280c059178e9d7caab</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>70467f8e03725d22efde109438aa3a51</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>c2b4a9149144f2fe825f7798e0223e63</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>6145f01e475847c7c3c85f15a8f3327d</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>562904c24406d0a6436f22f906172dfc</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>89e09b51a04a9faff65b23b9f16ad0c6</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>8c6e488b2fa824d9350307c1c4ec0efb</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>162bd6cebbda7d4d6521f7adeb43eafc</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; vol) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchSideDataNormOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchSideDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>810d7b03619eaeff69dd47b2b7ee4739</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchSideDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>f482f095f0a6cdc4cbe2fa82e2ce0b3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>cc55cd0fc9f931db10efa9e4e93feac8</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>12b005240c48d6a9e430464d4da0aae5</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>1ac6c2566c6d05145ad689561d4f5764</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>f4ebc7adad9f83e971d799fea0ab095c</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>bc0d5ce17e8bb23a39f78f96fcd45957</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>f30bebeb87f6d21d075589d926e0263b</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>ce8c63278d74cd1e7eabb1641bff293d</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>0eb16104b62994bb72c07e3c6c631830</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>f300635cb365723a80e1d08abe869710</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>a22d95619446d44536d96a0b41fa0cfa</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>564714230d269b15f6feba0f8527391d</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; vol) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchSideDataOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1PatchSideDataOpsComplex.html</filename>
    <base>SAMRAI::math::PatchSideDataBasicOps</base>
    <base>SAMRAI::math::PatchSideDataNormOpsComplex</base>
    <member kind="function">
      <type></type>
      <name>PatchSideDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsComplex.html</anchorfile>
      <anchor>038c712ca1db1cf1d4b1cec224eba1fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchSideDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsComplex.html</anchorfile>
      <anchor>d1382d2095ad6ebd394fd68a0ca57ea2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsComplex.html</anchorfile>
      <anchor>e1df7073e96229004ae44fef87351644</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsComplex.html</anchorfile>
      <anchor>bc111a5bd8bd23406602ca7a62fa9d78</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsComplex.html</anchorfile>
      <anchor>7c2d90690e24c43351d08e71cfe11b2f</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsComplex.html</anchorfile>
      <anchor>2be6e3faf37219d05e20f220d8726f48</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;dst, const dcomplex &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchSideDataOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1PatchSideDataOpsInteger.html</filename>
    <base>SAMRAI::math::PatchSideDataBasicOps&lt; int &gt;</base>
    <member kind="function">
      <type></type>
      <name>PatchSideDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsInteger.html</anchorfile>
      <anchor>ef15e0857a5fb9df4ba8f694e004923e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchSideDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsInteger.html</anchorfile>
      <anchor>3ab00c4b3dfa06fe17ee31ba1060d71b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsInteger.html</anchorfile>
      <anchor>ca752e2578816dc37df475b036556017</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; int &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsInteger.html</anchorfile>
      <anchor>2dd4c10b8d329bf584749a73aa4e35fb</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; int &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; int &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsInteger.html</anchorfile>
      <anchor>1ddfad0f9ac42e54edc4a83294ba4895</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsInteger.html</anchorfile>
      <anchor>e4f19a00c9f86a21cdb29cdcbcbbc65e</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; int &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsInteger.html</anchorfile>
      <anchor>ac94dfccd1b123637ae83f11d08d008d</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; int &gt; &gt; &amp;dst, const int &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsInteger.html</anchorfile>
      <anchor>0cab5f16f8a7e5dfe9db8dda1b0ea552</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; int &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; int &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchSideDataOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchSideDataOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::math::PatchSideDataBasicOps</base>
    <base>SAMRAI::math::PatchSideDataMiscellaneousOpsReal</base>
    <base>SAMRAI::math::PatchSideDataNormOpsReal</base>
    <member kind="function">
      <type></type>
      <name>PatchSideDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsReal.html</anchorfile>
      <anchor>12fd271de673d1be45e66d7c6ef83b77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchSideDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsReal.html</anchorfile>
      <anchor>b34b5571374b5de1eab1731c723930a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsReal.html</anchorfile>
      <anchor>0ba6e4cb5473b89312a8302d0b67321f</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsReal.html</anchorfile>
      <anchor>1ecf137ced1f5502f6d69ae1777cbca8</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsReal.html</anchorfile>
      <anchor>f6d3be032afaf586094677cfafc3090c</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsReal.html</anchorfile>
      <anchor>9c7a028c31f92e179b8a25118856d1f8</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>SAMRAI::mesh</name>
    <filename>namespaceSAMRAI_1_1mesh.html</filename>
    <class kind="struct">SAMRAI::mesh::BalanceUtilities</class>
    <class kind="class">SAMRAI::mesh::BergerRigoutsos</class>
    <class kind="class">SAMRAI::mesh::BergerRigoutsosNode</class>
    <class kind="class">SAMRAI::mesh::BoxGeneratorStrategy</class>
    <class kind="class">SAMRAI::mesh::ChopAndPackLoadBalancer</class>
    <class kind="class">SAMRAI::mesh::GriddingAlgorithm</class>
    <class kind="class">SAMRAI::mesh::GriddingAlgorithmConnectorWidthRequestor</class>
    <class kind="class">SAMRAI::mesh::GriddingAlgorithmStrategy</class>
    <class kind="class">SAMRAI::mesh::LoadBalanceStrategy</class>
    <class kind="class">SAMRAI::mesh::MultiblockGriddingTagger</class>
    <class kind="class">SAMRAI::mesh::SpatialKey</class>
    <class kind="class">SAMRAI::mesh::StandardTagAndInitialize</class>
    <class kind="class">SAMRAI::mesh::StandardTagAndInitializeConnectorWidthRequestor</class>
    <class kind="class">SAMRAI::mesh::StandardTagAndInitStrategy</class>
    <class kind="class">SAMRAI::mesh::TagAndInitializeStrategy</class>
    <class kind="class">SAMRAI::mesh::TreeLoadBalancer</class>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1mesh.html</anchorfile>
      <anchor>9b4d55c44cea68b4af78766e2a2b023a</anchor>
      <arglist>(std::ostream &amp;s, const SpatialKey &amp;spatial_key)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>GCD</name>
      <anchorfile>namespaceSAMRAI_1_1mesh.html</anchorfile>
      <anchor>7fb64842e08bb38b61214a78dfd53550</anchor>
      <arglist>(const int a, const int b)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1mesh.html</anchorfile>
      <anchor>914161be4bc31ec13283a8054c561c24</anchor>
      <arglist>(std::ostream &amp;co, const TreeLoadBalancer::BoxInTransit &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::mesh::BalanceUtilities</name>
    <filename>structSAMRAI_1_1mesh_1_1BalanceUtilities.html</filename>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>binPack</name>
      <anchorfile>structSAMRAI_1_1mesh_1_1BalanceUtilities.html</anchorfile>
      <anchor>bf2c0f2f23c9c1158b748b8d6a818b66</anchor>
      <arglist>(hier::ProcessorMapping &amp;mapping, tbox::Array&lt; double &gt; &amp;weights, int nproc)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>spatialBinPack</name>
      <anchorfile>structSAMRAI_1_1mesh_1_1BalanceUtilities.html</anchorfile>
      <anchor>c3fdee10201b6542c22763f6dc1c376f</anchor>
      <arglist>(hier::ProcessorMapping &amp;mapping, tbox::Array&lt; double &gt; &amp;weights, hier::BoxContainer &amp;boxes, const int nproc)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>recursiveBisectionUniform</name>
      <anchorfile>structSAMRAI_1_1mesh_1_1BalanceUtilities.html</anchorfile>
      <anchor>203962449f69486573bc04e774263544</anchor>
      <arglist>(hier::BoxContainer &amp;out_boxes, tbox::List&lt; double &gt; &amp;out_workloads, const hier::BoxContainer &amp;in_boxes, double ideal_workload, const double workload_tolerance, const hier::IntVector &amp;min_size, const hier::IntVector &amp;cut_factor, const hier::IntVector &amp;bad_interval, const hier::BoxContainer &amp;physical_domain)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>recursiveBisectionNonuniform</name>
      <anchorfile>structSAMRAI_1_1mesh_1_1BalanceUtilities.html</anchorfile>
      <anchor>bf8ed7ed02ab750431dfaf3a9384ed56</anchor>
      <arglist>(hier::BoxContainer &amp;out_boxes, tbox::List&lt; double &gt; &amp;out_workloads, const tbox::Pointer&lt; hier::PatchLevel &gt; &amp;in_level, int work_id, double ideal_workload, const double workload_tolerance, const hier::IntVector &amp;min_size, const hier::IntVector &amp;cut_factor, const hier::IntVector &amp;bad_interval, const hier::BoxContainer &amp;physical_domain)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeDomainDependentProcessorLayout</name>
      <anchorfile>structSAMRAI_1_1mesh_1_1BalanceUtilities.html</anchorfile>
      <anchor>0689a61cca7d97d76cb02c9e992ce7c3</anchor>
      <arglist>(hier::IntVector &amp;proc_dist, int num_procs, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeDomainIndependentProcessorLayout</name>
      <anchorfile>structSAMRAI_1_1mesh_1_1BalanceUtilities.html</anchorfile>
      <anchor>b226f6a7c910f76488f9c178fc0959c9</anchor>
      <arglist>(hier::IntVector &amp;proc_dist, int num_procs, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sortDescendingBoxWorkloads</name>
      <anchorfile>structSAMRAI_1_1mesh_1_1BalanceUtilities.html</anchorfile>
      <anchor>ba3efcfc8069ca6beb087b1f29e97a5b</anchor>
      <arglist>(hier::BoxContainer &amp;boxes, tbox::Array&lt; double &gt; &amp;workload)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>computeNonUniformWorkload</name>
      <anchorfile>structSAMRAI_1_1mesh_1_1BalanceUtilities.html</anchorfile>
      <anchor>52da32ae2a9abdcde758e2ebc300a70a</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, int wrk_indx, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>computeLoadBalanceEfficiency</name>
      <anchorfile>structSAMRAI_1_1mesh_1_1BalanceUtilities.html</anchorfile>
      <anchor>f43a8ec010220ef89a163d7cee41522e</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; &amp;level, std::ostream &amp;os, int workload_data_id=-1)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::BergerRigoutsos</name>
    <filename>classSAMRAI_1_1mesh_1_1BergerRigoutsos.html</filename>
    <base>SAMRAI::mesh::BoxGeneratorStrategy</base>
    <member kind="function">
      <type></type>
      <name>BergerRigoutsos</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsos.html</anchorfile>
      <anchor>0dee60469fcfbe8a67fe3494fd0ef864</anchor>
      <arglist>(const tbox::Dimension &amp;dim, tbox::Pointer&lt; tbox::Database &gt; database=tbox::Pointer&lt; tbox::Database &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BergerRigoutsos</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsos.html</anchorfile>
      <anchor>47fe383dfb08ba99421a42a650e41d7c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMPI</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsos.html</anchorfile>
      <anchor>465aa30d68596804972ecf2ffe67e8a3</anchor>
      <arglist>(const tbox::SAMRAI_MPI &amp;mpi)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findBoxesContainingTags</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsos.html</anchorfile>
      <anchor>87ae9b77b62314606337deef503f1acb</anchor>
      <arglist>(hier::BoxLevel &amp;new_mapped_box_level, hier::Connector &amp;tag_to_new, hier::Connector &amp;new_to_tag, const tbox::Pointer&lt; hier::PatchLevel &gt; tag_level, const int tag_data_index, const int tag_val, const hier::Box &amp;bound_box, const hier::IntVector &amp;min_box, const double efficiency_tol, const double combine_tol, const hier::IntVector &amp;max_gcw, const hier::BlockId &amp;block_id) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::BergerRigoutsosNode</name>
    <filename>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</filename>
    <base protection="private">SAMRAI::tbox::AsyncCommStage::Handler</base>
    <member kind="enumvalue">
      <type>@</type>
      <name>SINGLE_OWNER</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>b58b91030da025913881f20210677e7c51683234c867de24056d385a463f7b82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MOST_OVERLAP</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>b58b91030da025913881f20210677e7c79422b17a9e921adfe40a5a185add5be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>FEWEST_OWNED</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>b58b91030da025913881f20210677e7cc173ec6a125ba57525e521252918a7be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LEAST_ACTIVE</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>b58b91030da025913881f20210677e7c73217a9610abaa47f3f23588874bf32f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ADVANCE_ANY</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>8a69889d5b0f0746db9644f3f0804db0e0b07bac4bb28678f66a96be679960bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ADVANCE_SOME</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>8a69889d5b0f0746db9644f3f0804db00ab9eed0b566552753d26d41d77d2d39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SYNCHRONOUS</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>8a69889d5b0f0746db9644f3f0804db09e78ea8cfef4b7a43902e28116a6f986</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>OwnerMode</name>
      <anchor>b58b91030da025913881f20210677e7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SINGLE_OWNER</name>
      <anchor>b58b91030da025913881f20210677e7c51683234c867de24056d385a463f7b82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOST_OVERLAP</name>
      <anchor>b58b91030da025913881f20210677e7c79422b17a9e921adfe40a5a185add5be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FEWEST_OWNED</name>
      <anchor>b58b91030da025913881f20210677e7cc173ec6a125ba57525e521252918a7be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEAST_ACTIVE</name>
      <anchor>b58b91030da025913881f20210677e7c73217a9610abaa47f3f23588874bf32f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>AlgoAdvanceMode</name>
      <anchor>8a69889d5b0f0746db9644f3f0804db0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADVANCE_ANY</name>
      <anchor>8a69889d5b0f0746db9644f3f0804db0e0b07bac4bb28678f66a96be679960bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADVANCE_SOME</name>
      <anchor>8a69889d5b0f0746db9644f3f0804db00ab9eed0b566552753d26d41d77d2d39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNCHRONOUS</name>
      <anchor>8a69889d5b0f0746db9644f3f0804db09e78ea8cfef4b7a43902e28116a6f986</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BergerRigoutsosNode</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>07afe0eb7b5751c66a1df42a84e13ff6</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const hier::BlockId &amp;block_id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BergerRigoutsosNode</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>a986a8b35a1eb6ccd4bd98f008f5250c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClusteringParameters</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>6ad81f4c3ad40ef7e49f7ed8fc475c9d</anchor>
      <arglist>(const int tag_data_index, const int tag_val, const hier::IntVector min_box, const double efficiency_tol, const double combine_tol, const hier::IntVector &amp;max_box_size, const double max_lap_cut_from_center)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clusterAndComputeRelationships</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>31978f1d4dff7e6d3a3bd7706ecffae0</anchor>
      <arglist>(hier::BoxLevel &amp;new_mapped_box_level, hier::Connector &amp;tag_to_new, hier::Connector &amp;new_to_tag, const hier::Box &amp;bound_box, const tbox::Pointer&lt; hier::PatchLevel &gt; tag_level, const tbox::SAMRAI_MPI &amp;mpi_object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlgorithmAdvanceMode</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>8e3ffa5a8dc45c641fcbcc84e93bb741</anchor>
      <arglist>(const std::string &amp;algo_advance_mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOwnerMode</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>d5fec39c7084ef622c3c16b47361acc8</anchor>
      <arglist>(const std::string &amp;mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setComputeRelationships</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>b339dad74eaa5832ee6cb8a64e358183</anchor>
      <arglist>(const std::string mode, const hier::IntVector &amp;ghost_cell_width)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>74a81be701f524197ed8242ce4bdd6b7</anchor>
      <arglist>(std::ostream &amp;os, int detail_level=0) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTags</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>63c243b3d075e39869a2764823c406ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxTagsOwned</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>1c02cc66d3a356b5db893824b1a93bfe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxNodes</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>df5a17b7b65f1f8c1989231ed82bc79b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxGeneration</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>91ed04324881c5d368a960fda882fbc7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxOwnership</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>aee90f87efc1d60e9fc650e081f0e0e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAvgNumberOfCont</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>1b348e8120346ddd04ad847120f31ec6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxNumberOfCont</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>d3bc46a817ceb5c110ad369b89a00fc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumBoxesGenerated</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>e6b81f3ff947f79b4234c685bf56149b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogNodeHistory</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>57a0f00c911d88ccdf31bf5f3bb25031</anchor>
      <arglist>(bool flag)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::BoxGeneratorStrategy</name>
    <filename>classSAMRAI_1_1mesh_1_1BoxGeneratorStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxGeneratorStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BoxGeneratorStrategy.html</anchorfile>
      <anchor>1a0b578e1eef45dd3aa2340c53e037d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BoxGeneratorStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BoxGeneratorStrategy.html</anchorfile>
      <anchor>50be696aa648f39c157586544d5695cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>findBoxesContainingTags</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BoxGeneratorStrategy.html</anchorfile>
      <anchor>8211e21d80b8815e3aa46edcafbb812f</anchor>
      <arglist>(hier::BoxLevel &amp;new_mapped_box_level, hier::Connector &amp;tag_to_new, hier::Connector &amp;new_to_tag, const tbox::Pointer&lt; hier::PatchLevel &gt; tag_level, const int tag_data_index, const int tag_val, const hier::Box &amp;bound_box, const hier::IntVector &amp;min_box, const double efficiency_tol, const double combine_tol, const hier::IntVector &amp;max_gcw, const hier::BlockId &amp;block_id) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::ChopAndPackLoadBalancer</name>
    <filename>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</filename>
    <base>SAMRAI::mesh::LoadBalanceStrategy</base>
    <member kind="function">
      <type></type>
      <name>ChopAndPackLoadBalancer</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>915f48e9703b42accd4f282cffd9564b</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name, tbox::Pointer&lt; tbox::Database &gt; input_db=tbox::Pointer&lt; tbox::Database &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ChopAndPackLoadBalancer</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>82e0075fc9845f8cee2fa03dcc0a7a89</anchor>
      <arglist>(const tbox::Dimension &amp;dim, tbox::Pointer&lt; tbox::Database &gt; input_db=tbox::Pointer&lt; tbox::Database &gt;(NULL))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ChopAndPackLoadBalancer</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>91c03cd738068c6c80177ce6326fe270</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxWorkloadFactor</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>c5495c885b74a554b9521c27b3bf26d1</anchor>
      <arglist>(double factor, int level_number=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWorkloadTolerance</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>9be020b9bc8797104ccac6e9a234c6c7</anchor>
      <arglist>(double tolerance, int level_number=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWorkloadPatchDataIndex</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>e029169f997022d41fe6e6c0a6af6ead</anchor>
      <arglist>(int data_id, int level_number=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUniformWorkload</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>345271fe208090161c9dfb1abe64e347</anchor>
      <arglist>(int level_number=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBinPackMethod</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>7aab6fae17221e573801723f2e08573c</anchor>
      <arglist>(const std::string &amp;method, int level_number=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIgnoreLevelDomainIsSingleBox</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>3b8b7dd86799bde58d93c7b1b2a8ea2a</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLoadBalanceDependsOnPatchData</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>88e41115102265dd474ae40a0c19635a</anchor>
      <arglist>(int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadBalanceBoxLevel</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>940c2313b1ebc0ef9e6c6041274ff341</anchor>
      <arglist>(hier::BoxLevel &amp;balance_mapped_box_level, hier::Connector &amp;balance_to_anchor, hier::Connector &amp;anchor_to_balance, const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const hier::Connector &amp;unbalanced_to_attractor, const hier::Connector &amp;attractor_to_unbalanced, const hier::IntVector &amp;min_size, const hier::IntVector &amp;max_size, const hier::BoxLevel &amp;domain_mapped_box_level, const hier::IntVector &amp;bad_interval, const hier::IntVector &amp;cut_factor, const tbox::RankGroup &amp;rank_group=tbox::RankGroup()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>42e6dbae77e062f03987860048de660a</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>b24c2ba6706f1837ea70c1c61f770e8f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::GriddingAlgorithm</name>
    <filename>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</filename>
    <base>SAMRAI::mesh::GriddingAlgorithmStrategy</base>
    <base>SAMRAI::tbox::Serializable</base>
    <member kind="function">
      <type></type>
      <name>GriddingAlgorithm</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>0be1a5923a05bb72a8f7fae6698a1dc7</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; &amp;hierarchy, const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; input_db, tbox::Pointer&lt; TagAndInitializeStrategy &gt; level_strategy, tbox::Pointer&lt; BoxGeneratorStrategy &gt; generator, tbox::Pointer&lt; LoadBalanceStrategy &gt; balancer, tbox::Pointer&lt; LoadBalanceStrategy &gt; balancer_zero=tbox::Pointer&lt; LoadBalanceStrategy &gt;(NULL), bool register_for_restart=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GriddingAlgorithm</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>d564619fa83f3ec37d0349a31a7c0a30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeCoarsestLevel</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>d1846e119aeff11f5f40c7dd2aa2e7f5</anchor>
      <arglist>(const double level_time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeFinerLevel</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>56901ef8299000705e5aa47e190b2a9e</anchor>
      <arglist>(const double level_time, const bool initial_time, const int tag_buffer, const double regrid_start_time=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>regridAllFinerLevels</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>5d2ef5face4b4c3b40ba814906916089</anchor>
      <arglist>(const int level_number, const double regrid_time, const tbox::Array&lt; int &gt; &amp;tag_buffer, tbox::Array&lt; double &gt; regrid_start_time=tbox::Array&lt; double &gt;(), const bool level_is_coarsest_to_sync=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; TagAndInitializeStrategy &gt;</type>
      <name>getTagAndInitializeStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>d1f0fc38f40da4490b226fec0de54bb7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; LoadBalanceStrategy &gt;</type>
      <name>getLoadBalanceStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>40d3fb9125b7352b97a3a380818d6e84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; LoadBalanceStrategy &gt;</type>
      <name>getLoadBalanceStrategyZero</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>c4fe554dc5b0daaca35fb5dec098f72b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEfficiencyTolerance</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>eb02272242cae556e6cf1d30bb7dc51c</anchor>
      <arglist>(const double efficiency_tolerance, const int level_number)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEfficiencyTolerance</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>d358b372179521cacb81f431d4e28f03</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCombineEfficiency</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>73e212c91812d1a433ca0793576fc2da</anchor>
      <arglist>(const double combine_efficiency, const int level_number)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCombineEfficiency</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>2eeb7aef9d8cbca616a02f8ba70e3d6f</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>8f18dca77480c966b2253020162a31c0</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>0f1c520afe49b00e2458c63ecf1582a6</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printStatistics</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>b412d10052255cff13ffa3f104dd8a09</anchor>
      <arglist>(std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::GriddingAlgorithmConnectorWidthRequestor</name>
    <filename>classSAMRAI_1_1mesh_1_1GriddingAlgorithmConnectorWidthRequestor.html</filename>
    <base>SAMRAI::hier::PatchHierarchy::ConnectorWidthRequestorStrategy</base>
    <member kind="function">
      <type></type>
      <name>GriddingAlgorithmConnectorWidthRequestor</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithmConnectorWidthRequestor.html</anchorfile>
      <anchor>87f82d15a5a047b02ac682d572c94943</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeRequiredConnectorWidths</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithmConnectorWidthRequestor.html</anchorfile>
      <anchor>e305f4ddbba06d6ab9d10175a9ceaf1c</anchor>
      <arglist>(std::vector&lt; hier::IntVector &gt; &amp;self_connector_widths, std::vector&lt; hier::IntVector &gt; &amp;fine_connector_widths, const hier::PatchHierarchy &amp;patch_hierarchy) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::GriddingAlgorithmStrategy</name>
    <filename>classSAMRAI_1_1mesh_1_1GriddingAlgorithmStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>GriddingAlgorithmStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithmStrategy.html</anchorfile>
      <anchor>dd9fd1f0c39e245a73d42a18d57f0854</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GriddingAlgorithmStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithmStrategy.html</anchorfile>
      <anchor>4bc60f2d0f7421f397d55984fbbecde8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>makeCoarsestLevel</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithmStrategy.html</anchorfile>
      <anchor>719a01e9347f418653d860d1460762da</anchor>
      <arglist>(const double level_time)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>makeFinerLevel</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithmStrategy.html</anchorfile>
      <anchor>25a60c233136dcd8f62af4724b7b824a</anchor>
      <arglist>(const double level_time, const bool initial_time, const int tag_buffer, const double regrid_start_time=0.0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>regridAllFinerLevels</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithmStrategy.html</anchorfile>
      <anchor>2ca0e474cc71e77856d09344e1566cb7</anchor>
      <arglist>(const int level_number, const double regrid_time, const tbox::Array&lt; int &gt; &amp;tag_buffer, tbox::Array&lt; double &gt; regrid_start_time=tbox::Array&lt; double &gt;(), const bool level_is_coarsest_to_sync=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tbox::Pointer&lt; TagAndInitializeStrategy &gt;</type>
      <name>getTagAndInitializeStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithmStrategy.html</anchorfile>
      <anchor>1ef20da31b373f91a2876f6b3e495ae9</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::LoadBalanceStrategy</name>
    <filename>classSAMRAI_1_1mesh_1_1LoadBalanceStrategy.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LoadBalanceStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1LoadBalanceStrategy.html</anchorfile>
      <anchor>b783122330df4525d0c913d8019a1d11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getLoadBalanceDependsOnPatchData</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1LoadBalanceStrategy.html</anchorfile>
      <anchor>1b1525f4eafbf028b8585def7a19541b</anchor>
      <arglist>(int level_number) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>loadBalanceBoxLevel</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1LoadBalanceStrategy.html</anchorfile>
      <anchor>cb85a8a274e199dd7d10dd7c9288c148</anchor>
      <arglist>(hier::BoxLevel &amp;balance_mapped_box_level, hier::Connector &amp;balance_to_anchor, hier::Connector &amp;anchor_to_balance, const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const hier::Connector &amp;unbalanced_to_attractor, const hier::Connector &amp;attractor_to_unbalanced, const hier::IntVector &amp;min_size, const hier::IntVector &amp;max_size, const hier::BoxLevel &amp;domain_mapped_box_level, const hier::IntVector &amp;bad_interval, const hier::IntVector &amp;cut_factor, const tbox::RankGroup &amp;rank_group=tbox::RankGroup()) const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gatherAndReportLoadBalance</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1LoadBalanceStrategy.html</anchorfile>
      <anchor>4a95d5f4b32c9c49ba0427a68e6abd36</anchor>
      <arglist>(double local_workload, const tbox::SAMRAI_MPI &amp;mpi, std::ostream &amp;output_stream=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gatherAndReportLoadBalance</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1LoadBalanceStrategy.html</anchorfile>
      <anchor>cf8c5a7f73a16dd04fa49bc8ef15382d</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;local_loads, const tbox::SAMRAI_MPI &amp;mpi, std::ostream &amp;output_stream=tbox::plog) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LoadBalanceStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1LoadBalanceStrategy.html</anchorfile>
      <anchor>50c18ecf37bb62d993f47824d0e16175</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>markLoadForPostprocessing</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1LoadBalanceStrategy.html</anchorfile>
      <anchor>0c199d9c9de1e2bc965b2ed1c1b5be40</anchor>
      <arglist>(int rank, double load, int nbox)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>reportLoadBalance</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1LoadBalanceStrategy.html</anchorfile>
      <anchor>aa6465cb380363534149de11f8346213</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;workloads, std::ostream &amp;output_stream)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::MultiblockGriddingTagger</name>
    <filename>classSAMRAI_1_1mesh_1_1MultiblockGriddingTagger.html</filename>
    <base>SAMRAI::xfer::RefinePatchStrategy</base>
    <member kind="function">
      <type></type>
      <name>MultiblockGriddingTagger</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1MultiblockGriddingTagger.html</anchorfile>
      <anchor>b7f233453639479c4c1546c86e1e4dcd</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiblockGriddingTagger</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1MultiblockGriddingTagger.html</anchorfile>
      <anchor>eaa5819bdf376cce98d57793fe1019c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setScratchTagPatchDataIndex</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1MultiblockGriddingTagger.html</anchorfile>
      <anchor>8cb6dc885993554fda51930671ac69ce</anchor>
      <arglist>(int buf_tag_indx)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPhysicalBoundaryConditions</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1MultiblockGriddingTagger.html</anchorfile>
      <anchor>07f2c1fcbf8b4dd6fc1ba9abda85cd14</anchor>
      <arglist>(hier::Patch &amp;patch, const double fill_time, const hier::IntVector &amp;ghost_width_to_fill)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillSingularityBoundaryConditions</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1MultiblockGriddingTagger.html</anchorfile>
      <anchor>39085c83f70e6d8903db3e97f8e2848b</anchor>
      <arglist>(hier::Patch &amp;patch, const hier::PatchLevel &amp;encon_level, const hier::Connector &amp;dst_to_encon, const double fill_time, const hier::Box &amp;fill_box, const hier::BoundaryBox &amp;boundary_box, const tbox::Pointer&lt; hier::GridGeometry &gt; &amp;grid_geometry)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hier::IntVector</type>
      <name>getRefineOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1MultiblockGriddingTagger.html</anchorfile>
      <anchor>8376316a2281f250072d1ddad73ab681</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preprocessRefine</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1MultiblockGriddingTagger.html</anchorfile>
      <anchor>e05d034aac78db5b01c6335131cef55d</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessRefine</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1MultiblockGriddingTagger.html</anchorfile>
      <anchor>8a978d60d8cac30ddd6d553e561a62c4</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::SpatialKey</name>
    <filename>classSAMRAI_1_1mesh_1_1SpatialKey.html</filename>
    <member kind="function">
      <type></type>
      <name>SpatialKey</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>c534947107d9cad98e8dc783133e3ffe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SpatialKey</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>cf325668dcadbdfcfaf2b1bd83f6578a</anchor>
      <arglist>(const unsigned int i, const unsigned int j=0, const unsigned int k=0, const unsigned int level_num=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SpatialKey</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>9e447d39c0bab29b47809201efa1187e</anchor>
      <arglist>(const SpatialKey &amp;spatial_key)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SpatialKey</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>b1ab2ea2fcb271736d367a20094b099a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SpatialKey &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>504ac552ee38c2791b06f028ebf890a0</anchor>
      <arglist>(const SpatialKey &amp;spatial_key)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>d79e2b5aa9aa13b188721af4147c6efc</anchor>
      <arglist>(const SpatialKey &amp;spatial_key) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>9eac5bf9177838f68c8b5c45eb3c881e</anchor>
      <arglist>(const SpatialKey &amp;spatial_key) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>bce99496e12d0d18d09fb9469b9587cd</anchor>
      <arglist>(const SpatialKey &amp;spatial_key) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>aa00e36bb958291d333a6fbef0f38d1e</anchor>
      <arglist>(const SpatialKey &amp;spatial_key) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>a320048c1d25d50789811ac3029e9f2b</anchor>
      <arglist>(const SpatialKey &amp;spatial_key) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>9c655dde272f0d8c07c45e4008b233f9</anchor>
      <arglist>(const SpatialKey &amp;spatial_key) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToZero</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>3e72f303151a445da4eb5806100d28a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setKey</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>e6e982c43d11c900ef7ea59ce8c12978</anchor>
      <arglist>(const unsigned int i=0, const unsigned int j=0, const unsigned int k=0, const unsigned int level_num=0)</arglist>
    </member>
    <member kind="friend">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>d2a97bae78aafe4b2e31dd60447c6444</anchor>
      <arglist>(std::ostream &amp;s, const SpatialKey &amp;spatial_key)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::StandardTagAndInitialize</name>
    <filename>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</filename>
    <base>SAMRAI::mesh::TagAndInitializeStrategy</base>
    <member kind="function">
      <type></type>
      <name>StandardTagAndInitialize</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>a5b9ac0af62f8c590d9cdca466425bcf</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name, StandardTagAndInitStrategy *tag_strategy, tbox::Pointer&lt; tbox::Database &gt; input_db=tbox::Pointer&lt; tbox::Database &gt;(NULL))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StandardTagAndInitialize</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>fa66321f6dd6adfae5f2b7c64e4bd4c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usesTimeIntegration</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>8536bedec72c52438dbef8d42932553e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getErrorCoarsenRatio</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>bfec66b75a55c559f8718203a58f3fff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkCoarsenRatios</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>f13c83e518e62495ba9402f96a8a7bd4</anchor>
      <arglist>(const tbox::Array&lt; hier::IntVector &gt; &amp;ratio_to_coarser)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeLevelData</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>96f01ee0ea7bd58805101efaab8d739f</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const double init_data_time, const bool can_be_refined, const bool initial_time, const tbox::Pointer&lt; hier::PatchLevel &gt; old_level=tbox::Pointer&lt; hier::PatchLevel &gt;(NULL), const bool allocate_data=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetHierarchyConfiguration</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>dbc8775e5d2f5335007891b93d95071c</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preprocessErrorEstimation</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>694f1e444e31fbebac07b0b61f556efb</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const double regrid_time, const double regrid_start_time, const bool initial_time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tagCellsForRefinement</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>71cb4062eb56d7dc8d385e0862eadda2</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; level, const int level_number, const double regrid_time, const int tag_index, const bool initial_time, const bool coarsest_sync_level, const bool can_be_refined, const double regrid_start_time=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>coarsestLevelBoxesOK</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>27726ae7a200aecb74ac1ebaed1b4540</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>refineUserBoxInputOnly</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>966ff63d9270d272d6e4be78b081c113</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>turnOnGradientDetector</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>850761c6f129e69c2f6ea41fca691b49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>turnOffGradientDetector</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>71bdb2c6d4ab687b88428eefe72ebbc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>turnOnRichardsonExtrapolation</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>a37bf3638b6da5310661c97b417bde5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>turnOffRichardsonExtrapolation</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>07a1e663237b71658cbb0c6348ce3b10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>turnOnRefineBoxes</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>e69a0d4c50673cd651354f182a86d9b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>turnOffRefineBoxes</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>cf580a93847708cb5c42b81587dc16f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromInput</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>bbe10b79558c95c7171e593a6fe735f8</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
    <member kind="function">
      <type>const StandardTagAndInitializeConnectorWidthRequestor &amp;</type>
      <name>getConnectorWidthRequestor</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>968e8d7b61c9d5e883871fd5b085d2c1</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::StandardTagAndInitializeConnectorWidthRequestor</name>
    <filename>classSAMRAI_1_1mesh_1_1StandardTagAndInitializeConnectorWidthRequestor.html</filename>
    <base>SAMRAI::hier::PatchHierarchy::ConnectorWidthRequestorStrategy</base>
    <member kind="function">
      <type></type>
      <name>StandardTagAndInitializeConnectorWidthRequestor</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitializeConnectorWidthRequestor.html</anchorfile>
      <anchor>a8d23f49ffb09bc3876706ebd64964f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeRequiredConnectorWidths</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitializeConnectorWidthRequestor.html</anchorfile>
      <anchor>538d55204c60cad197c71a37e77babd1</anchor>
      <arglist>(std::vector&lt; hier::IntVector &gt; &amp;self_connector_widths, std::vector&lt; hier::IntVector &gt; &amp;fine_connector_widths, const hier::PatchHierarchy &amp;patch_hierarchy) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::StandardTagAndInitStrategy</name>
    <filename>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>StandardTagAndInitStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</anchorfile>
      <anchor>d7478df85389940459078cbf1468111c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StandardTagAndInitStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</anchorfile>
      <anchor>f6be2e928826edcb3d104cbd0d4e4ad6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getLevelDt</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</anchorfile>
      <anchor>fa310e18f96f72353f27789e7593e67c</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const double dt_time, const bool initial_time)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>advanceLevel</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</anchorfile>
      <anchor>5528e0853c0234f0ae004605e9e13fbb</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const double current_time, const double new_time, const bool first_step, const bool last_step, const bool regrid_advance=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetTimeDependentData</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</anchorfile>
      <anchor>78a7cf6f0f9505b24caed3f5f3fd50f4</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const double new_time, const bool can_be_refined)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetDataToPreadvanceState</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</anchorfile>
      <anchor>bf90e2ddf1799873bc0826622c1d3021</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initializeLevelData</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</anchorfile>
      <anchor>8318865f10c2486f224cfd72cd80bd8c</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const double init_data_time, const bool can_be_refined, const bool initial_time, const tbox::Pointer&lt; hier::PatchLevel &gt; old_level=tbox::Pointer&lt; hier::PatchLevel &gt;(NULL), const bool allocate_data=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetHierarchyConfiguration</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</anchorfile>
      <anchor>17a979caefe65be8393f8b4771d36cf0</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyGradientDetector</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</anchorfile>
      <anchor>f21373b9963b3978169521ee83867c06</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const double error_data_time, const int tag_index, const bool initial_time, const bool uses_richardson_extrapolation_too)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyRichardsonExtrapolation</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</anchorfile>
      <anchor>93aaf63b2cebd101b48bd1a85837df19</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const double error_data_time, const int tag_index, const double deltat, const int error_coarsen_ratio, const bool initial_time, const bool uses_gradient_detector_too)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>coarsenDataForRichardsonExtrapolation</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</anchorfile>
      <anchor>75b71c567a4e34c2aac81a4075d08e77</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const tbox::Pointer&lt; hier::PatchLevel &gt; coarser_level, const double coarsen_data_time, const bool before_advance)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::TagAndInitializeStrategy</name>
    <filename>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>TagAndInitializeStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>851556e2955487606f3b251bf0cc1da3</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TagAndInitializeStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>d0c2ae664ab72b3189466ba80dcbf78b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUserSuppliedRefineBoxes</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>4f27653ac9f93e5c786619477d83c47d</anchor>
      <arglist>(hier::BoxContainer &amp;refine_boxes, const int level_number, const double time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetRefineBoxes</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>51289984d464b415e6c2eb490d3dc5e9</anchor>
      <arglist>(const hier::BoxContainer &amp;refine_boxes, const int level_number)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initializeLevelData</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>5469402af829dc611491b532f10c8373</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const double init_data_time, const bool can_be_refined, const bool initial_time, const tbox::Pointer&lt; hier::PatchLevel &gt; old_level=tbox::Pointer&lt; hier::PatchLevel &gt;(NULL), const bool allocate_data=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetHierarchyConfiguration</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>8726e9d47089519dc96c7f60fe85d5f6</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>tagCellsForRefinement</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>68598fdcc9722675cbc91ec8e5dbff13</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const double error_data_time, const int tag_index, const bool initial_time, const bool coarsest_sync_level, const bool can_be_refined=true, const double regrid_start_time=0.)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>preprocessErrorEstimation</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>55f48c415ff91eb2116747f9a575129c</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const double regrid_time, const double regrid_start_time, const bool initial_time)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>usesTimeIntegration</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>f4538967ed8d64c0dc0cf16258433e50</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>coarsestLevelBoxesOK</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>a1d900010c5faafb5efc2c6c4e7d0285</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getErrorCoarsenRatio</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>4359c4a0a4afbfafc2d5de6a5f565ffe</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>checkCoarsenRatios</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>8a4ff2059aae80bf0fa72f1d753f089c</anchor>
      <arglist>(const tbox::Array&lt; hier::IntVector &gt; &amp;ratio_to_coarser)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>refineUserBoxInputOnly</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>334bd9f56a82d870233167b6e8f9ee67</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromInput</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>ab75c31f1017bc056738d5ae20364fe3</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>60ac697c49e8ace4c5e6736fe25a96d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>9e826b794eeed8f13c9f1f5c9a63ac0d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::TreeLoadBalancer</name>
    <filename>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</filename>
    <base>SAMRAI::mesh::LoadBalanceStrategy</base>
    <member kind="function">
      <type></type>
      <name>TreeLoadBalancer</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</anchorfile>
      <anchor>f80fd819266e98a16d542e95a443c90a</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name=std::string(&quot;TreeLoadBalancer&quot;), tbox::Pointer&lt; tbox::Database &gt; input_db=tbox::Pointer&lt; tbox::Database &gt;(NULL))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TreeLoadBalancer</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</anchorfile>
      <anchor>800df6db29c10f92496f51b26b1b886b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSAMRAI_MPI</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</anchorfile>
      <anchor>0608eaa270faedd350a1bdbf39d6ba40</anchor>
      <arglist>(const tbox::SAMRAI_MPI &amp;samrai_mpi)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeMPICommunicator</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</anchorfile>
      <anchor>28b59ceed1449bd501114a47ad62f3c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWorkloadPatchDataIndex</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</anchorfile>
      <anchor>e5db7448aebaf62bb9e6ab3a30b288d1</anchor>
      <arglist>(int data_id, int level_number=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUniformWorkload</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</anchorfile>
      <anchor>1cb77a56e78759fe70930df95ca16aae</anchor>
      <arglist>(int level_number=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLoadBalanceDependsOnPatchData</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</anchorfile>
      <anchor>3784dd2378c8d1f626d2678cfc9a24bf</anchor>
      <arglist>(int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadBalanceBoxLevel</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</anchorfile>
      <anchor>10011908a919ee5fd03d47bebeb84acc</anchor>
      <arglist>(hier::BoxLevel &amp;balance_box_level, hier::Connector &amp;balance_to_anchor, hier::Connector &amp;anchor_to_balance, const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const hier::Connector &amp;unbalanced_to_attractor, const hier::Connector &amp;attractor_to_unbalanced, const hier::IntVector &amp;min_size, const hier::IntVector &amp;max_size, const hier::BoxLevel &amp;domain_box_level, const hier::IntVector &amp;bad_interval, const hier::IntVector &amp;cut_factor, const tbox::RankGroup &amp;=tbox::RankGroup()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</anchorfile>
      <anchor>36f542438086c03c66146c0b72356567</anchor>
      <arglist>(std::ostream &amp;output_stream) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printStatistics</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</anchorfile>
      <anchor>8b73e0de6c9713f262418f5d2cb9a4b7</anchor>
      <arglist>(std::ostream &amp;output_stream=tbox::plog) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</anchorfile>
      <anchor>59ca95043634f47c99de4786bdc13e2b</anchor>
      <arglist>(std::ostream &amp;co, const BoxInTransit &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>SAMRAI::pdat</name>
    <filename>namespaceSAMRAI_1_1pdat.html</filename>
    <class kind="class">SAMRAI::pdat::ArrayData</class>
    <class kind="class">SAMRAI::pdat::ArrayDataAccess</class>
    <class kind="class">SAMRAI::pdat::ArrayDataIterator</class>
    <class kind="class">SAMRAI::pdat::ArrayDataOperationUtilities</class>
    <class kind="class">SAMRAI::pdat::CellComplexConstantRefine</class>
    <class kind="class">SAMRAI::pdat::CellComplexLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::CellData</class>
    <class kind="class">SAMRAI::pdat::CellDataFactory</class>
    <class kind="class">SAMRAI::pdat::CellDoubleConstantRefine</class>
    <class kind="class">SAMRAI::pdat::CellDoubleLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::CellFloatConstantRefine</class>
    <class kind="class">SAMRAI::pdat::CellFloatLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::CellGeometry</class>
    <class kind="class">SAMRAI::pdat::CellIndex</class>
    <class kind="class">SAMRAI::pdat::CellIntegerConstantRefine</class>
    <class kind="class">SAMRAI::pdat::CellIterator</class>
    <class kind="class">SAMRAI::pdat::CellOverlap</class>
    <class kind="class">SAMRAI::pdat::CellVariable</class>
    <class kind="class">SAMRAI::pdat::CopyOperation</class>
    <class kind="class">SAMRAI::pdat::DoubleAttributeId</class>
    <class kind="class">SAMRAI::pdat::EdgeComplexConstantRefine</class>
    <class kind="class">SAMRAI::pdat::EdgeComplexLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::EdgeData</class>
    <class kind="class">SAMRAI::pdat::EdgeDataFactory</class>
    <class kind="class">SAMRAI::pdat::EdgeDoubleConstantRefine</class>
    <class kind="class">SAMRAI::pdat::EdgeDoubleLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::EdgeFloatConstantRefine</class>
    <class kind="class">SAMRAI::pdat::EdgeFloatLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::EdgeGeometry</class>
    <class kind="class">SAMRAI::pdat::EdgeIndex</class>
    <class kind="class">SAMRAI::pdat::EdgeIntegerConstantRefine</class>
    <class kind="class">SAMRAI::pdat::EdgeIterator</class>
    <class kind="class">SAMRAI::pdat::EdgeOverlap</class>
    <class kind="class">SAMRAI::pdat::EdgeVariable</class>
    <class kind="class">SAMRAI::pdat::FaceComplexConstantRefine</class>
    <class kind="class">SAMRAI::pdat::FaceComplexLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::FaceData</class>
    <class kind="class">SAMRAI::pdat::FaceDataFactory</class>
    <class kind="class">SAMRAI::pdat::FaceDoubleConstantRefine</class>
    <class kind="class">SAMRAI::pdat::FaceDoubleLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::FaceFloatConstantRefine</class>
    <class kind="class">SAMRAI::pdat::FaceFloatLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::FaceGeometry</class>
    <class kind="class">SAMRAI::pdat::FaceIndex</class>
    <class kind="class">SAMRAI::pdat::FaceIntegerConstantRefine</class>
    <class kind="class">SAMRAI::pdat::FaceIterator</class>
    <class kind="class">SAMRAI::pdat::FaceOverlap</class>
    <class kind="class">SAMRAI::pdat::FaceVariable</class>
    <class kind="class">SAMRAI::pdat::FirstLayerCellNoCornersVariableFillPattern</class>
    <class kind="class">SAMRAI::pdat::FirstLayerCellVariableFillPattern</class>
    <class kind="class">SAMRAI::pdat::FirstLayerNodeVariableFillPattern</class>
    <class kind="class">SAMRAI::pdat::IndexData</class>
    <class kind="class">SAMRAI::pdat::IndexDataNode</class>
    <class kind="class">SAMRAI::pdat::IndexIterator</class>
    <class kind="class">SAMRAI::pdat::IndexDataFactory</class>
    <class kind="class">SAMRAI::pdat::IndexVariable</class>
    <class kind="class">SAMRAI::pdat::IntegerAttributeId</class>
    <class kind="class">SAMRAI::pdat::MultiblockCellDataTranslator</class>
    <class kind="class">SAMRAI::pdat::MultiblockEdgeDataTranslator</class>
    <class kind="class">SAMRAI::pdat::MultiblockFaceDataTranslator</class>
    <class kind="class">SAMRAI::pdat::MultiblockNodeDataTranslator</class>
    <class kind="class">SAMRAI::pdat::MultiblockSideDataTranslator</class>
    <class kind="class">SAMRAI::pdat::NodeComplexInjection</class>
    <class kind="class">SAMRAI::pdat::NodeComplexLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::NodeData</class>
    <class kind="class">SAMRAI::pdat::NodeDataFactory</class>
    <class kind="class">SAMRAI::pdat::NodeDoubleInjection</class>
    <class kind="class">SAMRAI::pdat::NodeDoubleLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::NodeFloatInjection</class>
    <class kind="class">SAMRAI::pdat::NodeFloatLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::NodeGeometry</class>
    <class kind="class">SAMRAI::pdat::NodeIndex</class>
    <class kind="class">SAMRAI::pdat::NodeIntegerInjection</class>
    <class kind="class">SAMRAI::pdat::NodeIterator</class>
    <class kind="class">SAMRAI::pdat::NodeOverlap</class>
    <class kind="class">SAMRAI::pdat::NodeVariable</class>
    <class kind="class">SAMRAI::pdat::OuteredgeData</class>
    <class kind="class">SAMRAI::pdat::OuteredgeDataFactory</class>
    <class kind="class">SAMRAI::pdat::OuteredgeGeometry</class>
    <class kind="class">SAMRAI::pdat::OuteredgeVariable</class>
    <class kind="class">SAMRAI::pdat::OuterfaceComplexConstantRefine</class>
    <class kind="class">SAMRAI::pdat::OuterfaceComplexLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::OuterfaceData</class>
    <class kind="class">SAMRAI::pdat::OuterfaceDataFactory</class>
    <class kind="class">SAMRAI::pdat::OuterfaceDoubleConstantRefine</class>
    <class kind="class">SAMRAI::pdat::OuterfaceDoubleLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::OuterfaceFloatConstantRefine</class>
    <class kind="class">SAMRAI::pdat::OuterfaceFloatLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::OuterfaceGeometry</class>
    <class kind="class">SAMRAI::pdat::OuterfaceIntegerConstantRefine</class>
    <class kind="class">SAMRAI::pdat::OuterfaceVariable</class>
    <class kind="class">SAMRAI::pdat::OuternodeData</class>
    <class kind="class">SAMRAI::pdat::OuternodeDataFactory</class>
    <class kind="class">SAMRAI::pdat::OuternodeDoubleConstantCoarsen</class>
    <class kind="class">SAMRAI::pdat::OuternodeGeometry</class>
    <class kind="class">SAMRAI::pdat::OuternodeVariable</class>
    <class kind="class">SAMRAI::pdat::OutersideComplexLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::OutersideData</class>
    <class kind="class">SAMRAI::pdat::OutersideDataFactory</class>
    <class kind="class">SAMRAI::pdat::OutersideDoubleLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::OutersideFloatLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::OutersideGeometry</class>
    <class kind="class">SAMRAI::pdat::OutersideVariable</class>
    <class kind="class">SAMRAI::pdat::SecondLayerNodeNoCornersVariableFillPattern</class>
    <class kind="class">SAMRAI::pdat::SecondLayerNodeVariableFillPattern</class>
    <class kind="class">SAMRAI::pdat::SideComplexConstantRefine</class>
    <class kind="class">SAMRAI::pdat::SideComplexLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::SideData</class>
    <class kind="class">SAMRAI::pdat::SideDataFactory</class>
    <class kind="class">SAMRAI::pdat::SideDoubleConstantRefine</class>
    <class kind="class">SAMRAI::pdat::SideDoubleLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::SideFloatConstantRefine</class>
    <class kind="class">SAMRAI::pdat::SideFloatLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::SideGeometry</class>
    <class kind="class">SAMRAI::pdat::SideIndex</class>
    <class kind="class">SAMRAI::pdat::SideIntegerConstantRefine</class>
    <class kind="class">SAMRAI::pdat::SideIterator</class>
    <class kind="class">SAMRAI::pdat::SideOverlap</class>
    <class kind="class">SAMRAI::pdat::SideVariable</class>
    <class kind="class">SAMRAI::pdat::SumOperation</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::ArrayData</name>
    <filename>classSAMRAI_1_1pdat_1_1ArrayData.html</filename>
    <templarg>TYPE</templarg>
    <member kind="typedef">
      <type>ArrayDataIterator</type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a81236e34d1a8432a2ec8f1b8dbba0ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>8d7105ba88246dd898f0e8c1cb8de25a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>0ac3abeccf53bd6acb6a606cc41e526f</anchor>
      <arglist>(const hier::Box &amp;box, int depth)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>b6c570cfb8bac255c4deb8fed4c55978</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeArray</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>16721ea5363e314c4b1084cb07a08243</anchor>
      <arglist>(const hier::Box &amp;box, int depth)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a1de5f50684118225e51d00cce1ef5b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>undefineData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>c20e9b3e32e6cb1d77e660d9996cf965</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const hier::Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>617a92b78721e98451ac103395264a48</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>556e170e3ff39f710525e95241d8f8b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOffset</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>c0b3c159c4037535ee8513e4e4610c9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a1f5262caa564ba1509be0a29a9269c7</anchor>
      <arglist>(const int d=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>b9088960667dba3281a48140bb85b548</anchor>
      <arglist>(const int d=0) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>e4b18dee5f303569aa1349e29c2db943</anchor>
      <arglist>(const hier::Index &amp;i, const int d)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>8ab94080f044ad960c9949ab8084cbce</anchor>
      <arglist>(const hier::Index &amp;i, const int d) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a5236d567261cd29c10acafb85cea6bc</anchor>
      <arglist>(const ArrayData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>12d5491f610d5eb999937137c97f70c6</anchor>
      <arglist>(const ArrayData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box, const hier::IntVector &amp;src_shift)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>bdb4a218f3b0bd5e336de05be155459c</anchor>
      <arglist>(const ArrayData&lt; TYPE &gt; &amp;src, const hier::BoxContainer &amp;boxes, const hier::IntVector &amp;src_shift)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>7f8298bcb031689648189877f60ef4c4</anchor>
      <arglist>(int dst_depth, const ArrayData&lt; TYPE &gt; &amp;src, int src_depth, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sum</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>546a49c7a43435719eb23cddf307c75a</anchor>
      <arglist>(const ArrayData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sum</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>6b4cbf834645f7c3860b27ab2d3671e7</anchor>
      <arglist>(const ArrayData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box, const hier::IntVector &amp;src_shift)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sum</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>c55ad9b3847deda1cd8c4e27ff927515</anchor>
      <arglist>(const ArrayData&lt; TYPE &gt; &amp;src, const hier::BoxContainer &amp;boxes, const hier::IntVector &amp;src_shift)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>43dfb9390a244cf1d91e57f8f2a7bbca</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::IntVector &amp;src_shift) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>5749782cdde566714e1a301c6b6ff215</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::Box &amp;dest_box, const hier::IntVector &amp;src_shift) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>d887a30457731973f7d81bbf9b51a4f0</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxContainer &amp;dest_boxes, const hier::IntVector &amp;src_shift) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>2772d6ae19bcf06c96c6b61a1d00b092</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::Box &amp;dest_box, const hier::IntVector &amp;src_offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>f3f9813305196b6177eb912dc6ee5c4a</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxContainer &amp;dest_boxes, const hier::IntVector &amp;src_offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpackStreamAndSum</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>c5927e484570420e28cb53ded1e6fd4a</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::Box &amp;dest_box, const hier::IntVector &amp;src_offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpackStreamAndSum</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>4b7272aec1daea63a01bb2ea1bc4eef9</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxContainer &amp;dest_boxes, const hier::IntVector &amp;src_offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>67ebb8f53913afa73557cf87c1e59c23</anchor>
      <arglist>(const TYPE &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>3edb587b90c00e2416a628537bb7d370</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>0bea85dadac71f1c4916a1ef96cae0ff</anchor>
      <arglist>(const TYPE &amp;t, const int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>b6d34044fbf094e5d6232dbb77890f47</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box, const int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a306965444085da3028e755434aa6914</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>bb9500be57784243cad889cb25542e04</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database, bool data_only=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>0819c390b7413ffb06f6f0a4fafd84a3</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>e19a13ddd22960dfdd9029d350bd02fa</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>b175089d3974fc07c00e68f26d740dfc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateArray</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>9212b539cc95d5224c3296f4fd71a1b6</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>e144e0b8b78e6232516ebb1d27f13706</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>788c953e3a9cb5fd90d81014c506ead7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getSizeOfData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>106a6f4ed3a59d07ac7bbbfc5b0409b0</anchor>
      <arglist>(const hier::Box &amp;box, int depth)</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>tbox::Array&lt; ArrayData&lt; TYPE &gt; &gt;</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>de0663646028b48693fec33b8c0ee4cb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::ArrayDataAccess</name>
    <filename>classSAMRAI_1_1pdat_1_1ArrayDataAccess.html</filename>
    <member kind="function" static="yes">
      <type>static MDA_Access&lt; TYPE, DIM, MDA_OrderColMajor&lt; DIM &gt; &gt;</type>
      <name>access</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataAccess.html</anchorfile>
      <anchor>44ba990c2a4714f5ca075352d4b81f85</anchor>
      <arglist>(ArrayData&lt; TYPE &gt; &amp;array_data, int depth=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MDA_AccessConst&lt; TYPE, DIM, MDA_OrderColMajor&lt; DIM &gt; &gt;</type>
      <name>access</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataAccess.html</anchorfile>
      <anchor>8e9a2fbc407d9c11d6eb686211db8a16</anchor>
      <arglist>(const ArrayData&lt; TYPE &gt; &amp;array_data, int depth=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::ArrayDataIterator</name>
    <filename>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>ArrayDataIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>7276217db99f22cb38a05dbba09149bb</anchor>
      <arglist>(const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayDataIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>866ff1da57be3c888ac2da98dbad7150</anchor>
      <arglist>(const ArrayDataIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type>ArrayDataIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>a7da7c2e76e68640d5efec9cc8b0fe2a</anchor>
      <arglist>(const ArrayDataIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayDataIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>8b4ac9091a886e458296b6b6bc475786</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const hier::Index &amp;</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>bee52ae2bd7a2f3d5fa64d5e33a71116</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::Index &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>ffb2e53acf41fb2ba74d48ded762c9a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>9d0d74a835ad9937b92cc316f9ae101a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const void *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>02768e125e3d6bfce3b0a48cc142ec8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>51f6668e90250452c455537d8d9dcbe6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>85fb272febb34fc977317621c176f287</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>38991d5584e28c6d447bced98cbd7ff1</anchor>
      <arglist>(const ArrayDataIterator &amp;iterator) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>30013b4735f0e7f39b02e9f1f1e6060b</anchor>
      <arglist>(const ArrayDataIterator &amp;iterator) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::ArrayDataOperationUtilities</name>
    <filename>classSAMRAI_1_1pdat_1_1ArrayDataOperationUtilities.html</filename>
    <templarg>TYPE</templarg>
    <templarg>OP</templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>doArrayDataOperationOnBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataOperationUtilities.html</anchorfile>
      <anchor>8f95a8f5f20b3f6fc28c8abde64f9e84</anchor>
      <arglist>(ArrayData&lt; TYPE &gt; &amp;dst, const ArrayData&lt; TYPE &gt; &amp;src, const hier::Box &amp;opbox, const hier::IntVector &amp;src_shift, int dst_start_depth, int src_start_depth, int num_depth, const OP &amp;op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>doArrayDataBufferOperationOnBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataOperationUtilities.html</anchorfile>
      <anchor>43ee8a6b09676261efa122dc8aeef66e</anchor>
      <arglist>(const ArrayData&lt; TYPE &gt; &amp;arraydata, const TYPE *buffer, const hier::Box &amp;opbox, bool src_is_buffer, const OP &amp;op)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellComplexConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1CellComplexConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CellComplexConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellComplexConstantRefine.html</anchorfile>
      <anchor>a25dfe78955bebec820562ec66e9e963</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellComplexConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellComplexConstantRefine.html</anchorfile>
      <anchor>37f0bf09fff3d30da52140c8cb5b18a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellComplexConstantRefine.html</anchorfile>
      <anchor>0ca2b5154ab43075e61e48b99a1a411b</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellComplexConstantRefine.html</anchorfile>
      <anchor>75dd9345d99167dda89b83d0a56bfece</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellComplexConstantRefine.html</anchorfile>
      <anchor>2bbff1488312f12b26e12efd93eb5081</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellComplexConstantRefine.html</anchorfile>
      <anchor>505726f30f523a8acfbe58a0b0386433</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellComplexConstantRefine.html</anchorfile>
      <anchor>698ef68aa4b4873e0849021846a49c94</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellComplexLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1CellComplexLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>CellComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>36fb7b21a29f331432f2790f2cf24c22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>76d9946b1be040ca5f91103f6cbc038a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>56eb64ff73328b71aba9cc29e042c7d6</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a901f6364a1d004737a1f2d4d9a753bc</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellData</name>
    <filename>classSAMRAI_1_1pdat_1_1CellData.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchData</base>
    <member kind="typedef">
      <type>CellIterator</type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>65a3e7ac6bdaa7e62154bdd3922ebe30</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>7bd5f3041789f56dc7769366e7b856ab</anchor>
      <arglist>(const hier::Box &amp;box, int depth, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>c453ef30198afa4b4b8e44f85782bca1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>5f7ca8a597494e816312f5bca2461737</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>48b2185e5fddb550258430be2cd1f5be</anchor>
      <arglist>(int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>f693986d550a4e50db345919d67ab102</anchor>
      <arglist>(int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>9e0f258923a3f4d7b6173cb48f58e92c</anchor>
      <arglist>(const CellIndex &amp;i, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>1182f325ba1bc1b25631565689a67466</anchor>
      <arglist>(const CellIndex &amp;i, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>dd7d7fd8d7e3e7247daa2ebc469c67b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>61de8a12dce6c8017d5c4ecdb30904f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>0c2e796e1fe57027b35990f94b530cc2</anchor>
      <arglist>(const hier::PatchData &amp;src)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>1493cc5ae1dd55e86b80debd8adb489e</anchor>
      <arglist>(hier::PatchData &amp;dst) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>9c413ebfb0a676db47f94ca0d869152f</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>98d55a1335a823ce6ada7e4669ac131e</anchor>
      <arglist>(hier::PatchData &amp;dst, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyOnBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>2d9d27ada53fcde640e3e3639a8308ed</anchor>
      <arglist>(const CellData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copyDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>1f6ccb553744a8aa7f03d266bec6145a</anchor>
      <arglist>(int dst_depth, const CellData&lt; TYPE &gt; &amp;src, int src_depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>5bee017d7c8b0663b361cbd291f86e4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>af3e5b0d7881c35e59c7c709bf5b2183</anchor>
      <arglist>(const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>505abafd355bf1c3bb492d4de6478108</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>acdb458522365ae5b1e8e3a9932284ad</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>d67b129a7e41ad9bfc7232973c58e416</anchor>
      <arglist>(const TYPE &amp;t, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>f4a097c55f8fadf236f869d2a43d2e56</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>7b91626d955429a27fa2a3f05e8fbfe0</anchor>
      <arglist>(const TYPE &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>259c68496515064e409687a876734298</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>54ced50843e737d4e88ea2214bfb8a67</anchor>
      <arglist>(const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>f12a773a8a530b281fb4e06f3972ad41</anchor>
      <arglist>(const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>e1c83035fc3b799242b8ec8607bb5ca4</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>fc81219623841bec3180ad3b2984fce1</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getSizeOfData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>0f46fddc4e024e75f04cdb3a69a094d8</anchor>
      <arglist>(const hier::Box &amp;box, int depth, const hier::IntVector &amp;ghosts)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellDataFactory</name>
    <filename>classSAMRAI_1_1pdat_1_1CellDataFactory.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchDataFactory</base>
    <member kind="function">
      <type></type>
      <name>CellDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDataFactory.html</anchorfile>
      <anchor>3d4844e3d7ecf8259dee9a7437a800bc</anchor>
      <arglist>(int depth, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDataFactory.html</anchorfile>
      <anchor>9798b0dc1316b286eed480a308a5841d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchDataFactory &gt;</type>
      <name>cloneFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDataFactory.html</anchorfile>
      <anchor>e19b9b9fdf167d3fc07b0cee8e944c1c</anchor>
      <arglist>(const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDataFactory.html</anchorfile>
      <anchor>49a7c66b335e688d121a7908943fdb07</anchor>
      <arglist>(const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxGeometry &gt;</type>
      <name>getBoxGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDataFactory.html</anchorfile>
      <anchor>fca19d9cddefd29b6010bb490adda437</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDataFactory.html</anchorfile>
      <anchor>5a601efa76428820c3a5b80d493f3cde</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getSizeOfMemory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDataFactory.html</anchorfile>
      <anchor>f4046785ec844aed7679517a75f1e8f9</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDataFactory.html</anchorfile>
      <anchor>2c42ed64fd4e793b342136a79595980b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDataFactory.html</anchorfile>
      <anchor>9e696cd9841a94b7e5007da105f9f6aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validCopyTo</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDataFactory.html</anchorfile>
      <anchor>542132b0b5607e77424ededb59c78455</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchDataFactory &gt; &amp;dst_pdf) const </arglist>
    </member>
    <member kind="function">
      <type>hier::MultiblockDataTranslator *</type>
      <name>getMultiblockDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDataFactory.html</anchorfile>
      <anchor>44359bd9ada9f2711226354d913a883f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellDoubleConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1CellDoubleConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CellDoubleConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDoubleConstantRefine.html</anchorfile>
      <anchor>e6587d73e20940fc917790de0a5c117a</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellDoubleConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDoubleConstantRefine.html</anchorfile>
      <anchor>1210e7e13110a90e19756c60ef2d69e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDoubleConstantRefine.html</anchorfile>
      <anchor>a43bcd6cbaa1d949584cf87eed5407a4</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDoubleConstantRefine.html</anchorfile>
      <anchor>5fc54055d1c18dfe5d7d9dd1f245dd83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDoubleConstantRefine.html</anchorfile>
      <anchor>dcfac5e4b60e4989701cda5f3c608e3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDoubleConstantRefine.html</anchorfile>
      <anchor>96492951ebf1b08a48db8c3f8e976700</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDoubleConstantRefine.html</anchorfile>
      <anchor>8e5f667e915456ce25811030f73774c4</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellDoubleLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1CellDoubleLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>CellDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>437874fdf0f2fea32eda61610d5c159d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>027064a2a9ac8318bb7d4596c70541fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>9d9840844159d47909571bef72409a81</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>916456ac36b62034226ec6b3a35fc0ce</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellFloatConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1CellFloatConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CellFloatConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellFloatConstantRefine.html</anchorfile>
      <anchor>44fae71e1be39ba42145f853af9f8c23</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellFloatConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellFloatConstantRefine.html</anchorfile>
      <anchor>e928da68dc75553a77e2ca3fc1c872c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellFloatConstantRefine.html</anchorfile>
      <anchor>a5d6e5e89281942b94f1d83cc470b3d8</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellFloatConstantRefine.html</anchorfile>
      <anchor>12e77f1a2b607ba29b935df0cc614881</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellFloatConstantRefine.html</anchorfile>
      <anchor>58279f5bba39ab2425e955ce436f9a0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellFloatConstantRefine.html</anchorfile>
      <anchor>65a583dd5d88047061c8a75f6a3525fc</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellFloatConstantRefine.html</anchorfile>
      <anchor>ac459c94fd0ed02b2e8994d907c24be6</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellFloatLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1CellFloatLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>CellFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>d62c6155b5a78dbb5de72e6ee8faab26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>fbcae244f267807ea6f0d822276e3ef3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>188fdc2e9a5758ebcce02260ff9256f9</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>d176cd0a3f86fa9bc7ed8b407395594a</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellGeometry</name>
    <filename>classSAMRAI_1_1pdat_1_1CellGeometry.html</filename>
    <base>SAMRAI::hier::BoxGeometry</base>
    <member kind="typedef">
      <type>CellOverlap</type>
      <name>Overlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellGeometry.html</anchorfile>
      <anchor>65ca2c64a7b8fe2481c92f686976b95f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellGeometry.html</anchorfile>
      <anchor>66dd56ac232b8c9021fe58e69b74f2ce</anchor>
      <arglist>(const hier::Box &amp;box, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellGeometry.html</anchorfile>
      <anchor>71d64cd7b83b89d1a2fe79bb432fff97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellGeometry.html</anchorfile>
      <anchor>e23988b3e33cf570c668f7a1be24a59e</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation, const bool retry, const hier::BoxContainer &amp;dst_restrict_boxes=hier::BoxContainer()) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeDestinationBoxes</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellGeometry.html</anchorfile>
      <anchor>8b6532c82047b16e682b59a5e5cb9233</anchor>
      <arglist>(hier::BoxContainer &amp;dst_boxes, const CellGeometry &amp;src_geometry, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation, const hier::BoxContainer &amp;dst_restrict_boxes) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>setUpOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellGeometry.html</anchorfile>
      <anchor>ada691412487840dd53d2062bba1b5a3</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellGeometry.html</anchorfile>
      <anchor>05a5d906d39de1aa9a0483aa7e011e76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getGhosts</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellGeometry.html</anchorfile>
      <anchor>51fc674724877e0d668cb8405536e227</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static hier::Box</type>
      <name>toCellBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellGeometry.html</anchorfile>
      <anchor>655c2a7cb46ae83c8a5e2ecad4af2a3b</anchor>
      <arglist>(const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>transform</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellGeometry.html</anchorfile>
      <anchor>e461635e2f0fe331061970451be30fdf</anchor>
      <arglist>(pdat::CellIndex &amp;index, const hier::Transformation &amp;transformation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellIndex</name>
    <filename>classSAMRAI_1_1pdat_1_1CellIndex.html</filename>
    <base>SAMRAI::hier::Index</base>
    <member kind="function">
      <type></type>
      <name>CellIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>169b85c2f3157de68bf768d171c2ed6a</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>6cab9bb67c196a2c1fd29d6604580009</anchor>
      <arglist>(const hier::Index &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>2dd6223af035e617b531dc454ea3623f</anchor>
      <arglist>(const CellIndex &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellIndex &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>25e2bb8dabef294eb1b83338d3a4f8f0</anchor>
      <arglist>(const CellIndex &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>447706c4c7836f65567213ad5b04d73f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CellIndex &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>165eae81a4387e890bbcfd678662839f</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellIndex</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>0a290ac3699e474646941a30a9e61a2a</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>CellIndex &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>514ed7d8f9770001dff93341a8488e39</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellIndex</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>d155dffba0116867c4b8a14f1935cb08</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>CellIndex &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>2c8f441c5b9f926b003a937c571ad174</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellIndex</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>4709a7b22cc7b1fd10ed81bf7c021a7a</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>CellIndex &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>25ca12a418dc1fe7c1b7571c76bceaf7</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellIndex</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>8a7504eee361954580fc9a905c3c8355</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>CellIndex &amp;</type>
      <name>operator *=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>f465c8e3cc94ec14b17cffde0ed4a2b8</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellIndex</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>3cfe0f93f481e3dda7906932eedb03fb</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>CellIndex &amp;</type>
      <name>operator *=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>4ae8f06a66cbf044ec25030e90edcd8d</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellIndex</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>71db6f4654fd55dbe49feccc7dd8848e</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>04f0e571c0ec400f315e3ecf101e1cc8</anchor>
      <arglist>(const CellIndex &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>ebab6d7d015c20691e092f38101baecf</anchor>
      <arglist>(const CellIndex &amp;rhs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellIntegerConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1CellIntegerConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CellIntegerConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIntegerConstantRefine.html</anchorfile>
      <anchor>f08cc4c790a500f261e5a9abaf3377e8</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellIntegerConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIntegerConstantRefine.html</anchorfile>
      <anchor>b2f2151ecf1258a401478faa49cfbf98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIntegerConstantRefine.html</anchorfile>
      <anchor>0afb93fc876767f01d84d0cdac5fbf0a</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIntegerConstantRefine.html</anchorfile>
      <anchor>543c2b2320ff1cbf7d4b44c2e47a6142</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIntegerConstantRefine.html</anchorfile>
      <anchor>5769cc759f93aa093a8e7abfe5a55c56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIntegerConstantRefine.html</anchorfile>
      <anchor>15cff18919aef392226fbaeaf5221844</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIntegerConstantRefine.html</anchorfile>
      <anchor>0664d318397280056456c2b607f2cc58</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellIterator</name>
    <filename>classSAMRAI_1_1pdat_1_1CellIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>CellIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>a62a9ed46eaac9a96c91d692d6a1c2e3</anchor>
      <arglist>(const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>daf0e48ca927ef9076c71b8a9b9ad3e4</anchor>
      <arglist>(const CellIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type>CellIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>08d010190c73c3854cbee540e19acdbb</anchor>
      <arglist>(const CellIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>2d159c69cb71d555e76c25904100e661</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CellIndex &amp;</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>63b586787addd350f2e1fec3c39e36f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const CellIndex &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>e244891dd4aff3e05ff75b523ab257fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>be30d97a65bc15fab058f3d457933dd9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const void *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>4092af7f4c1b852737a89fffdd6b5c1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>ca29a0d1bc43769172c4a7bc154e3b36</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>8d1d3bc3b133d6a6e7925f913c6bf716</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>ac1fbededbbe663ec535f50f4f02fa22</anchor>
      <arglist>(const CellIterator &amp;iterator) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>3caa5354b11a4b8ef08b8637edad12b1</anchor>
      <arglist>(const CellIterator &amp;iterator) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellOverlap</name>
    <filename>classSAMRAI_1_1pdat_1_1CellOverlap.html</filename>
    <base>SAMRAI::hier::BoxOverlap</base>
    <member kind="function">
      <type></type>
      <name>CellOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellOverlap.html</anchorfile>
      <anchor>969d956255354683ec9c9a2765077d2e</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;transformation)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellOverlap.html</anchorfile>
      <anchor>0b3ce8641cf933ca9afab1832264540b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isOverlapEmpty</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellOverlap.html</anchorfile>
      <anchor>3925dfa19b78028e92b85d7ea623f629</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::BoxContainer &amp;</type>
      <name>getDestinationBoxContainer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellOverlap.html</anchorfile>
      <anchor>4b594afb419a4c498d235d23bf3fda5b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::IntVector &amp;</type>
      <name>getSourceOffset</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellOverlap.html</anchorfile>
      <anchor>67002d82a28e1b7b6be6b2478c60cfaa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::Transformation &amp;</type>
      <name>getTransformation</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellOverlap.html</anchorfile>
      <anchor>74cd88160b33a6140888c34867643fb8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellOverlap.html</anchorfile>
      <anchor>1bc60212392fe484ac316d360bd2acbd</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellVariable</name>
    <filename>classSAMRAI_1_1pdat_1_1CellVariable.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::Variable</base>
    <member kind="function">
      <type></type>
      <name>CellVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellVariable.html</anchorfile>
      <anchor>dcd336af86e3b0116f06f09c0adb1942</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name, int depth=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellVariable.html</anchorfile>
      <anchor>d7c7e673d4182fbcf1c8dec90cd043f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellVariable.html</anchorfile>
      <anchor>75d2b25fe985f278e98a8b3b1192dde4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellVariable.html</anchorfile>
      <anchor>25fce23d8a43fa6e73022c39ed29f2d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellVariable.html</anchorfile>
      <anchor>80e35c8ac76973268f5e0418226f50d8</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CopyOperation</name>
    <filename>classSAMRAI_1_1pdat_1_1CopyOperation.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>CopyOperation</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CopyOperation.html</anchorfile>
      <anchor>6e08cc7273630f01087133bcad4bbbe8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CopyOperation</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CopyOperation.html</anchorfile>
      <anchor>f8108bceb27ade609278fa1d8f982718</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CopyOperation.html</anchorfile>
      <anchor>311fe256f86b707ae30530350b71477a</anchor>
      <arglist>(TYPE &amp;vdst, const TYPE &amp;vsrc) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::DoubleAttributeId</name>
    <filename>classSAMRAI_1_1pdat_1_1DoubleAttributeId.html</filename>
    <member kind="function">
      <type></type>
      <name>DoubleAttributeId</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1DoubleAttributeId.html</anchorfile>
      <anchor>13f0313d0fbdfd9bac20a3e7277df487</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DoubleAttributeId</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1DoubleAttributeId.html</anchorfile>
      <anchor>01ffc490634b1a628f61d1dc1747f7b9</anchor>
      <arglist>(const DoubleAttributeId &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DoubleAttributeId</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1DoubleAttributeId.html</anchorfile>
      <anchor>12ebddb6e37bf683e86e6536cc5c615e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DoubleAttributeId &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1DoubleAttributeId.html</anchorfile>
      <anchor>758e5cb860ff82ecd21e5b7ee162114c</anchor>
      <arglist>(const DoubleAttributeId &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1DoubleAttributeId.html</anchorfile>
      <anchor>d1e50f2111258fe743654b2bba5bc508</anchor>
      <arglist>(const DoubleAttributeId &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1DoubleAttributeId.html</anchorfile>
      <anchor>a2b31b93ed2a3ca082eb0e54cdb149fb</anchor>
      <arglist>(const DoubleAttributeId &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1DoubleAttributeId.html</anchorfile>
      <anchor>e27c6293900900b27d504bfe0b622324</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Attributes</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1DoubleAttributeId.html</anchorfile>
      <anchor>c9f9a8ba9865d096b4e810d467298c5b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeComplexConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeComplexConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>EdgeComplexConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeComplexConstantRefine.html</anchorfile>
      <anchor>0bd9aa3e50ee53b007fb5f8ca9fed5e4</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeComplexConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeComplexConstantRefine.html</anchorfile>
      <anchor>ed4158f95bd8d124efd2f3904266c154</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeComplexConstantRefine.html</anchorfile>
      <anchor>e76c1c461d2a879412893eb7b82a5f66</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeComplexConstantRefine.html</anchorfile>
      <anchor>dc3ec061673f02175d221c394b0905c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeComplexConstantRefine.html</anchorfile>
      <anchor>00c852746b657d85272cde4361731706</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeComplexConstantRefine.html</anchorfile>
      <anchor>0ca0b1ce8b9c7182dafd78c658efd558</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeComplexLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeComplexLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>EdgeComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>ea061e89fe48a1ebdda78f35225af197</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>7395f6d10bb2d07636329067a1529cd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>d3cf24b28ab0ba5875374b9f6da9611e</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>0f0639eef5c4523d7b5efec3d62e8e96</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeData</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeData.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchData</base>
    <member kind="typedef">
      <type>EdgeIterator</type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>b0e2a241b13c4d6d3c295d63b97882bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EdgeData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>cbbbce93b385966199311de2102313ff</anchor>
      <arglist>(const hier::Box &amp;box, int depth, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>7b42bbf85ebc17e8c29ff091ea66e88e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>aa045642d890ed259d274e3184265274</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>4b02df011f458223fcd706da1c504066</anchor>
      <arglist>(int axis, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>d8e1fb540f5e7c2f24b49610dac6e7ab</anchor>
      <arglist>(int axis, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>2345a2238bb8a74d34cee7a76eed03cb</anchor>
      <arglist>(const EdgeIndex &amp;i, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>b84f5b87f242511bf2fd52b17a140add</anchor>
      <arglist>(const EdgeIndex &amp;i, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>84f41917adb7257f68a70ab2c0c38433</anchor>
      <arglist>(int axis)</arglist>
    </member>
    <member kind="function">
      <type>const ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>29fedd3b5f212e6ef313d6a440a8dcd8</anchor>
      <arglist>(int axis) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>4a3a3ef2df738718ebfaa8ea0c27a589</anchor>
      <arglist>(const hier::PatchData &amp;src)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>c865295ceeb66ac9a0b1eba73e7d6a81</anchor>
      <arglist>(hier::PatchData &amp;dst) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>d69ff961a8f64feec556627ab70a0cfb</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>3d53d54ebf999661e8cd1fa665771ede</anchor>
      <arglist>(hier::PatchData &amp;dst, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyOnBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>a1cc142d81541f04d05c3fd883d9a37a</anchor>
      <arglist>(const EdgeData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>40eff46256c69acdeb27113f843eb380</anchor>
      <arglist>(int dst_depth, const EdgeData&lt; TYPE &gt; &amp;src, int src_depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>e9fb675c532bdf63aae3e95210e8422d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>25ed1a16d50ad6463fa7606b09f91739</anchor>
      <arglist>(const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>23519bf7784d26adf49b3dbdc2e1a982</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>2d93cc6a86862f3b39dca5f00222808b</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>72e6196ec45d0c2f35027f40c83ad680</anchor>
      <arglist>(const TYPE &amp;t, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>92a09b9488381f3689399788508b5319</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>6c628ee34a0785b2cf3ad880c66faa7f</anchor>
      <arglist>(const TYPE &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>a680efc7e5b8bf976f7cd444568a9748</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>1021dec44f45073e13627f3bab054b35</anchor>
      <arglist>(const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>b05e3b022419cffdcba5a2c7526d0e46</anchor>
      <arglist>(const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>464819ba2f4e920a859b40c9c1b11231</anchor>
      <arglist>(int axis, const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>01a3bf9c2aa32b97bf4dbeaafe377604</anchor>
      <arglist>(int axis, const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>159e7058382264fe453d18b3157091b2</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>d7839ebc07b354bc5f6a8acd6114df9b</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getSizeOfData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>b6813f8d8c3cde558c63a20f3fab22db</anchor>
      <arglist>(const hier::Box &amp;box, int depth, const hier::IntVector &amp;ghosts)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeDataFactory</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchDataFactory</base>
    <member kind="function">
      <type></type>
      <name>EdgeDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</anchorfile>
      <anchor>1ec6b62263d9a85d6c8489d91981bc63</anchor>
      <arglist>(int depth, const hier::IntVector &amp;ghosts, bool fine_boundary_represents_var)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</anchorfile>
      <anchor>8d98083a52db74c1a1c652bf3dc6afd1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchDataFactory &gt;</type>
      <name>cloneFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</anchorfile>
      <anchor>5b23bc15884a71f6f06abe5ac96450fe</anchor>
      <arglist>(const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</anchorfile>
      <anchor>4e42ed3dbc617cd455b1e80eddfb8c74</anchor>
      <arglist>(const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxGeometry &gt;</type>
      <name>getBoxGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</anchorfile>
      <anchor>fe999a74c83262b81c5f7006e1065dc6</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</anchorfile>
      <anchor>50773f85d7f916fdc6c02ab069e2abc9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getSizeOfMemory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</anchorfile>
      <anchor>c251dc917a19d6dce01d4a11fbf2c7ad</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</anchorfile>
      <anchor>033d87f02db6aec0bc4df870addff27e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</anchorfile>
      <anchor>d253cbd3cbc07705997846f5266cbe16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validCopyTo</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</anchorfile>
      <anchor>825e33ea00fc7f3cea17bffa47b4ffc5</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchDataFactory &gt; &amp;dst_pdf) const </arglist>
    </member>
    <member kind="function">
      <type>hier::MultiblockDataTranslator *</type>
      <name>getMultiblockDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</anchorfile>
      <anchor>36383dff1772d5554cad6c23a21830c7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeDoubleConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeDoubleConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>EdgeDoubleConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDoubleConstantRefine.html</anchorfile>
      <anchor>c715aa2b9809e792570e4ed4b5d7d930</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeDoubleConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDoubleConstantRefine.html</anchorfile>
      <anchor>ca7e8373cda6d2284a7e9187e1a51590</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDoubleConstantRefine.html</anchorfile>
      <anchor>8512d44edd694d15eb9291510feae6da</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDoubleConstantRefine.html</anchorfile>
      <anchor>9417afec6f9ec27dc79add4b7428e4c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDoubleConstantRefine.html</anchorfile>
      <anchor>e14181bc3efda8ebd2fc701c5e0ce9cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDoubleConstantRefine.html</anchorfile>
      <anchor>a748289e70a4de071aba0a50bd07d42e</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeDoubleLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeDoubleLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>EdgeDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>c03062fe32214b59cf9fda84d1cfbe2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>2a706cc8488c4ff7fa5c40298171e579</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>d9c90ebed8155130c683fc1e223b2913</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>d7098c025bd189a32ec1e396702f5472</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeFloatConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeFloatConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>EdgeFloatConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeFloatConstantRefine.html</anchorfile>
      <anchor>3a65346f402b584476fd8081569f4afc</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeFloatConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeFloatConstantRefine.html</anchorfile>
      <anchor>62ea67eafe874407b8379e49154f6dc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeFloatConstantRefine.html</anchorfile>
      <anchor>54490c50e8091bb5ba8d6ae1600d74b7</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeFloatConstantRefine.html</anchorfile>
      <anchor>a067226b8e18a79c3be38192bb0d82c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeFloatConstantRefine.html</anchorfile>
      <anchor>60652302f843ec7924b7e0901d7461c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeFloatConstantRefine.html</anchorfile>
      <anchor>f3431a1706914f854ba2b9b644273f8f</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeFloatLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeFloatLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>EdgeFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>b4179e92b7d398d3fc12dbdd0ec45a58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>074494d28ce0b8fde2c04a07527cc494</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>76624c928155a20e77577508d196adce</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>4c10c18d010d5475eb4ebdcd028a159b</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeGeometry</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeGeometry.html</filename>
    <base>SAMRAI::hier::BoxGeometry</base>
    <member kind="typedef">
      <type>EdgeOverlap</type>
      <name>Overlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeGeometry.html</anchorfile>
      <anchor>82b01e321e98bd38b53860e83d8c14a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EdgeGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeGeometry.html</anchorfile>
      <anchor>300dfb454f89130d689cc77e305c86d2</anchor>
      <arglist>(const hier::Box &amp;box, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeGeometry.html</anchorfile>
      <anchor>8cab2c368664da4abcba313dabf9eddd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeGeometry.html</anchorfile>
      <anchor>50a43f9e3604469612ab50a80ba8acdd</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation, const bool retry, const hier::BoxContainer &amp;dst_restrict_boxes=hier::BoxContainer()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>setUpOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeGeometry.html</anchorfile>
      <anchor>c3b701ab25b343963ffb437e8a8965b2</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeGeometry.html</anchorfile>
      <anchor>8e86de4f4ef772b4b55e31a8601abb47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getGhosts</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeGeometry.html</anchorfile>
      <anchor>439f02f78672bf6a6d1b5d885edf4a47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static hier::Box</type>
      <name>toEdgeBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeGeometry.html</anchorfile>
      <anchor>52ad07a1e63633db6c7d35bc999412d5</anchor>
      <arglist>(const hier::Box &amp;box, int axis_direction)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>transform</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeGeometry.html</anchorfile>
      <anchor>b0d585338858eae90bf5eb2d3a0efa56</anchor>
      <arglist>(hier::Box &amp;box, int &amp;axis_direction, const hier::Transformation &amp;transformation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>transform</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeGeometry.html</anchorfile>
      <anchor>f4120050848b35b0dbfc35eab831e3ec</anchor>
      <arglist>(EdgeIndex &amp;index, const hier::Transformation &amp;transformation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeIndex</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeIndex.html</filename>
    <base>SAMRAI::hier::Index</base>
    <member kind="enumvalue">
      <type>@</type>
      <name>X</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>b2d2862ef99adee46fc2e335a6f46bcfc326298e03268bb8729ec9279a2e55a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Y</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>b2d2862ef99adee46fc2e335a6f46bcff13299acaa53efd238b5e5fce241669c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Z</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>b2d2862ef99adee46fc2e335a6f46bcfd2a6b70b84a1ae12b32a28d83bd72084</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Lower</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>b2d2862ef99adee46fc2e335a6f46bcfeca44b612a9be7b7e26825b16e479e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Upper</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>b2d2862ef99adee46fc2e335a6f46bcf0e8c4959510d06db39d26685a5badec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LowerLeft</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>b2d2862ef99adee46fc2e335a6f46bcf6a3598a50c1a7524d8e1f62d9e8f80ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LowerRight</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>b2d2862ef99adee46fc2e335a6f46bcfac65ad05df80368805ccc25e9c453aae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UpperLeft</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>b2d2862ef99adee46fc2e335a6f46bcf1d30a9e740a6d1712c58fa2ad25512c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UpperRight</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>b2d2862ef99adee46fc2e335a6f46bcf01831eaf83dd475ff3074c5851b2832e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>X</name>
      <anchor>b2d2862ef99adee46fc2e335a6f46bcfc326298e03268bb8729ec9279a2e55a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Y</name>
      <anchor>b2d2862ef99adee46fc2e335a6f46bcff13299acaa53efd238b5e5fce241669c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Z</name>
      <anchor>b2d2862ef99adee46fc2e335a6f46bcfd2a6b70b84a1ae12b32a28d83bd72084</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Lower</name>
      <anchor>b2d2862ef99adee46fc2e335a6f46bcfeca44b612a9be7b7e26825b16e479e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Upper</name>
      <anchor>b2d2862ef99adee46fc2e335a6f46bcf0e8c4959510d06db39d26685a5badec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LowerLeft</name>
      <anchor>b2d2862ef99adee46fc2e335a6f46bcf6a3598a50c1a7524d8e1f62d9e8f80ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LowerRight</name>
      <anchor>b2d2862ef99adee46fc2e335a6f46bcfac65ad05df80368805ccc25e9c453aae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UpperLeft</name>
      <anchor>b2d2862ef99adee46fc2e335a6f46bcf1d30a9e740a6d1712c58fa2ad25512c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UpperRight</name>
      <anchor>b2d2862ef99adee46fc2e335a6f46bcf01831eaf83dd475ff3074c5851b2832e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EdgeIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>bded3645e57f1a1ee3aea5da839b8286</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EdgeIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>61fa3e258e4192a729bf7e65bb2a59ea</anchor>
      <arglist>(const hier::Index &amp;rhs, const int axis, const int edge)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EdgeIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>dbb2abb9079a9d9ad535605fa7200105</anchor>
      <arglist>(const EdgeIndex &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>d0d37e86539c52ef4ac352bb41b62be7</anchor>
      <arglist>(const EdgeIndex &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EdgeIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>ff477912b5d831c894bd7b2f2793ad13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>47ac99a7564f38292cfec57ac5d88612</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>8c9ca32412235608e4f65fbf2185ce5b</anchor>
      <arglist>(const int axis)</arglist>
    </member>
    <member kind="function">
      <type>hier::Index</type>
      <name>toCell</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>7eb1607dd5ecbb1a419e4809ce55eb84</anchor>
      <arglist>(const int edge) const </arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>e09ad1faa6d1f90b9c01612779623ec3</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>736a9b11eaef893a880f0538ef643568</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>d64a173828f76224e28391fbafcb707b</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>9171b0d67388108150f7957fb3cd5377</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>d34cb818fb611f26a76cc2f55546a079</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>432072d42f05fdec3c2db33b12be5d33</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>c61abb219018b92ad093e985cc9ed481</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>60b585752dab80cba60743c97d057108</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex &amp;</type>
      <name>operator *=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>78f440a98cac2c58da6552c01d2f2d44</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>34a30e2de724d875705419778a9bfaca</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex &amp;</type>
      <name>operator *=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>a49a1157f388a13510711a14f76ff56b</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>3c66788eea2a964343a225516d03db70</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>54d740fbd3b9849ec8b6bf95cc1b8c91</anchor>
      <arglist>(const EdgeIndex &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>00ca00ff728843296387cc1f626ae59c</anchor>
      <arglist>(const EdgeIndex &amp;rhs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeIntegerConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeIntegerConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>EdgeIntegerConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIntegerConstantRefine.html</anchorfile>
      <anchor>364380b7050f11982b4fe482938a4f5f</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeIntegerConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIntegerConstantRefine.html</anchorfile>
      <anchor>026325e64dddc0d7797266f288311278</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIntegerConstantRefine.html</anchorfile>
      <anchor>4581b756f48978484a77606685ce4126</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIntegerConstantRefine.html</anchorfile>
      <anchor>d887371cc7a2e99b51e809d31a3bd48e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIntegerConstantRefine.html</anchorfile>
      <anchor>dc8900fc477f951229b902c03e6edc8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIntegerConstantRefine.html</anchorfile>
      <anchor>4ad4d3e9f1b0584cb687761ae168032a</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeIterator</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>EdgeIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>35104e7226d87d6b30c5be1694f5c8b8</anchor>
      <arglist>(const hier::Box &amp;box, const int axis)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EdgeIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>15e512dfcf78145eb17a6aab5c93e2d4</anchor>
      <arglist>(const EdgeIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type>EdgeIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>d7a4b5e2c91e4f36487d172f3b27a18f</anchor>
      <arglist>(const EdgeIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EdgeIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>08c0a94c3f6e684da528d5a1c4b8939b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const EdgeIndex &amp;</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>f89fc7b9617670e248957114bcab1e12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const EdgeIndex &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>e284c2e8dccdfeeb66bf4fc194b5af65</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>681a1dd5dcd8e13f54d7763246d4b9ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const void *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>f3b7aab5d4bfdc798a9df26b66f0ff04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>3dc605f56cd6eed02fdc7dd4e5678a14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>998ff0b3748c862e58ee6c506ef6b499</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>8a5cc98776bd93edcd4ac95b8438de15</anchor>
      <arglist>(const EdgeIterator &amp;iterator) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>d0241a2b60ea1081aeee977be094a069</anchor>
      <arglist>(const EdgeIterator &amp;iterator) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeOverlap</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeOverlap.html</filename>
    <base>SAMRAI::hier::BoxOverlap</base>
    <member kind="function">
      <type></type>
      <name>EdgeOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeOverlap.html</anchorfile>
      <anchor>38876a3398aa2f9f392ed501668715b6</anchor>
      <arglist>(const tbox::Array&lt; hier::BoxContainer &gt; &amp;boxes, const hier::Transformation &amp;transformation)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeOverlap.html</anchorfile>
      <anchor>f1a2005db22cb55aa70df20353b3eb81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isOverlapEmpty</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeOverlap.html</anchorfile>
      <anchor>ff3545caf62ce1e597c4a8639ac463e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::BoxContainer &amp;</type>
      <name>getDestinationBoxContainer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeOverlap.html</anchorfile>
      <anchor>220121af0aac9183a5cf38614c5edb1a</anchor>
      <arglist>(const int axis) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::IntVector &amp;</type>
      <name>getSourceOffset</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeOverlap.html</anchorfile>
      <anchor>e886649286d921f8837f3475f0a62931</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::Transformation &amp;</type>
      <name>getTransformation</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeOverlap.html</anchorfile>
      <anchor>11c716dc22ec78da1d61cd97fbcdda77</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeVariable</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeVariable.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::Variable</base>
    <member kind="function">
      <type></type>
      <name>EdgeVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeVariable.html</anchorfile>
      <anchor>756fe433c3fe05ac813714ecac41a01b</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name, int depth=1, bool fine_boundary_represents_var=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeVariable.html</anchorfile>
      <anchor>88472a2c6a1ccd8232c6be940f9e9c31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeVariable.html</anchorfile>
      <anchor>54f2d2393e2ad3eda205531fce29ad19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeVariable.html</anchorfile>
      <anchor>f6d2787206cce782ab849b2f68751bf7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeVariable.html</anchorfile>
      <anchor>2532fc5bbfd3b483b70fba4f9deaff6f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceComplexConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceComplexConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>FaceComplexConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceComplexConstantRefine.html</anchorfile>
      <anchor>9d2c0e174fe5b7c0ef1b24f2e718c072</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceComplexConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceComplexConstantRefine.html</anchorfile>
      <anchor>0f2266837e82e220cc3beed3132c9a0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceComplexConstantRefine.html</anchorfile>
      <anchor>024ed2962609f5c275485d916085589d</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceComplexConstantRefine.html</anchorfile>
      <anchor>48a150522723cff612ec9aa91c7b7cc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceComplexConstantRefine.html</anchorfile>
      <anchor>931a3378a0c42623d15f6675e6c0fa0e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceComplexConstantRefine.html</anchorfile>
      <anchor>eb6b52517a2b55b80d17e659f194df73</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceComplexLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceComplexLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>FaceComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>3ca20df07c579ae5da8234a5f988d6b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>51ced95e2dd37d550e32885f6cbb5d88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>aff7f8cfa94aa6e0d9043c52679c3c80</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>44dba411b873c5bd4237ddd3d900ec83</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceData</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceData.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchData</base>
    <member kind="typedef">
      <type>FaceIterator</type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>314ac0d9494d9fdbd14977b5ef66a57e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FaceData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>09dc09fe84813fba2ace698b23d2e3e2</anchor>
      <arglist>(const hier::Box &amp;box, int depth, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>21e1c8f29c2a3ff17c540303cf0efe7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>ced56f815d5c03e937a30e1ee7bf073b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>5b331ccb07363480afdeace3c2ef4823</anchor>
      <arglist>(int face_normal, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>ec4778d269366a85b1664fe49fe29cf5</anchor>
      <arglist>(int face_normal, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>aed0fc2e19b76f8a5726f253a0abaed5</anchor>
      <arglist>(const FaceIndex &amp;i, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>b6912a8b29322637ddcd03f78dffaf0a</anchor>
      <arglist>(const FaceIndex &amp;i, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>7aa073aff77dbd6c9d9340b8f1be44d6</anchor>
      <arglist>(int face_normal)</arglist>
    </member>
    <member kind="function">
      <type>const ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>7174da9efa3559e03a06be2d56b79056</anchor>
      <arglist>(int face_normal) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>7cd5ba05ae41550e3564f1bef4a0048f</anchor>
      <arglist>(const hier::PatchData &amp;src)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>c74052bfe1a0cf93a80525ff0ad17c1d</anchor>
      <arglist>(hier::PatchData &amp;dst) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>c817a8641bea479c9f2bcf4b6a6c8709</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>268f7f9e48c92ae83e61afddb5f5e9fa</anchor>
      <arglist>(hier::PatchData &amp;dst, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyOnBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>9b6fa7ef84aba363abdfffa3c2e784c7</anchor>
      <arglist>(const FaceData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>aac8978717b4f120d196392363de5329</anchor>
      <arglist>(int dst_depth, const FaceData&lt; TYPE &gt; &amp;src, int src_depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>b4dd84cc0915cfe8d108981ac8b5dc07</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>a1d6f2fbdf0ab13e872cb62acc049be8</anchor>
      <arglist>(const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>9f01a40c7c58365451f8d547b90ad77a</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>269d6c5051a11dd57e7c30f0c34317c5</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>6e82da11bc76b4e50445a99687ad274e</anchor>
      <arglist>(const TYPE &amp;t, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>51ec6a9e433750bbc607c8a5bff8d925</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>e8f0e6409a55513287b7472fceae04b0</anchor>
      <arglist>(const TYPE &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>a646a5abdafda33beae8f20d9f64f4c9</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>df9cd41577d95de623baecfd9b0bfeae</anchor>
      <arglist>(const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>995e717e68ede6feee5d209b86ad5098</anchor>
      <arglist>(const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>0adb6eeb5acf6169ed0d228dffbb96c1</anchor>
      <arglist>(int face_normal, const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>d29145dd16349a14d6cd47e057b60e11</anchor>
      <arglist>(int face_normal, const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>751f0fd98668ed7fd4ba979ef6ca2607</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>6cfcbfce09beea5706108866c0eadee2</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getSizeOfData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>f18cb849e1b3828491099d1d219608e7</anchor>
      <arglist>(const hier::Box &amp;box, int depth, const hier::IntVector &amp;ghosts)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceDataFactory</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchDataFactory</base>
    <member kind="function">
      <type></type>
      <name>FaceDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</anchorfile>
      <anchor>9c5cdfd65ae0762b06730ee6fc63bdf0</anchor>
      <arglist>(int depth, const hier::IntVector &amp;ghosts, bool fine_boundary_represents_var)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</anchorfile>
      <anchor>beab69e1bbe4feac7c8f54c07d3bcebc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchDataFactory &gt;</type>
      <name>cloneFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</anchorfile>
      <anchor>7ec1f57ff7ca847c6013a54a3afbe1e2</anchor>
      <arglist>(const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</anchorfile>
      <anchor>16740c735b0f1238d18835ae6bc01269</anchor>
      <arglist>(const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxGeometry &gt;</type>
      <name>getBoxGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</anchorfile>
      <anchor>65e0293d09ed1049cef76e0a1165908b</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</anchorfile>
      <anchor>7aded141efee4aeab39012aa35b7ce61</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getSizeOfMemory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</anchorfile>
      <anchor>5153603f982771fef4ebb6a71f5f317b</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</anchorfile>
      <anchor>41946f81125af4f9d03289679b69510a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</anchorfile>
      <anchor>55b2efb81f6e0d24e3e607f0777a8bb0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validCopyTo</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</anchorfile>
      <anchor>a4a72ba976e5f93245dcfb5236b2e87b</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchDataFactory &gt; &amp;dst_pdf) const </arglist>
    </member>
    <member kind="function">
      <type>hier::MultiblockDataTranslator *</type>
      <name>getMultiblockDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</anchorfile>
      <anchor>015736f9c6bf87fe1eb5682eeafd6a6f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceDoubleConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceDoubleConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>FaceDoubleConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDoubleConstantRefine.html</anchorfile>
      <anchor>5ac33e5916b9246d1eb9f64956d7dce1</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceDoubleConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDoubleConstantRefine.html</anchorfile>
      <anchor>dc633424b8be19e9361844e8ffee1624</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDoubleConstantRefine.html</anchorfile>
      <anchor>42f7c45a20d31c36098160b2e1385c0a</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDoubleConstantRefine.html</anchorfile>
      <anchor>c38171bc74d13a4f0193a92ed80137d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDoubleConstantRefine.html</anchorfile>
      <anchor>3ff89e362f9bd7762422edfde4d85dd7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDoubleConstantRefine.html</anchorfile>
      <anchor>93836c51024eec681923b914aa233525</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceDoubleLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceDoubleLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>FaceDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>25bbfc56697c90e823bfc3c330d11e3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>6f729c3dfb6d976363384c0e229d20f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>57e3fcb13e835e5ddd15bb46ee15051d</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>744d779f328aa1126d423dee78ec4a2b</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceFloatConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceFloatConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>FaceFloatConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceFloatConstantRefine.html</anchorfile>
      <anchor>3ce7fef04197ce1378d955e6f3f45b80</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceFloatConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceFloatConstantRefine.html</anchorfile>
      <anchor>56ed2c71be4f68e1d5f380a8ea1ce6bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceFloatConstantRefine.html</anchorfile>
      <anchor>44b3807dccfddec25f7d0d932415d728</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceFloatConstantRefine.html</anchorfile>
      <anchor>e7f3980fb01dca2e5eb939e1b86bf4f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceFloatConstantRefine.html</anchorfile>
      <anchor>dc53e907b2a937fcb8832bf75679bb14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceFloatConstantRefine.html</anchorfile>
      <anchor>6f0d4e3dc408c2cec16a70bd382dcfd2</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceFloatLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceFloatLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>FaceFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>f507daca8ee37d352beb9e00a2362dcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>9234303f1cc396fa04df6d3c8b49485c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>05e4010f93330411d9743b5d94eb73a3</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>bf39909331ce6ebb0c0b45e9a7b4b259</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceGeometry</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceGeometry.html</filename>
    <base>SAMRAI::hier::BoxGeometry</base>
    <member kind="typedef">
      <type>FaceOverlap</type>
      <name>Overlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceGeometry.html</anchorfile>
      <anchor>84a6ae21b849f7717aae82fc2d33f1bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FaceGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceGeometry.html</anchorfile>
      <anchor>d68d0afb037b673a9124b8e9b08ebefd</anchor>
      <arglist>(const hier::Box &amp;box, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceGeometry.html</anchorfile>
      <anchor>6cecb9be2f4393b6e6188565664b99df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceGeometry.html</anchorfile>
      <anchor>f1c3e494c0b175a1f449b652da92a703</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation, const bool retry, const hier::BoxContainer &amp;dst_restrict_boxes=hier::BoxContainer()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>setUpOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceGeometry.html</anchorfile>
      <anchor>0da951dce3175ddd246de1be0bb66cb9</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceGeometry.html</anchorfile>
      <anchor>3a3f34a797fcf5780a0b0aa7b5a0782e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getGhosts</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceGeometry.html</anchorfile>
      <anchor>985a6d815f87d391e6f6ff371cabbc24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static hier::Box</type>
      <name>toFaceBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceGeometry.html</anchorfile>
      <anchor>a4bf0005c6eea59ef3290034d4c51dac</anchor>
      <arglist>(const hier::Box &amp;box, int face_normal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>transform</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceGeometry.html</anchorfile>
      <anchor>7a20012f0793d2dd40c8bec1eaaa997d</anchor>
      <arglist>(hier::Box &amp;box, int &amp;normal_direction, const hier::Transformation &amp;transformation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>transform</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceGeometry.html</anchorfile>
      <anchor>a609fea7b407bf6c9b878e48df2cca22</anchor>
      <arglist>(FaceIndex &amp;index, const hier::Transformation &amp;transformation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceIndex</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceIndex.html</filename>
    <base>SAMRAI::hier::Index</base>
    <member kind="enumvalue">
      <type>@</type>
      <name>X</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a9abfea8ca85e7b5dd22ed9f7d2beb51c3c655af5236f534bcecf5bfaee301b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Y</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a9abfea8ca85e7b5dd22ed9f7d2beb51f2df31b0c2557b8c6dd586784b8efe47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Z</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a9abfea8ca85e7b5dd22ed9f7d2beb5160137d9ac4996eca1d6c7fc348030a3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Lower</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a9abfea8ca85e7b5dd22ed9f7d2beb51f338791ce3e6fcd93daaba83ec5ec660</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Upper</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a9abfea8ca85e7b5dd22ed9f7d2beb516da01fab7df3fd024ee28faf7f9e094c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>X</name>
      <anchor>a9abfea8ca85e7b5dd22ed9f7d2beb51c3c655af5236f534bcecf5bfaee301b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Y</name>
      <anchor>a9abfea8ca85e7b5dd22ed9f7d2beb51f2df31b0c2557b8c6dd586784b8efe47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Z</name>
      <anchor>a9abfea8ca85e7b5dd22ed9f7d2beb5160137d9ac4996eca1d6c7fc348030a3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Lower</name>
      <anchor>a9abfea8ca85e7b5dd22ed9f7d2beb51f338791ce3e6fcd93daaba83ec5ec660</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Upper</name>
      <anchor>a9abfea8ca85e7b5dd22ed9f7d2beb516da01fab7df3fd024ee28faf7f9e094c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FaceIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>5253e3715f118f0dbb3196e96053af57</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FaceIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>4f9437a66c79fe8c1f1367badc63646a</anchor>
      <arglist>(const hier::Index &amp;rhs, const int axis, const int face)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FaceIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>3a6d92ad48a267c4570af9b34fd2d130</anchor>
      <arglist>(const FaceIndex &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>FaceIndex &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a6466410b1da2d296025c13ac46b4c95</anchor>
      <arglist>(const FaceIndex &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FaceIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>2f0f5d62dde2ba5161eee823878a7bbd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>c0405a369139d3332aad640f7616feae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>80646911bfd18bd2026f6274ea577e0f</anchor>
      <arglist>(const int axis)</arglist>
    </member>
    <member kind="function">
      <type>hier::Index</type>
      <name>toCell</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>34711f8cdd79dab78365f5ccc7e68928</anchor>
      <arglist>(const int face) const </arglist>
    </member>
    <member kind="function">
      <type>FaceIndex &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>4e97835cc47654d938e3e4a4b13a8302</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>FaceIndex</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>143a77b2157ab4e8200fd6078eca4ec2</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>FaceIndex &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>fc07500f00d28f944f5a60d846f528b0</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>FaceIndex</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>b0da964bcd04acd3f5a8df4887bd6a94</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>FaceIndex &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>5a1fa883cfa52a3d95561381084bb1eb</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>FaceIndex</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>490ffbe92f8ffb1d547164c12840ddfb</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>FaceIndex &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>138c083da97dd45874bc9c34faa774df</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>FaceIndex</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>120769595ce97b404c17b5db4c27f39a</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>FaceIndex &amp;</type>
      <name>operator *=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a46a97744cde496c088fdf2fb5967fcb</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>FaceIndex</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>9818e232ae5586ee23c1e1c92cf87112</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>FaceIndex &amp;</type>
      <name>operator *=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>c358b3b53a080439433d0efe78869e5b</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>FaceIndex</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>f893687cfd8a004bc7d6356e6ebd12a7</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>abd9dbdc3e2b7fb31baf2290a7e8255c</anchor>
      <arglist>(const FaceIndex &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>d830b89833bbcc02a048e4b39720dc5c</anchor>
      <arglist>(const FaceIndex &amp;rhs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceIntegerConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceIntegerConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>FaceIntegerConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIntegerConstantRefine.html</anchorfile>
      <anchor>9b3b3299054e78e3fc093264f459ee19</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceIntegerConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIntegerConstantRefine.html</anchorfile>
      <anchor>415f7b7b509ae6ca568f15793c6ee355</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIntegerConstantRefine.html</anchorfile>
      <anchor>f781395f3773d9e9b9368c352046759a</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIntegerConstantRefine.html</anchorfile>
      <anchor>d39fa597846fb94e93d70b3eef5c84f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIntegerConstantRefine.html</anchorfile>
      <anchor>1bea9e48d24796fcb220db86a6a880c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIntegerConstantRefine.html</anchorfile>
      <anchor>58e45bc770e9f0ae0bbd3e1992e4cd1f</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceIterator</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>FaceIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>d76fe8ad6c2715de33ea123dd1eead44</anchor>
      <arglist>(const hier::Box &amp;box, const int axis)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FaceIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>c2565cc6e8c43570d0d4fe28925cd74b</anchor>
      <arglist>(const FaceIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type>FaceIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>bbf8abde7e56762a79cea316210444d7</anchor>
      <arglist>(const FaceIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FaceIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>9df8d4c99b792644ff356d22817c41dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FaceIndex &amp;</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>0cf6abfb16f9e33dd483bb6fde6ff518</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const FaceIndex &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>1b709931c5eb84c4f0fd2d1435cbbfc6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>0014db13e42304511e0750ebe1617daf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const void *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>d9bcc6285e2f9bccde13fd7576d70bf2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>47a8a3338a85a6c76bd6128009adad94</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>60d92094b0bc115fa02e1daa36c3ac52</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>43aec6640586ba7c4784cfd9a395fc48</anchor>
      <arglist>(const FaceIterator &amp;iterator) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>24950a0f8da3123b856a68eaa833552c</anchor>
      <arglist>(const FaceIterator &amp;iterator) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceOverlap</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceOverlap.html</filename>
    <base>SAMRAI::hier::BoxOverlap</base>
    <member kind="function">
      <type></type>
      <name>FaceOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceOverlap.html</anchorfile>
      <anchor>72594aa91d77bbc12eb9d21734cdb10c</anchor>
      <arglist>(const tbox::Array&lt; hier::BoxContainer &gt; &amp;boxes, const hier::Transformation &amp;transformation)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceOverlap.html</anchorfile>
      <anchor>aeac3dbadc5f933fb4c351a16fb22119</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isOverlapEmpty</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceOverlap.html</anchorfile>
      <anchor>4746458c2955392dc0c2031a446dc4ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::BoxContainer &amp;</type>
      <name>getDestinationBoxContainer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceOverlap.html</anchorfile>
      <anchor>670576b74e61ec4258c65f6a5b643f40</anchor>
      <arglist>(const int axis) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::IntVector &amp;</type>
      <name>getSourceOffset</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceOverlap.html</anchorfile>
      <anchor>7c5fd722a1ff0363e25728fdc9662398</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::Transformation &amp;</type>
      <name>getTransformation</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceOverlap.html</anchorfile>
      <anchor>155ae417e71a30ec8c85e8dcdbfd811d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceVariable</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceVariable.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::Variable</base>
    <member kind="function">
      <type></type>
      <name>FaceVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceVariable.html</anchorfile>
      <anchor>1d90d9d5119ae16d5976d937c66ed93a</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name, int depth=1, bool fine_boundary_represents_var=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceVariable.html</anchorfile>
      <anchor>fc38e89c54e7bda8251beff12906ea8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceVariable.html</anchorfile>
      <anchor>088f45f7dc8393de7b5fbcafad6b5257</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceVariable.html</anchorfile>
      <anchor>b2e4e163f189c42a8f6dd950aed4bcf8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceVariable.html</anchorfile>
      <anchor>4cb77c50e9e4bbb3fc73d8c269aac07e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FirstLayerCellNoCornersVariableFillPattern</name>
    <filename>classSAMRAI_1_1pdat_1_1FirstLayerCellNoCornersVariableFillPattern.html</filename>
    <base>SAMRAI::xfer::VariableFillPattern</base>
    <member kind="function">
      <type></type>
      <name>FirstLayerCellNoCornersVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellNoCornersVariableFillPattern.html</anchorfile>
      <anchor>602ce93970ef9c1cab63dba6d33143e5</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FirstLayerCellNoCornersVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellNoCornersVariableFillPattern.html</anchorfile>
      <anchor>419ec017f3770b641c221f07878fb97a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellNoCornersVariableFillPattern.html</anchorfile>
      <anchor>d5e19be745526e15f8e63f1641d810ab</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;dst_patch_box, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>computeFillBoxesOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellNoCornersVariableFillPattern.html</anchorfile>
      <anchor>6965b89eb38f696665d8538c5a38d61a</anchor>
      <arglist>(const hier::BoxContainer &amp;fill_boxes, const hier::Box &amp;patch_box, const hier::Box &amp;data_box, const hier::PatchDataFactory &amp;pdf) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellNoCornersVariableFillPattern.html</anchorfile>
      <anchor>5ba9c2909903b3f4c9a336ea89908ef7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getPatternName</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellNoCornersVariableFillPattern.html</anchorfile>
      <anchor>265a7ec53be4f52195c86025326e5ba6</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FirstLayerCellVariableFillPattern</name>
    <filename>classSAMRAI_1_1pdat_1_1FirstLayerCellVariableFillPattern.html</filename>
    <base>SAMRAI::xfer::VariableFillPattern</base>
    <member kind="function">
      <type></type>
      <name>FirstLayerCellVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellVariableFillPattern.html</anchorfile>
      <anchor>94c019e62708ef2c42e734893d79d541</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FirstLayerCellVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellVariableFillPattern.html</anchorfile>
      <anchor>60753341d560a1b1eac4bdfaea86ecd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellVariableFillPattern.html</anchorfile>
      <anchor>6addcac82556cb63eac378c3467ce074</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;dst_patch_box, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>computeFillBoxesOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellVariableFillPattern.html</anchorfile>
      <anchor>f3b82cf5ab717197ee34cf92409cb535</anchor>
      <arglist>(const hier::BoxContainer &amp;fill_boxes, const hier::Box &amp;patch_box, const hier::Box &amp;data_box, const hier::PatchDataFactory &amp;pdf) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellVariableFillPattern.html</anchorfile>
      <anchor>7779d3a8d5a85ccc8ca49757a51834d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getPatternName</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellVariableFillPattern.html</anchorfile>
      <anchor>07d72608a9995d0861aa303c2205943c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FirstLayerNodeVariableFillPattern</name>
    <filename>classSAMRAI_1_1pdat_1_1FirstLayerNodeVariableFillPattern.html</filename>
    <base>SAMRAI::xfer::VariableFillPattern</base>
    <member kind="function">
      <type></type>
      <name>FirstLayerNodeVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>014ae268370a80d9ec295de6517ed8b7</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FirstLayerNodeVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>b81c0223f541e3004f4cf6c25ec98102</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>877963485fa08cdd5d12aed71bd826c6</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;dst_patch_box, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>computeFillBoxesOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>7583f4c873059b33425bb26f208c4320</anchor>
      <arglist>(const hier::BoxContainer &amp;fill_boxes, const hier::Box &amp;patch_box, const hier::Box &amp;data_box, const hier::PatchDataFactory &amp;pdf) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>bf207eeb4ea71b545e882e09154e428c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getPatternName</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>a4f2457231148d17921ab3e5ae20b9f0</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::IndexData</name>
    <filename>classSAMRAI_1_1pdat_1_1IndexData.html</filename>
    <templarg>TYPE</templarg>
    <templarg>BOX_GEOMETRY</templarg>
    <base>SAMRAI::hier::PatchData</base>
    <member kind="typedef">
      <type>IndexIterator&lt; TYPE, BOX_GEOMETRY &gt;</type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>8c304e3a278c7664762471826e0e96e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ConstIndexIterator&lt; TYPE, BOX_GEOMETRY &gt;</type>
      <name>ConstIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>dca6eb4b647bf4e89c72fca267ef7fbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IndexData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>acb21d1fd4d0bc937f5cc15d11580102</anchor>
      <arglist>(const hier::Box &amp;box, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IndexData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>208e3b633060640ea8d4d50a9c4b74c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>99bcd952ccfd0ca0090969b14eb838d5</anchor>
      <arglist>(const hier::PatchData &amp;src)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>5869ffbcb7539ea1f1083959e8649523</anchor>
      <arglist>(hier::PatchData &amp;dst) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>06595cf2b31d4289e0164397806a680d</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>1fbebce9aa5d01a566e40af4b16edbdf</anchor>
      <arglist>(hier::PatchData &amp;dst, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>9db35f6e8f49e211462c7bcb8a9029a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>a2b0401e571b5f725770daf5f270592e</anchor>
      <arglist>(const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>e87360378a9a608892c9ec494addca92</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>ec8d27fe1d365b73f75f83ad85d4c758</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendItem</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>931afc282915e77d8381b9e27264cb8c</anchor>
      <arglist>(const hier::Index &amp;index, const TYPE &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendItemPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>3b239be6b1e7e15895d6a9a79b9256fd</anchor>
      <arglist>(const hier::Index &amp;index, TYPE *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>33e3cf4ac9c7c04a1d40cc763f9d84a3</anchor>
      <arglist>(const hier::Index &amp;index, const TYPE &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItemPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>2ea0e89c4f0e22fe4c84d1ac1064ea40</anchor>
      <arglist>(const hier::Index &amp;index, TYPE *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceAddItem</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>b8b836411a0798641d43ad0e239cd64d</anchor>
      <arglist>(const hier::Index &amp;index, const TYPE &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceAddItemPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>23cfa0b7b0e7e9bf61ba2045c68c883d</anchor>
      <arglist>(const hier::Index &amp;index, TYPE *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceAppendItem</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>b0af51ce534ba20e235d2bee12b4fbc4</anchor>
      <arglist>(const hier::Index &amp;index, const TYPE &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceAppendItemPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>9ae6cb58d56ae1509558b45ee8af899f</anchor>
      <arglist>(const hier::Index &amp;index, TYPE *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>7b6ad43bcbc9b176ae27b49d6df573c5</anchor>
      <arglist>(const hier::Index &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfItems</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>44cc5e05050e897d62cc5ea3ec6e4b9d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeInsideBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>3762df0f2468fefcb2f4132a3ed0cbd3</anchor>
      <arglist>(const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeOutsideBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>4011bb1e9bbf5936ec6cd0eb9b36e9e6</anchor>
      <arglist>(const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeGhostItems</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>ec92b69d9f1702cc37c72521473ad2ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllItems</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>6685c217512ff21b10f9d861e9295b6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isElement</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>74ea56f86c3bbbbbc3e86a695bfe436b</anchor>
      <arglist>(const hier::Index &amp;index) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getItem</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>41ce4e137f2e60525668faf4b6af9382</anchor>
      <arglist>(const hier::Index &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>4e6bb1f79c39d3a9281ea64bf43e72e4</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>8e3a66737856e996a86cb95a1afcbd07</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>IndexIterator&lt; TYPE, BOX_GEOMETRY &gt;</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>29bf18abb486c1b3ee1fb5a3b425af36</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ConstIndexIterator&lt; TYPE, BOX_GEOMETRY &gt;</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>7a8cb872a5fba9172bdab35a5a5c86f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::IndexDataNode</name>
    <filename>classSAMRAI_1_1pdat_1_1IndexDataNode.html</filename>
    <templarg>TYPE</templarg>
    <templarg>BOX_GEOMETRY</templarg>
    <member kind="function">
      <type></type>
      <name>IndexDataNode</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataNode.html</anchorfile>
      <anchor>1a27a325069ed10999eb3ff16cd85a3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IndexDataNode</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataNode.html</anchorfile>
      <anchor>c2945e6bc9e35dbfcb05abb141cd97e3</anchor>
      <arglist>(const hier::Index &amp;index, const int d_offset, TYPE &amp;t, IndexDataNode&lt; TYPE, BOX_GEOMETRY &gt; *n, IndexDataNode&lt; TYPE, BOX_GEOMETRY &gt; *p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IndexDataNode</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataNode.html</anchorfile>
      <anchor>18e83b40e797d14c1ca9391641ad719d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>IndexData&lt; TYPE, BOX_GEOMETRY &gt;</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataNode.html</anchorfile>
      <anchor>82510c9513c363a04336e70f89f4bc2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>IndexIterator&lt; TYPE, BOX_GEOMETRY &gt;</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataNode.html</anchorfile>
      <anchor>29bf18abb486c1b3ee1fb5a3b425af36</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstIndexIterator&lt; TYPE, BOX_GEOMETRY &gt;</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataNode.html</anchorfile>
      <anchor>7a8cb872a5fba9172bdab35a5a5c86f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::IndexIterator</name>
    <filename>classSAMRAI_1_1pdat_1_1IndexIterator.html</filename>
    <templarg>TYPE</templarg>
    <templarg>BOX_GEOMETRY</templarg>
    <member kind="function">
      <type></type>
      <name>IndexIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>426b22c7ceae8f660ecca11351363618</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IndexIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>95498e5de31960061770a117c25e7a2d</anchor>
      <arglist>(const IndexData&lt; TYPE, BOX_GEOMETRY &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IndexIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>623ffefbd6e574765e38069f98981db4</anchor>
      <arglist>(const IndexIterator&lt; TYPE, BOX_GEOMETRY &gt; &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type>IndexIterator&lt; TYPE, BOX_GEOMETRY &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>a2d227e96536df63c01dd9d8062ef6cd</anchor>
      <arglist>(const IndexIterator&lt; TYPE, BOX_GEOMETRY &gt; &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~IndexIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>08e08bdf76bf29a94fd19ab0b4fc2836</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>0cfafe9223d3c2d3bc96bc5ca3c96013</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>f53e563a91ec1faec80fcbfde8217519</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>5d8ac07c899e9cb7fadfa3be1b9ecae4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>f74f38475ec9522028677b3a157f13e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>getItem</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>9d5e257bebe848e7c68b46e4586188fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const hier::Index &amp;</type>
      <name>getIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>b1a669586a54152d1c938f26a2e03dd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>0e0ee1c91420ec5b49bb01e343af43ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const void *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>5c6ac5ad67417a46f423f434715b4c35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>f5fe4e2f1cd834b3d15cbaef30f8f26f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>69d96c8c454ad4cb30a1bf86a56445e4</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator--</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>a08914d8cb84d22f64be64ea09dfcc48</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>f0a121515427719adc16fede016c37ab</anchor>
      <arglist>(const IndexIterator&lt; TYPE, BOX_GEOMETRY &gt; &amp;iterator) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>900b814ad425e5d52166bc1e5fba60a1</anchor>
      <arglist>(const IndexIterator&lt; TYPE, BOX_GEOMETRY &gt; &amp;iterator) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rewindIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>fddbfcd73b160cc4cc4473a920123433</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fastforwardIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>dd4a3235a2903b597285681a46cc79a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ConstIndexIterator&lt; TYPE, BOX_GEOMETRY &gt;</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>7a8cb872a5fba9172bdab35a5a5c86f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>IndexData&lt; TYPE, BOX_GEOMETRY &gt;</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>82510c9513c363a04336e70f89f4bc2b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::IndexDataFactory</name>
    <filename>classSAMRAI_1_1pdat_1_1IndexDataFactory.html</filename>
    <templarg>TYPE</templarg>
    <templarg>BOX_GEOMETRY</templarg>
    <base>SAMRAI::hier::PatchDataFactory</base>
    <member kind="function">
      <type></type>
      <name>IndexDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataFactory.html</anchorfile>
      <anchor>a89b66ec61025817470fb6c2c0a1f14a</anchor>
      <arglist>(const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IndexDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataFactory.html</anchorfile>
      <anchor>c71ea92fa65638834e8164bc43e41036</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchDataFactory &gt;</type>
      <name>cloneFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataFactory.html</anchorfile>
      <anchor>92aebc51722100b287e273c3f454253c</anchor>
      <arglist>(const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataFactory.html</anchorfile>
      <anchor>6aa3a9376d092a235a53e4e3a5f7bdea</anchor>
      <arglist>(const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxGeometry &gt;</type>
      <name>getBoxGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataFactory.html</anchorfile>
      <anchor>700b0beabe6c839576cda08342ebdfcd</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getSizeOfMemory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataFactory.html</anchorfile>
      <anchor>9097446eac924b519fc2138892fc6352</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataFactory.html</anchorfile>
      <anchor>5fef4b3da87fab6445887f84ec98a5bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataFactory.html</anchorfile>
      <anchor>ccf9dbbbaadd938ddd2c264d1387f6c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validCopyTo</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataFactory.html</anchorfile>
      <anchor>8c2f03eb088aed0e81f8192157263a2e</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchDataFactory &gt; &amp;dst_pdf) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::IndexVariable</name>
    <filename>classSAMRAI_1_1pdat_1_1IndexVariable.html</filename>
    <templarg>TYPE</templarg>
    <templarg>BOX_GEOMETRY</templarg>
    <base>SAMRAI::hier::Variable</base>
    <member kind="function">
      <type></type>
      <name>IndexVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexVariable.html</anchorfile>
      <anchor>7de4d9a28ce632e1095f81ee60921663</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IndexVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexVariable.html</anchorfile>
      <anchor>ba24549e3cf098e98c25265ae7515f0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexVariable.html</anchorfile>
      <anchor>bcaa1fbbf4eec58b58dbc0b1ccea8eaf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexVariable.html</anchorfile>
      <anchor>31008b0afc2e5fc9e33d40f51e87ed30</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::IntegerAttributeId</name>
    <filename>classSAMRAI_1_1pdat_1_1IntegerAttributeId.html</filename>
    <member kind="function">
      <type></type>
      <name>IntegerAttributeId</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IntegerAttributeId.html</anchorfile>
      <anchor>6bde86dfbdddd731b13f93de64606726</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IntegerAttributeId</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IntegerAttributeId.html</anchorfile>
      <anchor>908c09e5faa0dd1bb5df6f6dddca4fea</anchor>
      <arglist>(const IntegerAttributeId &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~IntegerAttributeId</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IntegerAttributeId.html</anchorfile>
      <anchor>acc2ec0889ad17084483161da0b94961</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>IntegerAttributeId &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IntegerAttributeId.html</anchorfile>
      <anchor>67683228dd88a3380e2bca0bf583ffd8</anchor>
      <arglist>(const IntegerAttributeId &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IntegerAttributeId.html</anchorfile>
      <anchor>a5e93395f24b952242e789331541c824</anchor>
      <arglist>(const IntegerAttributeId &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IntegerAttributeId.html</anchorfile>
      <anchor>aff9b7977be3183f93bf6a702c7aa9dd</anchor>
      <arglist>(const IntegerAttributeId &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IntegerAttributeId.html</anchorfile>
      <anchor>1e7b1ded0659da05ba89a08c72a8e984</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Attributes</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IntegerAttributeId.html</anchorfile>
      <anchor>c9f9a8ba9865d096b4e810d467298c5b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::MultiblockCellDataTranslator</name>
    <filename>classSAMRAI_1_1pdat_1_1MultiblockCellDataTranslator.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::MultiblockDataTranslator</base>
    <member kind="function">
      <type></type>
      <name>MultiblockCellDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockCellDataTranslator.html</anchorfile>
      <anchor>af2363adf5057d6b80ad9a3a6eb31973</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiblockCellDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockCellDataTranslator.html</anchorfile>
      <anchor>7639ff05e816772aa78ed15bda3a986d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>translateAndCopyData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockCellDataTranslator.html</anchorfile>
      <anchor>db8b9c35b3b133eb6a56117f0fa9c9ba</anchor>
      <arglist>(hier::Patch &amp;dst_patch, const int dst_id, const hier::Patch &amp;src_patch, const int src_id, const hier::IntVector &amp;shift, const hier::Transformation::RotationIdentifier rotate)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>translateAndFillData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockCellDataTranslator.html</anchorfile>
      <anchor>f865276b6707b0a226f1c784dc720a30</anchor>
      <arglist>(hier::Patch &amp;dst_patch, const int dst_id, const hier::Patch &amp;src_patch, const int src_id, const hier::IntVector &amp;shift, const hier::Transformation::RotationIdentifier rotate)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::MultiblockEdgeDataTranslator</name>
    <filename>classSAMRAI_1_1pdat_1_1MultiblockEdgeDataTranslator.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::MultiblockDataTranslator</base>
    <member kind="function">
      <type></type>
      <name>MultiblockEdgeDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockEdgeDataTranslator.html</anchorfile>
      <anchor>eb8ececd41d351545e025d98d8ab973d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiblockEdgeDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockEdgeDataTranslator.html</anchorfile>
      <anchor>2771794965092277b345394a397f1dd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>translateAndCopyData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockEdgeDataTranslator.html</anchorfile>
      <anchor>9011547035ec2a1bc2d5ba3c592bd773</anchor>
      <arglist>(hier::Patch &amp;dst_patch, const int dst_id, const hier::Patch &amp;src_patch, const int src_id, const hier::IntVector &amp;shift, const hier::Transformation::RotationIdentifier rotate)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>translateAndFillData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockEdgeDataTranslator.html</anchorfile>
      <anchor>977a6c78720a4a16b4c562c84cb01ce7</anchor>
      <arglist>(hier::Patch &amp;dst_patch, const int dst_id, const hier::Patch &amp;src_patch, const int src_id, const hier::IntVector &amp;shift, const hier::Transformation::RotationIdentifier rotate)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::MultiblockFaceDataTranslator</name>
    <filename>classSAMRAI_1_1pdat_1_1MultiblockFaceDataTranslator.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::MultiblockDataTranslator</base>
    <member kind="function">
      <type></type>
      <name>MultiblockFaceDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockFaceDataTranslator.html</anchorfile>
      <anchor>713686b587280bc7044ee10ecd60a343</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiblockFaceDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockFaceDataTranslator.html</anchorfile>
      <anchor>aa10ec6940a5fb3352ea920b93e910b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>translateAndCopyData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockFaceDataTranslator.html</anchorfile>
      <anchor>d8161ff067b33b0235dab963e8c15904</anchor>
      <arglist>(hier::Patch &amp;dst_patch, const int dst_id, const hier::Patch &amp;src_patch, const int src_id, const hier::IntVector &amp;shift, const hier::Transformation::RotationIdentifier rotate)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>translateAndFillData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockFaceDataTranslator.html</anchorfile>
      <anchor>aadafd3febb525c33a0995a8d0c658bb</anchor>
      <arglist>(hier::Patch &amp;dst_patch, const int dst_id, const hier::Patch &amp;src_patch, const int src_id, const hier::IntVector &amp;shift, const hier::Transformation::RotationIdentifier rotate)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::MultiblockNodeDataTranslator</name>
    <filename>classSAMRAI_1_1pdat_1_1MultiblockNodeDataTranslator.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::MultiblockDataTranslator</base>
    <member kind="function">
      <type></type>
      <name>MultiblockNodeDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockNodeDataTranslator.html</anchorfile>
      <anchor>35721f1e894796c39693bb6d883c4026</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiblockNodeDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockNodeDataTranslator.html</anchorfile>
      <anchor>13b550dd70a522ad05db1b77f7e48403</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>translateAndCopyData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockNodeDataTranslator.html</anchorfile>
      <anchor>ee4a3b66b4c20e46c6ede49ce63b8735</anchor>
      <arglist>(hier::Patch &amp;dst_patch, const int dst_id, const hier::Patch &amp;src_patch, const int src_id, const hier::IntVector &amp;shift, const hier::Transformation::RotationIdentifier rotate)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>translateAndFillData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockNodeDataTranslator.html</anchorfile>
      <anchor>106f5d5277fa91dd0bc849bf9921ef9a</anchor>
      <arglist>(hier::Patch &amp;dst_patch, const int dst_id, const hier::Patch &amp;src_patch, const int src_id, const hier::IntVector &amp;shift, const hier::Transformation::RotationIdentifier rotate)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::MultiblockSideDataTranslator</name>
    <filename>classSAMRAI_1_1pdat_1_1MultiblockSideDataTranslator.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::MultiblockDataTranslator</base>
    <member kind="function">
      <type></type>
      <name>MultiblockSideDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockSideDataTranslator.html</anchorfile>
      <anchor>cece1b45dc7e8d1883e9865b0dd04ba5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiblockSideDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockSideDataTranslator.html</anchorfile>
      <anchor>b00101e4edbae448776a8210d1042169</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>translateAndCopyData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockSideDataTranslator.html</anchorfile>
      <anchor>b65f3c9579506bea9a7a4f91303374ce</anchor>
      <arglist>(hier::Patch &amp;dst_patch, const int dst_id, const hier::Patch &amp;src_patch, const int src_id, const hier::IntVector &amp;shift, const hier::Transformation::RotationIdentifier rotate)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>translateAndFillData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockSideDataTranslator.html</anchorfile>
      <anchor>60cd6c4b45e6187bcb3beae327fc7dce</anchor>
      <arglist>(hier::Patch &amp;dst_patch, const int dst_id, const hier::Patch &amp;src_patch, const int src_id, const hier::IntVector &amp;shift, const hier::Transformation::RotationIdentifier rotate)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeComplexInjection</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeComplexInjection.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>NodeComplexInjection</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeComplexInjection.html</anchorfile>
      <anchor>6e05495dd072a51d901d9d9de67da435</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeComplexInjection</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeComplexInjection.html</anchorfile>
      <anchor>34f03d257713faca80342518f7f8a9c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeComplexInjection.html</anchorfile>
      <anchor>180b7b3f2434fcf6bfd3b866da4ae980</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeComplexInjection.html</anchorfile>
      <anchor>bba465ec458058be1022e79a0aec6ba7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeComplexInjection.html</anchorfile>
      <anchor>2507faf8c39902faeb1a95dac3df567e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeComplexInjection.html</anchorfile>
      <anchor>886671ffe566caf5887d7deb148d3a13</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeComplexLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeComplexLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>NodeComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>8452515e4c3eb75acd4de19e08334c7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>8b2786855d4221700b8b718bd411f34b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>13293e2d679ce71788af3737d485126a</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>34c836e561f8dc177acd5dcdfb1205bc</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeData</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeData.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchData</base>
    <member kind="typedef">
      <type>NodeIterator</type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>6a7e3fc08e7004e68f1b9a40f33b6a06</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>a9f4ee780c2af2f3cfac81015a420581</anchor>
      <arglist>(const hier::Box &amp;box, int depth, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>acdea0f1e1fb6f0f2e89a4b8e70f6c3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>0048a5f63d2396dc274d9d9d0448ca4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>7a3d3ddff6c11455863235ba1ca8be06</anchor>
      <arglist>(int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>345fb7d66861f5f9bf0309eb46d4b142</anchor>
      <arglist>(int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>43ff28544c8e8f2d6cc1a040873851bb</anchor>
      <arglist>(const NodeIndex &amp;i, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>513a6b5241faaeeb9ebe0a8da8f428f0</anchor>
      <arglist>(const NodeIndex &amp;i, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>8cd047cd5d19e24797702a52a2fbac0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>c4df883ae728a2bb171d9967d394e141</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>95c0fa831b20262a9fe251b35ec460a4</anchor>
      <arglist>(const hier::PatchData &amp;src)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>7dbeb04126a2ed0e291e21ba18ea7ca2</anchor>
      <arglist>(hier::PatchData &amp;dst) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>45dd7aaca6be1b42935f78117995c4fa</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>03a39501dd6176ed1082a940fe4b1561</anchor>
      <arglist>(hier::PatchData &amp;dst, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyOnBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>85988987484f186fa21b3ac8818bfa46</anchor>
      <arglist>(const NodeData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>43b810f3129823fa10c2ea3c5636b758</anchor>
      <arglist>(int dst_depth, const NodeData&lt; TYPE &gt; &amp;src, int src_depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>ca64b861173713dd760d59046e33147a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>6ce00260b2f994ff38602239553acd5c</anchor>
      <arglist>(const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>ba97a95662a64879d67828f2d2ab3f86</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>a01e150a82caf18039279a8cbe487478</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>8fc5460a42c1bc476a3b5632365906d6</anchor>
      <arglist>(const TYPE &amp;t, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>4fada7c62c189df0e411bc02b519f4c9</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>ed99924bed6be4d97ea7ec50aac671f0</anchor>
      <arglist>(const TYPE &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>fdece7336be4c4b5e1a241b8590ee2a8</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>0426dd471f1ea2330118a0725e10450d</anchor>
      <arglist>(const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>6fdd48788a0c70d7dd9cc2ae7d9874b4</anchor>
      <arglist>(const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>fb620084386e9a9d1462fa1e2fbc49f6</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>d963ff3da2a77999194c6f123d4a7852</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getSizeOfData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>4f16f50e44fc4cb741d18125d9270b33</anchor>
      <arglist>(const hier::Box &amp;box, int depth, const hier::IntVector &amp;ghosts)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeDataFactory</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchDataFactory</base>
    <member kind="function">
      <type></type>
      <name>NodeDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</anchorfile>
      <anchor>6e1965d0e3c7bad06e7d1113599a835b</anchor>
      <arglist>(int depth, const hier::IntVector &amp;ghosts, bool fine_boundary_represents_var)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</anchorfile>
      <anchor>131b562fd8252127dadade91fcbf413b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchDataFactory &gt;</type>
      <name>cloneFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</anchorfile>
      <anchor>2c413bed686a495d7fd732da7fbcfe71</anchor>
      <arglist>(const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</anchorfile>
      <anchor>6fecc270ac0f1c44468093e08341aa7c</anchor>
      <arglist>(const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxGeometry &gt;</type>
      <name>getBoxGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</anchorfile>
      <anchor>f0a6a3087bf054b160f35cc9d1b43b0a</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</anchorfile>
      <anchor>c0adda27bd0efe6105ebbd8f6497e6cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getSizeOfMemory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</anchorfile>
      <anchor>28fbccf89d502116b4c788a02f22392d</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</anchorfile>
      <anchor>9f567d0fe7a10b63186e767db27af6ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</anchorfile>
      <anchor>44f4e136320a67b1e253dc4c1307a732</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validCopyTo</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</anchorfile>
      <anchor>f349de3a20dc1dc7258d661d677bf3e9</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchDataFactory &gt; &amp;dst_pdf) const </arglist>
    </member>
    <member kind="function">
      <type>hier::MultiblockDataTranslator *</type>
      <name>getMultiblockDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</anchorfile>
      <anchor>7ad0b172527f2b0f050b68e588b53060</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeDoubleInjection</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeDoubleInjection.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>NodeDoubleInjection</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDoubleInjection.html</anchorfile>
      <anchor>8894f13a4e75f9d843a46fe501453c73</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeDoubleInjection</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDoubleInjection.html</anchorfile>
      <anchor>3572fa5a92133222834aa9f37a5d536c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDoubleInjection.html</anchorfile>
      <anchor>20566de152caadc42126177a4c9fef41</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDoubleInjection.html</anchorfile>
      <anchor>bea1e6e594071c90ea52aa07c38a8f0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDoubleInjection.html</anchorfile>
      <anchor>ed1dd3478e430557a3609c04137b494a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDoubleInjection.html</anchorfile>
      <anchor>3cd2ac458d9a1f1f8759650711113882</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeDoubleLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeDoubleLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>NodeDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>aa4f59368c3a8843baf4912697b9d130</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>4efd20c17694d162b9dcb0708f4f3adf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>58077ddc22fcd83735d3b7af0ec4f2c4</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>3a8ce60ec020f1e094940815969ce931</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeFloatInjection</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeFloatInjection.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>NodeFloatInjection</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeFloatInjection.html</anchorfile>
      <anchor>136b1d08d54589e3f2bcc2f18c574782</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeFloatInjection</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeFloatInjection.html</anchorfile>
      <anchor>fd5d237ccee0d55e353c8d162b70cac4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeFloatInjection.html</anchorfile>
      <anchor>2bab9dcb752652fe2c7273e6dd66a24f</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeFloatInjection.html</anchorfile>
      <anchor>b3ed9d9366f894801b23f45afb26c00f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeFloatInjection.html</anchorfile>
      <anchor>609f2681784c5e9ebedef34defbc969c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeFloatInjection.html</anchorfile>
      <anchor>12bcbe909312e17dc178d5b0b6a469ed</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeFloatLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeFloatLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>NodeFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>89d76dc0dff334504c64b56a74d27113</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>34f57a6f8e94013db68a9fb98549e76a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>32f41287d8c9a595f3bdb283d5244d33</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>70ba4086da10ce8b9e601a13e4cd04be</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeGeometry</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeGeometry.html</filename>
    <base>SAMRAI::hier::BoxGeometry</base>
    <member kind="typedef">
      <type>NodeOverlap</type>
      <name>Overlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeGeometry.html</anchorfile>
      <anchor>67612845e4ec11c2e71e81cf9662f3ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeGeometry.html</anchorfile>
      <anchor>4a429d1ebedc4bc769624299592e70c3</anchor>
      <arglist>(const hier::Box &amp;box, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeGeometry.html</anchorfile>
      <anchor>68e469112a588ababebb2f969bf1f0ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeGeometry.html</anchorfile>
      <anchor>5dada26267fc217d0761cb68351c5c4b</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation, const bool retry, const hier::BoxContainer &amp;dst_restrict_boxes=hier::BoxContainer()) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeDestinationBoxes</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeGeometry.html</anchorfile>
      <anchor>416a6f5b0d6c320f93b7d8dd36242813</anchor>
      <arglist>(hier::BoxContainer &amp;dst_boxes, const NodeGeometry &amp;src_geometry, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation, const hier::BoxContainer &amp;dst_restrict_boxes=hier::BoxContainer()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>setUpOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeGeometry.html</anchorfile>
      <anchor>216d6091653b0400cf0a8e062d280883</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeGeometry.html</anchorfile>
      <anchor>686b77b79152cf38c3e80d4895334f4a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getGhosts</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeGeometry.html</anchorfile>
      <anchor>26058d0f2dfb44827984369c0b34c494</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static hier::Box</type>
      <name>toNodeBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeGeometry.html</anchorfile>
      <anchor>28e27de6fbc5d3f60d8897fa20cf2403</anchor>
      <arglist>(const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>transform</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeGeometry.html</anchorfile>
      <anchor>5f90baa607bb2055fb7ce2dd08cd9d4b</anchor>
      <arglist>(hier::Box &amp;box, const hier::Transformation &amp;transformation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>transform</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeGeometry.html</anchorfile>
      <anchor>d55a995ded55e6b80ff297755367a021</anchor>
      <arglist>(pdat::NodeIndex &amp;index, const hier::Transformation &amp;transformation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeIndex</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeIndex.html</filename>
    <base>SAMRAI::hier::Index</base>
    <member kind="enumvalue">
      <type>@</type>
      <name>Left</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581d7ee6f90d60745e2219368acf520b23ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Right</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581df1287b5145190baf0d0608786c49e0f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LowerLeft</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581db464ad267cd64ae92ae64194b883faab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LowerRight</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581d058af83cd4bc521f8c8455e84053e5e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UpperLeft</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581d993b5472180efda87ee5765765493111</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UpperRight</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581d38b0cc96d1d6d5cbef1430792087b90b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LLL</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581d4d05401dc7365dddc270688e5313e8c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ULL</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581dd479988c88e25040139c5745286b60ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LUL</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581dc9e2c8443708d457683d050940c1acb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UUL</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581dc97532792ab427840f5395574efb0c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LLU</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581d6f2f15200d91504b88af4009d65a02c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ULU</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581da7329b9185971b26bbfdb23a115953d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LUU</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581dd587dfe57ffef11ae03fa0d4ea962a4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UUU</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581d81531480c20eb06c36c9cb257140a5a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Corner</name>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Left</name>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581d7ee6f90d60745e2219368acf520b23ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Right</name>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581df1287b5145190baf0d0608786c49e0f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LowerLeft</name>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581db464ad267cd64ae92ae64194b883faab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LowerRight</name>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581d058af83cd4bc521f8c8455e84053e5e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UpperLeft</name>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581d993b5472180efda87ee5765765493111</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UpperRight</name>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581d38b0cc96d1d6d5cbef1430792087b90b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LLL</name>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581d4d05401dc7365dddc270688e5313e8c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ULL</name>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581dd479988c88e25040139c5745286b60ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LUL</name>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581dc9e2c8443708d457683d050940c1acb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UUL</name>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581dc97532792ab427840f5395574efb0c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LLU</name>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581d6f2f15200d91504b88af4009d65a02c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ULU</name>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581da7329b9185971b26bbfdb23a115953d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LUU</name>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581dd587dfe57ffef11ae03fa0d4ea962a4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UUU</name>
      <anchor>e0a66d7c0bf9a0d823faa0a4f289581d81531480c20eb06c36c9cb257140a5a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>d37b47a6d1c475a7296f907b6352aa38</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>d1b1f4212214cfa565330027648938c1</anchor>
      <arglist>(const hier::Index &amp;rhs, const Corner corner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>3ddd29155acfaa09bbaee714c9a340a5</anchor>
      <arglist>(const hier::Index &amp;rhs, const hier::IntVector &amp;corner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>6274583267b1ddd7166a18de514b39a8</anchor>
      <arglist>(const NodeIndex &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>NodeIndex &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>a737a1b21e70f6683317e08aabc3c465</anchor>
      <arglist>(const NodeIndex &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NodeIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>f05b0a4863ff2fa81ee9d557d5aaafdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NodeIndex &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>69608f073ecf99ff9befdeccd65b3b67</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>NodeIndex</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>24e48fd86b03c04f9a40113d6cf83545</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>NodeIndex &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>055043f1d5a767cadc62771c6ab52e0e</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>NodeIndex</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>e286cecc19769ff46735210deab11e15</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>NodeIndex &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>f6398a2a9812aa036a8ccbd18d9b908f</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>NodeIndex</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>0a3b6dd3fec2b60b34e36109f907d6f2</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>NodeIndex &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>b51b682a0904f79904cdc7652f28d40f</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>NodeIndex</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>9e3d3655e718cca66cdd18233f4e3df4</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>NodeIndex &amp;</type>
      <name>operator *=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>dbb246db327ab9775407fe4eef5d0331</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>NodeIndex</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>ac8789bb7d656911f313f905990c2258</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>NodeIndex &amp;</type>
      <name>operator *=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>9ec1e379645435aabe9d1c75a5ab26d5</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>NodeIndex</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>6bb4b5e09c62cca9bf673a95aba15e5d</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>c7bcfa5a8612b576e2b80d247544a766</anchor>
      <arglist>(const NodeIndex &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>d4674b051125e76f64f8f79121c91618</anchor>
      <arglist>(const NodeIndex &amp;rhs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeIntegerInjection</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeIntegerInjection.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>NodeIntegerInjection</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIntegerInjection.html</anchorfile>
      <anchor>c3cc69a97bcfeb0ad8d8755a6a715212</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeIntegerInjection</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIntegerInjection.html</anchorfile>
      <anchor>8a78d4e15aaf9ad538ad16c6392bb629</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIntegerInjection.html</anchorfile>
      <anchor>5485ff3ef9877c46ded8ae872a49b9c6</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIntegerInjection.html</anchorfile>
      <anchor>e5538b9fcb800628c2058bb393e18dbf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIntegerInjection.html</anchorfile>
      <anchor>1f19b9c28dc2ddcc7e28ff709d26f568</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIntegerInjection.html</anchorfile>
      <anchor>31210dab0c8492437426bcea0fbd7e9a</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeIterator</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>NodeIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>4e26c2e1e42ff93b9daa1d266adff666</anchor>
      <arglist>(const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>86db84f2151a0a17e6d2a7c94382bf8e</anchor>
      <arglist>(const NodeIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type>NodeIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>b6282d2b6e750da53fefdc2e578678c2</anchor>
      <arglist>(const NodeIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NodeIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>4a14e9b29ef9432187b9545643f24e76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const NodeIndex &amp;</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>e7b374a969f8d9623b1f90f795c2a981</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NodeIndex &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>f590430df0263e9caccde9f076f80672</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>5e253d71e5ce209b16d89b2d81221d17</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const void *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>25d33914a8efbffd61f8feb6afb101bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>ac833bbcebb949167b6064ecbfef66e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>14e696e51fe921b2668bc4c843b55dc6</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>c936ef07897c997e9105c07869ded784</anchor>
      <arglist>(const NodeIterator &amp;iterator) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>4cc79faf27ea40e310cea81aad4229d3</anchor>
      <arglist>(const NodeIterator &amp;iterator) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeOverlap</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeOverlap.html</filename>
    <base>SAMRAI::hier::BoxOverlap</base>
    <member kind="function">
      <type></type>
      <name>NodeOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeOverlap.html</anchorfile>
      <anchor>f5fc71dba6a66080498e2a9919a3f23b</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;transformation)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeOverlap.html</anchorfile>
      <anchor>83f26fbcefcc1047ea5424712e15c83a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isOverlapEmpty</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeOverlap.html</anchorfile>
      <anchor>82416aaae886213ba133712adceedd4e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::BoxContainer &amp;</type>
      <name>getDestinationBoxContainer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeOverlap.html</anchorfile>
      <anchor>7eaaae72efc433a81ee18064285e2d60</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::IntVector &amp;</type>
      <name>getSourceOffset</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeOverlap.html</anchorfile>
      <anchor>1a39aeb3d0e0035bd5b65b682a50452b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::Transformation &amp;</type>
      <name>getTransformation</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeOverlap.html</anchorfile>
      <anchor>41c4b13e0daea037dec7bc8d60b5920d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeVariable</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeVariable.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::Variable</base>
    <member kind="function">
      <type></type>
      <name>NodeVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeVariable.html</anchorfile>
      <anchor>64f9ee2b9909e2afb21e3e81bf06fe2f</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name, int depth=1, bool fine_boundary_represents_var=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeVariable.html</anchorfile>
      <anchor>2f88bc03008e598150c77dc46008a484</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeVariable.html</anchorfile>
      <anchor>23f39a2b3c7931b096d13e4f8bab6f91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeVariable.html</anchorfile>
      <anchor>649f517a46b8e4ff07f513dc760ad6db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeVariable.html</anchorfile>
      <anchor>a78621c89582aa08e0d16118d608d9e4</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuteredgeData</name>
    <filename>classSAMRAI_1_1pdat_1_1OuteredgeData.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchData</base>
    <member kind="function">
      <type></type>
      <name>OuteredgeData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>ca073caa7713391e4c50020caf5c1292</anchor>
      <arglist>(const hier::Box &amp;box, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuteredgeData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>9a45313b0dd677ddabab279055234d4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>d175e5c6129668508051a9fd17765f37</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataExists</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>cd37f4c111ce7ad6f42db2c9b0fe3305</anchor>
      <arglist>(int axis, int face_normal) const </arglist>
    </member>
    <member kind="function">
      <type>hier::Box</type>
      <name>getDataBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>9c8421843aace03937295e2cf5f1dabe</anchor>
      <arglist>(int axis, int face_normal, int side)</arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>aaf44bfc81bfb77b3d70bd4aa6fe0f68</anchor>
      <arglist>(int axis, int face_normal, int side, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>220d4648a8bf69af4d14d459c4937463</anchor>
      <arglist>(int axis, int face_normal, int side, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>e659bbd84250853583c036ea94bae473</anchor>
      <arglist>(const EdgeIndex &amp;i, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>1ac01c1a4fa33959274366ef3836269d</anchor>
      <arglist>(const EdgeIndex &amp;i, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>8f397d69bda5ab01abdfe451a9d40416</anchor>
      <arglist>(int axis, int face_normal, int side)</arglist>
    </member>
    <member kind="function">
      <type>const ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>250480802ff6f536436baf0aa56f0a50</anchor>
      <arglist>(int axis, int face_normal, int side) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>112942d75cb0e22e82f97f0db69b1a5d</anchor>
      <arglist>(const hier::PatchData &amp;src)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>c9ba79b4b94fd9f61050f7a18fe1dcab</anchor>
      <arglist>(hier::PatchData &amp;dst) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>e86ca2781fe97c9320b29f6116c3201c</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>58601777995e7af47cd79a1d828d6836</anchor>
      <arglist>(hier::PatchData &amp;dst, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>928b2ef6b5a20e883ee75b3a1fb3da6b</anchor>
      <arglist>(int dst_depth, const EdgeData&lt; TYPE &gt; &amp;src, int src_depth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>fcba969b9e81a66461b0f078a15c27a5</anchor>
      <arglist>(int dst_depth, EdgeData&lt; TYPE &gt; &amp;dst, int src_depth) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sum</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>b2300d594fa0cb03e8254c3bf41ddec7</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>016a375ab38b51a5b4395991cf307209</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>7c0f09bf22dd836ba89754488d3427dc</anchor>
      <arglist>(const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>328536381e34d12cbe5d26f23e44db14</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>b3a61d8df23ccf2357611914510f1071</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStreamAndSum</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>e5b0615de1c5ae697a651fc0021d366c</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>7f41e1f06800bb377a5094e37c20607d</anchor>
      <arglist>(const TYPE &amp;t, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>9031901c4a717af076573e1d533e0ac5</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>8ddc2652c8ad6aa769e2e70b89f9c884</anchor>
      <arglist>(const TYPE &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>642519056bb00a57692fb4bb4d2b72d4</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>53093c7d778edb7dcdc8d965eca96cc0</anchor>
      <arglist>(const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>0d9c67bbcdec371d2702c13f3295a54d</anchor>
      <arglist>(const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxisSide</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>1c939398c96637a2812da3b030aed562</anchor>
      <arglist>(int axis, int face_normal, int side, const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxisSide</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>b799936031bb8bc0a34832efebc8538f</anchor>
      <arglist>(int axis, int face_normal, int side, const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>8175f8b0c8b9dff0282e1f3e2c96cff7</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>e53f7156393862b98eff9b35ddca1202</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getSizeOfData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>1f2383a406bc6f18af91a8a1f9a7fbab</anchor>
      <arglist>(const hier::Box &amp;box, int depth)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuteredgeDataFactory</name>
    <filename>classSAMRAI_1_1pdat_1_1OuteredgeDataFactory.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchDataFactory</base>
    <member kind="function">
      <type></type>
      <name>OuteredgeDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeDataFactory.html</anchorfile>
      <anchor>5bdc90239a9e30b02d67aa1d7cdbd222</anchor>
      <arglist>(const tbox::Dimension &amp;dim, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuteredgeDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeDataFactory.html</anchorfile>
      <anchor>f0b08e940dfaf0e1e9f904ac97d615b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchDataFactory &gt;</type>
      <name>cloneFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeDataFactory.html</anchorfile>
      <anchor>99f43b23919cb2e3570bb2e7481ae72e</anchor>
      <arglist>(const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeDataFactory.html</anchorfile>
      <anchor>b7e1e03329b91e265211c600f5199607</anchor>
      <arglist>(const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxGeometry &gt;</type>
      <name>getBoxGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeDataFactory.html</anchorfile>
      <anchor>3f4bffc8d466301e2e3b94aa91cefda0</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeDataFactory.html</anchorfile>
      <anchor>09f5e9fb57c1572cde1cf91bb03e81a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getSizeOfMemory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeDataFactory.html</anchorfile>
      <anchor>7ec73a8e86cb99ceaed21a6b9ebb9b0b</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeDataFactory.html</anchorfile>
      <anchor>b861b6cc380e35b6ce926e29036791e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeDataFactory.html</anchorfile>
      <anchor>232f11c13b0984c694c0ad38e96b9448</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validCopyTo</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeDataFactory.html</anchorfile>
      <anchor>80b60e6bc1103d4b4dc85415f8ff70e8</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchDataFactory &gt; &amp;dst_pdf) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuteredgeGeometry</name>
    <filename>classSAMRAI_1_1pdat_1_1OuteredgeGeometry.html</filename>
    <base>SAMRAI::hier::BoxGeometry</base>
    <member kind="typedef">
      <type>EdgeOverlap</type>
      <name>Overlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeGeometry.html</anchorfile>
      <anchor>dbec3e1a78a6cf1785a1670202259188</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OuteredgeGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeGeometry.html</anchorfile>
      <anchor>43a70388cd67ee2e00cad0fbc57b282d</anchor>
      <arglist>(const hier::Box &amp;box, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuteredgeGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeGeometry.html</anchorfile>
      <anchor>f209eaa20d458c8d0070a4cfe8f92630</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeGeometry.html</anchorfile>
      <anchor>6e3de53aeba29520149c0a5228f0de35</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation, const bool retry, const hier::BoxContainer &amp;dst_restrict_boxes=hier::BoxContainer()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>setUpOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeGeometry.html</anchorfile>
      <anchor>e17711c7f86ea3583e3b88bf368897ec</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeGeometry.html</anchorfile>
      <anchor>230b45adbfc48a2037a1481293a7c3bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getGhosts</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeGeometry.html</anchorfile>
      <anchor>8878658f24e4c920bb6be58fe54c299e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static hier::Box</type>
      <name>toOuteredgeBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeGeometry.html</anchorfile>
      <anchor>1eaf3928da13767b92b84bbc812d2005</anchor>
      <arglist>(const hier::Box &amp;box, int axis, int face_normal, int side)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuteredgeVariable</name>
    <filename>classSAMRAI_1_1pdat_1_1OuteredgeVariable.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::Variable</base>
    <member kind="function">
      <type></type>
      <name>OuteredgeVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeVariable.html</anchorfile>
      <anchor>e924b158c3b493aef40bf702520f0d85</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name, int depth=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuteredgeVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeVariable.html</anchorfile>
      <anchor>aa37952135ebbf302a943e02ac1f611f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeVariable.html</anchorfile>
      <anchor>5399c0c746de68fb38f5fbb8943196b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeVariable.html</anchorfile>
      <anchor>8d489dbbae24b8e72a3f72e11955965e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeVariable.html</anchorfile>
      <anchor>7cc31679598a75e3900257986aaee320</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuterfaceComplexConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1OuterfaceComplexConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>OuterfaceComplexConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceComplexConstantRefine.html</anchorfile>
      <anchor>94dcd23d8030ee6ede4b2f74b69c720c</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuterfaceComplexConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceComplexConstantRefine.html</anchorfile>
      <anchor>a5fa1e919d11d1865c8569f60f220cf5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceComplexConstantRefine.html</anchorfile>
      <anchor>474c5da36333b4921394aebe5647221b</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceComplexConstantRefine.html</anchorfile>
      <anchor>beca759d81105d19691a8885b7cd5013</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceComplexConstantRefine.html</anchorfile>
      <anchor>a6284e73bdd0a95fe0b49a59afa697df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceComplexConstantRefine.html</anchorfile>
      <anchor>1ccb56070161e5b8d8a395322c266166</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuterfaceComplexLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1OuterfaceComplexLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>OuterfaceComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>2621ec64523493581d8459af7405f30e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuterfaceComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>d12d914d72671dec8f4fb299c5e8b829</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>b93243743b09629bffe54cc4d10293c8</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>fe8f0e17f2d445836bf6b6128fb2cb74</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuterfaceData</name>
    <filename>classSAMRAI_1_1pdat_1_1OuterfaceData.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchData</base>
    <member kind="function">
      <type></type>
      <name>OuterfaceData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>88fde1bbd81a0da8166727b08f3a7f3c</anchor>
      <arglist>(const hier::Box &amp;box, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuterfaceData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>c19e766c36d2abbaa1648e849a574c31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>fb730adfffa15573cd577dc063611fd6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>ba696ed15de8513d83628292eb76f0cc</anchor>
      <arglist>(int face_normal, int side, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>0e62186e14245d933777ea71b3756ae4</anchor>
      <arglist>(int face_normal, int side, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>d784d0736342c0ea2fba3c01309c6242</anchor>
      <arglist>(const FaceIndex &amp;i, int side, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>d52930040754ef6cff4a27f00a5cb140</anchor>
      <arglist>(const FaceIndex &amp;i, int side, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>0c1a3ed758e6bd45fc4d1d80e085553f</anchor>
      <arglist>(int face_normal, int side)</arglist>
    </member>
    <member kind="function">
      <type>const ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>13275d39a2a6ab495952e2aeebdd3a87</anchor>
      <arglist>(int face_normal, int side) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>d6a4924893a10c16923e5cc03351fab4</anchor>
      <arglist>(const hier::PatchData &amp;src)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>e89027b0dba9d9337f37333d4f77ca18</anchor>
      <arglist>(hier::PatchData &amp;dst) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>12591ced1e3cff4ca49945abe5bc5b7d</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>3927b8fe8c848c94b4eb211e7a2fbb9d</anchor>
      <arglist>(hier::PatchData &amp;dst, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>908842f080510f3416cedde0e7e9c818</anchor>
      <arglist>(int dst_depth, const FaceData&lt; TYPE &gt; &amp;src, int src_depth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>ec1e6289a24968dabaeb29fc38feb4b0</anchor>
      <arglist>(int dst_depth, FaceData&lt; TYPE &gt; &amp;dst, int src_depth) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>30e45de83ad109b94c18347b76f97a82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>862be68fcc35007d0a940dd84b589337</anchor>
      <arglist>(const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>f7989f5c79916c2ab48884e2eafce782</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>cbbcc9cbc79ca3804300f04ddc1ea528</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>b6d0bc5b25819c96892f988f0f4aa890</anchor>
      <arglist>(const TYPE &amp;t, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>779eda9dc9a23fe091695892a8b10a8a</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>4f26974efff05d731d5edf851d4efb36</anchor>
      <arglist>(const TYPE &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>9120e0e025e3a07a23b9ae629f284868</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>258620dfcb031f4cc59ab8582492f1cd</anchor>
      <arglist>(const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>12e277f05c2567d5e4eec5f32df0cb83</anchor>
      <arglist>(const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxisFace</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>9d58f1ede4836f84c233f196056307f6</anchor>
      <arglist>(int face_normal, int side, const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxisFace</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>7e6def679ca6f71f93124f1a673db437</anchor>
      <arglist>(int face_normal, int side, const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>a45f54ab11ac206310fc404ca1f0544e</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>6bf83076ceb91ee2acfc71d731098f84</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getSizeOfData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>151fe71bc159dc09333beda0efa76b63</anchor>
      <arglist>(const hier::Box &amp;box, int depth)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuterfaceDataFactory</name>
    <filename>classSAMRAI_1_1pdat_1_1OuterfaceDataFactory.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchDataFactory</base>
    <member kind="function">
      <type></type>
      <name>OuterfaceDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDataFactory.html</anchorfile>
      <anchor>42db1b4981c33c483830dda62cba616c</anchor>
      <arglist>(const tbox::Dimension &amp;dim, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuterfaceDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDataFactory.html</anchorfile>
      <anchor>a8654596720a300a08c835ce7fecb54d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchDataFactory &gt;</type>
      <name>cloneFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDataFactory.html</anchorfile>
      <anchor>61e287a367ed2a3421d7c80476d843dc</anchor>
      <arglist>(const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDataFactory.html</anchorfile>
      <anchor>62904c1ae6a1e636b3dba01a8733c642</anchor>
      <arglist>(const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxGeometry &gt;</type>
      <name>getBoxGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDataFactory.html</anchorfile>
      <anchor>76dbd2acbaf3a8a96a80e99f89c2b381</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDataFactory.html</anchorfile>
      <anchor>80434456c53b3840f3b42c24d65fcea2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getSizeOfMemory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDataFactory.html</anchorfile>
      <anchor>ab06b863181257521daf7020a3035944</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDataFactory.html</anchorfile>
      <anchor>46d649bb4873680d145625d186c08e56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDataFactory.html</anchorfile>
      <anchor>56bb97454ddb1a63b75b3033d893707e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validCopyTo</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDataFactory.html</anchorfile>
      <anchor>54715d05457c1f45073034fa5d94f7f4</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchDataFactory &gt; &amp;dst_pdf) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuterfaceDoubleConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1OuterfaceDoubleConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>OuterfaceDoubleConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDoubleConstantRefine.html</anchorfile>
      <anchor>e24114fb3b836cd94f83ca4b34befbf4</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuterfaceDoubleConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDoubleConstantRefine.html</anchorfile>
      <anchor>4c6b4dc6f5d2269e7ebc9ee910793365</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDoubleConstantRefine.html</anchorfile>
      <anchor>1a86e19980d10bfe873beb0cef906c9e</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDoubleConstantRefine.html</anchorfile>
      <anchor>837016b53dc21da19aa5eb126042070b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDoubleConstantRefine.html</anchorfile>
      <anchor>9231c4c72e0cc8cf3074b4ca2f3d0426</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDoubleConstantRefine.html</anchorfile>
      <anchor>bc1543f3e3d6076dfea46febf9b4c9bc</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuterfaceDoubleLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1OuterfaceDoubleLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>OuterfaceDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>2c4951641e5bd859680ab2dc9253c9a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuterfaceDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>ec049ddee5300e36333655dc34867d1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>2cf26eb8bfb796b32debd299fd424abb</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>581295fc4c2ba30da275421e7f8d51a0</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuterfaceFloatConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1OuterfaceFloatConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>OuterfaceFloatConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceFloatConstantRefine.html</anchorfile>
      <anchor>985c2503fff7ae1e45f73fe1155d7c68</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuterfaceFloatConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceFloatConstantRefine.html</anchorfile>
      <anchor>4a28416179a44ff4e69b1a2e69b6d9cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceFloatConstantRefine.html</anchorfile>
      <anchor>e6d8aa4bff8af9437a5b08f56875d2c8</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceFloatConstantRefine.html</anchorfile>
      <anchor>b7e5b5f41c239eae365ea199e5319951</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceFloatConstantRefine.html</anchorfile>
      <anchor>24ef6c169c8b784ce0df091b2f691299</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceFloatConstantRefine.html</anchorfile>
      <anchor>e3ade5bec1cd1c4c25d06ab728571bbd</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuterfaceFloatLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1OuterfaceFloatLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>OuterfaceFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>5471d55a07064f5b370cdaf0f39d9c50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuterfaceFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>6d01a51a361d2539f13ea7c81d4dbcb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>7f97eb0d240d6a7c894ac9c8a33f6ed5</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>4fc75b0383eaaff4552526eb90558854</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuterfaceGeometry</name>
    <filename>classSAMRAI_1_1pdat_1_1OuterfaceGeometry.html</filename>
    <base>SAMRAI::hier::BoxGeometry</base>
    <member kind="typedef">
      <type>FaceOverlap</type>
      <name>Overlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceGeometry.html</anchorfile>
      <anchor>3d72a7c51ffc999b65fcd6b59d0b106a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OuterfaceGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceGeometry.html</anchorfile>
      <anchor>e3d9ce265ab7d84057b7090aac43de67</anchor>
      <arglist>(const hier::Box &amp;box, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuterfaceGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceGeometry.html</anchorfile>
      <anchor>f2690050ab645d3ec51e2413dee4e9bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceGeometry.html</anchorfile>
      <anchor>2ddd3434bb174cfdd1f0965a3d6cc76d</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation, const bool retry, const hier::BoxContainer &amp;dst_restrict_boxes=hier::BoxContainer()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>setUpOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceGeometry.html</anchorfile>
      <anchor>634f3c434df41773b45f467b1e81cd23</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceGeometry.html</anchorfile>
      <anchor>53c3ca8efb291a0ccdfcb8c67a01728f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getGhosts</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceGeometry.html</anchorfile>
      <anchor>4baacba1d9c5a8d918942503d29f1d95</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuterfaceIntegerConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1OuterfaceIntegerConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>OuterfaceIntegerConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceIntegerConstantRefine.html</anchorfile>
      <anchor>7d15d377a8cf2f397de72752f4360e90</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuterfaceIntegerConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceIntegerConstantRefine.html</anchorfile>
      <anchor>0325613f35be6ada9fe8ac8781793da8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceIntegerConstantRefine.html</anchorfile>
      <anchor>cd94c1e1f276f15a524683f67a415af8</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceIntegerConstantRefine.html</anchorfile>
      <anchor>e0bec835cca4f99a62bbc9570de18fdc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceIntegerConstantRefine.html</anchorfile>
      <anchor>b34ea0f3e448833be6343f97e351615b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceIntegerConstantRefine.html</anchorfile>
      <anchor>fa020c024c4dbbd904c977d86341230d</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuterfaceVariable</name>
    <filename>classSAMRAI_1_1pdat_1_1OuterfaceVariable.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::Variable</base>
    <member kind="function">
      <type></type>
      <name>OuterfaceVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceVariable.html</anchorfile>
      <anchor>b5a89d82a38313a7de247322c6a3bcc3</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name, int depth=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuterfaceVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceVariable.html</anchorfile>
      <anchor>a9f2dfe367f8219e76b5858ebcdcaa5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceVariable.html</anchorfile>
      <anchor>64a6dca5c543786e605e9da2c8335f3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceVariable.html</anchorfile>
      <anchor>7c419696be65887fca62aa88beaf4e91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceVariable.html</anchorfile>
      <anchor>8ece5633f68923a443685816dc2a57b2</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuternodeData</name>
    <filename>classSAMRAI_1_1pdat_1_1OuternodeData.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchData</base>
    <member kind="function">
      <type></type>
      <name>OuternodeData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>73c0fda3ac2d73c98561e272772b62cc</anchor>
      <arglist>(const hier::Box &amp;box, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuternodeData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>57cbcffff26b45400b21161ad5538fa6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>83654dcdac545c3d87d5bb4549de99d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataExists</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>715dd005190227bac4de286512c9c441</anchor>
      <arglist>(int face_normal) const </arglist>
    </member>
    <member kind="function">
      <type>hier::Box</type>
      <name>getDataBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>048a2436b79a0f3c21184949dbb0cdcc</anchor>
      <arglist>(int face_normal, int side)</arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>1f7ff8ce302e2ff1ae386afa7d370bce</anchor>
      <arglist>(int face_normal, int side, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>50d546e1092ee34f53122b529022a59c</anchor>
      <arglist>(int face_normal, int side, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>ec78e980517007b0b51ca093662435f5</anchor>
      <arglist>(const NodeIndex &amp;i, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>0070d98f70e4b3f136f9779ee1d67fe3</anchor>
      <arglist>(const NodeIndex &amp;i, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>d455f97dd74c29d082056bf85c20b409</anchor>
      <arglist>(int face_normal, int side)</arglist>
    </member>
    <member kind="function">
      <type>const ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>d38a922bf20987bceed04338276a4ef1</anchor>
      <arglist>(int face_normal, int side) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>9c26e5425bf13225efc37691308e078c</anchor>
      <arglist>(const hier::PatchData &amp;src)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>ed6534d009b12a464688e61765316c26</anchor>
      <arglist>(hier::PatchData &amp;dst) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>1430140191efa960a09130715b55b990</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>3ca9a84c73d005eee4664428853050a3</anchor>
      <arglist>(hier::PatchData &amp;dst, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>80eed083f7482ab744184efb987a99bf</anchor>
      <arglist>(int dst_depth, const NodeData&lt; TYPE &gt; &amp;src, int src_depth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>cdd3d05159bd900f605d4a56d017f597</anchor>
      <arglist>(int dst_depth, NodeData&lt; TYPE &gt; &amp;dst, int src_depth) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sum</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>4015d040128ad724bc9a22e60e9a4868</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>148e578f84403c5c59b9a312fffb5fad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>bc76c7f60d7cc08613915e420d24ff50</anchor>
      <arglist>(const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>55d4779993f893bb4182215add89e994</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>ccf70bf0720881183c9bd0f6eb972dd1</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStreamAndSum</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>61220c1b5e0ad1d36d49f7512d5f950e</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>772be353e8b4a3d5af4541599833e0d9</anchor>
      <arglist>(const TYPE &amp;t, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>b1f5ed9b74e6029a5a87871a51c385ea</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>ff30083daaa178fa6d364ceeaff9ddfb</anchor>
      <arglist>(const TYPE &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>a2541d3366ae7b4d9312e054a1b48488</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>e2e3e008d3cf972114ee26a77b080977</anchor>
      <arglist>(const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>36b83b86feb6c1c8ad542e1e536192ef</anchor>
      <arglist>(const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxisSide</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>a454493753e93f73f76fac106697350d</anchor>
      <arglist>(int face_normal, int side, const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxisSide</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>66dfef18a02814ed9186c9f8507e847c</anchor>
      <arglist>(int face_normal, int side, const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>80468fd03e5e0c42aa80912c8e6b5c71</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>532a9f2e18fe4ef5368b81e30c7e9ebd</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getSizeOfData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>604ede74a1af3c87fa2ecf36a35a77f1</anchor>
      <arglist>(const hier::Box &amp;box, int depth)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuternodeDataFactory</name>
    <filename>classSAMRAI_1_1pdat_1_1OuternodeDataFactory.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchDataFactory</base>
    <member kind="function">
      <type></type>
      <name>OuternodeDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDataFactory.html</anchorfile>
      <anchor>6213046c5343baf11269236509a585d7</anchor>
      <arglist>(const tbox::Dimension &amp;dim, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuternodeDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDataFactory.html</anchorfile>
      <anchor>91ac08d950edb16b519c81e29abbcd5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchDataFactory &gt;</type>
      <name>cloneFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDataFactory.html</anchorfile>
      <anchor>80a6bd7649c0d5dbc24a92e9428a1e64</anchor>
      <arglist>(const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDataFactory.html</anchorfile>
      <anchor>71d9d308f0d6ec682bf6e3c57b28ab5f</anchor>
      <arglist>(const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxGeometry &gt;</type>
      <name>getBoxGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDataFactory.html</anchorfile>
      <anchor>59d3063092c91a732ce8441500b7d755</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDataFactory.html</anchorfile>
      <anchor>fbefb58874d2c7444bef3bb4d4d5c75e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getSizeOfMemory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDataFactory.html</anchorfile>
      <anchor>9140775aa915a518fd8d46045b0dc900</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDataFactory.html</anchorfile>
      <anchor>928352c6a082fbe9b531c81c526fe7da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDataFactory.html</anchorfile>
      <anchor>8d55e4ff118fe95c9eb80e59b0727719</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validCopyTo</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDataFactory.html</anchorfile>
      <anchor>78c9e430639d9c93180a838ead7ddda7</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchDataFactory &gt; &amp;dst_pdf) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuternodeDoubleConstantCoarsen</name>
    <filename>classSAMRAI_1_1pdat_1_1OuternodeDoubleConstantCoarsen.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>OuternodeDoubleConstantCoarsen</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDoubleConstantCoarsen.html</anchorfile>
      <anchor>7fe72c13dafcf6e31a1292c8f382e494</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuternodeDoubleConstantCoarsen</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDoubleConstantCoarsen.html</anchorfile>
      <anchor>441c0e908f5e9aa0d0232e1f916fc472</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDoubleConstantCoarsen.html</anchorfile>
      <anchor>c01a190c39852f049234503dcdad2a49</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDoubleConstantCoarsen.html</anchorfile>
      <anchor>dc42510407477b8f84d475683a6ff482</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDoubleConstantCoarsen.html</anchorfile>
      <anchor>63f71bc664653209ee142ec5aed4cbe4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDoubleConstantCoarsen.html</anchorfile>
      <anchor>d0402b5ef8c439a08df83f49c47f70a1</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuternodeGeometry</name>
    <filename>classSAMRAI_1_1pdat_1_1OuternodeGeometry.html</filename>
    <base>SAMRAI::hier::BoxGeometry</base>
    <member kind="typedef">
      <type>NodeOverlap</type>
      <name>Overlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeGeometry.html</anchorfile>
      <anchor>430eb21f81c33e758c1fcc3ddab32bc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OuternodeGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeGeometry.html</anchorfile>
      <anchor>4b22bcfaacad8a86118f31f6e1c463ed</anchor>
      <arglist>(const hier::Box &amp;box, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuternodeGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeGeometry.html</anchorfile>
      <anchor>95f3c49d97fdccdb9d3477c88c8e5044</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeGeometry.html</anchorfile>
      <anchor>af6046198f04021bc7b2e8e3affe4b0d</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation, const bool retry, const hier::BoxContainer &amp;dst_restrict_boxes=hier::BoxContainer()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>setUpOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeGeometry.html</anchorfile>
      <anchor>e3786748b5c4cd9bf4ab21103f7b4ac1</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeGeometry.html</anchorfile>
      <anchor>fbe52ecc58e98518161bc966be7fd323</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getGhosts</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeGeometry.html</anchorfile>
      <anchor>2a8f4cbad5694c860f72fa177162ffb1</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuternodeVariable</name>
    <filename>classSAMRAI_1_1pdat_1_1OuternodeVariable.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::Variable</base>
    <member kind="function">
      <type></type>
      <name>OuternodeVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeVariable.html</anchorfile>
      <anchor>c4cfcf052deed8809bb11f3ef6ba2f37</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name, int depth=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuternodeVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeVariable.html</anchorfile>
      <anchor>550cb2b883bc86f3f75e1fe0a857b29b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeVariable.html</anchorfile>
      <anchor>24aa897de2ab5db884aee9ef5a64e618</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeVariable.html</anchorfile>
      <anchor>14197ddd0508b500a0c0beec35bf5112</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeVariable.html</anchorfile>
      <anchor>55c60aa6dd86a4615c27ba0a36efd4cc</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OutersideComplexLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1OutersideComplexLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>OutersideComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>208fa7a0a93b93e0d81e3896221703b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OutersideComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>4bb2730c555172af12a0feafd754b661</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>5f807427c91c75809bbcc0d3e2ebafa9</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>35d686b235bc585ea23eff677c734c8d</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OutersideData</name>
    <filename>classSAMRAI_1_1pdat_1_1OutersideData.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchData</base>
    <member kind="function">
      <type></type>
      <name>OutersideData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>9d0a7b24ad27c9dc7a187f9ca97917ac</anchor>
      <arglist>(const hier::Box &amp;box, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OutersideData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>2749d2e695cde560c72709b56c15effd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>1ab03e1f0a471e471356d59a09a707bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>37dceeb8cb56ba9d26a0f4ea534b4b96</anchor>
      <arglist>(int side_normal, int side, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>80a8d30d73dcab602afbb90f0d15a87a</anchor>
      <arglist>(int side_normal, int side, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>c753263978ced8fbc3df793344cd88b4</anchor>
      <arglist>(const SideIndex &amp;i, int side, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>99d20230ecbae23296071eb6229fdb80</anchor>
      <arglist>(const SideIndex &amp;i, int side, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>9d04c970eba7be17c674ed03dec15405</anchor>
      <arglist>(int side_normal, int side)</arglist>
    </member>
    <member kind="function">
      <type>const ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>7b45f1008b8c0c4992de4e1c370b4c2f</anchor>
      <arglist>(int side_normal, int side) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>8bc17bf35417777643b8d3e7fa6f0e18</anchor>
      <arglist>(const hier::PatchData &amp;src)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>e4d38017fbf79b67a64a772f1c9ccb2f</anchor>
      <arglist>(hier::PatchData &amp;dst) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>2a94c4641a997e70464dd8214ec197f7</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>eb07d9de8e0aefdba1be00b6cbe1a577</anchor>
      <arglist>(hier::PatchData &amp;dst, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>7d976b4ca8d6c07a4a947dacf6abc029</anchor>
      <arglist>(int dst_depth, const SideData&lt; TYPE &gt; &amp;src, int src_depth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>6f0ad05409222f50071df0e2787dcfe0</anchor>
      <arglist>(int dst_depth, SideData&lt; TYPE &gt; &amp;dst, int src_depth) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>403160bf708f8d591b979f839a39211f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>d8a4af4ec1c11281cfbd380dfa98f1c4</anchor>
      <arglist>(const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>9eaadc6714efc35b2d30c856c8ace3c1</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>0321b4139abba5ace68967b3848b9292</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>67f1c11e4c4f73f6b22371e0334eed90</anchor>
      <arglist>(const TYPE &amp;t, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>a331906fc91533a4192fab90589f682d</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>d9049deb910f1374b98de9708f0bca0f</anchor>
      <arglist>(const TYPE &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>04fffd3725cd7753316b1a4543dc5add</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>1336ea35f3d646582a57284ce812158c</anchor>
      <arglist>(const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>3dd4acf91bb156612e16531105a1b213</anchor>
      <arglist>(const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxisSide</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>0c59f39c7756201b5ba47c804d024f84</anchor>
      <arglist>(int side_normal, int side, const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxisSide</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>6e4bf77f8450f25390fdb483a5a59b33</anchor>
      <arglist>(int side_normal, int side, const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>87c7f82b4309ce4b48ce497155e5b582</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>aa58f39a20f66325c49ca75101144814</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getSizeOfData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>7d921ae879e2d9380dea2e3b50accfca</anchor>
      <arglist>(const hier::Box &amp;box, int depth)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OutersideDataFactory</name>
    <filename>classSAMRAI_1_1pdat_1_1OutersideDataFactory.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchDataFactory</base>
    <member kind="function">
      <type></type>
      <name>OutersideDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDataFactory.html</anchorfile>
      <anchor>8500108d5b25fa1232e3631c569dd98d</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OutersideDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDataFactory.html</anchorfile>
      <anchor>67dee72ac89760a3269c2a0e1fcf71c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchDataFactory &gt;</type>
      <name>cloneFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDataFactory.html</anchorfile>
      <anchor>9e1e6f6b803c2a93681bf65414b64ba2</anchor>
      <arglist>(const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDataFactory.html</anchorfile>
      <anchor>23911f067b307e4155d125aa46bb3418</anchor>
      <arglist>(const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxGeometry &gt;</type>
      <name>getBoxGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDataFactory.html</anchorfile>
      <anchor>96e46f247ae753e534077defe3a85e4c</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDataFactory.html</anchorfile>
      <anchor>4819b8bb83c09b491897dffe0d81d947</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getSizeOfMemory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDataFactory.html</anchorfile>
      <anchor>4bb6a1aaeaaf643d6080a8defc57128c</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDataFactory.html</anchorfile>
      <anchor>8851d254f01daf4894abba36aba2e053</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDataFactory.html</anchorfile>
      <anchor>7a3a8637cb11e30f82d6e5a428e6700e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validCopyTo</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDataFactory.html</anchorfile>
      <anchor>51b55e535ee1d1ecd4ec37d9b8467879</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchDataFactory &gt; &amp;dst_pdf) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OutersideDoubleLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1OutersideDoubleLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>OutersideDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>4d3cf03dd90aa9679571c6ac39637ca5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OutersideDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>20bc9114f19c61cb2634e706e2f06bf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>7a1d5f8e92e7c2169c048bf41cd9199e</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>696445c788d25ac48154c274864e8925</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OutersideFloatLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1OutersideFloatLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>OutersideFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a303f03ded8440a0a4e1a7dcdaefcdf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OutersideFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>87c9314298f546ca599a4f84fc57a496</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>959da2b1f7b47c7505adcf969ddf6e26</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>9541a5cb393dfd373a18a5b32cf6c7f7</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OutersideGeometry</name>
    <filename>classSAMRAI_1_1pdat_1_1OutersideGeometry.html</filename>
    <base>SAMRAI::hier::BoxGeometry</base>
    <member kind="typedef">
      <type>SideOverlap</type>
      <name>Overlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideGeometry.html</anchorfile>
      <anchor>49ad9fc92b1523b0241861bc16917b6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OutersideGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideGeometry.html</anchorfile>
      <anchor>de66d9d0f6a16a42b74fd5f7d2de0627</anchor>
      <arglist>(const hier::Box &amp;box, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OutersideGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideGeometry.html</anchorfile>
      <anchor>f3d8c76e51c06336ec6ee92f01f96411</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideGeometry.html</anchorfile>
      <anchor>3d6a12777547316f3421de60e1aca0c5</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation, const bool retry, const hier::BoxContainer &amp;dst_restrict_boxes=hier::BoxContainer()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>setUpOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideGeometry.html</anchorfile>
      <anchor>bb525c47c143a6ead37590e6648e8c68</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideGeometry.html</anchorfile>
      <anchor>f663e8a3a37631d1ea0fc48a1b6b30ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getGhosts</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideGeometry.html</anchorfile>
      <anchor>a6d19560d5dab74596ae5fcd66183e67</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OutersideVariable</name>
    <filename>classSAMRAI_1_1pdat_1_1OutersideVariable.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::Variable</base>
    <member kind="function">
      <type></type>
      <name>OutersideVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideVariable.html</anchorfile>
      <anchor>94256b84cd7f0d34c727a253431275f5</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name, int depth=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OutersideVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideVariable.html</anchorfile>
      <anchor>4694be41f2a74f80df10823ae308848f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideVariable.html</anchorfile>
      <anchor>451170707bea9e3ce85ce7ffc9f1d389</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideVariable.html</anchorfile>
      <anchor>9b4ed5dd064bfbdd92822dd619ebb899</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideVariable.html</anchorfile>
      <anchor>358663b3b1942578c18d3586ee874547</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SecondLayerNodeNoCornersVariableFillPattern</name>
    <filename>classSAMRAI_1_1pdat_1_1SecondLayerNodeNoCornersVariableFillPattern.html</filename>
    <base>SAMRAI::xfer::VariableFillPattern</base>
    <member kind="function">
      <type></type>
      <name>SecondLayerNodeNoCornersVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeNoCornersVariableFillPattern.html</anchorfile>
      <anchor>9b4b8e81525e84a40678e1da437c8ac8</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SecondLayerNodeNoCornersVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeNoCornersVariableFillPattern.html</anchorfile>
      <anchor>5c3f75ea244668495aa37b5194cb7b76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeNoCornersVariableFillPattern.html</anchorfile>
      <anchor>c44cb40f4cf33bcb6f748627a1e78e39</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;dst_patch_box, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>computeFillBoxesOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeNoCornersVariableFillPattern.html</anchorfile>
      <anchor>89b0f2cfa62d5ee52a9728d04db20228</anchor>
      <arglist>(const hier::BoxContainer &amp;fill_boxes, const hier::Box &amp;patch_box, const hier::Box &amp;data_box, const hier::PatchDataFactory &amp;pdf) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeNoCornersVariableFillPattern.html</anchorfile>
      <anchor>888e65ca32441c00d9ac60b08a66ea5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getPatternName</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeNoCornersVariableFillPattern.html</anchorfile>
      <anchor>2700aecfd18c2d45b84c7374db27fb61</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SecondLayerNodeVariableFillPattern</name>
    <filename>classSAMRAI_1_1pdat_1_1SecondLayerNodeVariableFillPattern.html</filename>
    <base>SAMRAI::xfer::VariableFillPattern</base>
    <member kind="function">
      <type></type>
      <name>SecondLayerNodeVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>ee60d7b2b011ef694135b86d1003aee8</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SecondLayerNodeVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>d7e684c5d88cdef2a4a7e9fe1d96d4d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>2b8268e96e98019bb22c73f9bccdab20</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;dst_patch_box, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>computeFillBoxesOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>3270e373e34f7787e6432e28bd7ac7e3</anchor>
      <arglist>(const hier::BoxContainer &amp;fill_boxes, const hier::Box &amp;patch_box, const hier::Box &amp;data_box, const hier::PatchDataFactory &amp;pdf) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>bc819e4d4882eaccf0a0cc88ada1fee0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getPatternName</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>1d9de6d92d6a2e8134960b37d0c59aee</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideComplexConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1SideComplexConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>SideComplexConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideComplexConstantRefine.html</anchorfile>
      <anchor>89eaf90a9688a3647f82359742859597</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideComplexConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideComplexConstantRefine.html</anchorfile>
      <anchor>e6f1a0657396a88051aeca09c1bebdb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideComplexConstantRefine.html</anchorfile>
      <anchor>1fda2726872dca0314b9629356cc1f0c</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideComplexConstantRefine.html</anchorfile>
      <anchor>da81fb7399f889e096b2be114243dceb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideComplexConstantRefine.html</anchorfile>
      <anchor>6fbb8d785c8232fa7d5642bd188abe1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideComplexConstantRefine.html</anchorfile>
      <anchor>03140d8840c6f0367a0637d4ecfa997d</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideComplexLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1SideComplexLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>SideComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>2275281815bbcb7840234c3a389e0cf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>3ce599260d7f992926128e8d111cddeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>0622cd96574d7af6b31aa2eb1186fd78</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>7ee5a238cbc698156466edc99094a0d9</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideData</name>
    <filename>classSAMRAI_1_1pdat_1_1SideData.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchData</base>
    <member kind="typedef">
      <type>SideIterator</type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>3f8c01ef99dbedb40b072dc609274c97</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SideData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>2c170318856b243a839424d66120e074</anchor>
      <arglist>(const hier::Box &amp;box, int depth, const hier::IntVector &amp;ghosts, const hier::IntVector &amp;directions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SideData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>7611f8557d350becd9cb66112e0dff97</anchor>
      <arglist>(const hier::Box &amp;box, int depth, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>57b22c3e37683f9c1858c14c0ad358c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getDirectionVector</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>2fb28d8d6767f8d05eaa5f6ed3b1745c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>155820ec03d3d294412b5e48013cfce1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a5b386a8d91b8dadce8ee598419bac36</anchor>
      <arglist>(int side_normal, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>6e9e29159c27e9d806d4f211526266ec</anchor>
      <arglist>(int side_normal, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>947daa659c84566aa17689382ca58765</anchor>
      <arglist>(const SideIndex &amp;i, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a4fad00ef95c8007cf3a3405c598a49d</anchor>
      <arglist>(const SideIndex &amp;i, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>1fe938fd81870338dcc959f07a5c16f1</anchor>
      <arglist>(int side_normal)</arglist>
    </member>
    <member kind="function">
      <type>const ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>cec4a8b6d4fcd4ab42b9e0757dcaa5e8</anchor>
      <arglist>(int side_normal) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>74ed7e84410a3cb47823ca04174247a7</anchor>
      <arglist>(const hier::PatchData &amp;src)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>505712e32e1fd234e0815d041f425701</anchor>
      <arglist>(hier::PatchData &amp;dst) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>1cccd94d56619c5969241ca983a5052c</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>0d57f2f7a8f5b123442f42137dbd2a9f</anchor>
      <arglist>(hier::PatchData &amp;dst, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyOnBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>8b5dc56a2857ee8bee2646d09be15fa5</anchor>
      <arglist>(const SideData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a36e4835374abf61862f04b7a3f02831</anchor>
      <arglist>(int dst_depth, const SideData&lt; TYPE &gt; &amp;src, int src_depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a6b73c020ee632013fac3bd2d5b4e58a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>333900e44794e2a34b3660549c5e0a4c</anchor>
      <arglist>(const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>fe87fe0aff069dbcae05934f27c067af</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>d9bd944193cde94da9e1634d04459782</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>2014a33eded8a274bdd63f4019604102</anchor>
      <arglist>(const TYPE &amp;t, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>b6020dda6c2caaae5513fd6f315f7e28</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>11d92d90131f690c7e399082e9ff912c</anchor>
      <arglist>(const TYPE &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>5a867177f054c0db0c3ced8e6f661198</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>6ded5f70dfa7031429ec72ceb70f8f54</anchor>
      <arglist>(const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>1ac10f015b859403fc313052b7d3e35d</anchor>
      <arglist>(const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>248766817f477488fa4c7a4d556cc228</anchor>
      <arglist>(int side_normal, const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>d2c954b0ab70c051f1a932829ddfdb05</anchor>
      <arglist>(int side_normal, const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>4210ce90f7320a6751463145cc954478</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>8b0fc4d5635be7a0e8137aefeb1b5f0f</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getSizeOfData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>c0280f4bcfc3b93b5ef001f806368646</anchor>
      <arglist>(const hier::Box &amp;box, int depth, const hier::IntVector &amp;ghosts, const hier::IntVector &amp;directions)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideDataFactory</name>
    <filename>classSAMRAI_1_1pdat_1_1SideDataFactory.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchDataFactory</base>
    <member kind="function">
      <type></type>
      <name>SideDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>8095905ba283ec1da49b1817298fc4d5</anchor>
      <arglist>(int depth, const hier::IntVector &amp;ghosts, bool fine_boundary_represents_var)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SideDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>e9ba291454f95c4697a5a3632bcd710e</anchor>
      <arglist>(int depth, const hier::IntVector &amp;ghosts, bool fine_boundary_represents_var, const hier::IntVector &amp;directions)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>6783db99761fe195760de71146313c2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchDataFactory &gt;</type>
      <name>cloneFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>b00b31b8b334a66ddc21d0fea24bde86</anchor>
      <arglist>(const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>d24f75306dc471e77c81eb9528345157</anchor>
      <arglist>(const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxGeometry &gt;</type>
      <name>getBoxGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>a82b67dd9c2269b027621679fa021314</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>ff799389e278e9ed1e7d99bcdc6af674</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getDirectionVector</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>0c3077f22a32c128fb84de8c58b84141</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getSizeOfMemory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>0b456fbe0a6bbf7b925d6c3b1d2c1303</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>be1de6b28c5fb9d62b18b251e81a4682</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>b9cff5f9eb90d88a66833055d652b35f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validCopyTo</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>3c584e66d778abe0c8c3c2d7e41c5302</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchDataFactory &gt; &amp;dst_pdf) const </arglist>
    </member>
    <member kind="function">
      <type>hier::MultiblockDataTranslator *</type>
      <name>getMultiblockDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>37dddcd3fe50eac6ced5ad9e1cd05b4d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideDoubleConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1SideDoubleConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>SideDoubleConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDoubleConstantRefine.html</anchorfile>
      <anchor>8a77cd672d9a7d36246cbc873c4cd010</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideDoubleConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDoubleConstantRefine.html</anchorfile>
      <anchor>28b2fe3622b1477ba9be10dd884e699e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDoubleConstantRefine.html</anchorfile>
      <anchor>3666dfba2bfc9ccaffa3b9fe4cb761c2</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDoubleConstantRefine.html</anchorfile>
      <anchor>189d55866b7b86f6b434bf2ff3e0a1f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDoubleConstantRefine.html</anchorfile>
      <anchor>63c4ccfc5dabe10ec9175c0ab1eaa585</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDoubleConstantRefine.html</anchorfile>
      <anchor>01aa939bab78fc9dc4bdf3a5bb992517</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideDoubleLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1SideDoubleLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>SideDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>bd94517ed08794339fbf8e20a2c19822</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>74aa561b349760e3b022c163ae90f651</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>9d3792cdef67b0ffd115cb08b81f2247</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>ecc417466e66bcb42453e604a4ca759c</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideFloatConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1SideFloatConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>SideFloatConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideFloatConstantRefine.html</anchorfile>
      <anchor>1682e15d36c23be94e0d93a3575fc6b4</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideFloatConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideFloatConstantRefine.html</anchorfile>
      <anchor>f659017ee47d288a41964a82d8469e36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideFloatConstantRefine.html</anchorfile>
      <anchor>a9fdfca38efb382241d6412409fec904</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideFloatConstantRefine.html</anchorfile>
      <anchor>e57a426fe4fa9de5f85a682f35d2f380</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideFloatConstantRefine.html</anchorfile>
      <anchor>98d87d250b176b1e363b9a49dd453372</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideFloatConstantRefine.html</anchorfile>
      <anchor>1b796ffb35e5e4a3be10e14a39823b07</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideFloatLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1SideFloatLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>SideFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>7fec7168ee6e145385c5ebaeedd6d16d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>3988d2e7901fb442bb3706b69cd65d00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>94192740bc36c5de6b666dfacea8b29b</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>0813871f638195cc4a1263fb5c9b4a2e</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideGeometry</name>
    <filename>classSAMRAI_1_1pdat_1_1SideGeometry.html</filename>
    <base>SAMRAI::hier::BoxGeometry</base>
    <member kind="typedef">
      <type>SideOverlap</type>
      <name>Overlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideGeometry.html</anchorfile>
      <anchor>59541a1e41f34c3162b1017ac2435333</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SideGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideGeometry.html</anchorfile>
      <anchor>1517b97821fad22c54a98ea612051c67</anchor>
      <arglist>(const hier::Box &amp;box, const hier::IntVector &amp;ghosts, const hier::IntVector &amp;directions)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideGeometry.html</anchorfile>
      <anchor>a6a55964aefa213843b4ea3bc713ba68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideGeometry.html</anchorfile>
      <anchor>84acbf67271a8038bc5efa65b407614b</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation, const bool retry, const hier::BoxContainer &amp;dst_restrict_boxes=hier::BoxContainer()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>setUpOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideGeometry.html</anchorfile>
      <anchor>18ff0c6fc378b26a8448c1a55c5a897e</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideGeometry.html</anchorfile>
      <anchor>9a644a9c7afb4a93d978677dfb503341</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getGhosts</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideGeometry.html</anchorfile>
      <anchor>69fd0100be8e8fd14f0f05222221c907</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getDirectionVector</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideGeometry.html</anchorfile>
      <anchor>183af0746c8bc0604b2e322f2e3cf8cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static hier::Box</type>
      <name>toSideBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideGeometry.html</anchorfile>
      <anchor>301642cbd99542d4d41f8326f320b9d0</anchor>
      <arglist>(const hier::Box &amp;box, int side_normal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>transform</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideGeometry.html</anchorfile>
      <anchor>b5134d9674140b056e257cb7f1020a35</anchor>
      <arglist>(hier::Box &amp;box, int &amp;normal_direction, const hier::Transformation &amp;transformation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>transform</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideGeometry.html</anchorfile>
      <anchor>785731855e59d62071ef69eb33b4b413</anchor>
      <arglist>(SideIndex &amp;index, const hier::Transformation &amp;transformation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideIndex</name>
    <filename>classSAMRAI_1_1pdat_1_1SideIndex.html</filename>
    <base>SAMRAI::hier::Index</base>
    <member kind="enumvalue">
      <type>@</type>
      <name>X</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>cffc058dcf4f5608ca5149b52f27c1ae1b8247aa62ddac19d00bb6e288b13362</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Y</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>cffc058dcf4f5608ca5149b52f27c1ae10152419c2c03b36066c67a59a741021</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Z</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>cffc058dcf4f5608ca5149b52f27c1aecadfec62d19a215afb282248a5c859ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Lower</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>cffc058dcf4f5608ca5149b52f27c1ae9bfdd70831a6c24233cfff04985d779d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Upper</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>cffc058dcf4f5608ca5149b52f27c1aeb14c1a814f5a111c043b766127faee09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>X</name>
      <anchor>cffc058dcf4f5608ca5149b52f27c1ae1b8247aa62ddac19d00bb6e288b13362</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Y</name>
      <anchor>cffc058dcf4f5608ca5149b52f27c1ae10152419c2c03b36066c67a59a741021</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Z</name>
      <anchor>cffc058dcf4f5608ca5149b52f27c1aecadfec62d19a215afb282248a5c859ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Lower</name>
      <anchor>cffc058dcf4f5608ca5149b52f27c1ae9bfdd70831a6c24233cfff04985d779d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Upper</name>
      <anchor>cffc058dcf4f5608ca5149b52f27c1aeb14c1a814f5a111c043b766127faee09</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SideIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>f31f5f22102a2660feebcd373c79a7a0</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SideIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>3c4ff3f8b2103df9ebc30147dadcb3b2</anchor>
      <arglist>(const hier::Index &amp;rhs, const int axis, const int side)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SideIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>6dcfec6ac99daa044997369270b86712</anchor>
      <arglist>(const SideIndex &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>SideIndex &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>d22c85160585ebb9f53b4565e6bad135</anchor>
      <arglist>(const SideIndex &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SideIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>42534d7273e0b642f313d1f53e0724cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>ef3d848faf9fb8624b808814ca206071</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>63c9d834bb84d068f1ebf11aee449e4e</anchor>
      <arglist>(const int axis)</arglist>
    </member>
    <member kind="function">
      <type>hier::Index</type>
      <name>toCell</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>502d540e627c276d66197d5b35251c57</anchor>
      <arglist>(const int side) const </arglist>
    </member>
    <member kind="function">
      <type>SideIndex &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>c4783aacd802f60fa9970f42dec09b4f</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>SideIndex</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>8c0632f2b1e4f77ae0cdc54714efa6c9</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>SideIndex &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>e66b9f6c31688a0a5dc4ac04bb30bbcf</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>SideIndex</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>2d638267753b7deb2213bcb86b2d97bd</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>SideIndex &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>16cecd5b9804cfca4c1401cd238712d7</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>SideIndex</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>de73b5d3831c80c7d276c790a97d8928</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>SideIndex &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>5dd88bf04aa2b681beaae5c7b021b393</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>SideIndex</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>59210be525d34a37925455a446291825</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>SideIndex &amp;</type>
      <name>operator *=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>0de994c2f5c6053d5252552831b3b665</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>SideIndex</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>a2c57eb5894616bac2474819c08a03da</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>SideIndex &amp;</type>
      <name>operator *=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>a2e675c22994991e9f3def0b7b6c9e25</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>SideIndex</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>0fbbf7d05708b2acf2d8ada22fe50834</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>d6d5ed415ed2998b76a956aa39dc4927</anchor>
      <arglist>(const SideIndex &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>1affa859c84c347f0c2fc334bee254c0</anchor>
      <arglist>(const SideIndex &amp;rhs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideIntegerConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1SideIntegerConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>SideIntegerConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIntegerConstantRefine.html</anchorfile>
      <anchor>fe64e0e5a61c8711a54b28ab2a7b61a8</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideIntegerConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIntegerConstantRefine.html</anchorfile>
      <anchor>f468a7d9deb4ffb41ee3d120912053c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIntegerConstantRefine.html</anchorfile>
      <anchor>0c9da1293c279757e06dbc755e31a579</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIntegerConstantRefine.html</anchorfile>
      <anchor>a44f73ec5b1d162b968a1bddf625de60</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIntegerConstantRefine.html</anchorfile>
      <anchor>4338ba2f9743567a688ed83869d557c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIntegerConstantRefine.html</anchorfile>
      <anchor>dde818e0df883016855d955a3aa3761d</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideIterator</name>
    <filename>classSAMRAI_1_1pdat_1_1SideIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>SideIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>adced8fd9bbea1352af8025f5c446f58</anchor>
      <arglist>(const hier::Box &amp;box, const int axis)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SideIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>af38ab7bb5b2593bc436967c0454bbfd</anchor>
      <arglist>(const SideIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type>SideIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>23cc61e3c6293c9117d4770438f98448</anchor>
      <arglist>(const SideIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SideIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>49e384ed7e6916ca6229ea8b5c87e9a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const SideIndex &amp;</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>0e2fb9a36be53ca38b50a11e471c9fb6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const SideIndex &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>0adaebb9753824d9a2b6120fdbfad2a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>1f8899d90dcfbd4722d7913f2bfdd3f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const void *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>25b8ce19614ad226fccd20228425743c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>b8baf22339827cfb94eb8028f3be48b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>26d5f3a1fa0a038af16a6d684c7b08c4</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>e65c0723f07d33c4abb1fa7de977ac41</anchor>
      <arglist>(const SideIterator &amp;iterator) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>67d3b268af01f17ce739fc69dee07d95</anchor>
      <arglist>(const SideIterator &amp;iterator) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideOverlap</name>
    <filename>classSAMRAI_1_1pdat_1_1SideOverlap.html</filename>
    <base>SAMRAI::hier::BoxOverlap</base>
    <member kind="function">
      <type></type>
      <name>SideOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideOverlap.html</anchorfile>
      <anchor>92c1020282c4faf85b8d22a175350652</anchor>
      <arglist>(const tbox::Array&lt; hier::BoxContainer &gt; &amp;boxes, const hier::Transformation &amp;Transformation)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideOverlap.html</anchorfile>
      <anchor>8e92b23aabce39eac228c4e3fab05b5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isOverlapEmpty</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideOverlap.html</anchorfile>
      <anchor>e0b6696f6653722800799aec1a8f4ccc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::BoxContainer &amp;</type>
      <name>getDestinationBoxContainer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideOverlap.html</anchorfile>
      <anchor>6e9d8096dee8e761b1c9fa327f4dddd2</anchor>
      <arglist>(const int axis) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::IntVector &amp;</type>
      <name>getSourceOffset</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideOverlap.html</anchorfile>
      <anchor>11a304763cd6bfb509c9030190cad4fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::Transformation &amp;</type>
      <name>getTransformation</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideOverlap.html</anchorfile>
      <anchor>3a027a585162a6a1735aa6991b792df4</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideVariable</name>
    <filename>classSAMRAI_1_1pdat_1_1SideVariable.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::Variable</base>
    <member kind="function">
      <type></type>
      <name>SideVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideVariable.html</anchorfile>
      <anchor>7dd8b53d3dcc1d8f093b224a5ab20c19</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name, int depth=1, bool fine_boundary_represents_var=true, int direction=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideVariable.html</anchorfile>
      <anchor>14ff880b02f69aaafb07189c02995956</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getDirectionVector</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideVariable.html</anchorfile>
      <anchor>c832b21cc15705c81658310c6b42c943</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideVariable.html</anchorfile>
      <anchor>2281c05f7da2337e6965f34542d7886a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideVariable.html</anchorfile>
      <anchor>f9e1b6320729477af14981e3ffb7d5ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideVariable.html</anchorfile>
      <anchor>8d7803badb0ae012030381ce61bac04b</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SumOperation</name>
    <filename>classSAMRAI_1_1pdat_1_1SumOperation.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>SumOperation</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SumOperation.html</anchorfile>
      <anchor>f31de4dcd0628f3a58ac47f146aaff6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SumOperation</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SumOperation.html</anchorfile>
      <anchor>a54999cd5aadcb2bc21cf2376f487b5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SumOperation.html</anchorfile>
      <anchor>390b67b1473f59647235002bd6acbbc4</anchor>
      <arglist>(TYPE &amp;vdst, const TYPE &amp;vsrc) const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>SAMRAI::solv</name>
    <filename>namespaceSAMRAI_1_1solv.html</filename>
    <class kind="class">SAMRAI::solv::CartesianRobinBcHelper</class>
    <class kind="class">SAMRAI::solv::CellPoissonFACOps</class>
    <class kind="class">SAMRAI::solv::CellPoissonFACSolver</class>
    <class kind="class">SAMRAI::solv::CellPoissonHypreSolver</class>
    <class kind="class">SAMRAI::solv::CVODEAbstractFunctions</class>
    <class kind="class">SAMRAI::solv::CVODESolver</class>
    <class kind="class">SAMRAI::solv::FACOperatorStrategy</class>
    <class kind="class">SAMRAI::solv::FACPreconditioner</class>
    <class kind="class">SAMRAI::solv::GhostCellRobinBcCoefs</class>
    <class kind="class">SAMRAI::solv::KINSOL_SAMRAIContext</class>
    <class kind="class">SAMRAI::solv::KINSOLAbstractFunctions</class>
    <class kind="class">SAMRAI::solv::KINSOLSolver</class>
    <class kind="class">SAMRAI::solv::LocationIndexRobinBcCoefs</class>
    <class kind="class">SAMRAI::solv::NonlinearSolverStrategy</class>
    <class kind="class">SAMRAI::solv::PETSc_SAMRAIVectorReal</class>
    <class kind="class">SAMRAI::solv::PETScAbstractVectorReal</class>
    <class kind="class">SAMRAI::solv::PoissonSpecifications</class>
    <class kind="class">SAMRAI::solv::RobinBcCoefStrategy</class>
    <class kind="class">SAMRAI::solv::SAMRAIVectorReal</class>
    <class kind="class">SAMRAI::solv::SimpleCellRobinBcCoefs</class>
    <class kind="class">SAMRAI::solv::SNES_SAMRAIContext</class>
    <class kind="class">SAMRAI::solv::SNESAbstractFunctions</class>
    <class kind="class">SAMRAI::solv::Sundials_SAMRAIVector</class>
    <class kind="class">SAMRAI::solv::SundialsAbstractVector</class>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>namespaceSAMRAI_1_1solv.html</anchorfile>
      <anchor>d718333b3e0d18adddaa14cd68d493ba</anchor>
      <arglist>(compfluxvardc2d, COMPFLUXVARDC2D)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::CartesianRobinBcHelper</name>
    <filename>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</filename>
    <base>SAMRAI::xfer::RefinePatchStrategy</base>
    <member kind="function">
      <type></type>
      <name>CartesianRobinBcHelper</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>5b35a1d32576ceac5129c88de74747d4</anchor>
      <arglist>(const tbox::Dimension &amp;dim, std::string object_name=std::string(), RobinBcCoefStrategy *coef_strategy=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianRobinBcHelper</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>3dc75529ca1a47fb5bfe5376b30e7c91</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>e603a644404bf5142c1b92295c9937ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPhysicalBoundaryConditions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>036d4b480f37ed811e36650ea76f73c5</anchor>
      <arglist>(hier::Patch &amp;patch, const double fill_time, const hier::IntVector &amp;ghost_width_to_fill)</arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getRefineOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>ccc4c66735dbad0976c556b6a38c9cac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preprocessRefineBoxes</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>f9cfae649ce238deb28b990c8b4e98d5</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::BoxContainer &amp;fine_boxes, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preprocessRefine</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>fa142e52689d375d2b150cf1da41e19d</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessRefineBoxes</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>1dfc4a230436ca86b243e438c121c306</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::BoxContainer &amp;fine_boxes, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessRefine</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>ef8ff23d92caeba0c5da381834d09e8e</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillSingularityBoundaryConditions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>69d326c269be29091c0b41559fa1ccee</anchor>
      <arglist>(hier::Patch &amp;patch, const hier::PatchLevel &amp;encon_level, const hier::Connector &amp;dst_to_encon, const double fill_time, const hier::Box &amp;fill_box, const hier::BoundaryBox &amp;boundary_box, const tbox::Pointer&lt; hier::GridGeometry &gt; &amp;grid_geometry)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundaryValuesInCells</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>f53f3ff119ee35deb172b754036e97cd</anchor>
      <arglist>(hier::Patch &amp;patch, const double fill_time, const hier::IntVector &amp;ghost_width_to_fill, int target_data_id, bool homogeneous_bc=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundaryValuesInCells</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>89eaee6f890849483d2c0c76c83f5c70</anchor>
      <arglist>(hier::PatchLevel &amp;level, const double fill_time, const hier::IntVector &amp;ghost_width_to_fill, int target_data_id, bool homogeneous_bc=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundaryValuesAtNodes</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>2c660902ebe5ec7ceb0bd20cd0f94a37</anchor>
      <arglist>(hier::Patch &amp;patch, const double fill_time, int target_data_id, bool homogeneous_bc=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoefImplementation</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>e6b71cf54673067fea231f3b22d9db10</anchor>
      <arglist>(const RobinBcCoefStrategy *coef_strategy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTargetDataId</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>2e8d5023ea0ca0a7ef92ab5d9d762f6c</anchor>
      <arglist>(int target_data_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHomogeneousBc</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>b6b727954fc252b2b90a512379856cad</anchor>
      <arglist>(bool homogeneous_bc)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::CellPoissonFACOps</name>
    <filename>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</filename>
    <base>SAMRAI::solv::FACOperatorStrategy</base>
    <member kind="function">
      <type></type>
      <name>CellPoissonFACOps</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>00dfa67f57bbb38c426e71969c2878c8</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name=std::string(), tbox::Pointer&lt; tbox::Database &gt; database=tbox::Pointer&lt; tbox::Database &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellPoissonFACOps</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>a71a977a3669e0b89b2ceaa1d2937919</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPoissonSpecifications</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>8d09297c368162dbd2349cc9bc69790f</anchor>
      <arglist>(const PoissonSpecifications &amp;spec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableLogging</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>9568968436c4fafe0a06e1dcc5d2993c</anchor>
      <arglist>(bool enable_logging)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPhysicalBcCoefObject</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>dc5f524b091d3e2567ae1b02a62b3023</anchor>
      <arglist>(const RobinBcCoefStrategy *physical_bc_coef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeVectorWeights</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>9e0eb45c73e0536edeb7fc1d6f357218</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, int weight_id, int coarsest_ln=-1, int finest_ln=-1) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPreconditioner</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>a782233fd1ecd8254014fa4d5304939e</anchor>
      <arglist>(const FACPreconditioner *preconditioner)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeFluxOnPatch</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>8276f889b6984293e562408856b506f5</anchor>
      <arglist>(const hier::Patch &amp;patch, const hier::IntVector &amp;ratio_to_coarser_level, const pdat::CellData&lt; double &gt; &amp;w_data, pdat::SideData&lt; double &gt; &amp;Dgradw_data) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>0d782e7712cc6ca36aa3694d0561fa4e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSmoothingChoice</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>6a026beb2444d5cbef39ef1e55063bd3</anchor>
      <arglist>(const std::string &amp;smoothing_choice)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoarsestLevelSolverChoice</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>6c9e179fbda650a2f601026721c8bfa4</anchor>
      <arglist>(const std::string &amp;choice)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoarsestLevelSolverTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>b25c0a32993bdc52aef91bbf8f9ea0c7</anchor>
      <arglist>(double tol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoarsestLevelSolverMaxIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>1d59301db9e61c3825907f039614899f</anchor>
      <arglist>(int max_iterations)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoarseFineDiscretization</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>dcf92ec12bd734e49f6471f419075512</anchor>
      <arglist>(const std::string &amp;coarsefine_method)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProlongationMethod</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>6a3e7c246835fef124b7855e9f31b30a</anchor>
      <arglist>(const std::string &amp;prolongation_method)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseSMG</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>10f1434680e435a572dbb195e51fefa9</anchor>
      <arglist>(bool use_smg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFluxId</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>0ac6cfac6fd8a84a6538bd5b579fb521</anchor>
      <arglist>(int flux_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkInputPatchDataIndices</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>071ca86f3a36ddc704305cf62e2fb18e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>restrictSolution</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>9dae37b0144393116d0bc85105a66175</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;source, SAMRAIVectorReal&lt; double &gt; &amp;dest, int dest_ln)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>restrictResidual</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>65fefa03bb3b1932c3bdc4f453124629</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;source, SAMRAIVectorReal&lt; double &gt; &amp;dest, int dest_ln)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>prolongErrorAndCorrect</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>4cd51fa373fd7e2931323f3613ac42c4</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;source, SAMRAIVectorReal&lt; double &gt; &amp;dest, int dest_ln)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>smoothError</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>2455fd635c8fa8cabe26f32f7a489968</anchor>
      <arglist>(SAMRAIVectorReal&lt; double &gt; &amp;error, const SAMRAIVectorReal&lt; double &gt; &amp;residual, int ln, int num_sweeps)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solveCoarsestLevel</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>5fe346279ed17b0916f78d3a13e72a7c</anchor>
      <arglist>(SAMRAIVectorReal&lt; double &gt; &amp;error, const SAMRAIVectorReal&lt; double &gt; &amp;residual, int coarsest_ln)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeCompositeResidualOnLevel</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>fa8593675924f56c22f30f6ba9481b3f</anchor>
      <arglist>(SAMRAIVectorReal&lt; double &gt; &amp;residual, const SAMRAIVectorReal&lt; double &gt; &amp;solution, const SAMRAIVectorReal&lt; double &gt; &amp;rhs, int ln, bool error_equation_indicator)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeResidualNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>600efac0d1a09650e090b3fd78fd91bb</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;residual, int fine_ln, int coarse_ln)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeOperatorState</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>de6b8fff6898f32c5b952b068cf43651</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;solution, const SAMRAIVectorReal&lt; double &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deallocateOperatorState</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>c5cabdad53ce01fd47d3b1b63e268c10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessOneCycle</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>dda1412142d5c70a223128be7a0dfcd1</anchor>
      <arglist>(int fac_cycle_num, const SAMRAIVectorReal&lt; double &gt; &amp;current_soln, const SAMRAIVectorReal&lt; double &gt; &amp;residual)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::CellPoissonFACSolver</name>
    <filename>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</filename>
    <member kind="function">
      <type></type>
      <name>CellPoissonFACSolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>0494668cb6e6fa9a0370452cd5d2440c</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; database=tbox::Pointer&lt; tbox::Database &gt;())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellPoissonFACSolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>1432f3bfe3613178e201c9b1434a1733</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableLogging</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>1a53dd35c21b776b65d20355a4003cd7</anchor>
      <arglist>(bool logging)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solveSystem</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>e0bcc36f2669513b7b52e06d691f83b1</anchor>
      <arglist>(const int solution, const int rhs, tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, int coarse_ln=-1, int fine_ln=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solveSystem</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>aac02784e9cbcb1aac14e3200c6ec45b</anchor>
      <arglist>(const int solution, const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundaries</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>dce4cbfccddba8482bb4513ed369cffb</anchor>
      <arglist>(const std::string &amp;boundary_type, const int fluxes=-1, const int flags=-1, int *bdry_types=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBcObject</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>c48d798320cedd1a0761b00666882bce</anchor>
      <arglist>(const RobinBcCoefStrategy *bc_object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeSolverState</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>213e2e13fc4469c3483673647afb7646</anchor>
      <arglist>(const int solution, const int rhs, tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarse_level=-1, const int fine_level=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocateSolverState</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>29641296b35a31d68627c52bfd5371f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>6c9202f74850e57d794aee2b70eaad65</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDPatchDataId</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>973955603cb04fac38d34ccff14c22ef</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDConstant</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>779608d30ac4c1b51865c9e502970f53</anchor>
      <arglist>(double scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCPatchDataId</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>f014877c35b8d7c85b6a6964cc38711c</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCConstant</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>97b49b7f7ef9c2685377c2b73d0f88ff</anchor>
      <arglist>(double scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoarsestLevelSolverChoice</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>d13f042ecfc9e6e88ad94459db4c8d96</anchor>
      <arglist>(const std::string &amp;choice)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoarsestLevelSolverTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>04c814a7d724dd6b5776d0c4bcc55b05</anchor>
      <arglist>(double tol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoarsestLevelSolverMaxIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>fccd175c7a0079b26600eaf613796477</anchor>
      <arglist>(int max_iterations)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseSMG</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>4034f2a0d7c889e6d520e5ee8eb6be16</anchor>
      <arglist>(bool use_smg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoarseFineDiscretization</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>7a01aabda75dfef8789230170a8ed90c</anchor>
      <arglist>(const std::string &amp;coarsefine_method)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProlongationMethod</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>222179ae37ace9355201a6756869c80d</anchor>
      <arglist>(const std::string &amp;prolongation_method)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPresmoothingSweeps</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>54918bf862095228e95671f42c7bd368</anchor>
      <arglist>(int num_pre_sweeps)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPostsmoothingSweeps</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>1d9d81bbb349e6432d0089bbd6508b90</anchor>
      <arglist>(int num_post_sweeps)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxCycles</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>ce9dffabb75627f500a634a844b93e48</anchor>
      <arglist>(int max_cycles)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResidualTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>a4618195b0e02c0f470f2b453faafd12</anchor>
      <arglist>(double residual_tol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>d63d229a713f69ce70bb0570e2d4ed31</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getConvergenceFactors</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>53f7250dc2a2e975d1b707c7d1dec020</anchor>
      <arglist>(double &amp;avg_factor, double &amp;final_factor) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getResidualNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>62a37918dc0c50f8c342765dddd04e74</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::CellPoissonHypreSolver</name>
    <filename>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</filename>
    <member kind="function">
      <type></type>
      <name>CellPoissonHypreSolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>14565f7393f0c96dced7c519ecf4f8e0</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; database=tbox::Pointer&lt; tbox::Database &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellPoissonHypreSolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>27aadf4b57f2cd421e53eb5bc6492bd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeSolverState</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>c860543f853c46126b4d38029e9c109d</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, int ln=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocateSolverState</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>eb70d7f18894dd893d6fe06b043930f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMatrixCoefficients</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>81ca361f779559875db5b6d04e52855a</anchor>
      <arglist>(const PoissonSpecifications &amp;spec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSolnIdDepth</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>ab9bd42212c2766ab5bfa1791060f803</anchor>
      <arglist>(const int depth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRhsIdDepth</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>030a8245aa02cf216c1e6e29e1da36ac</anchor>
      <arglist>(const int depth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStoppingCriteria</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>5272fe4eb257823aa71b758973bec861</anchor>
      <arglist>(const int max_iterations=10, const double relative_residual_tol=1.0e-6)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solveSystem</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>b09ca8a5eeb29ef4c877a5e20d3a5ea4</anchor>
      <arglist>(const int u, const int f, bool homogeneous_bc=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>6bbaae36b504c5232bd1de3b0754aab3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumPreRelaxSteps</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>486ebdf87f584f9b946dfa32bcad19e6</anchor>
      <arglist>(const int steps)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumPostRelaxSteps</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>598c62a7ea15a2e433e0c20cbe350faf</anchor>
      <arglist>(const int steps)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRelativeResidualNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>2cc9ecb14bf284319aae8e2fa33c3c0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseSMG</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>4fc42c12441eede9576195fbe606fc7e</anchor>
      <arglist>(bool use_smg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundaries</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>72c882ab9773d37c2ac5d0ce137b88e6</anchor>
      <arglist>(const std::string &amp;boundary_type, const int fluxes=-1, const int flags=-1, int *bdry_types=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPhysicalBcCoefObject</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>2799873c3e747c0f8ba8ebb895a80758</anchor>
      <arglist>(const RobinBcCoefStrategy *physical_bc_coef_strategy, const tbox::Pointer&lt; hier::Variable &gt; variable=tbox::Pointer&lt; hier::Variable &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPrintSolverInfo</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>5d4975b2d30c26c6cce0c849f9548ee4</anchor>
      <arglist>(const bool print)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>1e982f9375753c0df28c4002002f1783</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::CVODEAbstractFunctions</name>
    <filename>classSAMRAI_1_1solv_1_1CVODEAbstractFunctions.html</filename>
    <member kind="function">
      <type></type>
      <name>CVODEAbstractFunctions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODEAbstractFunctions.html</anchorfile>
      <anchor>05476a94fbeb0890b319fb01dac1ae3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CVODEAbstractFunctions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODEAbstractFunctions.html</anchorfile>
      <anchor>18abed173cb2dce1f0c9026c1797a0e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>evaluateRHSFunction</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODEAbstractFunctions.html</anchorfile>
      <anchor>6aa5ce9297df64228a6fd80967a97453</anchor>
      <arglist>(double t, SundialsAbstractVector *y, SundialsAbstractVector *y_dot)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>CVSpgmrPrecondSet</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODEAbstractFunctions.html</anchorfile>
      <anchor>46805aefa541fce0cbe281bbdb2d87aa</anchor>
      <arglist>(double t, SundialsAbstractVector *y, SundialsAbstractVector *fy, int jok, int *jcurPtr, double gamma, SundialsAbstractVector *vtemp1, SundialsAbstractVector *vtemp2, SundialsAbstractVector *vtemp3)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>CVSpgmrPrecondSolve</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODEAbstractFunctions.html</anchorfile>
      <anchor>39200e20f84f32a3b0ca7564a2d0f531</anchor>
      <arglist>(double t, SundialsAbstractVector *y, SundialsAbstractVector *fy, SundialsAbstractVector *r, SundialsAbstractVector *z, double gamma, double delta, int lr, SundialsAbstractVector *vtemp)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::CVODESolver</name>
    <filename>classSAMRAI_1_1solv_1_1CVODESolver.html</filename>
    <member kind="function">
      <type></type>
      <name>CVODESolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>f640a046e2a756c98a0d65e40a567841</anchor>
      <arglist>(const std::string &amp;object_name, CVODEAbstractFunctions *my_functions, const bool uses_preconditioner)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CVODESolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>19c76c484c10176c4cd84f5a074649d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>f46b2e62c8aff2e5dbd611337e3cbffb</anchor>
      <arglist>(SundialsAbstractVector *solution)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a9034e37dbcc3a3d414e43e611fa3ae0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogFileData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>8f12a684c80d6da257b97b5c6441a694</anchor>
      <arglist>(const std::string &amp;log_fname=std::string())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCVODEFunctions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>0e5a3871b89bfdb65f02d11fca4209fe</anchor>
      <arglist>(CVODEAbstractFunctions *my_functions, const bool uses_preconditioner)</arglist>
    </member>
    <member kind="function">
      <type>CVODEAbstractFunctions *</type>
      <name>getCVODEFunctions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>96a0a9255fed2e28dbc0e50568579dcf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinearMultistepMethod</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>3349215efc0342cad109e47c98449f86</anchor>
      <arglist>(int linear_multistep_method)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIterationType</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>b4ef6bbfb197584fd6fe0314487dbebe</anchor>
      <arglist>(int iteration_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToleranceType</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>97d7e08e18c8fc65307c18133304acb1</anchor>
      <arglist>(int tolerance_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>87e59db3a5e5ea1f16c7924fd8f27e93</anchor>
      <arglist>(double relative_tolerance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAbsoluteTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>37b23a169437d798fe6fae127db619ad</anchor>
      <arglist>(double absolute_tolerance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAbsoluteTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>70a77de797968f316d305dfb7082dfa3</anchor>
      <arglist>(SundialsAbstractVector *absolute_tolerance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSteppingMethod</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>4c7dd62716a239ec2c0168564d3cfacd</anchor>
      <arglist>(int stepping_method)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialValueOfIndependentVariable</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>0ab445a0df1495c106092d84ed1faaa5</anchor>
      <arglist>(double t_0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFinalValueOfIndependentVariable</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>e2842d0522603847039193dccfbfd0db</anchor>
      <arglist>(double t_f, bool cvode_needs_initialization)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialConditionVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a8f2537f71e9c46689f08f32e9f52fb4</anchor>
      <arglist>(SundialsAbstractVector *ic_vector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximumLinearMultistepMethodOrder</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>7fa220f18d340aea133c227f88684010</anchor>
      <arglist>(int max_order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximumNumberOfInternalSteps</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a68a494477159ef9abab777629fd16a2</anchor>
      <arglist>(int max_num_internal_steps)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximumNumberOfNilStepWarnings</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>024fd8957503e9b0614f5e74600881a3</anchor>
      <arglist>(int max_num_warnings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialStepSize</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>3f87cd4e9de810f286da061e8de3c399</anchor>
      <arglist>(double init_step_size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximumAbsoluteStepSize</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>635b8c72916030b45d59ae113257630b</anchor>
      <arglist>(double max_step_size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimumAbsoluteStepSize</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>391f381d1072b8f2e5394ec6df366ac3</anchor>
      <arglist>(double min_step_size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPreconditioningType</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>c009b00dbc79fbdb4856932db7f11386</anchor>
      <arglist>(int precondition_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGramSchmidtType</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>7728d0cc5ec414840c551bc0432519ed</anchor>
      <arglist>(int gs_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxKrylovDimension</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>6434fdde8d7bc9ce33555480c12b7579</anchor>
      <arglist>(int max_krylov_dim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCVSpgmrToleranceScaleFactor</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>23a5887e91b67bd652554308b250cbd3</anchor>
      <arglist>(double tol_scale_factor)</arglist>
    </member>
    <member kind="function">
      <type>SundialsAbstractVector *</type>
      <name>getSolutionVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>20d8cc8b871135c07c39b2b7f5c35ae3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDkyVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>3b9cee8dea1c0aae624e247806d9f933</anchor>
      <arglist>(double t, int k, SundialsAbstractVector *dky) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getActualFinalValueOfIndependentVariable</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a4722bed5d9a6113a3dbe9f242b6a5fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printStatistics</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>91daa119a71f1fa19e683629575cb3c8</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printCVODEStatistics</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>717edf83e22fc582d36b2a582327b2ab</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfInternalStepsTaken</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>52c75ba43c0718ce961934c8a7703810</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfRHSFunctionCalls</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>941ebc392c4612c1b096e66a0b78afc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfLinearSolverSetupCalls</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>79abb165024c34b581c090d66a1e5502</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfNewtonIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>edb190402c9d9875138397988b283338</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfNonlinearConvergenceFailures</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>81751ec8f2656ded3d8c7ad27ac4825f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfLocalErrorTestFailures</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>9c9b2079851b1e3bdef82726643b75cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOrderUsedDuringLastInternalStep</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>b94f2b66d802663ba1032d73f31efe2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOrderToBeUsedDuringNextInternalStep</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>ab7141183623b70e48a4ee4d9206745f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCVODEMemoryUsageForDoubles</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>fee30149975009efb602671ca93bb5c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCVODEMemoryUsageForIntegers</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>93057e16e70dedd1264747c8e90b6753</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStepSizeForLastInternalStep</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>63a5bfb0b71fb2c60076ae77e2960c48</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStepSizeForNextInternalStep</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>625858f9a1b3b6d1d66182e31b81fa64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCurrentInternalValueOfIndependentVariable</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>8d49e1aeede6a6125c2802e763c93fff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCVODESuggestedToleranceScalingFactor</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>ad683c6628c8f0a928f36e962a4d1fca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printCVSpgmrStatistics</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>7ce2d1ef47313daa66209f1476879c90</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfPreconditionerEvaluations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>39e4eec3b6337e16f33701d00b31d71e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfLinearIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>185cd82a514ce0b04c415182e05a9944</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfPrecondSolveCalls</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>34eb1e54d4dc88462108f55431b6fde2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfLinearConvergenceFailures</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>e8cf463127e3cb185f3787b63a572638</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCVSpgmrMemoryUsageForDoubles</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>6d7e51c8e72f0cb3df4946ceabf4a55a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCVSpgmrMemoryUsageForIntegers</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>4a49b33a006705baff5c5139ec3378cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>c595f1cab02118e007e32deff36f256b</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>6dc038cafb620533f33adcf5846375c6</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::FACOperatorStrategy</name>
    <filename>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>FACOperatorStrategy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>67aa4a05fb4ae99c2ba473d36f87352e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FACOperatorStrategy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>adaa0f88b4061e43736e5e5a41b0668d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>restrictSolution</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>5357d62fc9348343a000f716ac079058</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;source, SAMRAIVectorReal&lt; double &gt; &amp;dest, int dest_ln)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>restrictResidual</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>28015218b96465d3fee296842c1cc180</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;source, SAMRAIVectorReal&lt; double &gt; &amp;dest, int dest_ln)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>prolongErrorAndCorrect</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>34e0d01ffdfee29aedcb49dba4f84f69</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;source, SAMRAIVectorReal&lt; double &gt; &amp;dest, int dest_ln)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>smoothError</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>3d047f75517b2d149fd45738092c3078</anchor>
      <arglist>(SAMRAIVectorReal&lt; double &gt; &amp;error, const SAMRAIVectorReal&lt; double &gt; &amp;residual, int ln, int num_sweeps)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>solveCoarsestLevel</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>f0a0942ac9d24c2341066f6db282476e</anchor>
      <arglist>(SAMRAIVectorReal&lt; double &gt; &amp;error, const SAMRAIVectorReal&lt; double &gt; &amp;residual, int coarsest_ln)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>computeCompositeResidualOnLevel</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>224cb5f215ca84fa18bb37a7a3c90074</anchor>
      <arglist>(SAMRAIVectorReal&lt; double &gt; &amp;residual, const SAMRAIVectorReal&lt; double &gt; &amp;solution, const SAMRAIVectorReal&lt; double &gt; &amp;rhs, int ln, bool error_equation_indicator)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>computeResidualNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>d87ddb09cfe2c3aa4fb73ca0ba05d516</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;residual, int fine_ln, int coarse_ln)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessOneCycle</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>821ecf721ad77ed218f2253372d0273e</anchor>
      <arglist>(int fac_cycle_num, const SAMRAIVectorReal&lt; double &gt; &amp;current_soln, const SAMRAIVectorReal&lt; double &gt; &amp;residual)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeOperatorState</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>b7c6eafb7193640cc4704a5e46a0c7ff</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;solution, const SAMRAIVectorReal&lt; double &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deallocateOperatorState</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>cd3290e2ac8e3f53342c4997afcc0c43</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::FACPreconditioner</name>
    <filename>classSAMRAI_1_1solv_1_1FACPreconditioner.html</filename>
    <member kind="function">
      <type></type>
      <name>FACPreconditioner</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>563e5506587f7b238183cb5016c77e59</anchor>
      <arglist>(const std::string &amp;name, FACOperatorStrategy &amp;user_ops, tbox::Pointer&lt; tbox::Database &gt; database=tbox::Pointer&lt; tbox::Database &gt;(NULL))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FACPreconditioner</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>bf1bf0cc1ece3ad7ceacda43fd48e4c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solveSystem</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>c3109814e040e2133204a26d31ec2f0b</anchor>
      <arglist>(SAMRAIVectorReal&lt; double &gt; &amp;solution, SAMRAIVectorReal&lt; double &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeSolverState</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>224f2e5736891837a0a6f173ef2d5100</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;solution, const SAMRAIVectorReal&lt; double &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocateSolverState</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>bf34a53392b560ef4450278071c2e5ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkVectorStateCompatibility</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>c93151dec50bdf46302096909c86ac8f</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;solution, const SAMRAIVectorReal&lt; double &gt; &amp;rhs) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>742507f38d5d6f62cd41aa185123f248</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>389ec4e85817e18e198ba9428ace6b8e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPresmoothingSweeps</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>43a765fc55bcc3a85b269fa8ca4c1e12</anchor>
      <arglist>(int num_pre_sweeps)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPostsmoothingSweeps</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>d7a3f570836a68f7efe8b2653bd33b5f</anchor>
      <arglist>(int num_post_sweeps)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxCycles</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>cbd37b7ca8fb5d4c0e1a9599a6d18de3</anchor>
      <arglist>(int max_cycles)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResidualTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>bf6446c1e90ad34634abb6d8114281ac</anchor>
      <arglist>(double residual_tol, double relative_residual_tol=-1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlgorithmChoice</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>3a3a70ab58d548bbdbfe29fa4ce3f67b</anchor>
      <arglist>(const std::string &amp;choice)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableLogging</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>97e99fda621d1eb09dca35f06b182eb4</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>1f9c8a48e454b57898d92e0213772f55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getConvergenceFactors</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>ae2d32191f6e08ae6fe8fab7e77e4034</anchor>
      <arglist>(double &amp;avg_factor, double &amp;final_factor) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNetConvergenceFactor</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>ad87905ce4992b2d193e611c3801117d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAvgConvergenceFactor</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>c2bce4dd27ef774bc5d7d4fe6a35856e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFinalConvergenceFactor</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>ae0fba267a727ddbfd926c1856830671</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getResidualNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>9fed590158335d808cc89b5d23c0ea9d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::GhostCellRobinBcCoefs</name>
    <filename>classSAMRAI_1_1solv_1_1GhostCellRobinBcCoefs.html</filename>
    <base>SAMRAI::solv::RobinBcCoefStrategy</base>
    <member kind="function">
      <type></type>
      <name>GhostCellRobinBcCoefs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1GhostCellRobinBcCoefs.html</anchorfile>
      <anchor>609af7ff97960380f7338e06761d4323</anchor>
      <arglist>(const tbox::Dimension &amp;dim, std::string object_name=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GhostCellRobinBcCoefs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1GhostCellRobinBcCoefs.html</anchorfile>
      <anchor>b65dec4155e5637c65180d6d0eb1bc39</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBcCoefs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1GhostCellRobinBcCoefs.html</anchorfile>
      <anchor>b1965b005f44cb6b63bef376d1ae9a7e</anchor>
      <arglist>(tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;acoef_data, tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;bcoef_data, tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;gcoef_data, const tbox::Pointer&lt; hier::Variable &gt; &amp;variable, const hier::Patch &amp;patch, const hier::BoundaryBox &amp;bdry_box, double fill_time=0.0) const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>numberOfExtensionsFillable</name>
      <anchorfile>classSAMRAI_1_1solv_1_1GhostCellRobinBcCoefs.html</anchorfile>
      <anchor>b4820cee55d3a8631fa0ba208783a868</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGhostDataId</name>
      <anchorfile>classSAMRAI_1_1solv_1_1GhostCellRobinBcCoefs.html</anchorfile>
      <anchor>1dbb726690b2a1ea34730de4f3a64659</anchor>
      <arglist>(int ghost_data_id, hier::IntVector extensions_fillable)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1GhostCellRobinBcCoefs.html</anchorfile>
      <anchor>967b51ab195f387bd8b261c1a8282bfb</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::KINSOL_SAMRAIContext</name>
    <filename>classSAMRAI_1_1solv_1_1KINSOL__SAMRAIContext.html</filename>
    <base>SAMRAI::solv::NonlinearSolverStrategy</base>
    <base>SAMRAI::tbox::Serializable</base>
    <member kind="function">
      <type></type>
      <name>KINSOL_SAMRAIContext</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOL__SAMRAIContext.html</anchorfile>
      <anchor>5d191b0b4f7b28e5f1240bd43bc79c6d</anchor>
      <arglist>(const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; input_db, KINSOLAbstractFunctions *my_functions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KINSOL_SAMRAIContext</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOL__SAMRAIContext.html</anchorfile>
      <anchor>6376c1ac694a5d2ec847e1b7be297654</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOL__SAMRAIContext.html</anchorfile>
      <anchor>cad70d6bd74f896bc07edf5d27f47761</anchor>
      <arglist>(tbox::Pointer&lt; SAMRAIVectorReal&lt; double &gt; &gt; solution)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOL__SAMRAIContext.html</anchorfile>
      <anchor>b1889aff146545e9831c7cc3b4d3f7c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KINSOLSolver *</type>
      <name>getKINSOLSolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOL__SAMRAIContext.html</anchorfile>
      <anchor>415a66603f56c802ba558dfd828082d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromInput</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOL__SAMRAIContext.html</anchorfile>
      <anchor>589c6b4d0976bc8eafec8b47d5444df4</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromRestart</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOL__SAMRAIContext.html</anchorfile>
      <anchor>54ba2a114776dadc444297a7c5a2ba28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOL__SAMRAIContext.html</anchorfile>
      <anchor>c94a37931011667f0881085b4c562448</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOL__SAMRAIContext.html</anchorfile>
      <anchor>54985fea7ff974850c5c894f35c2987f</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOL__SAMRAIContext.html</anchorfile>
      <anchor>c49b4f2789277d5deb2050190cc12823</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::KINSOLAbstractFunctions</name>
    <filename>classSAMRAI_1_1solv_1_1KINSOLAbstractFunctions.html</filename>
    <member kind="function">
      <type></type>
      <name>KINSOLAbstractFunctions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLAbstractFunctions.html</anchorfile>
      <anchor>8f0bf2ad393ea71423640710b9dabb15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KINSOLAbstractFunctions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLAbstractFunctions.html</anchorfile>
      <anchor>b98b6598136cdc9b6d0feeeed5d2787f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>evaluateNonlinearFunction</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLAbstractFunctions.html</anchorfile>
      <anchor>959980ebbc7cfc53248e8f33241ff47a</anchor>
      <arglist>(SundialsAbstractVector *soln, SundialsAbstractVector *fval)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>precondSetup</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLAbstractFunctions.html</anchorfile>
      <anchor>0c964eddcf4de29bffad1b25babd2318</anchor>
      <arglist>(SundialsAbstractVector *soln, SundialsAbstractVector *soln_scale, SundialsAbstractVector *fval, SundialsAbstractVector *fval_scale, SundialsAbstractVector *vtemp1, SundialsAbstractVector *vtemp2, int &amp;num_feval)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>precondSolve</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLAbstractFunctions.html</anchorfile>
      <anchor>519fdaecb5f2fba9ceabaaf8ebe2bd41</anchor>
      <arglist>(SundialsAbstractVector *soln, SundialsAbstractVector *soln_scale, SundialsAbstractVector *fval, SundialsAbstractVector *fval_scale, SundialsAbstractVector *rhs, SundialsAbstractVector *vtemp, int &amp;num_feval)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>jacobianTimesVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLAbstractFunctions.html</anchorfile>
      <anchor>50c9ef7a844d8f34e81d20a0ea84a17a</anchor>
      <arglist>(SundialsAbstractVector *vector, SundialsAbstractVector *product, const bool soln_changed, SundialsAbstractVector *soln)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::KINSOLSolver</name>
    <filename>classSAMRAI_1_1solv_1_1KINSOLSolver.html</filename>
    <member kind="function">
      <type></type>
      <name>KINSOLSolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>1bbd4936d59b0e5e17849ad3a3372223</anchor>
      <arglist>(const std::string &amp;object_name, KINSOLAbstractFunctions *my_functions, const int uses_preconditioner, const int uses_jac_times_vector)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KINSOLSolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>eec2fc679b88c76f3f45155b35ea5553</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>d019d8fc6fa9c98b16926c7527b6b020</anchor>
      <arglist>(SundialsAbstractVector *solution, SundialsAbstractVector *uscale=NULL, SundialsAbstractVector *fscale=NULL)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>38be1141d777bb65ea3dde2e3fcbdda7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogFileData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>376b6b6ea8d3ec24b6d151998ac85791</anchor>
      <arglist>(const std::string &amp;log_fname, const int flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setKINSOLFunctions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>accb4e758241aa635c925842e5ca8811</anchor>
      <arglist>(KINSOLAbstractFunctions *my_functions, const int uses_preconditioner, const int uses_jac_times_vector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPreconditioner</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>1e94eb061a432d2669cae93fa1fc8bc9</anchor>
      <arglist>(const int uses_preconditioner)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJacobianTimesVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>2463cc1b326b32e592a025adf9a7a2e9</anchor>
      <arglist>(const int uses_jac_times_vector)</arglist>
    </member>
    <member kind="function">
      <type>KINSOLAbstractFunctions *</type>
      <name>getKINSOLFunctions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>8faafe9f70958730414e7d6b128bab7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstraintVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>fdc5d48cca453cacc233f6d64cf53460</anchor>
      <arglist>(SundialsAbstractVector *constraints)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResidualStoppingTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>396d3f3bd9991b7665a3ebfb3ccdc37d</anchor>
      <arglist>(const double tol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>ccca90f149de1f2d72abb6ec91c57b72</anchor>
      <arglist>(const int maxits)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxKrylovDimension</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>9eae8f7263b0a69eab3bb869dc13c60c</anchor>
      <arglist>(const int kdim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGlobalStrategy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>55a2a3bc84c57c43902df391c16f8b5a</anchor>
      <arglist>(const int global)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxNewtonStep</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>505d678a6667654f3f97bd23276b7125</anchor>
      <arglist>(const double maxstep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNonlinearStepTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>fd17c26a286299bc9b4bfa81161d98da</anchor>
      <arglist>(const double tol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeFunctionError</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>eb95053c1c202d9fbd27b5530153cee2</anchor>
      <arglist>(const double reserr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinearSolverConvergenceTest</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>27fae62ececb0417499e2333261c2493</anchor>
      <arglist>(const int conv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinearSolverConstantTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>b76d869624257d2370aff9de9493bfbe</anchor>
      <arglist>(const double tol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEisenstatWalkerParameters</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>9af447eb67339d3072c243cbee3ae5f3</anchor>
      <arglist>(const double alpha, const double gamma)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxStepsWithNoPrecondSetup</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>193fb43a68eb26e77b7314a6fd2c0842</anchor>
      <arglist>(const int maxsolv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxLinearSolveRestarts</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>ba82093deeff92cae30cd206bbfbcf27</anchor>
      <arglist>(const int restarts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxSubSetupCalls</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>cafb5be7e1569377fb955d750af1f681</anchor>
      <arglist>(const int maxsub)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResidualMonitoringParams</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>6ffb3b708451eb69a9186967c69bc3d3</anchor>
      <arglist>(const double omega_min, const double omega_max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResidualMonitoringConstant</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>6a4ad9ef435ccffd5274686ebea90d5f</anchor>
      <arglist>(const double omega)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNoMinEps</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>7832138ca3372c7ff38a202b40fabb01</anchor>
      <arglist>(const bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxBetaFails</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a6d4ddd4623f2c1133ac2efe94903afc</anchor>
      <arglist>(const int max_beta_fails)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNoInitialSetup</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>5a4e6b644c0cb0f1a3c6f0afd897f38a</anchor>
      <arglist>(const bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNoResidualMonitoring</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>bc38561183a9c0bb069d5bb3c39c4c2e</anchor>
      <arglist>(const bool flag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTotalNumberOfNonlinearIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>ff678a333b53c3fd5c3ad7cb963a2395</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTotalNumberOfFunctionCalls</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a73e00d2b9a802c19b991885d84be4dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTotalNumberOfBetaConditionFailures</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>e969b6419e64fe4652d2293094182fab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTotalNumberOfBacktracks</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>10a80a30e9e31de7c5ae34f0cab09673</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getScaledResidualNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>4702bc1e766307f989b8c0061e2c9ed7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNewtonStepLength</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>8740b7f599ae08f8282468ba7b10306b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>c4361b677c2e2ad81d1d6fb7775d70e2</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeKINSOL</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>b2920162034fcb9885272a4c1f9da70a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>b9c19784b54111492ade6cf1dbdd6669</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::LocationIndexRobinBcCoefs</name>
    <filename>classSAMRAI_1_1solv_1_1LocationIndexRobinBcCoefs.html</filename>
    <base>SAMRAI::solv::RobinBcCoefStrategy</base>
    <member kind="function">
      <type></type>
      <name>LocationIndexRobinBcCoefs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1LocationIndexRobinBcCoefs.html</anchorfile>
      <anchor>29f6b3386db0fa225ebce489be768775</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LocationIndexRobinBcCoefs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1LocationIndexRobinBcCoefs.html</anchorfile>
      <anchor>7207f5554ca090a48311d50d9623d2df</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBcCoefs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1LocationIndexRobinBcCoefs.html</anchorfile>
      <anchor>422fa88229a31ac394cf09049477a4f5</anchor>
      <arglist>(tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;acoef_data, tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;bcoef_data, tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;gcoef_data, const tbox::Pointer&lt; hier::Variable &gt; &amp;variable, const hier::Patch &amp;patch, const hier::BoundaryBox &amp;bdry_box, double fill_time=0.0) const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>numberOfExtensionsFillable</name>
      <anchorfile>classSAMRAI_1_1solv_1_1LocationIndexRobinBcCoefs.html</anchorfile>
      <anchor>3b7b19c9f94c49d8eeadfba1977d8625</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundaryValue</name>
      <anchorfile>classSAMRAI_1_1solv_1_1LocationIndexRobinBcCoefs.html</anchorfile>
      <anchor>52e0e9e17d4f6867e1016d2d0486c5c6</anchor>
      <arglist>(int location_index, double value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundarySlope</name>
      <anchorfile>classSAMRAI_1_1solv_1_1LocationIndexRobinBcCoefs.html</anchorfile>
      <anchor>d5db59e3eeaeb303a0c3895521454277</anchor>
      <arglist>(int location_index, double slope)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRawCoefficients</name>
      <anchorfile>classSAMRAI_1_1solv_1_1LocationIndexRobinBcCoefs.html</anchorfile>
      <anchor>bee8f03928d317c4b8ebf0e7ab1b4dd6</anchor>
      <arglist>(int location_index, double a, double b, double g)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getCoefficients</name>
      <anchorfile>classSAMRAI_1_1solv_1_1LocationIndexRobinBcCoefs.html</anchorfile>
      <anchor>ff7f5703876ff13ca68d83b7f2a4efe4</anchor>
      <arglist>(int location_index, double &amp;a, double &amp;b, double &amp;g) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1LocationIndexRobinBcCoefs.html</anchorfile>
      <anchor>bf99a0de109714fea0b46562725b001b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const LocationIndexRobinBcCoefs &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1solv_1_1LocationIndexRobinBcCoefs.html</anchorfile>
      <anchor>56dd32cc6305d9072db2f97076d9e1be</anchor>
      <arglist>(const LocationIndexRobinBcCoefs &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::NonlinearSolverStrategy</name>
    <filename>classSAMRAI_1_1solv_1_1NonlinearSolverStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>NonlinearSolverStrategy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1NonlinearSolverStrategy.html</anchorfile>
      <anchor>d1b31659b0ca2271ddd6d63c383956b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NonlinearSolverStrategy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1NonlinearSolverStrategy.html</anchorfile>
      <anchor>24badd649c7033e98c599f2116cc9c6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1solv_1_1NonlinearSolverStrategy.html</anchorfile>
      <anchor>6c148a3ff61d578b6299bf0c8b9ee32a</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; double &gt; &gt; solution)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>solve</name>
      <anchorfile>classSAMRAI_1_1solv_1_1NonlinearSolverStrategy.html</anchorfile>
      <anchor>0ab30dd73e525705b1fbf2e5d13b1c61</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::PETSc_SAMRAIVectorReal</name>
    <filename>classSAMRAI_1_1solv_1_1PETSc__SAMRAIVectorReal.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::solv::PETScAbstractVectorReal</base>
    <member kind="function" static="yes">
      <type>static Vec</type>
      <name>createPETScVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETSc__SAMRAIVectorReal.html</anchorfile>
      <anchor>83c7d169a497b93f9bd40b665b99cc10</anchor>
      <arglist>(tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; samrai_vec, MPI_Comm comm=PETSC_COMM_SELF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>destroyPETScVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETSc__SAMRAIVectorReal.html</anchorfile>
      <anchor>281545c50fb500c1c5e06802950305a2</anchor>
      <arglist>(Vec petsc_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt;</type>
      <name>getSAMRAIVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETSc__SAMRAIVectorReal.html</anchorfile>
      <anchor>498ce533a49b423b4ae836ff0c6b0907</anchor>
      <arglist>(Vec petsc_vec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PETSc_SAMRAIVectorReal</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETSc__SAMRAIVectorReal.html</anchorfile>
      <anchor>06a7ab47c4ac83e9900c749eca7ed3ef</anchor>
      <arglist>(tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; samrai_vector, bool vector_created_via_duplicate, MPI_Comm comm)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~PETSc_SAMRAIVectorReal</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETSc__SAMRAIVectorReal.html</anchorfile>
      <anchor>5e026488af923220ff067b6e92cf2470</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::PETScAbstractVectorReal</name>
    <filename>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function" protection="protected">
      <type></type>
      <name>PETScAbstractVectorReal</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>ca71658e0908a8dc979b2a0f21957ec1</anchor>
      <arglist>(bool vector_created_via_duplicate, MPI_Comm comm)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~PETScAbstractVectorReal</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>04da70ff199a98c3f6f6473ef43e9494</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Vec</type>
      <name>getPETScVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>26e4e1d10e79b269ef34846737cdfe95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual PETScAbstractVectorReal&lt; TYPE &gt; *</type>
      <name>makeNewVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>f928acb55dc7d60c23a7de3c814f5944</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>freeVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>f35f39a5e46c99afafc2f581ccc5bdbc</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>viewVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>7b422f227a8a8952bde4aafbe41073b0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual TYPE</type>
      <name>dotWith</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>59986e4c656f946ac4a50ffeb535e11e</anchor>
      <arglist>(const PETScAbstractVectorReal&lt; TYPE &gt; *y, bool local_only=false) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual TYPE</type>
      <name>TdotWith</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>2348ceea023aee34d47fa480b09c709b</anchor>
      <arglist>(const PETScAbstractVectorReal&lt; TYPE &gt; *y, bool local_only=false) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual TYPE</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>2c73aee96d37ead05d9b734388898751</anchor>
      <arglist>(bool local_only=false) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual TYPE</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>bfdd6cdc33a61e2c0e8b1edd337eba94</anchor>
      <arglist>(bool local_only=false) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual TYPE</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>60ccfcaea08716cc96b7ab6df3b79705</anchor>
      <arglist>(bool local_only=false) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>scaleVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>7c88c134820fa15a810aba26140256c4</anchor>
      <arglist>(const TYPE alpha)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>copyVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>e8e3344641605dbcb4c38371c4f390a3</anchor>
      <arglist>(const PETScAbstractVectorReal&lt; TYPE &gt; *v_src)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>b21a88875f4da69bd4019a377136abef</anchor>
      <arglist>(const TYPE alpha)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>swapWith</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>75c38f9df19251fd9fed3351a44a1337</anchor>
      <arglist>(PETScAbstractVectorReal&lt; TYPE &gt; *v_other)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>setAXPY</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>e2cfbecca279c7075382067fd36ba299</anchor>
      <arglist>(const TYPE alpha, const PETScAbstractVectorReal&lt; TYPE &gt; *x)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>setAXPBY</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>6d632c58d7ec39ec5d249c5b9a85d2bd</anchor>
      <arglist>(const TYPE alpha, const PETScAbstractVectorReal&lt; TYPE &gt; *x, const TYPE beta)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>setWAXPY</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>36fce60450044e53290e765a3a5d7fb3</anchor>
      <arglist>(const TYPE alpha, const PETScAbstractVectorReal&lt; TYPE &gt; *x, const PETScAbstractVectorReal&lt; TYPE &gt; *y)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>pointwiseMultiply</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>719242ee0a766acc53369e471480c380</anchor>
      <arglist>(const PETScAbstractVectorReal&lt; TYPE &gt; *x, const PETScAbstractVectorReal&lt; TYPE &gt; *y)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>pointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>bf389e5c0dc94ae070280f2f1c00db98</anchor>
      <arglist>(const PETScAbstractVectorReal&lt; TYPE &gt; *x, const PETScAbstractVectorReal&lt; TYPE &gt; *y)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual double</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>66e20d1c4495edd8a6ad0204a442b323</anchor>
      <arglist>(const PETScAbstractVectorReal&lt; TYPE &gt; *y)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>vecMax</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>1e54bb400b82dd3621c1ef35a6d6e7af</anchor>
      <arglist>(int &amp;i, TYPE &amp;max) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>vecMin</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>8738257f85baee92892d170e76083ee8</anchor>
      <arglist>(int &amp;i, TYPE &amp;min) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>ee507cd14777b60fcc1709c6daad4cbc</anchor>
      <arglist>(const TYPE width, const TYPE low)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>getDataArray</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>0ff4d931456dff15d6fa00d8ea12c2d5</anchor>
      <arglist>(TYPE **array)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual int</type>
      <name>getDataSize</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>db025d1b1b059f86f1a326f2d8c4a77f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual int</type>
      <name>getLocalDataSize</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>50d23711cc7c512de6778a58de8b4637</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>restoreDataArray</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>86b530f98da1c2d4f0b1f10696d50d0f</anchor>
      <arglist>(TYPE **array)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::PoissonSpecifications</name>
    <filename>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</filename>
    <member kind="function">
      <type></type>
      <name>PoissonSpecifications</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>fd060c23b6c759ebeaa968e417e276f5</anchor>
      <arglist>(const std::string &amp;object_name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PoissonSpecifications</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>fa14f8ed229ad9b08fb95a7f550ce34e</anchor>
      <arglist>(const std::string &amp;object_name, const PoissonSpecifications &amp;r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PoissonSpecifications</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>d53654bb7fae4553375594128d1b5cb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const PoissonSpecifications &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>a7ae0b7a3c4219acef9b91fb69e125fc</anchor>
      <arglist>(const PoissonSpecifications &amp;r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>6de913025d5b7bedcb2aceda491e788a</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>c02a87b16f37d6e7ddeef983633c0737</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDPatchDataId</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>23882d38aecfae580baead325087e273</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDConstant</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>e6bbd8cbf8a3507eecaf4b68ba9f8008</anchor>
      <arglist>(double constant)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dIsVariable</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>d14f42873d179a0af5a78604177c0e1e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dIsConstant</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>670c0cc31d60bf65427c775f0f0909f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDPatchDataId</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>f7e10d2aecb21d94e8dbef44a7f8a872</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDConstant</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>20e755aab874764275ffb04547ecc2a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCPatchDataId</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>a701a457409a3363e2f75360e4cd00d0</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCConstant</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>84b33e9403c357ce1bc7abb7bab2cace</anchor>
      <arglist>(double constant)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCZero</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>c9dddb5c0e2135911388a7ea3a0b0938</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cIsVariable</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>fdb93083b1407408962d8a9496bb15ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cIsZero</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>ccb909c87f434770e64ee99d92e6b3e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cIsConstant</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>3eaa25ca4ec4f20455d0a64259963054</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCPatchDataId</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>342440c61d158ed4433e64c112402d1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCConstant</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>78526b94af84a271be55ea225674a8ca</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::RobinBcCoefStrategy</name>
    <filename>classSAMRAI_1_1solv_1_1RobinBcCoefStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>RobinBcCoefStrategy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1RobinBcCoefStrategy.html</anchorfile>
      <anchor>d44e4272d19a9097dfec9ec8efb27381</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RobinBcCoefStrategy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1RobinBcCoefStrategy.html</anchorfile>
      <anchor>1bb5d813db74d1ed51b8d0e8dbb69ded</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setBcCoefs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1RobinBcCoefStrategy.html</anchorfile>
      <anchor>671dfede517f55cd2cf80d2ced9b4096</anchor>
      <arglist>(tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;acoef_data, tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;bcoef_data, tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;gcoef_data, const tbox::Pointer&lt; hier::Variable &gt; &amp;variable, const hier::Patch &amp;patch, const hier::BoundaryBox &amp;bdry_box, const double fill_time=0.0) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual hier::IntVector</type>
      <name>numberOfExtensionsFillable</name>
      <anchorfile>classSAMRAI_1_1solv_1_1RobinBcCoefStrategy.html</anchorfile>
      <anchor>f58238e9b0828211744a9c5150221f7e</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::SAMRAIVectorReal</name>
    <filename>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>SAMRAIVectorReal</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>c774c44e3b061e648cce2927ac52b3a7</anchor>
      <arglist>(const std::string &amp;name, tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SAMRAIVectorReal</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>855d5f52911c163e2a85aa35135c284d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>f79638ff6caa5893a264cc3c85391367</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutputStream</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>1fa5ee674e4c4e6d74b7a4664c9552df</anchor>
      <arglist>(std::ostream &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>getOutputStream</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>ba13d6c052506e39d227b2ea80b780a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>b28708c3197cb505e9f555b4732034d9</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>89775a381459fb91982e5f10c685f79e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>c35711495bd45fd7e4d3068ef836488f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCoarsestLevelNumber</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>e2aeaa47c8c1c591faf5d88c0da580e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFinestLevelNumber</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>8a7839c34a49da6d3ac644b42075a1b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfComponents</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>4559ee92fffd640a3788ff9af7152773</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>getComponentPatchData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>04e03a491b21520edefc9b1854ab0394</anchor>
      <arglist>(const int comp_id, const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>getComponentPatchData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a4545b215df0e33804de864ec90d5553</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::Variable &gt;</type>
      <name>getComponentVariable</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>272743f7c9e3159d6d3e25316e0ef285</anchor>
      <arglist>(const int component) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getComponentDescriptorIndex</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>7fdfc8cbd1da2dc8bcdd763cdf7aa0a7</anchor>
      <arglist>(const int component) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getControlVolumeIndex</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>26ebd26000991a16ccdadb5458c68254</anchor>
      <arglist>(const int component) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt;</type>
      <name>cloneVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>7a9c25e469a1849e0e8f5d3c3e55729d</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeVectorComponents</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>bd236d0d9b8340617e9ad886f9f25746</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addComponent</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>e038312e9b6626e9c8ee08d981f67e70</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const int comp_data_id, const int control_vol_id=-1, const tbox::Pointer&lt; math::HierarchyDataOpsReal&lt; TYPE &gt; &gt; vop=(tbox::Pointer&lt; math::HierarchyDataOpsReal&lt; TYPE &gt; &gt;)(NULL))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocateVectorData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>7a7a25a368bfe788e1e5f012bb8091ca</anchor>
      <arglist>(const double timestamp=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocateVectorData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>8452a06b2b703e9d3fcca7720d16dc73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>c0123b3a41d9253e9b9f5b08eda76799</anchor>
      <arglist>(std::ostream &amp;s=tbox::plog, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>19cb32e1f9c40da7a4846afbf8ec3a25</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; src_vec, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapVectors</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>97ce1b3a8fd73b07883c3fb1857cd0d1</anchor>
      <arglist>(tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>23652f6c79febffa2e3865a8da7c2234</anchor>
      <arglist>(const TYPE &amp;alpha, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>98be4fa75d1297603dc5bc76be3dee41</anchor>
      <arglist>(const TYPE &amp;alpha, const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>284b3e51913311fcf1b5050595e37082</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, const TYPE &amp;alpha, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>bff808c2c3af506a4a80ac8c33e0390f</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; y, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a8ca31dd4e4e121187f8d628d29218e2</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; y, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>866b802221ff3ac1b61e27643a98cdbe</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; y, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>e4a7a2f3c7f0c169402d91a6a8a525fa</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; y, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>bc7f8db008cbac65d007949b1f97158c</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>26f85c67700b1dafd973a82880c1ce14</anchor>
      <arglist>(const TYPE &amp;alpha, const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, const TYPE &amp;beta, const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; y, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>dff51e0a6f166752ef4cfef73f602ae6</anchor>
      <arglist>(const TYPE &amp;alpha, const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; y, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>13adc85a1db38d62b47fdf13c2c58092</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>d4f977f4e5fcd65b105e985629bda44e</anchor>
      <arglist>(const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>84f274ebaca5f4b6e1e7746a16d317fa</anchor>
      <arglist>(const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>077ab2797fd62329edd9dbb898b37588</anchor>
      <arglist>(const TYPE &amp;width, const TYPE &amp;low, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>371dde2bf7d9b66a3999f944e9df7384</anchor>
      <arglist>(bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>f08dc7d1c248eccca62033763ff8ef55</anchor>
      <arglist>(bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a607a5bf14246303ba36f2ea7e51c7cf</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; wgt) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>f6600e721ef95c5331764d3ff2cbfada</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>d9ce2ffed83fb091b0dd395138121be3</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; wgt) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a6f160bb57ee7df8f559d771a6786cca</anchor>
      <arglist>(bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>bbf110ad815bcc9d6fc7dd64f3fdebc6</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>e4c150d3135464efff3f9d618db39a08</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>6066023d18c07ee4122329762fd34178</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, const TYPE &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>ff4f6ab65afddcece582924cba39d02f</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x)</arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>6fbe8dc17e90857b495419ee2391621d</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; denom) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::SimpleCellRobinBcCoefs</name>
    <filename>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</filename>
    <base>SAMRAI::solv::RobinBcCoefStrategy</base>
    <member kind="function">
      <type></type>
      <name>SimpleCellRobinBcCoefs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</anchorfile>
      <anchor>8322fe7691e9646a309698770c2984ed</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name=std::string())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SimpleCellRobinBcCoefs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</anchorfile>
      <anchor>9f8c562c73b086245b5fae650c32b7f3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHierarchy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</anchorfile>
      <anchor>84cbbb26f19963b659fcdf0196487b94</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt;, const int ln_min=-1, const int ln_max=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundaries</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</anchorfile>
      <anchor>6f10285acdd4c9006fc550dbca198c46</anchor>
      <arglist>(const std::string &amp;boundary_type, const int fluxes=-1, const int flags=-1, int *bdry_types=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cacheDirichletData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</anchorfile>
      <anchor>b70719fc9ab54bf750e743f01af473e7</anchor>
      <arglist>(int dirichlet_data_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restoreDirichletData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</anchorfile>
      <anchor>c5b4a335cec6063a02dedbe93245b091</anchor>
      <arglist>(int dirichlet_data_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDiffusionCoefId</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</anchorfile>
      <anchor>145d24cf337d0af746f4db3fd5b056d6</anchor>
      <arglist>(int diffusion_coef_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDiffusionCoefConstant</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</anchorfile>
      <anchor>2f4ef56e213e9c4e1f088b2e4d0d9448</anchor>
      <arglist>(double diffusion_coef_value)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</anchorfile>
      <anchor>202e180b03e4ca9b2c6be80e3189c38e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBcCoefs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</anchorfile>
      <anchor>3a6234e5b90298b229d2d0468c39290b</anchor>
      <arglist>(tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;acoef_data, tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;bcoef_data, tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;gcoef_data, const tbox::Pointer&lt; hier::Variable &gt; &amp;variable, const hier::Patch &amp;patch, const hier::BoundaryBox &amp;bdry_box, double fill_time=0.0) const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>numberOfExtensionsFillable</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</anchorfile>
      <anchor>f5d3748ecc053107b30670db76923507</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::SNES_SAMRAIContext</name>
    <filename>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</filename>
    <base>SAMRAI::solv::NonlinearSolverStrategy</base>
    <base>SAMRAI::tbox::Serializable</base>
    <member kind="function">
      <type></type>
      <name>SNES_SAMRAIContext</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>f23f649fb10191a89270c01c87a83aec</anchor>
      <arglist>(const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; input_db, SNESAbstractFunctions *my_functions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SNES_SAMRAIContext</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>6d40644ee0c5b7bcf03cf76d7a5620ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SNES</type>
      <name>getSNESSolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>e92e91ed24d96cd733f1766157bbd6e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SNESAbstractFunctions *</type>
      <name>getSNESFunctions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>37ef61462dceaa9dbae3af53610926e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KSP</type>
      <name>getKrylovSolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>63d22032da7681f9c513a3cb733b77c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Mat</type>
      <name>getJacobianMatrix</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a42bdfd138d6c06e1f1213bb88028464</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAbsoluteTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>7598abfec85cb9ae09c1c25f02459721</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAbsoluteTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>db988d1c11eacc64a4223190ccfe36c3</anchor>
      <arglist>(double abs_tol)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRelativeTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>3e11ebb84c738d711ac86c85cd1ec22f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>c1938d9ec069e0ea7d3b8635ad55c775</anchor>
      <arglist>(double rel_tol)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStepTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>bc1345180a4a7c56dc798eafdc8092bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStepTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a22c777c7f1047f48119d9e1650a9f09</anchor>
      <arglist>(double step_tol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxNonlinearIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>68a9f77da01af240505c0ccfab11845a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxNonlinearIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>993a1a90ac02cdf88a4edfec864a9d3a</anchor>
      <arglist>(int max_nli)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxFunctionEvaluations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>25c3741f9b2e27909203c2df85e83ca7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxFunctionEvaluations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>75619dae4795ac0c1ac05334be382856</anchor>
      <arglist>(int max_feval)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getForcingTermStrategy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>27f67a77fb5a7e3dff0660f3c673a355</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForcingTermStrategy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>75db5ccf5f8f821c516e92d65f5e2a58</anchor>
      <arglist>(std::string &amp;strategy)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getConstantForcingTerm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>5c3248a30f797769cf8c0435026202fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstantForcingTerm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>40fac2ebe3b55f7a7811cd90ca1fb0f1</anchor>
      <arglist>(double fixed_eta)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialForcingTerm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>94d21410d471e2770c631cf3f32e4cb3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialForcingTerm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>23ca4ab9a088b65e9734747b1ea985db</anchor>
      <arglist>(double initial_eta)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMaximumForcingTerm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>f7bf81d6734d9d8a3eaaf673275dad4e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximumForcingTerm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>c15b3ab11a00ce2323f31ee5b378d7e3</anchor>
      <arglist>(double max_eta)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEWChoice2Exponent</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>b85090a06bb7e5ec3812f5422ff17645</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEWChoice2Exponent</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>0440522780a52ac01074cb2f4b9e7c30</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEWChoice2SafeguardExponent</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>d31427cd575ba55d11736d65c92fa5ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEWChoice2SafeguardExponent</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>4bf1ea13a62e329c9f2e547244e05572</anchor>
      <arglist>(double beta)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEWChoice2ScaleFactor</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>3f8ae18c0e2ef91aabe096c40a3783be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEWChoice2ScaleFactor</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>0ac20d7b5ace07c8a5a8d57cc10502f5</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEWSafeguardThreshold</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>36ef99e46677e28e0bf859507cfc6588</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEWSafeguardThreshold</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>238fef89d2d1913605b599f7038dcb08</anchor>
      <arglist>(double threshold)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLinearSolverType</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>dcb3347279731a0435c64037becdbb91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinearSolverType</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>9b55526d8768a8e1c29bc501eca85d95</anchor>
      <arglist>(std::string &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUsesPreconditioner</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>20b2be55bfbd5361a145cac62485a2f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUsesPreconditioner</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>94caaf68866bf2e41ea70a40bcc387c9</anchor>
      <arglist>(bool uses_preconditioner)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLinearSolverAbsoluteTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>707bdef769fb27e942145ad33284117d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinearSolverAbsoluteTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>b198014a55bd252ab1bfc6f22c3740b2</anchor>
      <arglist>(double abs_tol)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLinearSolverDivergenceTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>ec8a69278851085a9d964ce5a094088f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinearSolverDivergenceTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>66e0c6dec7d4e9f11ec22ccb95ccd464</anchor>
      <arglist>(double div_tol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaximumLinearIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>9370dba3d69c4fb5c4e71c9ce0fa1f9e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximumLinearIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>4e4bda60fec44f1bd335fb4609e236f0</anchor>
      <arglist>(int max_li)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaximumGMRESKrylovDimension</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>76c3bcbccb5da9d4a4c404e3e2a31715</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximumGMRESKrylovDimension</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>b74b511749501028a77623195a2debdf</anchor>
      <arglist>(int d)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getGMRESOrthogonalizationMethod</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>27a7c0d422a8fe64655400c9c6d12268</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGMRESOrthogonalizationMethod</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>08a28f96b23d29e4a16f6602571a7cbd</anchor>
      <arglist>(std::string &amp;method)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUsesExplicitJacobian</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>7b8c609f1afb34fd3124a0cbcfef37c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUsesExplicitJacobian</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>e52e53dac648be1f82a7e70e8346ff6e</anchor>
      <arglist>(bool use_jac)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getDifferencingParameterMethod</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>0dcf3a68b470e6d07f84b47f63bea0ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDifferencingParameterMethod</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>710875e03c68d8912add8b9a017db5ee</anchor>
      <arglist>(std::string &amp;method)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFunctionEvaluationError</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>6e38997bc9474ebb85da98c9706b4402</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFunctionEvaluationError</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a6a063d276ce86b049cb2c0a3eabe755</anchor>
      <arglist>(double evaluation_error)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>878ea60a90d39c7b6a72b50b8dc8901f</anchor>
      <arglist>(tbox::Pointer&lt; SAMRAIVectorReal&lt; double &gt; &gt; solution)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetSolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>723cf81887e4331db6d26867706b3168</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>6270e3b96744c0b94a165063135fc8da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfNonlinearIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>b95db0f347b6d4ff6b57c148895f4354</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTotalNumberOfLinearIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>af04434e9ff6e3a28632775b30f1f3f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reportCompletionCode</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>e690983ce2ea90bb509a9eae4c7c1871</anchor>
      <arglist>(std::ostream &amp;os=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>5377965373cce3c10c420a1b6040dadf</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>26640bee5286431de45b69f8ba677652</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>efa84492e16bd3d273d775c55b123cb5</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::SNESAbstractFunctions</name>
    <filename>classSAMRAI_1_1solv_1_1SNESAbstractFunctions.html</filename>
    <member kind="function">
      <type></type>
      <name>SNESAbstractFunctions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNESAbstractFunctions.html</anchorfile>
      <anchor>9bd4c71e4e5e13b188a04f22cd1190a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SNESAbstractFunctions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNESAbstractFunctions.html</anchorfile>
      <anchor>8e079094aca3596be41d7117ecda069d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>evaluateNonlinearFunction</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNESAbstractFunctions.html</anchorfile>
      <anchor>54666bc51fad523f10c380fe668d7e1a</anchor>
      <arglist>(Vec xcur, Vec fcur)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>evaluateJacobian</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNESAbstractFunctions.html</anchorfile>
      <anchor>abf627c24c3f606dcc4c531d2d9aeb18</anchor>
      <arglist>(Vec x)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>jacobianTimesVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNESAbstractFunctions.html</anchorfile>
      <anchor>8f5e1ddc16d81b993953864f4b63c745</anchor>
      <arglist>(Vec x, Vec y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>setupPreconditioner</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNESAbstractFunctions.html</anchorfile>
      <anchor>aa6a03b82ba30814b00966d5310d1eb0</anchor>
      <arglist>(Vec xcur)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>applyPreconditioner</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNESAbstractFunctions.html</anchorfile>
      <anchor>55a8c996fe454313e1ef8dbef075468a</anchor>
      <arglist>(Vec r, Vec z)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::Sundials_SAMRAIVector</name>
    <filename>classSAMRAI_1_1solv_1_1Sundials__SAMRAIVector.html</filename>
    <base>SAMRAI::solv::SundialsAbstractVector</base>
    <member kind="function">
      <type>void</type>
      <name>printVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1Sundials__SAMRAIVector.html</anchorfile>
      <anchor>23bee31311b176f7de8150d36de80e29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SundialsAbstractVector *</type>
      <name>createSundialsVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1Sundials__SAMRAIVector.html</anchorfile>
      <anchor>d597a3487dd151c7df5404cc01b44b63</anchor>
      <arglist>(tbox::Pointer&lt; SAMRAIVectorReal&lt; double &gt; &gt; samrai_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>destroySundialsVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1Sundials__SAMRAIVector.html</anchorfile>
      <anchor>c27f141fe8dc71f2a2bad3d9e938fcb6</anchor>
      <arglist>(SundialsAbstractVector *sundials_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tbox::Pointer&lt; SAMRAIVectorReal&lt; double &gt; &gt;</type>
      <name>getSAMRAIVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1Sundials__SAMRAIVector.html</anchorfile>
      <anchor>d62f9044f1945fe44b9b8cb99a191725</anchor>
      <arglist>(SundialsAbstractVector *sundials_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tbox::Pointer&lt; SAMRAIVectorReal&lt; double &gt; &gt;</type>
      <name>getSAMRAIVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1Sundials__SAMRAIVector.html</anchorfile>
      <anchor>05a1d987088649bfdf36e22e32fb822d</anchor>
      <arglist>(N_Vector sundials_vec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Sundials_SAMRAIVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1Sundials__SAMRAIVector.html</anchorfile>
      <anchor>c0809ee9d9e9c20f2dc1e11e56ebfad1</anchor>
      <arglist>(tbox::Pointer&lt; SAMRAIVectorReal&lt; double &gt; &gt; samrai_vector)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~Sundials_SAMRAIVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1Sundials__SAMRAIVector.html</anchorfile>
      <anchor>82803c643f2467fc73fe175899af57b4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::SundialsAbstractVector</name>
    <filename>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</filename>
    <member kind="function">
      <type></type>
      <name>SundialsAbstractVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>2f32d93408346f843d7bf58eac4a508d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SundialsAbstractVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>d7000deeec709d5f2d4c1a7e627b04fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SundialsAbstractVector *</type>
      <name>makeNewVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>8412f5fd73b2513367549e9b14d2ea95</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>freeVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>7f6aaef91b240b92be13be0bb13b9b0c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>cd60220e4efb1d988ca215a7b54052ad</anchor>
      <arglist>(const double c)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scaleVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>0d3b5b03271c34f28b70032ae4f56724</anchor>
      <arglist>(const SundialsAbstractVector *x, const double c)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setLinearSum</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>af4fbd0ce7fffb4896be0de454d55f84</anchor>
      <arglist>(const double a, const SundialsAbstractVector *x, const double b, const SundialsAbstractVector *y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>pointwiseMultiply</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>2aacc0b695194137c61ef66c5854fdba</anchor>
      <arglist>(const SundialsAbstractVector *x, const SundialsAbstractVector *y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>pointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>1db38781bebbd6df916100617590ca62</anchor>
      <arglist>(const SundialsAbstractVector *x, const SundialsAbstractVector *y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAbs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>dcacf5d729332de6a410fa566b5a14ff</anchor>
      <arglist>(const SundialsAbstractVector *x)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>pointwiseReciprocal</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>9d629bff06fabc9a091e7dbd09311b12</anchor>
      <arglist>(const SundialsAbstractVector *x)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>08c12c6d377768038d44321c81e11d1f</anchor>
      <arglist>(const SundialsAbstractVector *x, const double b)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>dotWith</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>9b870e48720a86ac8a60d4e765fb7963</anchor>
      <arglist>(const SundialsAbstractVector *x) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>18f5e9454b6b6097a4ac722f492d5a31</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>ee392cb95d73c1f9ff824051cfbd444a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>f5bc030b318b46641dd1e0effc9ac367</anchor>
      <arglist>(const SundialsAbstractVector *x) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>90bfa44aea3245a818c9e88471375d53</anchor>
      <arglist>(const SundialsAbstractVector *x) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>vecMin</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>173ccd998c4516ea84893c234405f527</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>constrProdPos</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>d73c35938d9a7a1dfca8c0ec03ace4d8</anchor>
      <arglist>(const SundialsAbstractVector *x) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>83da4b4f530bbec886ba15fb6c9b3214</anchor>
      <arglist>(const SundialsAbstractVector *x, const double c)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>30359c14df88d71bb26ad58912ce4ed6</anchor>
      <arglist>(const SundialsAbstractVector *x)=0</arglist>
    </member>
    <member kind="function">
      <type>N_Vector</type>
      <name>getNVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>8ce4a765661896c4244cf9a114051886</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>printVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>579d7098820f344fbac957c42f4a317d</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>SAMRAI::tbox</name>
    <filename>namespaceSAMRAI_1_1tbox.html</filename>
    <class kind="class">SAMRAI::tbox::Array</class>
    <class kind="class">SAMRAI::tbox::AsyncCommGroup</class>
    <class kind="class">SAMRAI::tbox::AsyncCommPeer</class>
    <class kind="class">SAMRAI::tbox::AsyncCommStage</class>
    <class kind="class">SAMRAI::tbox::BalancedDepthFirstTree</class>
    <class kind="struct">SAMRAI::tbox::Clock</class>
    <class kind="class">SAMRAI::tbox::ConstPointer</class>
    <class kind="class">SAMRAI::tbox::ConstPointerBase</class>
    <class kind="class">SAMRAI::tbox::Database</class>
    <class kind="struct">SAMRAI::tbox::DatabaseBox_POD</class>
    <class kind="class">SAMRAI::tbox::DatabaseBox</class>
    <class kind="class">SAMRAI::tbox::DatabaseFactory</class>
    <class kind="class">SAMRAI::tbox::Dimension</class>
    <class kind="class">SAMRAI::tbox::HDFDatabase</class>
    <class kind="class">SAMRAI::tbox::HDFDatabaseFactory</class>
    <class kind="struct">SAMRAI::tbox::IEEE</class>
    <class kind="class">SAMRAI::tbox::InputManager</class>
    <class kind="class">SAMRAI::tbox::List</class>
    <class kind="class">SAMRAI::tbox::ListNode</class>
    <class kind="class">SAMRAI::tbox::ListIterator</class>
    <class kind="class">SAMRAI::tbox::AbortAppender</class>
    <class kind="class">SAMRAI::tbox::WarningAppender</class>
    <class kind="class">SAMRAI::tbox::DebugAppender</class>
    <class kind="class">SAMRAI::tbox::Logger</class>
    <class kind="class">SAMRAI::tbox::MathUtilities</class>
    <class kind="class">SAMRAI::tbox::MemoryDatabase</class>
    <class kind="class">SAMRAI::tbox::MemoryDatabaseFactory</class>
    <class kind="struct">SAMRAI::tbox::MemoryUtilities</class>
    <class kind="class">SAMRAI::tbox::MessageStream</class>
    <class kind="class">SAMRAI::tbox::NullDatabase</class>
    <class kind="class">SAMRAI::tbox::ParallelBuffer</class>
    <class kind="class">SAMRAI::tbox::Parser</class>
    <class kind="struct">SAMRAI::tbox::PIO</class>
    <class kind="class">SAMRAI::tbox::Pointer</class>
    <class kind="class">SAMRAI::tbox::PointerBase</class>
    <class kind="class">SAMRAI::tbox::RankGroup</class>
    <class kind="class">SAMRAI::tbox::ReferenceCounter</class>
    <class kind="class">SAMRAI::tbox::RestartManager</class>
    <class kind="class">SAMRAI::tbox::SAMRAI_MPI</class>
    <class kind="class">SAMRAI::tbox::SAMRAIManager</class>
    <class kind="class">SAMRAI::tbox::Schedule</class>
    <class kind="class">SAMRAI::tbox::Serializable</class>
    <class kind="class">SAMRAI::tbox::SiloDatabase</class>
    <class kind="class">SAMRAI::tbox::SiloDatabaseFactory</class>
    <class kind="class">SAMRAI::tbox::StartupShutdownManager</class>
    <class kind="class">SAMRAI::tbox::Statistic</class>
    <class kind="class">SAMRAI::tbox::Statistician</class>
    <class kind="class">SAMRAI::tbox::StatisticRestartDatabase</class>
    <class kind="class">SAMRAI::tbox::StatTransaction</class>
    <class kind="class">SAMRAI::tbox::Timer</class>
    <class kind="class">SAMRAI::tbox::TimerManager</class>
    <class kind="class">SAMRAI::tbox::Tracer</class>
    <class kind="class">SAMRAI::tbox::Transaction</class>
    <class kind="struct">SAMRAI::tbox::Utilities</class>
    <class kind="class">SAMRAI::tbox::vector</class>
    <member kind="typedef">
      <type>SAMRAI::tbox::MemoryDatabase</type>
      <name>InputDatabase</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>3866f99c36ebe54f3e6060ad9d15e53d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>List&lt; Pointer&lt; Transaction &gt; &gt;::Iterator</type>
      <name>Iterator</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>6f4427cfec81529d010e58af7923031d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>986c96fcb982839e487153604a180073</anchor>
      <arglist>(std::ostream &amp;s, const Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>round_internal</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>1e55785124932ee66e42590139e45cb9</anchor>
      <arglist>(TYPE x)</arglist>
    </member>
    <member kind="function">
      <type>template float</type>
      <name>round_internal&lt; float &gt;</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>5307cffaad6d97029b681e68fd41b221</anchor>
      <arglist>(float x)</arglist>
    </member>
    <member kind="function">
      <type>template double</type>
      <name>round_internal&lt; double &gt;</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>e12c264c3a794b35bdc8e08a8da07cc3</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream</type>
      <name>pout</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>3b13ee0a7c847dffee0711ab9ee3c92b</anchor>
      <arglist>(&amp;pout_buffer)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream</type>
      <name>perr</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>94168d385f4c2ce13f79f2d2fe3c8a4e</anchor>
      <arglist>(&amp;perr_buffer)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream</type>
      <name>plog</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>4c0c3c0b4949ec5899841b08fe9adf9f</anchor>
      <arglist>(&amp;plog_buffer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>badnew</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>b54f19ea4ab0fafc357dea35df1de3c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ParallelBuffer</type>
      <name>pout_buffer</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>163498afa72062d2ac6120ce6a642447</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ParallelBuffer</type>
      <name>perr_buffer</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>916399eba38cfa47ced1e8f025ee8291</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ParallelBuffer</type>
      <name>plog_buffer</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>e3346c7334368e658dc500206455d8d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::ostream</type>
      <name>pout</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>48d553cde5d7c6066de6bec271ef3666</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::ostream</type>
      <name>perr</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>bf6210a537fcb1ec9e4eb3b5b1019b4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::ostream</type>
      <name>plog</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>48a363c43ec1479b41d6c9c560ba446d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Array</name>
    <filename>classSAMRAI_1_1tbox_1_1Array.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>6911a6ea700d9baf3222617b27211a93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>d01f32fde7b0fd494d2494fbdbaec298</anchor>
      <arglist>(const int n, const TYPE &amp;default_value=TYPE())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>4c7d391e3693de906f2255b13584e336</anchor>
      <arglist>(const int n, const typename Array::DoNotInitialize &amp;do_not_initialize_flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>0094ad07b19b5f6213c2481083b31c1f</anchor>
      <arglist>(const Array&lt; TYPE &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>0b1d6492efa7206eed44c8989f784f99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; TYPE &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>e0b8e93ad8bc7730448a8be6d1833edb</anchor>
      <arglist>(const Array&lt; TYPE &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator[]</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>b284fcccdaee024d138dbefea963b5e3</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator[]</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>696b10192df0a79bb13450d10a5cdd50</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>3a2c94b8d1b8e1118f77afb759c6df59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>d1d0804833c9763e72c3e2741655535c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNull</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a99efa566bbd9f05dfb8a0b013439be4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>758facea03e479d93fb1187d77acfecf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>5be9ba63622ab01997a9218857c163ac</anchor>
      <arglist>(const int i=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>bae37d1271df479eb510cd447db868d8</anchor>
      <arglist>(const int i=0) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>9ca8124e67b7c8ed5cd9d4e2988f7ead</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>2c986e540015cb225f7bd9f2b41ae68e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resizeArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>cf826d70a5cc4878fb19648b972e0e4f</anchor>
      <arglist>(const int n, const TYPE &amp;default_value=TYPE())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>8a0e96cc65885d94ce5ad43e29c99c21</anchor>
      <arglist>(const TYPE &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>back</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>004b62a868dcb3cba4d52f976b5c3f10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>dd72893025e54feb05ff96d69aa03538</anchor>
      <arglist>(const int position)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const SAMRAI::tbox::Array&lt; TYPE &gt;::DoNotInitialize</type>
      <name>UNINITIALIZED</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>5d168de6211cf3eb32279b0a7ee54d3d</anchor>
      <arglist></arglist>
    </member>
    <class kind="class">SAMRAI::tbox::Array::DoNotInitialize</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Array::DoNotInitialize</name>
    <filename>classSAMRAI_1_1tbox_1_1Array_1_1DoNotInitialize.html</filename>
    <member kind="function">
      <type></type>
      <name>DoNotInitialize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array_1_1DoNotInitialize.html</anchorfile>
      <anchor>86f10a04fa1117ec1cef06ae3fc9be0f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::AsyncCommGroup</name>
    <filename>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</filename>
    <base>SAMRAI::tbox::AsyncCommStage::Member</base>
    <member kind="function">
      <type></type>
      <name>AsyncCommGroup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>d8a630b5a845c3858b6d8fb7049edb35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AsyncCommGroup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>8891057496e99d949ed6633096a3dcf4</anchor>
      <arglist>(const size_t nchild, AsyncCommStage *stage, AsyncCommStage::Handler *handler=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AsyncCommGroup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>ea4758e70c3ee13257cb04fe262291f7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>92054b7a0619bf59eafef7e6d7fc9614</anchor>
      <arglist>(const int nchild, AsyncCommStage *stage, AsyncCommStage::Handler *handler=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMPITag</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>4bf0558cac92526b0e000e72efbfcf8c</anchor>
      <arglist>(const int mpi_tag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseMPICollectiveForFullGroups</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>1106977ff3c89b06484449e784691fe8</anchor>
      <arglist>(bool use_mpi_collective=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseBlockingSendToParent</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>62ec7934413b27f55cef1a7351577ca8</anchor>
      <arglist>(const bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseBlockingSendToChildren</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>13fc47f58f61fdb68fcb963039a5b88f</anchor>
      <arglist>(const bool flag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfChildren</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>0e14f541574e79e0003c17442ae9139e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logCurrentState</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>324e958f59593e4068af89b1642f14d6</anchor>
      <arglist>(std::ostream &amp;co) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGroupAndRootIndex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>6d39465076a5c671dd975df4bf636aeb</anchor>
      <arglist>(const SAMRAI_MPI &amp;mpi, const int *group_ranks, const int group_size, const int root_index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGroupAndRootRank</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>c4340f04af16680af5f4ef720dea1990</anchor>
      <arglist>(const SAMRAI_MPI &amp;mpi, const int *group_ranks, const int group_size, const int root_rank)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beginBcast</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>06b00398abb81df2b560aedf732ab2ff</anchor>
      <arglist>(int *buffer, int size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkBcast</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>2325f8028785df0a216026cab2d514a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beginGather</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>9c7d56cfca635e0bf22c60f90c9c19f3</anchor>
      <arglist>(int *buffer, int size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkGather</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>6fa975a2c7d16210e87f81c1c6747b4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beginSumReduce</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>b313138a5c769ea770c61d61ffbc3960</anchor>
      <arglist>(int *buffer, int size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkSumReduce</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>a061fd02aa491ebfa92146d7f12e584f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>proceedToNextWait</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>defc051a154c31e28cb0709552a5250f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDone</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>693ccf3a0b648a27baebba6263129746</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>completeCurrentOperation</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>a2e47f7dd4a2b518723664ebef6796a1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::AsyncCommPeer</name>
    <filename>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::tbox::AsyncCommStage::Member</base>
    <member kind="function">
      <type></type>
      <name>AsyncCommPeer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>93da7c17ff733e193cc9c696e5ba7a37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AsyncCommPeer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>271df18485a0a27910542d948a1bf326</anchor>
      <arglist>(AsyncCommStage *stage, AsyncCommStage::Handler *handler=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AsyncCommPeer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>e2f5f2fb6993a2dae7f24ca64d21d712</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>1aa02afffe89beaf152ba865dd197085</anchor>
      <arglist>(AsyncCommStage *stage, AsyncCommStage::Handler *handler=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMPITag</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>6b0ab44b0dfc199bbaadc34f69203b5f</anchor>
      <arglist>(const int primary_tag, const int secondary_tag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMPI</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>9e52583d61b081b82e5cce6597f4b5ff</anchor>
      <arglist>(const SAMRAI_MPI &amp;mpi)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logCurrentState</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>d0e5031b5995196e29852128ef04cff0</anchor>
      <arglist>(std::ostream &amp;co) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPeerRank</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>65889c93f5ad6b1075fec1e246ba3b1f</anchor>
      <arglist>(int peer_rank)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPeerRank</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>841a2601b5aa7164b3c0e697dc7ec2ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>limitFirstDataLength</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>0f669fcb5dbe3bac17dee7e2a12151e8</anchor>
      <arglist>(size_t max_first_data_len)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beginSend</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>88f4b0c82a271e24ab32a8ef43222aad</anchor>
      <arglist>(const TYPE *buffer, int size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkSend</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>337da0c7f4df7b0492e6b7374ff13e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beginRecv</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>abd8d8831deb941b104bd0a44e9029b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkRecv</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>ff724572a00324529e9169fd35d2c705</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRecvSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>816b916c7ef815fcb4c05a06f0547686</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getRecvData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>3d577f52648bf7c8a3cb2c8b5722bc1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearRecvData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>dffeacbbbac30e62582e081e741b51d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>proceedToNextWait</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>5ba5df74dc2da6b8f30cf58789949371</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDone</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>d27bc3d378d2253c9bc370158e0809db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>completeCurrentOperation</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>29b4a58cec656d3b80463cf692412aa8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::AsyncCommStage</name>
    <filename>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; Member * &gt;</type>
      <name>MemberVec</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>722d21a1ce8ba11519d71d44f7d021a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AsyncCommStage</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>7dc4146a96184faf0bd076437ec86fe7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AsyncCommStage</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>810a5fbee3a93afd0b01343efbb54b16</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>Member *</type>
      <name>advanceAny</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>ff939a5759c70e520dfd8a4f9f610520</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>advanceAny</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>f0dc1a32cbeae4306a4e023f28f8a686</anchor>
      <arglist>(MemberVec &amp;completed)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>advanceSome</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>315e118339a4c157a9af744b39cc3047</anchor>
      <arglist>(MemberVec &amp;completed)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>advanceAll</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>8723c9c741f75bf750da39de7f09a408</anchor>
      <arglist>(MemberVec &amp;completed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommunicationWaitTimer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>d2482711e0e19587d54029bef58eff47</anchor>
      <arglist>(Pointer&lt; Timer &gt; communication_timer)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>numberOfMembers</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>8095fd717fe4c99045dffb7183d9237a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPendingRequests</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>17534cde813894a8cc42e76da3392148</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>numberOfPendingMembers</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>12d6059b577f3c9e30d1c56983e24901</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>numberOfPendingRequests</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>6a81de49cd581598bea330b73897f36e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Member</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>a3bea52fee22e1d0456b5fee11ef12c6</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">SAMRAI::tbox::AsyncCommStage::Handler</class>
    <class kind="struct">SAMRAI::tbox::AsyncCommStage::Member</class>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::AsyncCommStage::Handler</name>
    <filename>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Handler.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Handler</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Handler.html</anchorfile>
      <anchor>fbaf1fae7bebd7446867033aff4b0a43</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::AsyncCommStage::Member</name>
    <filename>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</filename>
    <member kind="function">
      <type></type>
      <name>Member</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>dcc0627a8e109482c926c76ba1a13e63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Member</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>7032e1b7cae6898fea45baa5f7cfb432</anchor>
      <arglist>(const size_t nreq, AsyncCommStage *stage, Handler *handler)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Member</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>c85acf089b769f0f8a1d17ba07699731</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>numberOfRequests</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>4ccfe013598ef0d69109b20f93f1b6a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>numberOfPendingRequests</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>7128430662266bf5e12426d5fb511fa6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPendingRequests</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>c0a4ce0d28f253c9b3c909178c8e889a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isDone</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>89d4ecc764d1b91a1082caaf08f008da</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>proceedToNextWait</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>cfd165b72b53fc4c7dd206bfd5490049</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>completeCurrentOperation</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>656fcd6b8b0ac508d5b0134acc92b7b7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHandler</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>802962610579c1219ce1270f3aafa9aa</anchor>
      <arglist>(Handler *handler)</arglist>
    </member>
    <member kind="function">
      <type>Handler *</type>
      <name>getHandler</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>5a3dc36f900494f54933a589b8481fe7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>attachStage</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>256227067813bd108e266af0ea3de627</anchor>
      <arglist>(const size_t nreq, AsyncCommStage *stage)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>detachStage</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>a75087df475b4c302485e8f3656ae098</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>SAMRAI_MPI::Request *</type>
      <name>getRequestPointer</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>085052a023ec4ffca7dacbbdc5fbf996</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>SAMRAI_MPI::Status *</type>
      <name>getStatusPointer</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>0dd6c3c1d26b75b319dd16efd9c06224</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AsyncCommStage</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>9da5b3274f3ef18343a1e6325ae2dfae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::BalancedDepthFirstTree</name>
    <filename>classSAMRAI_1_1tbox_1_1BalancedDepthFirstTree.html</filename>
    <member kind="typedef">
      <type>int</type>
      <name>LocalId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1BalancedDepthFirstTree.html</anchorfile>
      <anchor>64227f83179271ccc4ca7b8a480394e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BalancedDepthFirstTree</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1BalancedDepthFirstTree.html</anchorfile>
      <anchor>c8095db40e4314ab8356a8a8caf0742f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BalancedDepthFirstTree</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1BalancedDepthFirstTree.html</anchorfile>
      <anchor>2ca72e4f7c959f8e96b4e90fdd2b935b</anchor>
      <arglist>(unsigned int first_rank, unsigned int last_rank, unsigned int rank, bool do_left_leaf_switch)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BalancedDepthFirstTree</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1BalancedDepthFirstTree.html</anchorfile>
      <anchor>981b0ed430ec258a6b6cb896c43e657c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1BalancedDepthFirstTree.html</anchorfile>
      <anchor>50fc85a31bd03dd9a0e45db4e3df0423</anchor>
      <arglist>(unsigned int first_rank, unsigned int last_rank, unsigned int rank, bool do_left_leaf_switch)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getRank</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1BalancedDepthFirstTree.html</anchorfile>
      <anchor>6021d134d9d15b895968683763b55c55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getParentRank</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1BalancedDepthFirstTree.html</anchorfile>
      <anchor>6d8a568c33bde9d9222e5f153b21ebdd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getChildRank</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1BalancedDepthFirstTree.html</anchorfile>
      <anchor>f9f713798d2e4bfe9adaa8af0fbde07b</anchor>
      <arglist>(unsigned int child_number) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned short int</type>
      <name>getNumberOfChildren</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1BalancedDepthFirstTree.html</anchorfile>
      <anchor>206f436c183b9124581a2b4187342e81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getInvalidRank</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1BalancedDepthFirstTree.html</anchorfile>
      <anchor>4bdf398e9a7953422be370933be0a45b</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::Clock</name>
    <filename>structSAMRAI_1_1tbox_1_1Clock.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initialize</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Clock.html</anchorfile>
      <anchor>41082e7fe7188dcdebef5883bdff51c2</anchor>
      <arglist>(clock_t &amp;clock)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initialize</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Clock.html</anchorfile>
      <anchor>292a32223a0912739e9128f4e697f09a</anchor>
      <arglist>(double &amp;clock)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>timestamp</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Clock.html</anchorfile>
      <anchor>837413281083b802ee64446d77a82e7f</anchor>
      <arglist>(clock_t &amp;user, clock_t &amp;sys, double &amp;wall)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getClockCycle</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Clock.html</anchorfile>
      <anchor>02dad9b76972eb93a3035f0e6e927b4c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::ConstPointer</name>
    <filename>classSAMRAI_1_1tbox_1_1ConstPointer.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::tbox::ConstPointerBase</base>
    <member kind="function">
      <type></type>
      <name>ConstPointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>9f82a1b45a8e62a33e3cb05cbae134d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstPointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>a087271edec39cd8c1193188d0725282</anchor>
      <arglist>(const TYPE *ptr, const bool managed=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstPointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>16eabd23a7f7a5f172d1c62be3dfb065</anchor>
      <arglist>(const ConstPointer&lt; TYPE &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstPointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>2bcc0b19ab72f458ac373576e89551f9</anchor>
      <arglist>(const ConstPointerBase &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ConstPointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>54f4b96cb30f14fd5390acb475d2bc86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstPointer&lt; TYPE &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>deba2f48f0a16d9b43c5ea6d9f61f7d7</anchor>
      <arglist>(const ConstPointer&lt; TYPE &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>ConstPointer&lt; TYPE &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>7916b04ad0d14958d8a55d7e526c3753</anchor>
      <arglist>(const TYPE *ptr)</arglist>
    </member>
    <member kind="function">
      <type>ConstPointer&lt; TYPE &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>23b239e7ab743911940c53c28cc1ec40</anchor>
      <arglist>(const ConstPointerBase &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>4b22c8cb42e6c9f89a12b3b19102fa0e</anchor>
      <arglist>(const ConstPointer&lt; TYPE &gt; &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>75b5145c69441f56b87965b1b40ee6ab</anchor>
      <arglist>(const ConstPointer&lt; TYPE &gt; &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>2a378db663dd04c0cd486072c8113772</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>6d5fa079d109c94603788bb10dfb369d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const TYPE *</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>5a9f07ec94a2cbfdf4c1e0b1c3bb72d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>fe17ad2fced47c22479af8d49de250ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>d7d8b0d33541b0a4161950675d34590f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>8dacea8a3329cfa01c06c60fd8a973f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>fa18019b524afc357b19b34f1d215aa3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNull</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>51c62590d8b990a7da8bcc96919366af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReferenceCounter *</type>
      <name>getReferenceCounter</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>2e0479d3bfd638499a83a6fdb01023b9</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::ConstPointerBase</name>
    <filename>classSAMRAI_1_1tbox_1_1ConstPointerBase.html</filename>
    <member kind="function">
      <type></type>
      <name>ConstPointerBase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointerBase.html</anchorfile>
      <anchor>b80b2c3902280a68b6f9281b525fedd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConstPointerBase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointerBase.html</anchorfile>
      <anchor>ed01d351cfabca210430d7a3cbfc3728</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ReferenceCounter *</type>
      <name>getSubclassReferenceCounter</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointerBase.html</anchorfile>
      <anchor>ebae212f780c16cb21e628499d104b91</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const DescribedClass *</type>
      <name>getSubclassPointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointerBase.html</anchorfile>
      <anchor>60c4eead986db828350ac34635494e52</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Database</name>
    <filename>classSAMRAI_1_1tbox_1_1Database.html</filename>
    <base>tbox::DescribedClass</base>
    <member kind="enumvalue">
      <type>@</type>
      <name>SAMRAI_INVALID</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>cb4bde66d4a0bb469d75eafb4f55830d77af249a0bef63a3a7c566ad4ade0543</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SAMRAI_DATABASE</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>cb4bde66d4a0bb469d75eafb4f55830d76984120a127f1735b316e228e451c47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SAMRAI_BOOL</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>cb4bde66d4a0bb469d75eafb4f55830d02cad807fa7e77ef4a0d89b8aef79330</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SAMRAI_CHAR</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>cb4bde66d4a0bb469d75eafb4f55830d6874269aa1657ed5d5b0eb92c8647316</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SAMRAI_INT</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>cb4bde66d4a0bb469d75eafb4f55830d0980b5a99f77aa9e24ef2362e99d9dd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SAMRAI_COMPLEX</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>cb4bde66d4a0bb469d75eafb4f55830dce1b4441c8e5f3441900f830601111aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SAMRAI_DOUBLE</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>cb4bde66d4a0bb469d75eafb4f55830d31ee2396d7a8517505ae90263d1d99be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SAMRAI_FLOAT</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>cb4bde66d4a0bb469d75eafb4f55830d711dd1f67f0a063184fdf50541ce3d9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SAMRAI_STRING</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>cb4bde66d4a0bb469d75eafb4f55830d9941675a073ec8374e5b4b816627c302</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SAMRAI_BOX</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>cb4bde66d4a0bb469d75eafb4f55830d983f451098c3404f510c81f8e5b02078</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DataType</name>
      <anchor>cb4bde66d4a0bb469d75eafb4f55830d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMRAI_INVALID</name>
      <anchor>cb4bde66d4a0bb469d75eafb4f55830d77af249a0bef63a3a7c566ad4ade0543</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMRAI_DATABASE</name>
      <anchor>cb4bde66d4a0bb469d75eafb4f55830d76984120a127f1735b316e228e451c47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMRAI_BOOL</name>
      <anchor>cb4bde66d4a0bb469d75eafb4f55830d02cad807fa7e77ef4a0d89b8aef79330</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMRAI_CHAR</name>
      <anchor>cb4bde66d4a0bb469d75eafb4f55830d6874269aa1657ed5d5b0eb92c8647316</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMRAI_INT</name>
      <anchor>cb4bde66d4a0bb469d75eafb4f55830d0980b5a99f77aa9e24ef2362e99d9dd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMRAI_COMPLEX</name>
      <anchor>cb4bde66d4a0bb469d75eafb4f55830dce1b4441c8e5f3441900f830601111aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMRAI_DOUBLE</name>
      <anchor>cb4bde66d4a0bb469d75eafb4f55830d31ee2396d7a8517505ae90263d1d99be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMRAI_FLOAT</name>
      <anchor>cb4bde66d4a0bb469d75eafb4f55830d711dd1f67f0a063184fdf50541ce3d9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMRAI_STRING</name>
      <anchor>cb4bde66d4a0bb469d75eafb4f55830d9941675a073ec8374e5b4b816627c302</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMRAI_BOX</name>
      <anchor>cb4bde66d4a0bb469d75eafb4f55830d983f451098c3404f510c81f8e5b02078</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Database</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>85cdd534d50c367fb0ac4e689d755020</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Database</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>80052dbadf3c17b1a2d137622dabc749</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>create</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>907464f9873aefa6ea2b941fbd0719d1</anchor>
      <arglist>(const std::string &amp;name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>open</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>84a9ffda036165574fef274599ab33e2</anchor>
      <arglist>(const std::string &amp;name, const bool read_write_mode=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>close</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>c491f20e84ec85bdfb417fa631c12e37</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>keyExists</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>80d36ab3404b6754d0a4901f19e0bc79</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Array&lt; std::string &gt;</type>
      <name>getAllKeys</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>1f8eb562360696af77c8bab946be86e3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual enum DataType</type>
      <name>getArrayType</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>396ce72dd2149e09c0ce2ab44f77c4b5</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getArraySize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>27ec3db81d84750e311903da3b189c3b</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>21299ab9b471329aa4c509463f168330</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>putDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ebaab620c363bac439e0c8ed889364e6</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>getDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>7911dae03a1b9daa5c151c75bebdc4b0</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>getDatabaseWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>d385c55faab7d7f91209409526235b7e</anchor>
      <arglist>(const std::string &amp;key, const Pointer&lt; Database &gt; &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isBool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>5d706b8e004233f36f464ca06d02051e</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putBool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>96ccf3136a69da84279ae704091cd4a7</anchor>
      <arglist>(const std::string &amp;key, const bool &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>271c60e2a816392583b44b4ab2e7fcc2</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; bool &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>655ed62e621e1548e7f609e2865ebc09</anchor>
      <arglist>(const std::string &amp;key, const bool *const data, const int nelements)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getBool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>37b8c7af50d1f3e4d8f8aebed4714852</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getBoolWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>89de26167da2e68d6681777fc29580a6</anchor>
      <arglist>(const std::string &amp;key, const bool &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Array&lt; bool &gt;</type>
      <name>getBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>4b233481c0927268cff48197a5a85ea8</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>86e08d59b8268863f56cd5de4f74f266</anchor>
      <arglist>(const std::string &amp;key, bool *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isDatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>af83552207c070b95f2306c4af307e3c</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>53887b30f50eeb0167c240c949b567cd</anchor>
      <arglist>(const std::string &amp;key, const DatabaseBox &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a79e9f156055f33e25541ff9a73a0195</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; DatabaseBox &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>bc1506f2d9a19cf4aa0a416e85ef4aee</anchor>
      <arglist>(const std::string &amp;key, const DatabaseBox *const data, const int nelements)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DatabaseBox</type>
      <name>getDatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>c1bff4647f92ece0143388f78fe87b7f</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DatabaseBox</type>
      <name>getDatabaseBoxWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>c0a3bef42bfcf81a2c5984120a3d09df</anchor>
      <arglist>(const std::string &amp;key, const DatabaseBox &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Array&lt; DatabaseBox &gt;</type>
      <name>getDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>d724f21c47ac43d8e6d8771ba0d95857</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>faec2d4ec7ee42811b40f7326de6c783</anchor>
      <arglist>(const std::string &amp;key, DatabaseBox *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isChar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>9249e254d3206594bcbc96bfaf734ed7</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putChar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>3b3e08a04004de1274c8170476c4e8bd</anchor>
      <arglist>(const std::string &amp;key, const char &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>0efebf1b0abd68ad14702229be0ca4bc</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; char &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>2dae85fd35b3efc00bd948b253874731</anchor>
      <arglist>(const std::string &amp;key, const char *const data, const int nelements)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual char</type>
      <name>getChar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ae6d456ad3adbdbf09c8e3c8d38ab032</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual char</type>
      <name>getCharWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>5ed154f5d32d6dfadf20e14d92fc3d96</anchor>
      <arglist>(const std::string &amp;key, const char &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Array&lt; char &gt;</type>
      <name>getCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>c62698e7bf2decd46cd12936eea8d285</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>60a9277745e166412e24fc42e257dc4c</anchor>
      <arglist>(const std::string &amp;key, char *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isComplex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>2ea0b1723b3b01b472b8585f50b8f9e5</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putComplex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>835fcf2d063049400e87188c639b694a</anchor>
      <arglist>(const std::string &amp;key, const dcomplex &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>64f8c9bfae1eedc688231cb6b0d6e03d</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; dcomplex &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>1dd9e2c691a5cdba5d68012b5a42b5af</anchor>
      <arglist>(const std::string &amp;key, const dcomplex *const data, const int nelements)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual dcomplex</type>
      <name>getComplex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>2ff10462c81b8c42d836ddf73c11fe9f</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual dcomplex</type>
      <name>getComplexWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>500f0ab074b892a8bde7e3bdfde6879a</anchor>
      <arglist>(const std::string &amp;key, const dcomplex &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Array&lt; dcomplex &gt;</type>
      <name>getComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>f3359ffe04afa0ce6abb66f8c09d7e42</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>bc0f18a23259f9e91bcd9af481309b1d</anchor>
      <arglist>(const std::string &amp;key, dcomplex *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isDouble</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>dae64ce5997a94a684212d9c462d2f21</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDouble</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a00be64ff4ca5885d683a1f9b8728974</anchor>
      <arglist>(const std::string &amp;key, const double &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>73b35c574afab5ada027feb19c188c6b</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; double &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>d08e21d5732e49d982982b9573a4729d</anchor>
      <arglist>(const std::string &amp;key, const double *const data, const int nelements)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getDouble</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>c371fcca2e686705cbe97c0f3a161530</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getDoubleWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>8ec920ab06eaf2d4c5d7fc366f138d85</anchor>
      <arglist>(const std::string &amp;key, const double &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Array&lt; double &gt;</type>
      <name>getDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>1259ad6610207ac7dc6cecf02e2e7e54</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>773233faa1007bb34f36fa2b8694fcec</anchor>
      <arglist>(const std::string &amp;key, double *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isFloat</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>5df6281a271d168d300a0e3e6b46561f</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putFloat</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>421ae404d4abb9f3ead3c304bc3049ac</anchor>
      <arglist>(const std::string &amp;key, const float &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>c143288d372fbec3db19d7a0f60b5215</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; float &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>7d7e3c63b090d5277ea64482a74609a1</anchor>
      <arglist>(const std::string &amp;key, const float *const data, const int nelements)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getFloat</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>9247316f8db79b82cdfcad805d1bd2fd</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getFloatWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>004a67ead34f6215b47f8002545e317e</anchor>
      <arglist>(const std::string &amp;key, const float &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Array&lt; float &gt;</type>
      <name>getFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>1afc11cec9d61647360e53cde52a6e74</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a5c82d0eee2175d1df85ce4cc21b5eda</anchor>
      <arglist>(const std::string &amp;key, float *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isInteger</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>54f2d7838423443b138ec60da478b4a8</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putInteger</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>8d4be064c870fecfe14cf99e1c62384d</anchor>
      <arglist>(const std::string &amp;key, const int &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>cd5ca58d0029db2769f0ea2d8ae2e935</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; int &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>9585209c8a69a109d61d4899097780a9</anchor>
      <arglist>(const std::string &amp;key, const int *const data, const int nelements)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getInteger</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>961d0ad4fbd6d2088d602554b64c6e74</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getIntegerWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>b2d399f7f1cb88b80c599bbbcb69665f</anchor>
      <arglist>(const std::string &amp;key, const int &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Array&lt; int &gt;</type>
      <name>getIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>0c7d324ae33feca83f0dc17bda871f99</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>be1e405eb5b637c5b8ea3732ad4369ac</anchor>
      <arglist>(const std::string &amp;key, int *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>195764631b6129126bd443a07e2f4a09</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>18f15c286f54da7c38ba8a6c925d934c</anchor>
      <arglist>(const std::string &amp;key, const std::string &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>09d8d6053419b37cbe1cb6f6ef6bc152</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; std::string &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>cd87437540f7f944f0c04548b82d0850</anchor>
      <arglist>(const std::string &amp;key, const std::string *const data, const int nelements)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>7ec202e19148f630cb50e4fc3d55a0e4</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getStringWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>b80e361c71ad9fa524d95ca3ee4c8e6f</anchor>
      <arglist>(const std::string &amp;key, const std::string &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Array&lt; std::string &gt;</type>
      <name>getStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>e962e6a0071e1880473620567bafaa2d</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>315040a72af3d68ebdb89461e37d8d32</anchor>
      <arglist>(const std::string &amp;key, std::string *data, const int nelements)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>1dc0f2dc8f6b78ef982787c5bc5e7463</anchor>
      <arglist>(const std::string &amp;key, bool &amp;scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>27d0f34b81f4633c06b9ec9806758a34</anchor>
      <arglist>(const std::string &amp;key, const bool scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>c88d2febc00dc54ab62d9e59754e4a8a</anchor>
      <arglist>(const std::string &amp;key, Array&lt; bool &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>5010ff46f0ef967077b5c71d86eae00a</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; bool &gt; array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>12eeaa680c4cb7ebee9929c71dc76abf</anchor>
      <arglist>(const std::string &amp;key, char &amp;scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ee676be6261e6d551cd377b3733112eb</anchor>
      <arglist>(const std::string &amp;key, const char scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>5f6cccf1e76c31b3478a03c3d7b48a42</anchor>
      <arglist>(const std::string &amp;key, Array&lt; char &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>c01649fe190072b6d474a561cf3d482e</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; char &gt; array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>13d36596191dbf921297ec6763aba987</anchor>
      <arglist>(const std::string &amp;key, dcomplex &amp;scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>60efc0d0381cd57e92cc0b4de4274155</anchor>
      <arglist>(const std::string &amp;key, const dcomplex scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>4890198e2ac1ab99de1bec9697937427</anchor>
      <arglist>(const std::string &amp;key, Array&lt; dcomplex &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>f20b5b56d6688044faeeb500fb02db8d</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; dcomplex &gt; array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>76a34801e843b0271ec1f9fd9c49bf99</anchor>
      <arglist>(const std::string &amp;key, float &amp;scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>310d2a38be048196556d161189b6a2bf</anchor>
      <arglist>(const std::string &amp;key, const float scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>be027c7b8a9a5eda8aae8fed27c9529d</anchor>
      <arglist>(const std::string &amp;key, Array&lt; float &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>37eaab42e4c1e954910b311ffde2c9e6</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; float &gt; array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>f546713fa6913cc9d3c83fa6e3e72d4f</anchor>
      <arglist>(const std::string &amp;key, double &amp;scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a76b1f6d43c7a81bfb39275e969dc7f5</anchor>
      <arglist>(const std::string &amp;key, const double scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>60e5801b618ae7c49f43d0f4209c5a76</anchor>
      <arglist>(const std::string &amp;key, Array&lt; double &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ef94ef60f9453641fd8873fb2b6a0de9</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; double &gt; array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>7176d4c034caf5ab83be79d1d8167059</anchor>
      <arglist>(const std::string &amp;key, int &amp;scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>913c49bf686bf6a1c3900eecf0fe9007</anchor>
      <arglist>(const std::string &amp;key, const int scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>66bb7247bfc9653bd772c638d7b751ca</anchor>
      <arglist>(const std::string &amp;key, Array&lt; int &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>c4bbe940739c63a694a7e45010ae835d</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; int &gt; array)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isVector</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>fbe0480a6f7c7bad86a5a1a91fe9c551</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getVector</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>9d4237ba5fc8bb4ced12c4295356eed2</anchor>
      <arglist>(const std::string &amp;key, std::vector&lt; TYPE &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putVector</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>6331e1b282bf01ab89de82d83dc60c59</anchor>
      <arglist>(const std::string &amp;key, const std::vector&lt; TYPE &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getName</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>7503cebadbb04d8248f19862c194e40d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>399db08f3461ac6cb18a63c94b5be60e</anchor>
      <arglist>(std::ostream &amp;os=pout)=0</arglist>
    </member>
    <class kind="class">SAMRAI::tbox::Database::Serializable</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Database::Serializable</name>
    <filename>classSAMRAI_1_1tbox_1_1Database_1_1Serializable.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database_1_1Serializable.html</anchorfile>
      <anchor>951746960fb0618f12c982e459d0d28d</anchor>
      <arglist>(Database &amp;database, const std::string &amp;name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getFromDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database_1_1Serializable.html</anchorfile>
      <anchor>efbc8154d158de4ebab89441f347693c</anchor>
      <arglist>(Database &amp;database, const std::string &amp;name)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Serializable</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database_1_1Serializable.html</anchorfile>
      <anchor>404edfd542dc003aaa7e05ade65cc92b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::DatabaseBox_POD</name>
    <filename>structSAMRAI_1_1tbox_1_1DatabaseBox__POD.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>d_dimension</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1DatabaseBox__POD.html</anchorfile>
      <anchor>5b0aa545d58d0f75d5eac8e0822e7e79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_lo</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1DatabaseBox__POD.html</anchorfile>
      <anchor>4b85b38467c5d46c4c8bf6299eb37f25</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_hi</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1DatabaseBox__POD.html</anchorfile>
      <anchor>c682cfbfef0f504af2d644a305b25c5e</anchor>
      <arglist>[3]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::DatabaseBox</name>
    <filename>classSAMRAI_1_1tbox_1_1DatabaseBox.html</filename>
    <member kind="function">
      <type></type>
      <name>DatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>9342560fb961ab95b1d1b60a3b6d5a93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>c785812076ed87bc944b0f05f8ae2cc8</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const int *lower, const int *upper)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>247b624700ca2a421a7240fba5676e89</anchor>
      <arglist>(const DatabaseBox &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>DatabaseBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>d82801f35f68c02fd1ff3f8cf6ffa764</anchor>
      <arglist>(const DatabaseBox &amp;box)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>869f0b1773b389e7e91b0ca78b8ca956</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>cba3c5a564e069968f460e507dc9b0ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>18b984d7356c0bfc148f4ee2bf65e167</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDim</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>da85ca17b9d13bc2a00a5ec743233370</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type>int &amp;</type>
      <name>lower</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>e603cf2b34558164df2d8a15decf4b51</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <type>int &amp;</type>
      <name>upper</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>6b1ef100cd85f1b2a626fd99fa13fafb</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>lower</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>c1b4439f64e590f8d880b3f1f032b032</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>upper</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>513d45ac4e5d970d55289efa9f49a8a4</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>389511f885419b0e529c1adff497156e</anchor>
      <arglist>(const DatabaseBox &amp;box) const </arglist>
    </member>
    <member kind="variable">
      <type>DatabaseBox_POD</type>
      <name>d_data</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>d45ea4693ca0faf80f9604ea04862892</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tbox::Dimension</type>
      <name>d_dim</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>f9f61ffcaf154f06706c3f378225c798</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::DatabaseFactory</name>
    <filename>classSAMRAI_1_1tbox_1_1DatabaseFactory.html</filename>
    <base>tbox::DescribedClass</base>
    <member kind="function" virtualness="pure">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseFactory.html</anchorfile>
      <anchor>4683f0d87fb0816fbb4f58290f7dfaed</anchor>
      <arglist>(const std::string &amp;name)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Dimension</name>
    <filename>classSAMRAI_1_1tbox_1_1Dimension.html</filename>
    <member kind="function">
      <type></type>
      <name>Dimension</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>be2e6f0336fbcc9d7f67eb7457fdc9a1</anchor>
      <arglist>(const unsigned short &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dimension</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>131b9c79355dc203b32b74b582ee1219</anchor>
      <arglist>(const Dimension &amp;dimension)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>b7dcc0b91676653e56879640d876de1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>91cb2f2b556dd2692bde3aad0c717bad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>6162c7bccc3079248f0908d445ef8314</anchor>
      <arglist>(const Dimension &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>1513f25cb8d8618f6b99984e81cd5c67</anchor>
      <arglist>(const Dimension &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>73c0485bcc7bc0950b62ed11d1dc17eb</anchor>
      <arglist>(const Dimension &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>c9025e0ef37bd49a99c4e58b8b5f0f2f</anchor>
      <arglist>(const Dimension &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>43df4b83e91ae3ac8a02f287124bf709</anchor>
      <arglist>(const Dimension &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>039893f7ab611763f0fef240bea07edf</anchor>
      <arglist>(const Dimension &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned short</type>
      <name>getValue</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>addf5aeeb2e6fd83ec27ae127abc5f53</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned short</type>
      <name>getMaxDimValue</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>79be24a61849e3e8256eb1f5986291bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Dimension &amp;</type>
      <name>getMaxDimension</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>ca719a0519fa3d35f251a334d2bcdc64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Dimension &amp;</type>
      <name>getInvalidDimension</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>9abad7a8cff81a9290db25f6be589f3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned short</type>
      <name>getInvalidDimValue</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>3b5ca7bef0292bc5f748bdd3f8c66b56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned short</type>
      <name>MAXIMUM_DIMENSION_VALUE</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>b79dbe8e413615cffb8835edcddb21da</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>0781e7c00bffd58554c3e334adfb2743</anchor>
      <arglist>(std::ostream &amp;s, const Dimension &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::HDFDatabase</name>
    <filename>classSAMRAI_1_1tbox_1_1HDFDatabase.html</filename>
    <base>SAMRAI::tbox::Database</base>
    <member kind="function">
      <type></type>
      <name>HDFDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a8a6a12bb80b6433a82c79eebbd206d0</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HDFDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>5f3e24fd04d3f9cc4f78559c4a6ed1a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>keyExists</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>3b79046d529a6de5b44e02474f1cc7c0</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; std::string &gt;</type>
      <name>getAllKeys</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>457d9e3003c1999cb801f955f984c94d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual enum DataType</type>
      <name>getArrayType</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>6e0930a11f726c0a2e754435c2b2c425</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getArraySize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>7a3ee7fac178fdff86a4de6ea9ec8fbb</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>004cfc58bbd52a491488770e0c5a779a</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>putDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>320a10644f662446ecd5cef0d0f3d6ec</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>getDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>60a9aa3fd7c10cdd7a9a988740aa8008</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isBool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>c2c92c9a066964657533df11d4d2760d</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a92d929c5d6c9a5d409d79c45cc6922e</anchor>
      <arglist>(const std::string &amp;key, const bool *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; bool &gt;</type>
      <name>getBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>23dbf122144af4c0e062d3178f8777dd</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>8b96896adc7485d5088695dc3bc4d27c</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>d7997d8ac160131b6f02148c6622ee20</anchor>
      <arglist>(const std::string &amp;key, const DatabaseBox *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; DatabaseBox &gt;</type>
      <name>getDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>f494b8ea65d4ba4670357a42600e7b3e</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isChar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>ca275f543016342bf265453f76bf09bc</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>366cc2b6a0a385a5055a548e79f35b97</anchor>
      <arglist>(const std::string &amp;key, const char *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; char &gt;</type>
      <name>getCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>ec4ed05251778641d9f55b2d0253b7eb</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isComplex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a3ec7c0f91b9931f979786d74353ff5e</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>230aacad87d81051e68b61acff76cf0b</anchor>
      <arglist>(const std::string &amp;key, const dcomplex *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; dcomplex &gt;</type>
      <name>getComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>e55f939267f759b9493878b76677fe7a</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDouble</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>067eb9a3c83e860fd39351be35864b39</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>e94886c27277c6185f61672280aff7cd</anchor>
      <arglist>(const std::string &amp;key, const double *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; double &gt;</type>
      <name>getDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>022958381efcb7fba995d15f0df9e7ad</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isFloat</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>2f0bb2972ddeb005fc5ff1ba36c76ac0</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>4ae488b2614f6b59d41aaea7c8ab33dc</anchor>
      <arglist>(const std::string &amp;key, const float *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; float &gt;</type>
      <name>getFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>8cf7e2843ac97ba70333942486bd1020</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isInteger</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>7771c3c891464d2843cfe817fc9de8f2</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>b41cdff2e4b3a7ff37cbc9cc5f181083</anchor>
      <arglist>(const std::string &amp;key, const int *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; int &gt;</type>
      <name>getIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>eb89430d826bfae8a2527256b3594bb2</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>2c2cdd1b5c5649fcde1a95aeaf27b4b8</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>d74c897f4550e462a09a63009f1966fc</anchor>
      <arglist>(const std::string &amp;key, const std::string *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; std::string &gt;</type>
      <name>getStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>fc9dfadfd0cbf4b088d114f5f3429770</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>5914aa461c553f110c6889a4f73c038a</anchor>
      <arglist>(std::ostream &amp;os=pout)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>create</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>df4dd5913e02c898645ff175355dbb09</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>open</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a7045da1d932269507746c030f614444</anchor>
      <arglist>(const std::string &amp;name, bool read_write_mode=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>attachToFile</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>12c45553f3591066ef2ecabf5c0e9517</anchor>
      <arglist>(hid_t group_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>close</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>f176d960330e488694ee4611388346c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getName</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a5557fa8019a12ed91b23c56005a34cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>getGroupId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>57892904259f96409f43510ae62a1587</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::HDFDatabaseFactory</name>
    <filename>classSAMRAI_1_1tbox_1_1HDFDatabaseFactory.html</filename>
    <base>SAMRAI::tbox::DatabaseFactory</base>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::IEEE</name>
    <filename>structSAMRAI_1_1tbox_1_1IEEE.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setupFloatingPointExceptionHandlers</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>a2b6fb8afda32be53f5262c1e76042e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>getSignalingFloatNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>487d5612269cff38c55b7fe89d166390</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getSignalingNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>bdadd789c81ef69ea1f2d62d0753c3e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dcomplex</type>
      <name>getSignalingComplexNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>42ab2026e39c747c53164007baa8665f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>4473df94a0c5cb29251921c5e795ad71</anchor>
      <arglist>(float &amp;f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>42ade8633a5520fa2af2fc365815d548</anchor>
      <arglist>(double &amp;d)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>2edc0a3bace5b5677e7f6b35b0ba6efd</anchor>
      <arglist>(dcomplex &amp;dc)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initializeArrayToSignalingNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>fd4120eb56a9b2b12ea474099af5044c</anchor>
      <arglist>(Array&lt; float &gt; &amp;array)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initializeArrayToSignalingNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>cf11ed5efbd29061ba26a8bfda71217b</anchor>
      <arglist>(Array&lt; double &gt; &amp;array)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initializeArrayToSignalingNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>c5cbf01834e46b3d20ebeed44942a8a7</anchor>
      <arglist>(Array&lt; dcomplex &gt; &amp;array)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initializeArrayToSignalingNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>39f0f32500e468154c0bad223c5fa6c5</anchor>
      <arglist>(float *array, int n=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initializeArrayToSignalingNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>a226e63d1ad7fafcb92a361f2d1ab7dd</anchor>
      <arglist>(double *array, int n=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initializeArrayToSignalingNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>c22298e3e673b6966b1ffdb785157654</anchor>
      <arglist>(dcomplex *array, int n=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>6c59c880a27d6b808c912fbc3716a99b</anchor>
      <arglist>(const float &amp;f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>2348fdbc83f299db8098e5174b02e023</anchor>
      <arglist>(const double &amp;d)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>c39f25e30dfe928445c608c00c5d028a</anchor>
      <arglist>(const dcomplex &amp;dc)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::InputManager</name>
    <filename>classSAMRAI_1_1tbox_1_1InputManager.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; InputDatabase &gt;</type>
      <name>parseInputFile</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1InputManager.html</anchorfile>
      <anchor>c386384aa370576ac17d6427b921f829</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parseInputFile</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1InputManager.html</anchorfile>
      <anchor>fa6f67be08cb54557960bfe306773ff1</anchor>
      <arglist>(const std::string &amp;filename, Pointer&lt; InputDatabase &gt; db)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static InputManager *</type>
      <name>getManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1InputManager.html</anchorfile>
      <anchor>b0d81fc413d52fcb74edb90bec6044a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1InputManager.html</anchorfile>
      <anchor>d63c326afb9295d8598555e6e654c96a</anchor>
      <arglist>(InputManager *manager)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>inputDatabaseExists</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1InputManager.html</anchorfile>
      <anchor>8b374ebfb0ff6b1e1da8263ab8f804da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Pointer&lt; Database &gt;</type>
      <name>getInputDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1InputManager.html</anchorfile>
      <anchor>0c9dd5979b469a58a6d2346c4f9ccee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>InputManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1InputManager.html</anchorfile>
      <anchor>0a297850ed56acf179bfa2bf6a5224e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~InputManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1InputManager.html</anchorfile>
      <anchor>32966215c0fb64a07aba464b50014de3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::List</name>
    <filename>classSAMRAI_1_1tbox_1_1List.html</filename>
    <templarg>TYPE</templarg>
    <member kind="typedef">
      <type>ListIterator&lt; TYPE &gt;</type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>93331378f37c26403b36e20b90f79d3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>List</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>375dd8d519ec194d06772c17c56784ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>List</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>541eb8e843775fb9d6f6e8e9c1eb62b0</anchor>
      <arglist>(const List&lt; TYPE &gt; &amp;list)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; TYPE &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>6ede8c5079c007c29c79a4ed50064fa9</anchor>
      <arglist>(const List&lt; TYPE &gt; &amp;list)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~List</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>f24fe039d45ecf36b2645705005af3e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>c6b90899a8d4f881d96992a82418ae21</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfItems</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>4fbdcf31662a8caa03b68c581249672c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>122f265edcae0900b8b329322037ceb1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>8341099f10012eb371819f5e3ed92760</anchor>
      <arglist>(const TYPE &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItemBefore</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>20542f1463eac74b120161fdfb82c397</anchor>
      <arglist>(ListIterator&lt; TYPE &gt; &amp;iter, const TYPE &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItemAfter</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>4547252c883c6d39f8fd3113aadfad4c</anchor>
      <arglist>(ListIterator&lt; TYPE &gt; &amp;iter, const TYPE &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendItem</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>9202553b04e9c7791213dea8aa83d753</anchor>
      <arglist>(const TYPE &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyItems</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>bbb5333af12b7eb88fb86ebaa73e7d85</anchor>
      <arglist>(const List&lt; TYPE &gt; &amp;list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>catenateItems</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>70d354de15eb4f25bb1374f6cb5a2fde</anchor>
      <arglist>(List&lt; TYPE &gt; &amp;list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>catenateItemsAtFront</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>b31f1b85aa24c4c863eb7f16686d1be7</anchor>
      <arglist>(List&lt; TYPE &gt; &amp;list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearItems</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>181c999043ebb70283b8b5bb35047e37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>getFirstItem</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>08bd6c486c9527899ccbef4cc5889944</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>getLastItem</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>71006e1d3b0ff31d974deec8d51378b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeFirstItem</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>06e69bece35adf7ac7b4b76d96c4d5bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeLastItem</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>d8f0a18bbc5ac0669a028c7c1b5d052a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>e368bc0ff673ca1899ead616c12b178e</anchor>
      <arglist>(ListIterator&lt; TYPE &gt; &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reverse</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>cefebd1697fb91e2348d1b1d7d2993bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>e6bc5454ab296fa4ae0468f59cec3175</anchor>
      <arglist>(List &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; TYPE &gt;::Iterator</type>
      <name>listStart</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>8247a1761c0012a1be9cb6db6eb5458f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>List&lt; TYPE &gt;::Iterator</type>
      <name>listEnd</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>deb656e95579c42f89d4e579ff317f11</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ListIterator&lt; TYPE &gt;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>975920952822855481f37a3e59880bde</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::ListNode</name>
    <filename>classSAMRAI_1_1tbox_1_1ListNode.html</filename>
    <templarg>TYPE</templarg>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ListIterator&lt; TYPE &gt;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListNode.html</anchorfile>
      <anchor>975920952822855481f37a3e59880bde</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>List&lt; TYPE &gt;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListNode.html</anchorfile>
      <anchor>eb12eb18a07ea00de1b0c629df4152a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::ListIterator</name>
    <filename>classSAMRAI_1_1tbox_1_1ListIterator.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>ListIterator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>6eaa71b8edbfcafd6fd75c2f5ab7ed4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ListIterator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>56ef41439d4e8e4611213870b363e455</anchor>
      <arglist>(const List&lt; TYPE &gt; &amp;list)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ListIterator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>6f1bcc4f2f352350ab88b57f17270380</anchor>
      <arglist>(const ListIterator&lt; TYPE &gt; &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type>ListIterator&lt; TYPE &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>b61661288c486da71001850bcd2150b7</anchor>
      <arglist>(const ListIterator&lt; TYPE &gt; &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ListIterator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>6335d6bf87697dab790807cc0f1e51c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>52c8544f53dfd8ed51da67a5c40ecb57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>2527db66a26987766190596a7fb6ec7c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>ed75d8b02f1cb5ed78edbee5830f10d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>a9a79f7861e2fe2cd07540331f214f97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>f889a839e1b9f5e3920fa9cf53f1a0c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const void *</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>dc8c23da68ff9197217e486bac74e8f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>4ee82ee3c82a3466f7a9522c91f6f230</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>8deef37f53de8fa3b95748921a8cc526</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator--</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>bba0eecf7640f5405fa0fdebd377960f</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rewindIterator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>18ebe89873834780f097ba565992ce6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fastforwardIterator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>ba2ef26ce814c9fd5f40ea293dfb87f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>633acc3d6f2be9b695597785866feb87</anchor>
      <arglist>(const ListIterator&lt; TYPE &gt; &amp;iterator) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>92c7cf828974a3720e32a729cf2a46df</anchor>
      <arglist>(const ListIterator&lt; TYPE &gt; &amp;iterator) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>List&lt; TYPE &gt;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>eb12eb18a07ea00de1b0c629df4152a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::AbortAppender</name>
    <filename>classSAMRAI_1_1tbox_1_1AbortAppender.html</filename>
    <base>SAMRAI::tbox::Logger::Appender</base>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::WarningAppender</name>
    <filename>classSAMRAI_1_1tbox_1_1WarningAppender.html</filename>
    <base>SAMRAI::tbox::Logger::Appender</base>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::DebugAppender</name>
    <filename>classSAMRAI_1_1tbox_1_1DebugAppender.html</filename>
    <base>SAMRAI::tbox::Logger::Appender</base>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Logger</name>
    <filename>classSAMRAI_1_1tbox_1_1Logger.html</filename>
    <member kind="function">
      <type>void</type>
      <name>logAbort</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Logger.html</anchorfile>
      <anchor>4fafb530944057d8c25b10c00e49ec98</anchor>
      <arglist>(const std::string &amp;message, const std::string &amp;filename, const int line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logWarning</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Logger.html</anchorfile>
      <anchor>4fb2a3d1fec9f039846db2e5d923fe43</anchor>
      <arglist>(const std::string &amp;message, const std::string &amp;filename, const int line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logDebug</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Logger.html</anchorfile>
      <anchor>5b91ea998046eb218f626923db84bd3d</anchor>
      <arglist>(const std::string &amp;message, const std::string &amp;filename, const int line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAbortAppender</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Logger.html</anchorfile>
      <anchor>c48670747266f2ce85fe78fda00f312a</anchor>
      <arglist>(tbox::Pointer&lt; Appender &gt; appender)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWarningAppender</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Logger.html</anchorfile>
      <anchor>30dbc36b8f6eaece1147482e9a7698aa</anchor>
      <arglist>(tbox::Pointer&lt; Appender &gt; appender)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDebugAppender</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Logger.html</anchorfile>
      <anchor>74f56a3780d29ee8a1012fee311aa720</anchor>
      <arglist>(tbox::Pointer&lt; Appender &gt; appender)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWarning</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Logger.html</anchorfile>
      <anchor>9d1cce05b2955c15826059d26a29a6a2</anchor>
      <arglist>(bool onoff)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDebug</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Logger.html</anchorfile>
      <anchor>a0d628b507c452e858969399c7be0d1d</anchor>
      <arglist>(bool onoff)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Logger *</type>
      <name>getInstance</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Logger.html</anchorfile>
      <anchor>4438235cd584371ee9d074670163f0df</anchor>
      <arglist>()</arglist>
    </member>
    <class kind="class">SAMRAI::tbox::Logger::Appender</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Logger::Appender</name>
    <filename>classSAMRAI_1_1tbox_1_1Logger_1_1Appender.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>logMessage</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Logger_1_1Appender.html</anchorfile>
      <anchor>44bb786314dd8c99f6bd9c024d311f47</anchor>
      <arglist>(const std::string &amp;message, const std::string &amp;filename, const int line)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Appender</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Logger_1_1Appender.html</anchorfile>
      <anchor>4dd1486d5f4db78aa4af3f34da4ce990</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::MathUtilities</name>
    <filename>classSAMRAI_1_1tbox_1_1MathUtilities.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type>bool</type>
      <name>isNaN</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>17c1584b53b7985ecd445abac5619732</anchor>
      <arglist>(const float &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNaN</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>f3e443cc4e580e15d0ebd4e6248d5efe</anchor>
      <arglist>(const double &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNaN</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>7002f7edc16eb469d8de71674ae19778</anchor>
      <arglist>(const dcomplex &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equalEps</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>138b6b017a994ab71f6871fb3a264385</anchor>
      <arglist>(const float &amp;a, const float &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equalEps</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>46dc438024e1c660d621f712ca2395df</anchor>
      <arglist>(const double &amp;a, const double &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equalEps</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>f552f77245d3ec7947690eb545761d76</anchor>
      <arglist>(const dcomplex &amp;a, const dcomplex &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>f88458b85721108f2ec2be9152107872</anchor>
      <arglist>(const bool &amp;low, const bool &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>588a37e93a3cba6b6c10d8a931769257</anchor>
      <arglist>(const char &amp;low, const char &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>178bd4b1fc56b0f46e66894ac85c7ce4</anchor>
      <arglist>(const int &amp;low, const int &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>313d54515faaa739ee41bf2b36c008b2</anchor>
      <arglist>(const float &amp;low, const float &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>f61b12fdf581071434741a08b742b799</anchor>
      <arglist>(const double &amp;low, const double &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>4522c06ac9d0b3334909a3028644680b</anchor>
      <arglist>(const dcomplex &amp;low, const dcomplex &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>Min</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>6eab6cf408ef0de85b673db553b3836f</anchor>
      <arglist>(dcomplex a, dcomplex b)</arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>Max</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>502678badbd443e9219593ad95041051</anchor>
      <arglist>(dcomplex a, dcomplex b)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Abs</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>f0962266da191a4b467ecdf5906cc50d</anchor>
      <arglist>(int a)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Abs</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>e12d0fc28806c15ba4efe2845963aab4</anchor>
      <arglist>(float a)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Abs</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>6dd79ab205b4a691554ad5574dde9952</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>round</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>f8327efa168976146cc0998044a91f00</anchor>
      <arglist>(float a)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>round</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>19e0fb5e24ff6d4ad0840e5515f3165d</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>s_zero</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a8c3dcb4ad882818c16023c11a8cb43c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>s_one</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>dd6221b79626338880e9554525738deb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>s_signaling_nan</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>7da7f6e7b624ad9dcfa6b9b25ede3c44</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>s_max</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>fc5c909e49bdaa8e669e1f479f44bbbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>s_min</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>5c32a1358849e95691aa911b9c400bb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>s_epsilon</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>dae0abc570716ce7bc2dc298a8a350ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>s_zero</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>c4390c06104fb8407693bc8ea740b49e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>s_one</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>0ef891436870f542de3ea2f1e0285bc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>s_signaling_nan</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>fbae1c6ed4f42ecef23b369d3c5502cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>s_max</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>b486f0f80ff3ce9795e8e35725a3bb16</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>s_min</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>89a4e81e9755034d76d50af6bb8d9431</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>s_epsilon</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>05edb78894349d5298429f2120191fde</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>s_zero</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>dec43729a20732559b806142d522e2c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>s_one</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>fb79aad905f762f3ae7eefbdc9a86f5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>s_signaling_nan</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>72ec70d7dd1676accd1fef01abbc5cfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>s_max</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>faa1e4afe621ac44d0daa5d1cb8fbd52</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>s_min</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>09ca692228b2c857667438014ff1b378</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>s_epsilon</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>dde061ef44381699b08b79f2b2f27eef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>s_zero</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>727a23e626d3c5fbbe55daa712715671</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>s_one</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>8f0764b29f85cb6b8ae94841ed8c1049</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>s_signaling_nan</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>b1f1ae7bd498396d44bd7a9a062f557b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>s_max</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>ed86ba25135af9e0c22b278b200aa38a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>s_min</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>792e6059238743bc78908669bbdc88f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>s_epsilon</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>6e71bb88006c4cc895a1ab75bc78b7b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>s_zero</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>2b5739719871e265157c655d4cba65c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>s_one</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>2681039cc2be26f2194cfbb92c55ae46</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>s_signaling_nan</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>cb87efd2e45733b28eee3b60ae37c429</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>s_max</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>e27a3be1566f3ceac211bfbe46b3fc70</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>s_min</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>81a7448e9b6052d6f9d38da08fcbb526</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>s_epsilon</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>9558a9deba9856a5e7ff3793b5f757af</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>s_zero</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>526ba4d4ee15e9095cd61cc6b753dd4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>s_one</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>55018781d57f5a57abbaa9a4c5263217</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>s_signaling_nan</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>8f7cb59e8762c42daeef79df7e30f87e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>s_max</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>fb10add10109fd0ef30529bc1b1c771e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>s_min</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a75cc3e66f22c6a4b1ecfbf7c4e70c71</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>s_epsilon</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>b6a09b630324771e9f94db49cbaa73f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNaN</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>17c1584b53b7985ecd445abac5619732</anchor>
      <arglist>(const float &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNaN</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>f3e443cc4e580e15d0ebd4e6248d5efe</anchor>
      <arglist>(const double &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNaN</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>7002f7edc16eb469d8de71674ae19778</anchor>
      <arglist>(const dcomplex &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equalEps</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>138b6b017a994ab71f6871fb3a264385</anchor>
      <arglist>(const float &amp;a, const float &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equalEps</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>46dc438024e1c660d621f712ca2395df</anchor>
      <arglist>(const double &amp;a, const double &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equalEps</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>f552f77245d3ec7947690eb545761d76</anchor>
      <arglist>(const dcomplex &amp;a, const dcomplex &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>Min</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>6eab6cf408ef0de85b673db553b3836f</anchor>
      <arglist>(dcomplex a, dcomplex b)</arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>Max</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>502678badbd443e9219593ad95041051</anchor>
      <arglist>(dcomplex a, dcomplex b)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Abs</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>f0962266da191a4b467ecdf5906cc50d</anchor>
      <arglist>(int a)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Abs</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>e12d0fc28806c15ba4efe2845963aab4</anchor>
      <arglist>(float a)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Abs</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>6dd79ab205b4a691554ad5574dde9952</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>f88458b85721108f2ec2be9152107872</anchor>
      <arglist>(const bool &amp;low, const bool &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>588a37e93a3cba6b6c10d8a931769257</anchor>
      <arglist>(const char &amp;low, const char &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>178bd4b1fc56b0f46e66894ac85c7ce4</anchor>
      <arglist>(const int &amp;low, const int &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>313d54515faaa739ee41bf2b36c008b2</anchor>
      <arglist>(const float &amp;low, const float &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>f61b12fdf581071434741a08b742b799</anchor>
      <arglist>(const double &amp;low, const double &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>4522c06ac9d0b3334909a3028644680b</anchor>
      <arglist>(const dcomplex &amp;low, const dcomplex &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>round</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>08f5735675e7ff90bbd9dfeb3cf3d8ec</anchor>
      <arglist>(float x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>round</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>cb55b98c68ff21afe2c61aba542bf5c3</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TYPE</type>
      <name>getZero</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>911e6ff8b5038c68a5234e55ec4c4e26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TYPE</type>
      <name>getOne</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>622202ca3d11da75809e9e28c0eebe71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TYPE</type>
      <name>getSignalingNaN</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>bf6ac388f38ed76a570f82f38f97222b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isNaN</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>ab1fb94c9f96171cba3936e1903d5693</anchor>
      <arglist>(const TYPE &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setArrayToSignalingNaN</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>0c3bc754636cba43cc75dcb6551e042f</anchor>
      <arglist>(Array&lt; TYPE &gt; &amp;array)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setArrayToSignalingNaN</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>e8792d5b76c84e7e59547571170c96d4</anchor>
      <arglist>(TYPE *array, int n=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>equalEps</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>422400fdbb6f639f809471dc9efd9b62</anchor>
      <arglist>(const TYPE &amp;a, const TYPE &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TYPE</type>
      <name>getMax</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>1810f89df57d4c1cba4dace740dd6045</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setArrayToMax</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>c2c1a381e26bd5aa0e69d8741839d011</anchor>
      <arglist>(Array&lt; TYPE &gt; &amp;array)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setArrayToMax</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>4a31d7a865e6dce5849d64a5e6406825</anchor>
      <arglist>(TYPE *array, int n=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TYPE</type>
      <name>getMin</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>944b2f6e884d1e01b852a9ecb1359225</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setArrayToMin</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>00b7348aa35b95316bd0185de48f730d</anchor>
      <arglist>(Array&lt; TYPE &gt; &amp;array)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setArrayToMin</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>3d9e391566037b770e80f82067b27038</anchor>
      <arglist>(TYPE *array, int n=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TYPE</type>
      <name>getEpsilon</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>751a2a2c5fdf29a7ab60446744286ddf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setArrayToEpsilon</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>73078e6353ca1ef6648e9ad351f152cd</anchor>
      <arglist>(Array&lt; TYPE &gt; &amp;array)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setArrayToEpsilon</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>926b1dfbe54d1f78f2399ecd2c93188b</anchor>
      <arglist>(TYPE *array, int n=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TYPE</type>
      <name>Min</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>0971db68b3e985983fc5cde54a338121</anchor>
      <arglist>(TYPE a, TYPE b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TYPE</type>
      <name>Max</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>fcac190c6c121b2008714acbe4d4fa42</anchor>
      <arglist>(TYPE a, TYPE b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TYPE</type>
      <name>Abs</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>415cb2abb2a5aa176210b158de556530</anchor>
      <arglist>(TYPE a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TYPE</type>
      <name>round</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>353b56d749b38926d693f723e744b86b</anchor>
      <arglist>(TYPE a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TYPE</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>8553d686f7b44aa072daec4c011f9637</anchor>
      <arglist>(const TYPE &amp;low, const TYPE &amp;width)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::MemoryDatabase</name>
    <filename>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</filename>
    <base>SAMRAI::tbox::Database</base>
    <member kind="function">
      <type></type>
      <name>MemoryDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>ae16418a6b0f4f6ae613e5a18e1da6fa</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MemoryDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>24526d1c6db7825b87d7f8fca216057c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>create</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>81cc4625ffcbb444f0e9cf8dd2e5b898</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>open</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>550fbad46b68936480d7e017b7139d3b</anchor>
      <arglist>(const std::string &amp;name, const bool read_write_mode=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>close</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>9651655147369f0e0ccdaedfdc7879d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getName</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>720f2d6afeb24200e203e102c2f513cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>keyExists</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>df0da713d123ebd03fe75f8e5fb8ef2e</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; std::string &gt;</type>
      <name>getAllKeys</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>d8570693925f7cdb6c649e3427223e76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual enum DataType</type>
      <name>getArrayType</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>c589a43483fd9dd741d2248d9c93e58c</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getArraySize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>2a30408e5f45a66d8650b2de32f6db66</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>81356a4fd8c88dd533fc2e7f56f54649</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>putDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>b16abafb47450c0e598dd3aa6d519c65</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>getDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>348b7dc53d37524eb76e671f6d8e1d59</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isBool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>077d1945e01d2680ce9b244a9af5e4c1</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putBool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>9f2c0f187791524365d25c03fb4117e1</anchor>
      <arglist>(const std::string &amp;key, const bool &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>dc5560a0888500867f62741bb982c9ed</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; bool &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>353b369786d2b4de3c89463cd9cdc6be</anchor>
      <arglist>(const std::string &amp;key, const bool *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getBool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>bf2fffe86848467da218c3c609d5247e</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getBoolWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>8d13c786987f76ea1adb68a6f4ea6062</anchor>
      <arglist>(const std::string &amp;key, const bool &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; bool &gt;</type>
      <name>getBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>2d7cff3b38c2cc0645d6d7385ed22978</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>09e95aa5ca0748d42729f02e7fe571e4</anchor>
      <arglist>(const std::string &amp;key, bool *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>41b4b45edc975aa260cfb6a535a54fb0</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>e27eecc2953e08c0d87dfaa90858925d</anchor>
      <arglist>(const std::string &amp;key, const DatabaseBox &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>f2113cbc8fc1e81adbe903f320aedf94</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; DatabaseBox &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>dc6792bd0bf440b5d2b717f9398d3a7d</anchor>
      <arglist>(const std::string &amp;key, const DatabaseBox *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DatabaseBox</type>
      <name>getDatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a8e6087b4295f640194e472722720100</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DatabaseBox</type>
      <name>getDatabaseBoxWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>df028a2e8d1e6d1a1b2ec0733ef4f42c</anchor>
      <arglist>(const std::string &amp;key, const DatabaseBox &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; DatabaseBox &gt;</type>
      <name>getDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>8bcef6bac34256a5f8b5f4539c1ad43b</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>fb25e1657464d41ed2c43dd477afe74c</anchor>
      <arglist>(const std::string &amp;key, DatabaseBox *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isChar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>5278f922799a83849c4c862f435512b9</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putChar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>cd7d9ce0a06758a3e60994fe3ff98362</anchor>
      <arglist>(const std::string &amp;key, const char &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>18b83a955059c5f0e275f5e4934eb4b9</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; char &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>1fe6ceb5ac848f13cc0e28a60a487cdb</anchor>
      <arglist>(const std::string &amp;key, const char *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual char</type>
      <name>getChar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a7c180b5d2ab7a1d73c718ca38119649</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual char</type>
      <name>getCharWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>7bba6e72a61307d11d015ba7a125ed4b</anchor>
      <arglist>(const std::string &amp;key, const char &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; char &gt;</type>
      <name>getCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>99446503d6cfdbd4086742c5aeea1b7e</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>9427b7f8fb4e49d7da5713a4071e16f1</anchor>
      <arglist>(const std::string &amp;key, char *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isComplex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>4ff95213f3ffd6996f87a58f859b353c</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putComplex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>82199a93e1ec4c7ec9fcee808a107369</anchor>
      <arglist>(const std::string &amp;key, const dcomplex &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>c1c671457bdd4ef531fbbcd7dff2d81b</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; dcomplex &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>f76e1b6724b3a3d24f5dcbf9e7bbd547</anchor>
      <arglist>(const std::string &amp;key, const dcomplex *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual dcomplex</type>
      <name>getComplex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>b841b6a5dc73d676f7ddd08617e3e722</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual dcomplex</type>
      <name>getComplexWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>cd363b4bc7e6c78b54ae7c6a4f1284e0</anchor>
      <arglist>(const std::string &amp;key, const dcomplex &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; dcomplex &gt;</type>
      <name>getComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>00e19bee556039cce7969255081210f4</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>83dbfd1a30ce650abffe194fcc316131</anchor>
      <arglist>(const std::string &amp;key, dcomplex *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDouble</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>0b3819482248e3d1fcba56c82e60ed8f</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDouble</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>0621edd8a4000937122c151328470d6c</anchor>
      <arglist>(const std::string &amp;key, const double &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>14858ed0e17032dbe7d253364ae22430</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; double &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>e242ae727962a0529a8f6f88e2061b88</anchor>
      <arglist>(const std::string &amp;key, const double *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getDouble</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>2d5efd8872c5174a449fd59fbbd8331b</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getDoubleWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>675b133a19d20ffd18071e46c91fa78d</anchor>
      <arglist>(const std::string &amp;key, const double &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; double &gt;</type>
      <name>getDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>8cbae96af8d87c6d63269a8b5369b741</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>dcc5b204dba7db20a0704589473f20c8</anchor>
      <arglist>(const std::string &amp;key, double *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isFloat</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>931496068a6e5f42eabec13b855fc9a3</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putFloat</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>7e7afe22693846cd01debc82bf8c9b7a</anchor>
      <arglist>(const std::string &amp;key, const float &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>5c3e19f9beda0826971f2139266cda12</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; float &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>939a6c386909a1b4d8203fd848059c80</anchor>
      <arglist>(const std::string &amp;key, const float *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getFloat</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>b63685a53c50b52cda52af2e164ff0a9</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getFloatWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>80903dce88ed6ef39237056a86ec1643</anchor>
      <arglist>(const std::string &amp;key, const float &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; float &gt;</type>
      <name>getFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>c566cd3b8f127a1cf1c00fa9a65676e2</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>d2e4dae4b176fca39b8bf790f9b0be27</anchor>
      <arglist>(const std::string &amp;key, float *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isInteger</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>8552c8b6e4baef133e883b2bf156d552</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putInteger</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>66b8bdcaf18e9a94917e48504e44a0cb</anchor>
      <arglist>(const std::string &amp;key, const int &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>c26000bc7a416c868c13e3aee24240ac</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; int &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>9cac0933baed5f8b6e4b1c6e9db55328</anchor>
      <arglist>(const std::string &amp;key, const int *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getInteger</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>fe1778163d33194225a2d354784ed5fa</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getIntegerWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>7ce105e99f6528ee7a235299521e2f81</anchor>
      <arglist>(const std::string &amp;key, const int &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; int &gt;</type>
      <name>getIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>4b5630986cdb3026325420c17bb4fcfd</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>c5ffc48c41aa8ab0f4522a10860ebdd1</anchor>
      <arglist>(const std::string &amp;key, int *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>f22b6b198e150b6c5f8d7dcd413ca169</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>da1baa9cd03dbacc4377f74c303675ff</anchor>
      <arglist>(const std::string &amp;key, const std::string &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>1a79cb49c7ad198de0c54f6d12265272</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; std::string &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>b33288e471dc3e69353ed606f9a26fd0</anchor>
      <arglist>(const std::string &amp;key, const std::string *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>83fa2d4e7cbbe12ad8339a3f8fe3e1b6</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getStringWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>7ec14cd90f966c8baf56cdd77be0febb</anchor>
      <arglist>(const std::string &amp;key, const std::string &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; std::string &gt;</type>
      <name>getStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>444e126d55a1e2cf83f405fcf1fa1d35</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>10ded6527fc54c28e5a54a10f0dd9151</anchor>
      <arglist>(const std::string &amp;key, std::string *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getName</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>dc2e54ff7758ae3acb51d3647d5151c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>keyAccessed</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>ce328d707ebd02c4b0639e76502f9092</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>4ef932995ae726410b29f221184f1e4e</anchor>
      <arglist>(std::ostream &amp;os=pout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printUnusedKeys</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>fe9e7b500649fac923624f34537804f0</anchor>
      <arglist>(std::ostream &amp;os=pout) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printDefaultKeys</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>9ec4a697956ea091bec43053ce575e30</anchor>
      <arglist>(std::ostream &amp;os=pout) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::MemoryDatabaseFactory</name>
    <filename>classSAMRAI_1_1tbox_1_1MemoryDatabaseFactory.html</filename>
    <base>SAMRAI::tbox::DatabaseFactory</base>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::MemoryUtilities</name>
    <filename>structSAMRAI_1_1tbox_1_1MemoryUtilities.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>printMemoryInfo</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1MemoryUtilities.html</anchorfile>
      <anchor>e625f69dcb5dd2ee357e1972f8cbc9f1</anchor>
      <arglist>(std::ostream &amp;os)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>recordMemoryInfo</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1MemoryUtilities.html</anchorfile>
      <anchor>f858f5e9ef808d81cb459d46f6115ffa</anchor>
      <arglist>(double time=0.0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>printMaxMemory</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1MemoryUtilities.html</anchorfile>
      <anchor>b3bcc3c2c78259789ea5a4e10feb6ddb</anchor>
      <arglist>(std::ostream &amp;os)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>align</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1MemoryUtilities.html</anchorfile>
      <anchor>f50d76b02050ae5ca3b60b06320e0f14</anchor>
      <arglist>(const size_t bytes)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::MessageStream</name>
    <filename>classSAMRAI_1_1tbox_1_1MessageStream.html</filename>
    <member kind="enumvalue">
      <type>@</type>
      <name>Read</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>2e6d8e0836ad5f288417acd9ca9c2751f1f3e32a1fa7a443067acbf49c22468f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Write</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>2e6d8e0836ad5f288417acd9ca9c275167827dfaaf11d4fe8b9fd0a78b314920</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>StreamMode</name>
      <anchor>2e6d8e0836ad5f288417acd9ca9c2751</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Read</name>
      <anchor>2e6d8e0836ad5f288417acd9ca9c2751f1f3e32a1fa7a443067acbf49c22468f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Write</name>
      <anchor>2e6d8e0836ad5f288417acd9ca9c275167827dfaaf11d4fe8b9fd0a78b314920</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MessageStream</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>0bce6e91edefd1f75f6dafae009bd92c</anchor>
      <arglist>(const size_t bytes, const StreamMode mode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MessageStream</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>e5e67f93d915bfd656f0d146d3b4720e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>getBufferStart</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>ecc8081e161f7ce35236ddbc090eafda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCurrentSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>fa81ed361b23fe0eaa274041d9f9b95d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCurrentIndex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>f32130a30fe2b9765ac7f629b00f79a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentIndex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>d14014ca4a944e047c944d595b658b7a</anchor>
      <arglist>(const size_t index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetIndex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>a48cdfb25aceda23c3e02b06c8678630</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MessageStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>a26721bf688b51fbce8bb3ac2a80ed94</anchor>
      <arglist>(const DATA_TYPE &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>43886bc168029603f1b15743c77c2852</anchor>
      <arglist>(const DATA_TYPE *data, unsigned int size=1)</arglist>
    </member>
    <member kind="function">
      <type>MessageStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>8c33924361097ab49ee11e254dcd1441</anchor>
      <arglist>(DATA_TYPE &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpack</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>d7e6bffcaca9011168a690c87a158c80</anchor>
      <arglist>(DATA_TYPE *data, unsigned int size=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>a50f641c86cfeace2cb74c010abb2df5</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>getSizeof</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>64c64a72187bde7d9b47efcc83a2ca9d</anchor>
      <arglist>(unsigned int num_items=1)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::NullDatabase</name>
    <filename>classSAMRAI_1_1tbox_1_1NullDatabase.html</filename>
    <base>SAMRAI::tbox::Database</base>
    <member kind="function">
      <type></type>
      <name>NullDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>382e9822d634fe3c41c32e0496bc5722</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NullDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>139f3d359bd4063b833f5c5f4407db7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>create</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>e539d564f2a35158d0186363eff17703</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>open</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>87dd3967150b73b5e63494982733f3a2</anchor>
      <arglist>(const std::string &amp;name, const bool read_write_mode=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>close</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>625362ccd4d666378671bfa728f1d82c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>keyExists</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>dad607abdd9c585fd5e1a048c9d562d1</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; std::string &gt;</type>
      <name>getAllKeys</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>617832ce9b0a59c26f0457f0746cf2c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual enum DataType</type>
      <name>getArrayType</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>ad0855b8c2a49afac526f22a69166f36</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getArraySize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>480ae79b1c1c23c46865307ca767ae2c</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>c2772af2d2f0561e5351b76ad23a33c3</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>putDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>339a86f88f55654c8c2f751e95678f60</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>getDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>e86886f12dd546229c35cad54356f259</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isBool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>0e70d260a751eedc2c980614563bf7f8</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>0b34202b61d7e7f8c911cfce23b6a2b0</anchor>
      <arglist>(const std::string &amp;key, const bool *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; bool &gt;</type>
      <name>getBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>0684d1c3c509906745d7bd3ab5c2cf24</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>6527891f2d266a56fcf701aa9c54eb31</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>bf6f94638d1cfb9b16cfb3ead2b7d030</anchor>
      <arglist>(const std::string &amp;key, const DatabaseBox *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; DatabaseBox &gt;</type>
      <name>getDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>3d3faee2f24de83ae6425d396c1a7bb4</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isChar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>080ab010a0c4a1f2e41e0576b113a717</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>4012a63676097f0cb01f1c79e1e1e214</anchor>
      <arglist>(const std::string &amp;key, const char *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; char &gt;</type>
      <name>getCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>330516b2782beda4f298f7dc31b12e58</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isComplex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>6bf0bffaaca6e3dbaecee78bb01c6641</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>40ad5b62ff92d92f9108121dbc9e98b1</anchor>
      <arglist>(const std::string &amp;key, const dcomplex *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; dcomplex &gt;</type>
      <name>getComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>70865372ca0e5dddc448549e6a0865a2</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDouble</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a42a56e8794938c03da3d1ae4f081d88</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>f936ae86846303e199ca701231d0c24a</anchor>
      <arglist>(const std::string &amp;key, const double *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; double &gt;</type>
      <name>getDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>aa92436bf52014141dfa24c0d1be6cfe</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isFloat</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>b803ea73c751100aa84eba5a796d866f</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>5bdc27ae0d67abf42ec1f9f8685e0645</anchor>
      <arglist>(const std::string &amp;key, const float *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; float &gt;</type>
      <name>getFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>ae7ee07ff9c9c7df6213b6362bcc7e93</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isInteger</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>628d4d7c35bd2b58ce67ae627aa754a3</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>4e64b1a2a01c804b6502a8c8cbfe2d55</anchor>
      <arglist>(const std::string &amp;key, const int *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; int &gt;</type>
      <name>getIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>352ba9bff05976f06af8bba2b22a099f</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>d5aa6391e6e83f464170ddc1d70f47e6</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>9591597de12fa4c33439e6d211bfee40</anchor>
      <arglist>(const std::string &amp;key, const std::string *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; std::string &gt;</type>
      <name>getStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>cefc30be2c66381992f71e7abc247043</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getName</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>d3775c8e32a3f25756af2543b8831a91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>cbd667d05ca5e2b5a947d1f2bc634b74</anchor>
      <arglist>(std::ostream &amp;os=pout)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::ParallelBuffer</name>
    <filename>classSAMRAI_1_1tbox_1_1ParallelBuffer.html</filename>
    <member kind="function">
      <type></type>
      <name>ParallelBuffer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ParallelBuffer.html</anchorfile>
      <anchor>4de66f8f5d56cb3f7a43ea3a065a6c33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParallelBuffer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ParallelBuffer.html</anchorfile>
      <anchor>60060602fb098729863315e5c934e8ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActive</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ParallelBuffer.html</anchorfile>
      <anchor>d956917370f64fae02a01b1a5f063198</anchor>
      <arglist>(bool active)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPrefixString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ParallelBuffer.html</anchorfile>
      <anchor>b656d2a509bc4d9a4390cf71bb7eef7b</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutputStream1</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ParallelBuffer.html</anchorfile>
      <anchor>12fae89576de037029aa94aa143a9108</anchor>
      <arglist>(std::ostream *stream)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutputStream2</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ParallelBuffer.html</anchorfile>
      <anchor>e4c1b1edbab37266eaf821408dcc44ec</anchor>
      <arglist>(std::ostream *stream)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>outputString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ParallelBuffer.html</anchorfile>
      <anchor>6299f533c33bc1c6002a04371ebfb0ba</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>outputString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ParallelBuffer.html</anchorfile>
      <anchor>cb0628d62ebdb00ee174b7793eacdb5d</anchor>
      <arglist>(const std::string &amp;text, const int length)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>sync</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ParallelBuffer.html</anchorfile>
      <anchor>097db61aa30bfbcd762a7ffb758d8983</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>overflow</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ParallelBuffer.html</anchorfile>
      <anchor>59467d9170df12dd6ce8991ac6d965f2</anchor>
      <arglist>(int ch)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Parser</name>
    <filename>classSAMRAI_1_1tbox_1_1Parser.html</filename>
    <member kind="function">
      <type></type>
      <name>Parser</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>665997c172ab4bb0b286634d7b8898e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Parser</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>1d88acadb5a5790809eabbbd5b879546</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>f676751fec3a39ced62e0dbc7aa798ad</anchor>
      <arglist>(const std::string &amp;filename, FILE *fstream, Pointer&lt; Database &gt; database)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberErrors</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>a0a750f5e82bf1bb00933367d0b2ac91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberWarnings</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>6999d8a2907b24589b625b0193e377d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; Database &gt; &amp;</type>
      <name>getScope</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>91c6567aeae55983f69965a99d0c7e57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enterScope</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>d23c593c34499db6463794a31e4be094</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>leaveScope</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>aeef79153dedbaf8ff7082d44ada5c95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; Database &gt;</type>
      <name>getDatabaseWithKey</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>3dc5b1b7f1ec46211c475c5fc8eadffb</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pushIncludeFile</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>c4e62d66924e6a73ac6b780635860525</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popIncludeFile</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>9e4086a6dca99bcf60b96941781d2042</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>error</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>645c341154f0d5a7601550ecf7f95f69</anchor>
      <arglist>(const std::string &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>warning</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>78fb6ce680da94e82b0116026f03718a</anchor>
      <arglist>(const std::string &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLine</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>c1c70fb3720950290846e72e92359778</anchor>
      <arglist>(const std::string &amp;line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>advanceLine</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>9c08ea2208f9e08a1dbfd377d5e198fb</anchor>
      <arglist>(const int nline=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>advanceCursor</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>04363c115402a3ef6842641efb6ddc58</anchor>
      <arglist>(const std::string &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yyinput</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>f921a09476c43d5b7c40675db520f7e6</anchor>
      <arglist>(char *buffer, const int max_size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Parser *</type>
      <name>getParser</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>cdf92fafe70b9963743132915d9e5a54</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::PIO</name>
    <filename>structSAMRAI_1_1tbox_1_1PIO.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initialize</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1PIO.html</anchorfile>
      <anchor>758fa5c52702f5570865e80014997299</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>finalize</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1PIO.html</anchorfile>
      <anchor>70698963751c7fb92ea17668da47ee03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>logOnlyNodeZero</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1PIO.html</anchorfile>
      <anchor>dac0b9bacf692a352c6b700ee3543dea</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>logAllNodes</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1PIO.html</anchorfile>
      <anchor>95d02c57611ad14e8b5018dae51ea9c1</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>suspendLogging</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1PIO.html</anchorfile>
      <anchor>231c9b06e2bfa05df539a4097abb47a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>resumeLogging</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1PIO.html</anchorfile>
      <anchor>b9f996b5116c977c893fbb36c0fa3732</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Pointer</name>
    <filename>classSAMRAI_1_1tbox_1_1Pointer.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::tbox::PointerBase</base>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>680e2db7df53dbf896aba00f0602b619</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>8cb25c16203685d8905e8ecdbee01d8f</anchor>
      <arglist>(TYPE *ptr, const bool managed=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>5abbe2ee85a86883dd09a9cd4887bf73</anchor>
      <arglist>(const Pointer&lt; TYPE &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>ceba60707ccaffe0e91840a1228aead0</anchor>
      <arglist>(const PointerBase &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Pointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>8935a2a70cb1ca688d89cee5fea211f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; TYPE &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>d812ed835e2424de798236ed2880d905</anchor>
      <arglist>(const Pointer&lt; TYPE &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; TYPE &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>7ff507df5c98ce60598d3fe7b594fc72</anchor>
      <arglist>(TYPE *ptr)</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; TYPE &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>01d4033282bfaa16cb172e2e7bf0e8d5</anchor>
      <arglist>(const PointerBase &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>447a3cda48d843584ccd922469600ba2</anchor>
      <arglist>(const Pointer&lt; TYPE &gt; &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>0a6c7b06f1554fa56853ae22d2d4269f</anchor>
      <arglist>(const Pointer&lt; TYPE &gt; &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>3eff8166ce06eb80236a49c59e7e1ece</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator *</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>f60114768ce50d2bdb7f6c28d8dd80f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator TYPE *</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>f67d414bad252de123b8863d159266e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>bca4bbaf48bcb1f1c6530bfd61f3863c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>3cd89b7ae7d150d55ea2d77e5007241b</anchor>
      <arglist>(TYPE *ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>8a243adf97057eb9b692c03631cb7e31</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>3a0eaaa4454956d8d21668df78b4dcab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>d492a55a357a876abe58472619f039e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNull</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>5a49fede622e1cd0fddec398e215ad19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReferenceCounter *</type>
      <name>getReferenceCounter</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>da44f7a2a64796f5104f513d23c80ec7</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::PointerBase</name>
    <filename>classSAMRAI_1_1tbox_1_1PointerBase.html</filename>
    <base>SAMRAI::tbox::ConstPointerBase</base>
    <member kind="function">
      <type></type>
      <name>PointerBase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1PointerBase.html</anchorfile>
      <anchor>9f1e89d97ba550cda2edf4bd51293e3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PointerBase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1PointerBase.html</anchorfile>
      <anchor>038678172129557be3f7844883a55dc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ReferenceCounter *</type>
      <name>getSubclassReferenceCounter</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1PointerBase.html</anchorfile>
      <anchor>df26f16e23cf9a93cafb0a56416db96e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const DescribedClass *</type>
      <name>getSubclassPointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1PointerBase.html</anchorfile>
      <anchor>21796f05263763bfcaa8e8a7dc4323c5</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::RankGroup</name>
    <filename>classSAMRAI_1_1tbox_1_1RankGroup.html</filename>
    <member kind="function">
      <type></type>
      <name>RankGroup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RankGroup.html</anchorfile>
      <anchor>da8b11ba17839df715a4cfda2a89b8b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RankGroup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RankGroup.html</anchorfile>
      <anchor>9ee3df13877b40828e0781568a824f92</anchor>
      <arglist>(const SAMRAI_MPI &amp;d_samrai_mpi)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RankGroup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RankGroup.html</anchorfile>
      <anchor>e1b89fed8d9bdfaf597c21481d4c11cc</anchor>
      <arglist>(const int min, const int max, const SAMRAI_MPI &amp;samrai_mpi=SAMRAI_MPI(SAMRAI_MPI::getSAMRAIWorld()))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RankGroup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RankGroup.html</anchorfile>
      <anchor>89ee4e91b7ac4caad369e17892c3eef4</anchor>
      <arglist>(const tbox::Array&lt; int &gt; &amp;rank_group, const SAMRAI_MPI &amp;samrai_mpi=SAMRAI_MPI(SAMRAI_MPI::getSAMRAIWorld()))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RankGroup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RankGroup.html</anchorfile>
      <anchor>4b86785f83613f4c5e93c095009dc3cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsAllRanks</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RankGroup.html</anchorfile>
      <anchor>28d9c760b0697bab7b5383058ebe04a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinMax</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RankGroup.html</anchorfile>
      <anchor>e8b077b3c474ea047c6b62b0b6391fec</anchor>
      <arglist>(const int min, const int max)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMember</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RankGroup.html</anchorfile>
      <anchor>95af79a8688b9c331acb3fa53f625460</anchor>
      <arglist>(const int rank) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RankGroup.html</anchorfile>
      <anchor>35d8b7771d7047ee8c5f33dcbd331cd4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMappedRank</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RankGroup.html</anchorfile>
      <anchor>29f2479970332c93f9f86542648c23f2</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMapIndex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RankGroup.html</anchorfile>
      <anchor>4f1e626c9f2046f4ecfa35c6b3fe093f</anchor>
      <arglist>(const int rank) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::ReferenceCounter</name>
    <filename>classSAMRAI_1_1tbox_1_1ReferenceCounter.html</filename>
    <member kind="function">
      <type></type>
      <name>ReferenceCounter</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ReferenceCounter.html</anchorfile>
      <anchor>62edcd346d69722a0e2bc0c588f854f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ReferenceCounter</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ReferenceCounter.html</anchorfile>
      <anchor>2f11b3f1f2dd0bc9eebbad48a6a98a94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteReference</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ReferenceCounter.html</anchorfile>
      <anchor>c84a4611b6ffbec3572c966f8b0fdd71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addReference</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ReferenceCounter.html</anchorfile>
      <anchor>106985160ff342e925c43a345fccde24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>operator new</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ReferenceCounter.html</anchorfile>
      <anchor>4f6d817f9fec02b0dcec354de818c8c8</anchor>
      <arglist>(size_t bytes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ReferenceCounter.html</anchorfile>
      <anchor>b340d6b802ad0a437459b96d4fbe658f</anchor>
      <arglist>(void *what)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isFinalized</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ReferenceCounter.html</anchorfile>
      <anchor>10ec933802c192880507e332dfe66bd0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::RestartManager</name>
    <filename>classSAMRAI_1_1tbox_1_1RestartManager.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isFromRestart</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>9a39097cae3d8c8a76da36f685e8fbdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>openRestartFile</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>9fb661b285137e9413ae5e6f66743db8</anchor>
      <arglist>(const std::string &amp;root_dirname, const int restore_num, const int num_nodes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>closeRestartFile</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>692996400cc2723ee513b4293eef14e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>getRootDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>efccc2eb24a383799e5acda7a0b0ad65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRootDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>d8aa911028747f7dd6ccae28b04a4e04</anchor>
      <arglist>(Pointer&lt; Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDatabaseFactory</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>69c1fcea7eea5c04d6960e6ea389a76b</anchor>
      <arglist>(Pointer&lt; DatabaseFactory &gt; database_factory)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>registerRestartItem</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>053cc42ea23aa9d8ba03a820081a6499</anchor>
      <arglist>(const std::string &amp;name, Serializable *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unregisterRestartItem</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>b74411ccfcab58fb4f6a4106c2b0f9ed</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearRestartItems</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>86dbbeeadbcb84ac86e8b06637c83231</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>writeRestartFile</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>1a9da7fec787ecaee6c44f22572b2366</anchor>
      <arglist>(const std::string &amp;root_dirname)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>writeRestartFile</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>87cc6d94cea91de00e2d03e5c47941fb</anchor>
      <arglist>(const std::string &amp;root_dirname, const int restore_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>writeRestartToDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>7e3ee5b7860883ceb35ae43f5c263281</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RestartManager *</type>
      <name>getManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>2c11940faf3aed184347c84c5cf2cf30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RestartManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>318cc12a9103249dcb2926c8802522c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~RestartManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>695ae0fbc254a87af86ddbdf80835b8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerSingletonSubclassInstance</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>39b95c2040f9be6dbba61e577d014d17</anchor>
      <arglist>(RestartManager *subclass_instance)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::SAMRAI_MPI</name>
    <filename>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</filename>
    <member kind="typedef">
      <type>int</type>
      <name>Comm</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a2d66f107c6b1658b2432301fcc7da78</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>Datatype</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>23ea92990f278044fbfdbeb0a43f3f42</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>Group</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>29641ca5e90e97a771e48fb4468b074d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>Op</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>eaff1423d87d618f7e6b6980ab2d01f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>Request</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>c169fbf960f2aa301ef2e7fa6571e272</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SAMRAI_MPI</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>f07296729a71ce7fed2d945d9c182691</anchor>
      <arglist>(const Comm &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRank</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>30c9047b1e5aef106746f89a48547acd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>d7f4a66215325efd88b7a528dae1cbe8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Comm &amp;</type>
      <name>getCommunicator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>8f81765263c8d7ec33c6ce56c0244f19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommunicator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>e025f21d2cc532740be6a93eebfecd3b</anchor>
      <arglist>(const Comm &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dupCommunicator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>aec6d9335b7e9ecc272a728c51e7efbf</anchor>
      <arglist>(const SAMRAI_MPI &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeCommunicator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>fc9c9bcefb0115ae06dff26b7d817d44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const SAMRAI_MPI &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>afe9ba5ebfbd367b7c464f768dd8ffc1</anchor>
      <arglist>(const SAMRAI_MPI &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>085616de5920606675065aad573221ce</anchor>
      <arglist>(const SAMRAI_MPI &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>c95a2dcb1a5418be47ef4c7a8121e5b1</anchor>
      <arglist>(const SAMRAI_MPI &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Allgather</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>25e9f5910cea621a371cf67131cefd2d</anchor>
      <arglist>(void *sendbuf, int sendcount, Datatype sendtype, void *recvbuf, int recvcount, Datatype recvtype) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Allgatherv</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>61221c45e6f00afe2d4cf729a7f78ce9</anchor>
      <arglist>(void *sendbuf, int sendcvount, Datatype sendtype, void *recvbuf, int *recvcounts, int *displs, Datatype recvtype) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Allreduce</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>f90baa3af138601b474cad420285bfdf</anchor>
      <arglist>(void *sendbuf, void *recvbuf, int count, Datatype datatype, Op op) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Attr_get</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>0f934ebd0da82743aa1c9ecc8a7b07f9</anchor>
      <arglist>(int keyval, void *attribute_val, int *flag) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Barrier</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>8392c6dc50fca69b16922a4a763b7203</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Bcast</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>1d62b9a3bf8a01ec085952a9f72ea4a6</anchor>
      <arglist>(void *buffer, int count, Datatype datatype, int root) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Comm_dup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>d6a27aede8bfb4db9c235872f1a76c2e</anchor>
      <arglist>(Comm *newcomm) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Comm_rank</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>c7ac74154372a1c93abc51facf662973</anchor>
      <arglist>(int *rank) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Comm_size</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>e154b4af05d7a4d3a522f55d64623316</anchor>
      <arglist>(int *size) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Gather</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>246ab3370c65c32994a3389e2822a91f</anchor>
      <arglist>(void *sendbuf, int sendcount, Datatype sendtype, void *recvbuf, int recvcount, Datatype recvtype, int root) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Gatherv</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>6875d42b4c0ca94c8a3b2952dc39098e</anchor>
      <arglist>(void *sendbuf, int sendcount, Datatype sendtype, void *recvbuf, int *recvcounts, int *displs, Datatype recvtype, int root) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Iprobe</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>de551c7d954142df77b00e4fdfa01c57</anchor>
      <arglist>(int source, int tag, int *flag, Status *status) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Isend</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>b5fd8365136501e72c5f4bfc12cc3add</anchor>
      <arglist>(void *buf, int count, Datatype datatype, int dest, int tag, Request *req) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Irecv</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>02aa7ac94e59ea1c2f5e55464c7a2597</anchor>
      <arglist>(void *buf, int count, Datatype datatype, int source, int tag, Request *request) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Probe</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>d25ce4d20eef0f7b14d8282e2d94cd5b</anchor>
      <arglist>(int source, int tag, Status *status) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Recv</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>4537bd0faa37d6ae64d31eea3d319f7f</anchor>
      <arglist>(void *buf, int count, Datatype datatype, int source, int tag, Status *status) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Reduce</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>7658e8e59339deaec82aeaa937ec4a7c</anchor>
      <arglist>(void *sendbuf, void *recvbuf, int count, Datatype datatype, Op op, int root) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Send</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>b6310aa222da0c6eb6c854c30fc6d8ee</anchor>
      <arglist>(void *buf, int count, Datatype datatype, int dest, int tag) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>AllReduce</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>7cee51dc151b3496599f308523ab2dc4</anchor>
      <arglist>(int *x, int count, Op op, int *ranks_of_extrema=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>AllReduce</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>7e7ad87e2c58d93a3f87531da3c7a9a4</anchor>
      <arglist>(double *x, int count, Op op, int *ranks_of_extrema=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>AllReduce</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>221b4d1b61f84e8bed9a54104357deb1</anchor>
      <arglist>(float *x, int count, Op op, int *ranks_of_extrema=NULL) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SAMRAI_MPI &amp;</type>
      <name>getSAMRAIWorld</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>58c7894f92933f73da934f46c60d6296</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getInvalidRank</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>d2fa150bb94a016845d325637fe7a132</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setCallAbortInSerialInsteadOfExit</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>1ad4275e6790b68b1795dee21cffa652</anchor>
      <arglist>(bool flag=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setCallAbortInParallelInsteadOfMPIAbort</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>d6478877da9905144377f544621a49ef</anchor>
      <arglist>(bool flag=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>abort</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>078eb2d3f200107a2ce20fd914599c58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>disableMPI</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>10fdc4ef4f2b1a4b1a9eacec19f8a5f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>usingMPI</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>ab6c5b44d57a7117a573aa64421b68e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>init</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a5609cb16b30285c209bd070b44a3fa9</anchor>
      <arglist>(int *argc, char **argv[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>init</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>9dfbaca23d0ea78b75cea174437b29fc</anchor>
      <arglist>(Comm comm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initMPIDisabled</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>09fdb79b3e366fa0cffb668ca82243ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>finalize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>c4764f0357b95ae29fc124ccb0752e64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>Comm_compare</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>421d7fc818b96ff81e204beeb1075d70</anchor>
      <arglist>(Comm comm1, Comm comm2, int *result)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>Comm_free</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>107518fb93f5ce2107382c0debb9fe0c</anchor>
      <arglist>(Comm *comm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>Finalized</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>4f5e4c5dbe095a19188f20cde66bef6c</anchor>
      <arglist>(int *flag)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>Get_count</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>28e4eb148d64945fbf0f9d79fbcacff5</anchor>
      <arglist>(Status *status, Datatype datatype, int *count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>Test</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>3b8ec6bd82f30e4b8dae7495f8113f41</anchor>
      <arglist>(Request *request, int *flag, Status *status)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>Test_cancelled</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>c61049260ffb93b9e1640aac8fb8839b</anchor>
      <arglist>(Status *status, int *flag)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>Wait</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>855a91433685023055b30d8a72c559e4</anchor>
      <arglist>(Request *request, Status *status)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>Waitall</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>2adae4118bec8ae24e3da11a39ff71e3</anchor>
      <arglist>(int count, Request *reqs, Status *stats)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>Waitany</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a5ccd94d1768696512aa828378ff2dc9</anchor>
      <arglist>(int count, Request *array_of_requests, int *index, Status *status)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>Waitsome</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>2b5a4ac3f0693f86d958774107ec7144</anchor>
      <arglist>(int incount, Request *array_of_requests, int *outcount, int *array_of_indices, Status *array_of_statuses)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>Wtime</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>b6b11aaeee7241c1a8c88976ce48010e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static Comm</type>
      <name>commWorld</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>8bbb4814792a93509853c22d1b9efc48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static Comm</type>
      <name>commNull</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>5e5a6d3ca83a7ca17784a0549e87d20e</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">SAMRAI::tbox::SAMRAI_MPI::Status</class>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::SAMRAI_MPI::Status</name>
    <filename>structSAMRAI_1_1tbox_1_1SAMRAI__MPI_1_1Status.html</filename>
    <member kind="function">
      <type></type>
      <name>Status</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1SAMRAI__MPI_1_1Status.html</anchorfile>
      <anchor>a9a0d923deb0eba55f383b5aae45259f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MPI_SOURCE</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1SAMRAI__MPI_1_1Status.html</anchorfile>
      <anchor>d88df26d0eacee225d5504fbff760dfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MPI_TAG</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1SAMRAI__MPI_1_1Status.html</anchorfile>
      <anchor>ed870e40d8528d3240a8fb1e2f4ae7a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MPI_ERROR</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1SAMRAI__MPI_1_1Status.html</anchorfile>
      <anchor>f3f428e02a5c743fe8f7c62d3e1dedab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::SAMRAIManager</name>
    <filename>classSAMRAI_1_1tbox_1_1SAMRAIManager.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAIManager.html</anchorfile>
      <anchor>884cddd166c516e20e94d74efdc5ff06</anchor>
      <arglist>(bool initialize_IEEE_assertion_handlers=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>startup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAIManager.html</anchorfile>
      <anchor>a46df50636c8a4311901c2db8c9d8914</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>shutdown</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAIManager.html</anchorfile>
      <anchor>f099244b3c5c5e3e25c6510f10a311ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>finalize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAIManager.html</anchorfile>
      <anchor>20efa041aadf99203e8d50cac30ced61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isInitialized</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAIManager.html</anchorfile>
      <anchor>f9bec028d255dccc28fa14c0b4c42360</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isStarted</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAIManager.html</anchorfile>
      <anchor>b8008bfbf96b0626c6a6f57faba47623</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getMaxNumberPatchDataEntries</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAIManager.html</anchorfile>
      <anchor>1ab39cf1323b811cdb20e84751d0c4e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMaxNumberPatchDataEntries</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAIManager.html</anchorfile>
      <anchor>6f4e9bcb5e873ee72746fbf651e6756e</anchor>
      <arglist>(int maxnum)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Schedule</name>
    <filename>classSAMRAI_1_1tbox_1_1Schedule.html</filename>
    <base>tbox::DescribedClass</base>
    <member kind="function">
      <type></type>
      <name>Schedule</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>2b06d8a13337f2e47493a5af3d1d2729</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Schedule</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>436331775c1a88d95d644499d710dc16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTransaction</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>7cb028532e52dea55b0ed6f9e55f80b9</anchor>
      <arglist>(const Pointer&lt; Transaction &gt; &amp;transaction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendTransaction</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>00bb40e6d66ac6905e4d936c168ab88d</anchor>
      <arglist>(const Pointer&lt; Transaction &gt; &amp;transaction)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumSendTransactions</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>d9ae1ba6734375168a2e0a038474ae7e</anchor>
      <arglist>(const int rank) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumRecvTransactions</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>2e7f85d48962a971f237a5ca18fa7158</anchor>
      <arglist>(const int rank) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumLocalTransactions</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>2896f4145fbce04d41eaa355069139ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMPI</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>8bfc0b1501b81455d06eb61457ed468c</anchor>
      <arglist>(const SAMRAI_MPI &amp;mpi)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMPITag</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>93ab75bc6e434f61e5d9a358745666b4</anchor>
      <arglist>(const int first_tag, const int second_tag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFirstMessageLength</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>ab7b17f6a29a1652a816962b0153f709</anchor>
      <arglist>(int first_message_length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>communicate</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>f9cba964e4f95d7a729e6a653e69760d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginCommunication</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>7f05d7a041aed68ca8b53dedcefb76c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finalizeCommunication</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>d6da8977fc55bb2abe6346d4adec76ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimerPrefix</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>0f7842100c39d62dfa4eeec60b17c182</anchor>
      <arglist>(const std::string &amp;timer_prefix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>7e8aa77029f4cb7f3d39a37a4816ee58</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Serializable</name>
    <filename>classSAMRAI_1_1tbox_1_1Serializable.html</filename>
    <base virtualness="virtual">tbox::DescribedClass</base>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>Serializable</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Serializable.html</anchorfile>
      <anchor>bf367df1261be81026ca63d24ff069f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Serializable</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Serializable.html</anchorfile>
      <anchor>cdf10d4cbcfffd9e48ee79695372f2f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Serializable.html</anchorfile>
      <anchor>b6a4bd6fd7a9046bd2f60ad716c21293</anchor>
      <arglist>(Pointer&lt; Database &gt; database)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::SiloDatabase</name>
    <filename>classSAMRAI_1_1tbox_1_1SiloDatabase.html</filename>
    <base>SAMRAI::tbox::Database</base>
    <member kind="function">
      <type></type>
      <name>SiloDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>b32ec0bdde9eb2d41d7822d0438e1dd5</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SiloDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>5e75773827b5b575bd84df9fda9a313d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>keyExists</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>82332c78eee132405c00f271700efe85</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; std::string &gt;</type>
      <name>getAllKeys</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>cadf6b9fac46cc285c51fce15233976a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual enum DataType</type>
      <name>getArrayType</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>dbaed5a95a54784ce846a965f3d7b532</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getArraySize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>8cfe2499fe35708f0d2816d9c6a6f11f</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>7b0aa26f2f000f5f60d69171d496886f</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>putDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>bf6f12624c1a0e9f3632d374d8906bfe</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>getDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>533be3ac0b6523e3a980ae1ee5c4b6c0</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isBool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>eaaf445e6791e70ac23018f90bca81b9</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>c075334ed95699fc79f5874fe6a90593</anchor>
      <arglist>(const std::string &amp;key, const bool *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; bool &gt;</type>
      <name>getBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>3f860ec3e51b4e53865a64096b2cf096</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>8815a65cc581804e8bd9a941cac956a7</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>7675244b1e3164ee7a77283f60f374d2</anchor>
      <arglist>(const std::string &amp;key, const DatabaseBox *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; DatabaseBox &gt;</type>
      <name>getDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>60a160bfd0ca58bcf1aee108638c9141</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isChar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>a325a026685a092e1c7732ff8a4f349f</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>62cb861e6c3f5a7f129276bd2c785366</anchor>
      <arglist>(const std::string &amp;key, const char *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; char &gt;</type>
      <name>getCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>19fa1f1baaa79137b48d158bae8694cc</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isComplex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>4181f444187eab3351a70621cb1cd1e5</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>2475027991ac8c0bb449af16c1e4ba42</anchor>
      <arglist>(const std::string &amp;key, const dcomplex *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; dcomplex &gt;</type>
      <name>getComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>bf4e16c71e073b93fe0984a5f5fa3f59</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDouble</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>bedb0e4f3df4ac319138d422fad671f6</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>734fc4411e1090bd6ec7ab3d1e12f48b</anchor>
      <arglist>(const std::string &amp;key, const double *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; double &gt;</type>
      <name>getDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>20c4fc94b98613af43d91d4dd3191aa5</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isFloat</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>ed44d68da150d2758eb3a7878131e040</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>9237d0017002d1c2312ed101b0f03222</anchor>
      <arglist>(const std::string &amp;key, const float *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; float &gt;</type>
      <name>getFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>25d2ae3ba3ec591fabe756e2a8b1db68</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isInteger</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>dd5072f184612b5a0d6fbd509d634e4d</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>4d5920945ae93da01dea8aeb88ee62a8</anchor>
      <arglist>(const std::string &amp;key, const int *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; int &gt;</type>
      <name>getIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>cf97d23599b2db087cba73fb157ccf0f</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>9daf00933555397b81061b55ff21b516</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>04d03a4fd6f29e31a1da060d2daafcb5</anchor>
      <arglist>(const std::string &amp;key, const std::string *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; std::string &gt;</type>
      <name>getStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>7620b6e1b4fb1b6bd973ef948d77f8d3</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getName</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>14dfc13f12060f857191039c333e81a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>d25377afad755475b7dd17a22a3c6458</anchor>
      <arglist>(std::ostream &amp;os=pout)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>create</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>8fc9b9b6a13c7963d8071295be8c5200</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>open</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>376f46b85f5df8bca2276068f5ba0634</anchor>
      <arglist>(const std::string &amp;name, const bool read_write_mode=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>attachToFile</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>d88f90c824bebc6953f8eef6b7362b8c</anchor>
      <arglist>(DBfile *file, const std::string &amp;directory)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>close</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>ba338f8f3e86e855646efeff2c253cf8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::SiloDatabaseFactory</name>
    <filename>classSAMRAI_1_1tbox_1_1SiloDatabaseFactory.html</filename>
    <base>SAMRAI::tbox::DatabaseFactory</base>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::StartupShutdownManager</name>
    <filename>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerHandler</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>e34fa0bfadbbe7a14433d59786f91ed5</anchor>
      <arglist>(AbstractHandler *handler)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>a8d48bd21da8d7b206c5f9310182186e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>startup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>9db1106f4420c0d2764fdd31797597eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>shutdown</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>26d7fde71e27a0506531e6cb7a0e6218</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>finalize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>34de5cdf4627329995034c88f7c18a36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityArenaManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>d1bf052b25d44e5314f2463ed2e8500c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityReferenceCounter</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>159a9995120aee67c9aad29af7c0e05c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityLogger</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>fc21192a3a09935e8cc5ec080e34e589</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityListElements</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>8b4292c414a2527cf0d8c53659e9dee9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityList</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>e74ffe0a06fd36ebb794c6465376c8c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityInputManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>e6eabf77b2e23f983bbef54275d095c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityRestartManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>0e8315333a366357af66df035e87de94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityVariableDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>5d5a186f77f805932158ac42fc6705c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityStatistician</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>b51df604e873819ada29f2c84c326b56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityBoundaryLookupTable</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>8e62a968e33f3ec7f059a9f9ed8815c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityHierarchyDataOpsManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>d90c015586c7d69f6e63976daf20b83e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityTimerManger</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>73ca043018ba4670b6a2cf61faa60def</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityTimers</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>bd9155768e8bf2d7584c4a134ff5cdd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityVariables</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>27a491e282f5f5f025d158615dca501f</anchor>
      <arglist></arglist>
    </member>
    <class kind="class">SAMRAI::tbox::StartupShutdownManager::AbstractHandler</class>
    <class kind="class">SAMRAI::tbox::StartupShutdownManager::Handler</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::StartupShutdownManager::AbstractHandler</name>
    <filename>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1AbstractHandler.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractHandler</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1AbstractHandler.html</anchorfile>
      <anchor>0ad6624df918ebd9c8a213269970f7d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1AbstractHandler.html</anchorfile>
      <anchor>d875fcac3b32fcc5a3472ec4eaf6cc0c</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>startup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1AbstractHandler.html</anchorfile>
      <anchor>8c49d6bc0300bb98ebaeedaab96571e9</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>shutdown</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1AbstractHandler.html</anchorfile>
      <anchor>eded5caed37e6264a89b789714ebf714</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>finalize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1AbstractHandler.html</anchorfile>
      <anchor>7372f52d4465b41c91abe41f9796669a</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned char</type>
      <name>getPriority</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1AbstractHandler.html</anchorfile>
      <anchor>a354ad78e9432f125837355824392ddd</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasInitialize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1AbstractHandler.html</anchorfile>
      <anchor>e5501bac28b943e294f996cc9d3ce4d4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasStartup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1AbstractHandler.html</anchorfile>
      <anchor>08eca08a2d6d220b998ac1fc8c143e05</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasShutdown</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1AbstractHandler.html</anchorfile>
      <anchor>3d034fd991bdfabd65bc8ea75833dbf1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasFinalize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1AbstractHandler.html</anchorfile>
      <anchor>9435c24700b39f9254ee48105a6185a0</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::StartupShutdownManager::Handler</name>
    <filename>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</filename>
    <base>SAMRAI::tbox::StartupShutdownManager::AbstractHandler</base>
    <member kind="function">
      <type></type>
      <name>Handler</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</anchorfile>
      <anchor>9b6e2e544537760b84a03c52ee72c9e0</anchor>
      <arglist>(void(*initialize)(void), void(*startup)(void), void(*shutdown)(void), void(*finalize)(void), unsigned char priority)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Handler</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</anchorfile>
      <anchor>cec82125e525df3e5042811525cc0e9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</anchorfile>
      <anchor>d95e9165365ebcb0de6fbf4bb43a62ed</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</anchorfile>
      <anchor>d1cd563250015637a47a8c4a4a728a56</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</anchorfile>
      <anchor>22cc98fc50b3c5de327a4b2eee6e4e84</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finalize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</anchorfile>
      <anchor>1ddbc701f7c3d5b3ce6908e09e833b08</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>getPriority</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</anchorfile>
      <anchor>e743d7423ecd95ba7ea32c94844f2668</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasInitialize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</anchorfile>
      <anchor>ab4cbadf84edc562d2f6ed3f06396608</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasStartup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</anchorfile>
      <anchor>5be64ce5fb75ae117047eeca8b38bdca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasShutdown</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</anchorfile>
      <anchor>133c63fa2b7601622fd2045bbb748521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasFinalize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</anchorfile>
      <anchor>2a2370e0c8ed1d0a03d689653625cc83</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Statistic</name>
    <filename>classSAMRAI_1_1tbox_1_1Statistic.html</filename>
    <base>tbox::DescribedClass</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Statistic</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>8bff3cbaedca87bfb93c0676fbfd914e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>43a884342acbf35a6e2ba437c219ae30</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getType</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>acca341141dda23648f87ee0e18d4d85</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getInstanceId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>dfc0acdc57a873f48a22a54a58a68e0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getStatSequenceLength</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>ffc32355e2f59b02f606ed9f572ce6b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>38cd7bd7e8a8227dff3fce695419ce67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordProcStat</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>0eb981dcb6d2a53560e1748d56d4156e</anchor>
      <arglist>(double value, int seq_num=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordPatchStat</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>7b8f8929e3968d0c226509c7c99c0648</anchor>
      <arglist>(int patch_num, double value, int seq_num)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canEstimateDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>bdc64e9172b29148d0c88f4ce73bebd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>3eac00295363aa902205f7b22c1284cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>fca4a93229903621e2dff12ab47224cb</anchor>
      <arglist>(MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>a300bf9602bbbf5130026ee498d3cb21</anchor>
      <arglist>(MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>55164d1831d4ecbf57e84773e5d81881</anchor>
      <arglist>(std::ostream &amp;stream, int precision=12) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>a6edb579d632cb5fd8cb5714883f808f</anchor>
      <arglist>(Pointer&lt; Database &gt; db)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFromRestart</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>802707f9eca064c045560e0f52e1cf9d</anchor>
      <arglist>(Pointer&lt; Database &gt; db)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Statistic</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>bfa3b78399c7bf293a3643788a8b0311</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;stat_type, int instance_id)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Array&lt; Statistic::ProcStat &gt; &amp;</type>
      <name>getProcStatSeqArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>5af8b3cb46cd0b231f1992bc79f93c4a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Array&lt; Statistic::PatchStat &gt; &amp;</type>
      <name>getPatchStatSeqArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>2637e9210c0327d2be438d505f094c26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Statistician</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>e5dc7e33f20970a2e93e6aa0150d629c</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">SAMRAI::tbox::Statistic::PatchStat</class>
    <class kind="struct">SAMRAI::tbox::Statistic::PatchStatRecord</class>
    <class kind="struct">SAMRAI::tbox::Statistic::ProcStat</class>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::Statistic::PatchStat</name>
    <filename>structSAMRAI_1_1tbox_1_1Statistic_1_1PatchStat.html</filename>
    <member kind="variable">
      <type>List&lt; Statistic::PatchStatRecord &gt;</type>
      <name>patch_records</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Statistic_1_1PatchStat.html</anchorfile>
      <anchor>30f240ab2ed669b41e1f716e094f2c52</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::Statistic::PatchStatRecord</name>
    <filename>structSAMRAI_1_1tbox_1_1Statistic_1_1PatchStatRecord.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>patch_id</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Statistic_1_1PatchStatRecord.html</anchorfile>
      <anchor>c8ab5b6ad0b2ed3bb634eea96827406a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>value</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Statistic_1_1PatchStatRecord.html</anchorfile>
      <anchor>385aa43408c502e83b5e60217204289c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::Statistic::ProcStat</name>
    <filename>structSAMRAI_1_1tbox_1_1Statistic_1_1ProcStat.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>value</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Statistic_1_1ProcStat.html</anchorfile>
      <anchor>d8233f1c6d12e4d402b0d7bf199f5384</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Statistician</name>
    <filename>classSAMRAI_1_1tbox_1_1Statistician.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Statistic &gt;</type>
      <name>getStatistic</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a0513baa4064724346ce8a542f1ad75b</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;stat_type)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkStatisticExists</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>c79ad234f6ddb7ef96a0e554fd54c6b7</anchor>
      <arglist>(Pointer&lt; Statistic &gt; &amp;stat, const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumberProcessorStats</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>e524d28cec616e236ae7020e52192c14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumberPatchStats</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>8b0a02bb582d1181e337a4120d94dc71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetProcessorStatistics</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>966aa21afbe5bae693b7cb13e1c14b3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetPatchStatistics</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>780b9dd9f6d4127dc419bd16671f8490</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetStatistics</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>afcec1d106bf7972ddf30673d0f72979</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getProcStatId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>f21d7640714a31013a88afcc544a3fe9</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalProcStatSequenceLength</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>839bde76d9085f23e0cd03eabccbe492</anchor>
      <arglist>(int proc_stat_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getGlobalProcStatValue</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>e34688ac63a7f9d994cfd0e52d1b721a</anchor>
      <arglist>(int proc_stat_id, int seq_num, int proc_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getGlobalProcStatSum</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>c64ac1adcf5ccf8c8ed3fa2508678906</anchor>
      <arglist>(int proc_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getGlobalProcStatMax</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>184104df0cd46f1c09f5744bcf963f43</anchor>
      <arglist>(int proc_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalProcStatMaxProcessorId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>db85f93b3abf48b7801f2f8a0c51cfa6</anchor>
      <arglist>(int proc_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getGlobalProcStatMin</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>40aba1e60b0ec93c2202ea89ce37880d</anchor>
      <arglist>(int proc_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalProcStatMinProcessorId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>ccdf57bbc76e8cec45dd442f3a9fa90d</anchor>
      <arglist>(int proc_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printGlobalProcStatData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>e31b14dad602255958e9946445f75646</anchor>
      <arglist>(int proc_stat_id, std::ostream &amp;os, int precision=12)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printGlobalProcStatDataFormatted</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>44c7fd218e98bb57db18de2f8268d657</anchor>
      <arglist>(int proc_stat_id, std::ostream &amp;os, int precision=12)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printGlobalProcStatDataFormatted</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>2c37af81ed3fd54ac92290294255d329</anchor>
      <arglist>(int proc_stat_id, int proc_id, std::ostream &amp;os, int precision=12)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getPatchStatId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>970460ed37793d51891ff418ad47044a</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatSequenceLength</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>48e4d93e3baf1d3acf82cc2cc3e27cdd</anchor>
      <arglist>(int patch_stat_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatNumberPatches</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>aeb55d5e0f24b7dde0dbdff03245b17a</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatPatchMapping</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>1663c97c38244eab0b0ee6a9d7696b6f</anchor>
      <arglist>(int patch_stat_id, int seq_num, int patch_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getGlobalPatchStatValue</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>f313ddf8d0de937164d332318e235f73</anchor>
      <arglist>(int patch_stat_id, int seq_num, int patch_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getGlobalPatchStatSum</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>f49c60a444168f11b8d21e1d7f2d4819</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getGlobalPatchStatMax</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>9ab16f2fc514650bfc4f99d9d3f061d3</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatMaxPatchId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>6d5bdec960eb4e1dd1b5c5d4829970c4</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getGlobalPatchStatMin</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>03962ff1bed9c8858bb602a72440a745</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatMinPatchId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>7bda43aeffba1ea01f1bf00f6c1798c3</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getGlobalPatchStatProcessorSum</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>ff03be303473c85dba23dff962a31674</anchor>
      <arglist>(int patch_stat_id, int processor_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getGlobalPatchStatProcessorSumMax</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>605d17564b983773d9fb24491894e2e9</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatProcessorSumMaxId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>af4cfaf642bc2eed796bf53a966a09d9</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getGlobalPatchStatProcessorSumMin</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>ff0119876db486fc7814b74ef30ee20e</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatProcessorSumMinId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>900f7077782a46d9ae8de3d3591b166b</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatNumberPatchesOnProc</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>e7acb0f20371f67c5d0a4e66155d4bee</anchor>
      <arglist>(int patch_stat_id, int seq_num, int proc_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatMaxPatchesPerProc</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>6e14894226e50169697c62aec7200e3e</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatMaxPatchesPerProcId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>4173e5f4fca821d4c5c9e556e3f2aa24</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatMinPatchesPerProc</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>0d27f012cf0397c1cf12a42ee6b100e7</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatMinPatchesPerProcId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>f7651c182e30d042988dac7fc289b57e</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printGlobalPatchStatData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>16e017a438bfca745991e28e017bee5e</anchor>
      <arglist>(int patch_stat_id, std::ostream &amp;os, int precision=12)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printGlobalPatchStatDataFormatted</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>31c8eddb5fd8d9bbe8cbfd0f545bb5fe</anchor>
      <arglist>(int patch_stat_id, std::ostream &amp;os, int precision=12)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>finalize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>32728be3b2eba4f1be5ecfb73b8d331e</anchor>
      <arglist>(bool gather_individual_stats_on_proc_0=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printLocalStatData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>681bad5e9493ddd3e669ee36f9de79fd</anchor>
      <arglist>(std::ostream &amp;os, int precision=12) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printAllGlobalStatData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>30604384c9047f0e9a5ef4bb6f7f7033</anchor>
      <arglist>(std::ostream &amp;os, int precision=12)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printAllSummedGlobalStatData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>f764f3f16cb5dec931b96dbb61c9453a</anchor>
      <arglist>(std::ostream &amp;os, int precision=12)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printAllSummedGlobalStatData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>1db658f44ed4b2c45f1e32d08c4f720b</anchor>
      <arglist>(const std::string &amp;filename, int precision=12)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSpreadSheetOutput</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>34118598b2db61f2d93e57a4de17b554</anchor>
      <arglist>(const std::string &amp;dirname=std::string(), int precision=12)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSpreadSheetOutputForProcessor</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>ffb2a14cfa3933ec179c886ac3d12dd8</anchor>
      <arglist>(const int proc_id, const std::string &amp;dirname=std::string(), int precision=12)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Statistician *</type>
      <name>createStatistician</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>774ba784fa41c229aa7ff63a0e0572aa</anchor>
      <arglist>(bool register_for_restart=true, bool read_from_restart=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Statistician *</type>
      <name>getStatistician</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a6291f1e9153721eff3f906b8cd3ad35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Statistician</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>e2f1723471e75a5745ab65005a51dfb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~Statistician</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>d1f4a5158de3b8adb950ce825bf0eaa0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerSingletonSubclassInstance</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>c180c19ce6981707793e850fcf1ec527</anchor>
      <arglist>(Statistician *subclass_instance)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>checkStatsForConsistency</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>e20418c2f80232cd0b20d1fe33305a7d</anchor>
      <arglist>(Array&lt; int &gt; &amp;total_patches)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkProcStatExists</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>b2a4e8727e2134c0608b4d82f3227e43</anchor>
      <arglist>(Pointer&lt; Statistic &gt; &amp;stat, const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkPatchStatExists</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>ead40a8363c3441156c9a0571b083c52</anchor>
      <arglist>(Pointer&lt; Statistic &gt; &amp;stat, const std::string &amp;name) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>StatisticRestartDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>388c7b5ecf5d513f2552b01be53440f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::StatisticRestartDatabase</name>
    <filename>classSAMRAI_1_1tbox_1_1StatisticRestartDatabase.html</filename>
    <base protection="private">SAMRAI::tbox::Serializable</base>
    <member kind="function">
      <type></type>
      <name>StatisticRestartDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatisticRestartDatabase.html</anchorfile>
      <anchor>9e2bd735549db35bd3fbe88793f3a77d</anchor>
      <arglist>(const std::string &amp;object_name, bool register_for_restart, bool read_from_restart)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StatisticRestartDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatisticRestartDatabase.html</anchorfile>
      <anchor>88a02af8ceefc4cd8a5fae7905c2d435</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatisticRestartDatabase.html</anchorfile>
      <anchor>1578009e52e7d316bef1e6e48f19b05e</anchor>
      <arglist>(Pointer&lt; Database &gt; db)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromRestart</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatisticRestartDatabase.html</anchorfile>
      <anchor>9675544485009ba502efd307af9871e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatisticRestartDatabase.html</anchorfile>
      <anchor>9ec9dd9e778b41c8be59562209c79f9b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Statistician</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatisticRestartDatabase.html</anchorfile>
      <anchor>e5dc7e33f20970a2e93e6aa0150d629c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::StatTransaction</name>
    <filename>classSAMRAI_1_1tbox_1_1StatTransaction.html</filename>
    <base>SAMRAI::tbox::Transaction</base>
    <member kind="function">
      <type></type>
      <name>StatTransaction</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatTransaction.html</anchorfile>
      <anchor>0158c5aa63a2068f2cd6a79acc02347a</anchor>
      <arglist>(Pointer&lt; Statistic &gt; stat, int src_proc_id, int dst_proc_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StatTransaction</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatTransaction.html</anchorfile>
      <anchor>d2de0207144d3d498318c387800d8945</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatTransaction.html</anchorfile>
      <anchor>db4af35f973e0e596e64bde81d3f5164</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatTransaction.html</anchorfile>
      <anchor>2c7ada77db3d2dd80db6eebc2fcb7dce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeOutgoingMessageSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatTransaction.html</anchorfile>
      <anchor>818b50e8263966011f9b61b1b1893975</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getSourceProcessor</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatTransaction.html</anchorfile>
      <anchor>fd672ac4479369ee8eb8827b2e7e0a50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDestinationProcessor</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatTransaction.html</anchorfile>
      <anchor>19e9a7c6b81f0763933a7d8eeb8affc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatTransaction.html</anchorfile>
      <anchor>6bc42ea3286e6aed020e47b13321d948</anchor>
      <arglist>(MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatTransaction.html</anchorfile>
      <anchor>66995b238218949cf4879ca2fb27b662</anchor>
      <arglist>(MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copyLocalData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatTransaction.html</anchorfile>
      <anchor>e228d6952b4ca72c2d09a9263818c237</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatTransaction.html</anchorfile>
      <anchor>aab1cc78ee8e06518c5210e4f242abdd</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Timer</name>
    <filename>classSAMRAI_1_1tbox_1_1Timer.html</filename>
    <base>tbox::DescribedClass</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Timer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>505426fee3d0f9b84e0071e3a77dea96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>d9b5543a5eddfb9e7ff8be523f8ffdde</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>3f7ef628f5dda13ad584d5e3b15f6173</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>a3a7ee819aace7cbcf33ed7641758922</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>barrierAndStart</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>2caa73b9a1d248080f2a0fd60199aa51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>barrierAndStop</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>0e7862c9a36a937e536895b1bd054e7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startExclusive</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>f908395935ceec9c9165246e4914c766</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopExclusive</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>19e4587b336a690a097008f41641a913</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>d6ae38f23e1dfcf11eaeeb1a645c9d92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTotalSystemTime</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>2806deaed34091039e16b0bb3720737f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTotalUserTime</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>440e450b035c17500e9b7da33ab360c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTotalWallclockTime</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>916b9ecff9d4d9be3fb01a98b1665f3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMaxWallclockTime</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>c266216c2243be62e1673ca8aa7446f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getExclusiveSystemTime</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>ae75c7fd6807cf798edf67b69f4898ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getExclusiveUserTime</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>4e948625550a9b7f78af312a5e4830a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getExclusiveWallclockTime</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>8cd54f6972b208a8601abc8a389c38be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>a3bc00af8f499f3499cba0589768939e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRunning</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>95262e877a71de5bb478cdcd34f7da87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberAccesses</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>2be3154f761ea55d268acc2affdb7e39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeLoadBalanceEfficiency</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>e35401d020bf75a31fd8f2805ca8cfda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeMaxWallclock</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>29d8a797f4e89d07895fb1e1c1f13ea3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>3e3c60d8f1855e34c3568015445bfef8</anchor>
      <arglist>(Pointer&lt; Database &gt; db)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFromRestart</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>2315d06eb96588d5dd05979a6abd127c</anchor>
      <arglist>(Pointer&lt; Database &gt; db)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Timer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>755ecb2ce66235a74a5bbd5064e675d1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setActive</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>2f5c789c5f1c99cc11774991ad415139</anchor>
      <arglist>(bool is_active)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addConcurrentTimer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>3c801c44f7e4627cd1f7e69151c61624</anchor>
      <arglist>(const Timer &amp;timer)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isConcurrentTimer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>2c5feee377c2c2db51f9532db7e9e780</anchor>
      <arglist>(const Timer &amp;timer) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>TimerManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>7d285935ac15ca2079648ee2af563e5a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::TimerManager</name>
    <filename>classSAMRAI_1_1tbox_1_1TimerManager.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Timer &gt;</type>
      <name>getTimer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>bf235c216c51a6e45cea16cfa03000a9</anchor>
      <arglist>(const std::string &amp;name, bool ignore_timer_input=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkTimerExists</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>6a8084bfa53cf363986fa1b0e529cd75</anchor>
      <arglist>(Pointer&lt; Timer &gt; &amp;timer, const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkTimerRunning</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>3aae3ed8356df84848bd4bb2c8aee271</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetAllTimers</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>922535063b959036a2468772e266482c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>4c59a502a1f6d36faea9117f2db60f2a</anchor>
      <arglist>(std::ostream &amp;os=plog)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>createManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>c5dae5478326854dc2f31fba9f88bc61</anchor>
      <arglist>(Pointer&lt; Database &gt; input_db)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimerManager *</type>
      <name>getManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>07f3b8f77b3c72d709e1061acc178b7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TimerManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>95e840cdd4cb27a1803b801fc3732965</anchor>
      <arglist>(Pointer&lt; Database &gt; input_db)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~TimerManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>495e924a0da81820e10e1b06353b27e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerSingletonSubclassInstance</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>a7ac77579bddea2b2e8efcffbe41835f</anchor>
      <arglist>(TimerManager *subclass_instance)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>startTime</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>0b647a1ac6d5279f7872c12a49d7923f</anchor>
      <arglist>(Timer *timer)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>stopTime</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>5abf75601c73f8bca11a94dab3ef3992</anchor>
      <arglist>(Timer *timer)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Timer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>7d6acf8bbd6335147d132c0da34bba7c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Tracer</name>
    <filename>classSAMRAI_1_1tbox_1_1Tracer.html</filename>
    <member kind="function">
      <type></type>
      <name>Tracer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Tracer.html</anchorfile>
      <anchor>c995661820d2561c5a6d35437e6651bd</anchor>
      <arglist>(const std::string &amp;message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Tracer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Tracer.html</anchorfile>
      <anchor>2f292c252987ce65b074332b251700b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setTraceStream</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Tracer.html</anchorfile>
      <anchor>543664d41e0a13d17ee69bdca2ccb46a</anchor>
      <arglist>(std::ostream *stream)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Transaction</name>
    <filename>classSAMRAI_1_1tbox_1_1Transaction.html</filename>
    <base>tbox::DescribedClass</base>
    <member kind="function">
      <type></type>
      <name>Transaction</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Transaction.html</anchorfile>
      <anchor>ab3ed5f423b6a563ec96a04a356e187d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Transaction</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Transaction.html</anchorfile>
      <anchor>f1a9f0e6f4e6cb878d345b3166c7d26d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>canEstimateIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Transaction.html</anchorfile>
      <anchor>a6db40372a4dfa3e79b31e3fadc6173f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>computeIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Transaction.html</anchorfile>
      <anchor>d4e4b6933d7c6accf74696d84c6c32f1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>computeOutgoingMessageSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Transaction.html</anchorfile>
      <anchor>52bdc59da84e2e98fe1fde2381d1f2c5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getSourceProcessor</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Transaction.html</anchorfile>
      <anchor>76a315bca4373a370ed8037629aa4424</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getDestinationProcessor</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Transaction.html</anchorfile>
      <anchor>5361227b54b2b0334a097c29ea7b6ef1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Transaction.html</anchorfile>
      <anchor>82e5d4493879842900f2a4a59017b510</anchor>
      <arglist>(MessageStream &amp;stream)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Transaction.html</anchorfile>
      <anchor>e74a06b8537a3cef06d9a682c49f7b44</anchor>
      <arglist>(MessageStream &amp;stream)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>copyLocalData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Transaction.html</anchorfile>
      <anchor>c43189c010765f56acd20f08e99ac4c7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Transaction.html</anchorfile>
      <anchor>c82147cb6d2c605dd50195d80a7145e9</anchor>
      <arglist>(std::ostream &amp;stream) const =0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::Utilities</name>
    <filename>structSAMRAI_1_1tbox_1_1Utilities.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>recursiveMkdir</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Utilities.html</anchorfile>
      <anchor>84f5f64bc9f7e8b4623d9e7314b794d5</anchor>
      <arglist>(const std::string &amp;path, mode_t mode=(S_IRUSR|S_IWUSR|S_IXUSR), bool only_node_zero_creates=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>renameFile</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Utilities.html</anchorfile>
      <anchor>839496cf3dc609e1f1494b3b3ea377c3</anchor>
      <arglist>(const std::string &amp;old_filename, const std::string &amp;new_filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>intToString</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Utilities.html</anchorfile>
      <anchor>154e32cadcd111becfb0d2875c021e26</anchor>
      <arglist>(int num, int min_width=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>nodeToString</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Utilities.html</anchorfile>
      <anchor>b591c2db760f4d2dced31da554ac9b1f</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>processorToString</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Utilities.html</anchorfile>
      <anchor>ac8f47b686f356ef65f457c3cfbde160</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>patchToString</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Utilities.html</anchorfile>
      <anchor>eb28e2b5f69359134bf8c4cc68464e9b</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>levelToString</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Utilities.html</anchorfile>
      <anchor>812582755158bd2bf303dd2fe5e9f5b5</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>blockToString</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Utilities.html</anchorfile>
      <anchor>4647bc68c61623d0e6222061c4e4b0e0</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>abort</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Utilities.html</anchorfile>
      <anchor>0cef31cdc1daf883502f45eddf0cde84</anchor>
      <arglist>(const std::string &amp;message, const std::string &amp;filename, const int line)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::vector</name>
    <filename>classSAMRAI_1_1tbox_1_1vector.html</filename>
    <templarg>TYPE</templarg>
    <member kind="typedef">
      <type>SVec::iterator</type>
      <name>iterator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>c9593e1b578e8d2c89b1279e9070a799</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SVec::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>d624397c2feb9cc0fb4e25aa6333f084</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SVec::reverse_iterator</type>
      <name>reverse_iterator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>b00c2d8a76af70316d2af36a3b3b55f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SVec::const_reverse_iterator</type>
      <name>const_reverse_iterator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>5718272c4cd0331ce4839ee8d177dc94</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SVec::value_type</type>
      <name>value_type</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>9f3a6859f3a4dbdaa5940f8ddc8d4fd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SVec::size_type</type>
      <name>size_type</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>5d9fe50b5b9e294611be748b8385fe0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SVec::reference</type>
      <name>reference</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>dddac97b13df073fe015110dabb1a31c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SVec::const_reference</type>
      <name>const_reference</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>7763e6252dbad5a6db41e2bac34f04ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>vector</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>d32a576e9ea8fa80a7cd306c3650acfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>vector</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>640c319c82df9b7475fb0575970e7ebb</anchor>
      <arglist>(const vector &amp;r)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>vector</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>be4b3b3c978a25f7da1c30a44cf7a79b</anchor>
      <arglist>(size_type n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~vector</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>c17af8727f9c91f2136c0a3c9ca0d4d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>7c7cce7b97ce23a7c1119c50259394d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>3e9ab5ba601438edfa0c9516bfc07ed1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>dcf2761d9bf0cfaf1ee204b57687c161</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>d3496ecdc9c0b9bc62edd1824cedcafb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>e5f81bcf1aa88e5985a2d44cde4fb53c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>8a119673742b216c1ceb726bb82dff62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>4244c026e012107efa402bd0625f4936</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>c07edb5775826428a8ddee72896d3af0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>ff59adeaa58ab2e0a6f529624c64d550</anchor>
      <arglist>(iterator i, const value_type &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>2cbb90c498a55200435a634b5a5bd834</anchor>
      <arglist>(iterator p, size_type n, const TYPE &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a9c9b75f88caf045acfbfdd18a590a82</anchor>
      <arglist>(InputIterator i, InputIterator j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>6206ecb894e839cf3c79d044c3a30b01</anchor>
      <arglist>(iterator i)</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>5f179fc89cb069138aaac99f10994a32</anchor>
      <arglist>(iterator &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>37603a465441b30fb8564acd1f2e90ce</anchor>
      <arglist>(iterator &amp;p, iterator &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>13f2bcab414dbae271f7378c05786144</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>1e77a102fede6c525e00b26bb74c7eeb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>f71e92511882f5a12818544d68254d51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>975d270b1246d0ba9e8cf4805fb032d1</anchor>
      <arglist>(size_type n, const TYPE &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>151bd2ca58cdad90fb666bbe741d995e</anchor>
      <arglist>(size_type n)</arglist>
    </member>
    <member kind="function">
      <type>vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>c53fc0f5225f174ab779078a9763253a</anchor>
      <arglist>(const SVec &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>de1c8134a06e1dd4da034060a39a8808</anchor>
      <arglist>(const SVec &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>baa7534fad925a24755ca1cd49a52cef</anchor>
      <arglist>(const SVec &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>02699c26644eae9b586cfd4e2f8878c6</anchor>
      <arglist>(SVec &amp;r)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const SVec &amp;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>7bf936bec35d0c32440615b32cf154d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator SVec &amp;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>83aae5dbb4cb088620a73fbe21100282</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator[]</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>81f579ab23084cd92263432522a31d48</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator[]</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a153a71b959ff8e729035c2691511cb7</anchor>
      <arglist>(size_type i) const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>SAMRAI::xfer</name>
    <filename>namespaceSAMRAI_1_1xfer.html</filename>
    <class kind="class">SAMRAI::xfer::BoxGeometryVariableFillPattern</class>
    <class kind="class">SAMRAI::xfer::CoarsenAlgorithm</class>
    <class kind="class">SAMRAI::xfer::CoarsenClasses</class>
    <class kind="class">SAMRAI::xfer::CoarsenCopyTransaction</class>
    <class kind="class">SAMRAI::xfer::CoarsenPatchStrategy</class>
    <class kind="class">SAMRAI::xfer::CoarsenSchedule</class>
    <class kind="class">SAMRAI::xfer::CoarsenTransactionFactory</class>
    <class kind="class">SAMRAI::xfer::PatchInteriorVariableFillPattern</class>
    <class kind="class">SAMRAI::xfer::PatchLevelBorderAndInteriorFillPattern</class>
    <class kind="class">SAMRAI::xfer::PatchLevelBorderFillPattern</class>
    <class kind="class">SAMRAI::xfer::PatchLevelEnhancedFillPattern</class>
    <class kind="class">SAMRAI::xfer::PatchLevelFillPattern</class>
    <class kind="class">SAMRAI::xfer::PatchLevelFullFillPattern</class>
    <class kind="class">SAMRAI::xfer::PatchLevelInteriorFillPattern</class>
    <class kind="class">SAMRAI::xfer::RefineAlgorithm</class>
    <class kind="class">SAMRAI::xfer::RefineClasses</class>
    <class kind="class">SAMRAI::xfer::RefineCopyTransaction</class>
    <class kind="class">SAMRAI::xfer::RefinePatchStrategy</class>
    <class kind="class">SAMRAI::xfer::RefineSchedule</class>
    <class kind="class">SAMRAI::xfer::RefineScheduleConnectorWidthRequestor</class>
    <class kind="class">SAMRAI::xfer::RefineTimeTransaction</class>
    <class kind="class">SAMRAI::xfer::RefineTransactionFactory</class>
    <class kind="class">SAMRAI::xfer::StandardCoarsenTransactionFactory</class>
    <class kind="class">SAMRAI::xfer::StandardRefineTransactionFactory</class>
    <class kind="class">SAMRAI::xfer::VariableFillPattern</class>
    <member kind="function" static="yes">
      <type>static const std::string</type>
      <name>errbord</name>
      <anchorfile>namespaceSAMRAI_1_1xfer.html</anchorfile>
      <anchor>33e05d79fd4da53041ede722b15cc2bf</anchor>
      <arglist>(&quot;E-&gt; &quot;)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>logbord</name>
      <anchorfile>namespaceSAMRAI_1_1xfer.html</anchorfile>
      <anchor>d974ddaa858d37b968e7636d40258aa6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::BoxGeometryVariableFillPattern</name>
    <filename>classSAMRAI_1_1xfer_1_1BoxGeometryVariableFillPattern.html</filename>
    <base>SAMRAI::xfer::VariableFillPattern</base>
    <member kind="function">
      <type></type>
      <name>BoxGeometryVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1BoxGeometryVariableFillPattern.html</anchorfile>
      <anchor>9ebcd7f29e62ba7cfdbcd44ae620fec2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BoxGeometryVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1BoxGeometryVariableFillPattern.html</anchorfile>
      <anchor>0e466be92928d8c5a1fd067714f79000</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1BoxGeometryVariableFillPattern.html</anchorfile>
      <anchor>c46be93dddde186efd355a969bbd54bb</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;dst_patch_box, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>computeFillBoxesOverlap</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1BoxGeometryVariableFillPattern.html</anchorfile>
      <anchor>a8e16d772ce04cee1bbdd25aba7ec7b6</anchor>
      <arglist>(const hier::BoxContainer &amp;fill_boxes, const hier::Box &amp;patch_box, const hier::Box &amp;data_box, const hier::PatchDataFactory &amp;pdf) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1BoxGeometryVariableFillPattern.html</anchorfile>
      <anchor>a74fb7f4a8d0543929f8e570f3ce668b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getPatternName</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1BoxGeometryVariableFillPattern.html</anchorfile>
      <anchor>4cc16b7b05f00b575d2f68910bdd8821</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::CoarsenAlgorithm</name>
    <filename>classSAMRAI_1_1xfer_1_1CoarsenAlgorithm.html</filename>
    <member kind="function">
      <type></type>
      <name>CoarsenAlgorithm</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenAlgorithm.html</anchorfile>
      <anchor>67357ba07cec6770c854bbf76510b6e0</anchor>
      <arglist>(const tbox::Dimension &amp;dim, bool fill_coarse_data=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoarsenAlgorithm</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenAlgorithm.html</anchorfile>
      <anchor>964d02976a2ab8579c25920895088ac3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerCoarsen</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenAlgorithm.html</anchorfile>
      <anchor>3b45ed137f1544136653876597ff8d12</anchor>
      <arglist>(const int dst, const int src, const tbox::Pointer&lt; hier::CoarsenOperator &gt; opcoarsen, const hier::IntVector &amp;gcw_to_coarsen, tbox::Pointer&lt; VariableFillPattern &gt; var_fill_pattern=(tbox::Pointer&lt; BoxGeometryVariableFillPattern &gt;) NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerCoarsen</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenAlgorithm.html</anchorfile>
      <anchor>fb68a065c15324579fc744467f89cf07</anchor>
      <arglist>(const int dst, const int src, const tbox::Pointer&lt; hier::CoarsenOperator &gt; opcoarsen, tbox::Pointer&lt; VariableFillPattern &gt; var_fill_pattern=(tbox::Pointer&lt; BoxGeometryVariableFillPattern &gt;) NULL)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; xfer::CoarsenSchedule &gt;</type>
      <name>createSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenAlgorithm.html</anchorfile>
      <anchor>a4cf5b655b8bf08d4d8db3e6a13f41e6</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; crse_level, tbox::Pointer&lt; hier::PatchLevel &gt; fine_level, xfer::CoarsenPatchStrategy *coarsen_strategy=((xfer::CoarsenPatchStrategy *) NULL), tbox::Pointer&lt; xfer::CoarsenTransactionFactory &gt; transaction_factory=tbox::Pointer&lt; xfer::CoarsenTransactionFactory &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkConsistency</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenAlgorithm.html</anchorfile>
      <anchor>a943a855d11e6498ea1d6cd8c3d98beb</anchor>
      <arglist>(tbox::Pointer&lt; xfer::CoarsenSchedule &gt; schedule) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenAlgorithm.html</anchorfile>
      <anchor>0583634048fa499b60bd9c596db30ade</anchor>
      <arglist>(tbox::Pointer&lt; xfer::CoarsenSchedule &gt; schedule) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenAlgorithm.html</anchorfile>
      <anchor>d51ebe87b844f25ab9b1ab8b68a52f40</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenAlgorithm.html</anchorfile>
      <anchor>30c0412ea540f55e968f1409550cfa82</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::CoarsenClasses</name>
    <filename>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</filename>
    <member kind="function">
      <type></type>
      <name>CoarsenClasses</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>30a913db42c7ed6842c5292fa8fbec48</anchor>
      <arglist>(bool fill_coarse_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoarsenClasses</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>f3914b0617d7568104904b67a6e7f363</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfEquivalenceClasses</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>6ff804700a4acf6e75d8b05a9d696314</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfCoarsenItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>f0b16be8687463dc1d628b2ac9160cd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const CoarsenClasses::Data &amp;</type>
      <name>getClassRepresentative</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>307825c6a4f1b1c3da621e9c50aa1c38</anchor>
      <arglist>(int equiv_class_index) const </arglist>
    </member>
    <member kind="function">
      <type>CoarsenClasses::Data &amp;</type>
      <name>getCoarsenItem</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>4105fe84d5706b64781102c586e2e158</anchor>
      <arglist>(const int coarsen_item_array_id)</arglist>
    </member>
    <member kind="function">
      <type>tbox::List&lt; int &gt;::Iterator</type>
      <name>getIterator</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>3f754057d92a8ff26edd8fb9ce781073</anchor>
      <arglist>(int equiv_class_index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertEquivalenceClassItem</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>f1608228eb366eb96e1196adfbfb8f59</anchor>
      <arglist>(CoarsenClasses::Data &amp;data, tbox::Pointer&lt; hier::PatchDescriptor &gt; descriptor=tbox::Pointer&lt; hier::PatchDescriptor &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>itemIsValid</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>955e5838b0292d77d760b828d19c61c5</anchor>
      <arglist>(const CoarsenClasses::Data &amp;data_item, tbox::Pointer&lt; hier::PatchDescriptor &gt; descriptor=tbox::Pointer&lt; hier::PatchDescriptor &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>classesMatch</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>afc942ed408839021ad690f9197b7829</anchor>
      <arglist>(tbox::Pointer&lt; CoarsenClasses &gt; test_classes, tbox::Pointer&lt; hier::PatchDescriptor &gt; descriptor=tbox::Pointer&lt; hier::PatchDescriptor &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>itemsAreEquivalent</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>b34e026ccf8f9507e8ed8d466a0f2f4d</anchor>
      <arglist>(const CoarsenClasses::Data &amp;data1, const CoarsenClasses::Data &amp;data2, tbox::Pointer&lt; hier::PatchDescriptor &gt; descriptor=tbox::Pointer&lt; hier::PatchDescriptor &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCoarsenItemArraySize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>a9d9a8369ba62afece160d130ad409cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>increaseCoarsenItemArraySize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>568e40f5d6c1cddc6a44cf9cda74ab20</anchor>
      <arglist>(const int size, const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>b1fcd2a1291e5e8bfbf53d670cdfc1b3</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printCoarsenItem</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>0b631b21de3eaa9b5a0883329d3a06d7</anchor>
      <arglist>(std::ostream &amp;stream, const CoarsenClasses::Data &amp;data) const </arglist>
    </member>
    <class kind="class">SAMRAI::xfer::CoarsenClasses::Data</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::CoarsenClasses::Data</name>
    <filename>classSAMRAI_1_1xfer_1_1CoarsenClasses_1_1Data.html</filename>
    <member kind="function">
      <type></type>
      <name>Data</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses_1_1Data.html</anchorfile>
      <anchor>6c4cd5c31d359991b138ee2fb422fe2b</anchor>
      <arglist>(tbox::Dimension dim)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_dst</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses_1_1Data.html</anchorfile>
      <anchor>9628697c4655ff49d3dd3c5b1957b6da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_src</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses_1_1Data.html</anchorfile>
      <anchor>2d0c0f3ac52193305a1982e95b2bfbe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>d_fine_bdry_reps_var</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses_1_1Data.html</anchorfile>
      <anchor>809ea76d167ab00339d0ede8491b82e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>hier::IntVector</type>
      <name>d_gcw_to_coarsen</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses_1_1Data.html</anchorfile>
      <anchor>e1cdca46323046141a08ca4e22ce750f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tbox::Pointer&lt; hier::CoarsenOperator &gt;</type>
      <name>d_opcoarsen</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses_1_1Data.html</anchorfile>
      <anchor>bd19cc0118d204b571fc4be60718d31b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_class_index</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses_1_1Data.html</anchorfile>
      <anchor>abf15897fb7bfe301693a197dfd841c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_tag</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses_1_1Data.html</anchorfile>
      <anchor>34cf29d3a4127f335caf6c5c7b80f513</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tbox::Pointer&lt; VariableFillPattern &gt;</type>
      <name>d_var_fill_pattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses_1_1Data.html</anchorfile>
      <anchor>7ee5e61cbeb70a839f1fce4c5c728f85</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::CoarsenCopyTransaction</name>
    <filename>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</filename>
    <base>SAMRAI::tbox::Transaction</base>
    <member kind="function">
      <type></type>
      <name>CoarsenCopyTransaction</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>e0be84165f2b6db594ac1715137ace22</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; &amp;dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; &amp;src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_mapped_box, const hier::Box &amp;src_mapped_box, int coarsen_item_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoarsenCopyTransaction</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>23c533b5f0a4123104674e76d38af9f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>25ae4a35f5054ef7e57932ec3c6fd1e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>4b8406d037022b9749c9be34f07fdbb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeOutgoingMessageSize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>9ccda2aec7e7a5860598475567e00d2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getSourceProcessor</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>28435d7a0ed0e54e207efa252f409efb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDestinationProcessor</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>df442107ab54dd51908ef49fafe5248f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>69ebae11f31837ae91416d8ce4f6f76a</anchor>
      <arglist>(tbox::MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>7b748191365b55460b79722119568cf1</anchor>
      <arglist>(tbox::MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copyLocalData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>29aebe1f25d3239fa902e4887bbe6447</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>be5d0936e91e3bd2fc9d0a9467758619</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setCoarsenItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>b9bcad89a89347330845556569fc5587</anchor>
      <arglist>(const CoarsenClasses::Data **coarsen_items, int num_coarsen_items)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unsetCoarsenItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>75e24188cb03fb29c0f8a023634026de</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::CoarsenPatchStrategy</name>
    <filename>classSAMRAI_1_1xfer_1_1CoarsenPatchStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>CoarsenPatchStrategy</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenPatchStrategy.html</anchorfile>
      <anchor>7f52b4dcb2544230705481c3f0389d71</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoarsenPatchStrategy</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenPatchStrategy.html</anchorfile>
      <anchor>e5772583cb67ec03be8e3d4eeeecbbc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual hier::IntVector</type>
      <name>getCoarsenOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenPatchStrategy.html</anchorfile>
      <anchor>50c94be067e77211d1c3b5c1e6c3b082</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>preprocessCoarsen</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenPatchStrategy.html</anchorfile>
      <anchor>0814ce9491959240638a20bd848a2350</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>postprocessCoarsen</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenPatchStrategy.html</anchorfile>
      <anchor>a2d42bd7e5e5b39581df0d5a15059a33</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio)=0</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenPatchStrategy.html</anchorfile>
      <anchor>65bb799b527cc3099d996eb38d6670ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static hier::IntVector</type>
      <name>getMaxCoarsenOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenPatchStrategy.html</anchorfile>
      <anchor>417e8f41e8404aa092a58d0b55890ad5</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::CoarsenSchedule</name>
    <filename>classSAMRAI_1_1xfer_1_1CoarsenSchedule.html</filename>
    <member kind="function">
      <type></type>
      <name>CoarsenSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenSchedule.html</anchorfile>
      <anchor>0f5245a0cef3ba9190aad5a3c538a51c</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; crse_level, tbox::Pointer&lt; hier::PatchLevel &gt; fine_level, const tbox::Pointer&lt; xfer::CoarsenClasses &gt; coarsen_classes, tbox::Pointer&lt; xfer::CoarsenTransactionFactory &gt; transaction_factory, xfer::CoarsenPatchStrategy *patch_strategy, bool fill_coarse_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoarsenSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenSchedule.html</anchorfile>
      <anchor>fe80b33470fe593c2ec6e939b695e65a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenSchedule.html</anchorfile>
      <anchor>9365b55752b7c22cc47acaeb467a132c</anchor>
      <arglist>(const tbox::Pointer&lt; xfer::CoarsenClasses &gt; coarsen_classes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsenData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenSchedule.html</anchorfile>
      <anchor>6e61b631122e7e47b7ac1e9b72b0b853</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; xfer::CoarsenClasses &gt; &amp;</type>
      <name>getEquivalenceClasses</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenSchedule.html</anchorfile>
      <anchor>2a649609bbdc838016283bc5a115f70f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenSchedule.html</anchorfile>
      <anchor>58d0def5caae18b43c9034a112f30d16</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setScheduleGenerationMethod</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenSchedule.html</anchorfile>
      <anchor>801c910bbc17365931c2df85ea249812</anchor>
      <arglist>(const std::string &amp;method)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::CoarsenTransactionFactory</name>
    <filename>classSAMRAI_1_1xfer_1_1CoarsenTransactionFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>CoarsenTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenTransactionFactory.html</anchorfile>
      <anchor>16ed48b2d12f3ec333f658b26e52a92c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoarsenTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenTransactionFactory.html</anchorfile>
      <anchor>da777bf05b21a07064ad6131ab231820</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setCoarsenItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenTransactionFactory.html</anchorfile>
      <anchor>d6a506365d7637be85a581a8d56ca086</anchor>
      <arglist>(const CoarsenClasses::Data **coarsen_items, int num_coarsen_items)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unsetCoarsenItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenTransactionFactory.html</anchorfile>
      <anchor>fe975418b483051df4ae3e9d487f7747</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tbox::Pointer&lt; tbox::Transaction &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenTransactionFactory.html</anchorfile>
      <anchor>a88f959960ec20cf15e95bcddf1a1e39</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_mapped_box, const hier::Box &amp;src_mapped_box, int citem_id) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::PatchInteriorVariableFillPattern</name>
    <filename>classSAMRAI_1_1xfer_1_1PatchInteriorVariableFillPattern.html</filename>
    <base>SAMRAI::xfer::VariableFillPattern</base>
    <member kind="function">
      <type></type>
      <name>PatchInteriorVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchInteriorVariableFillPattern.html</anchorfile>
      <anchor>6cace6e9645f43830f7002697dd5eecd</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchInteriorVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchInteriorVariableFillPattern.html</anchorfile>
      <anchor>0516620d0c3d890633172a15e92b7493</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchInteriorVariableFillPattern.html</anchorfile>
      <anchor>0daca5076e28abad1bd91bd79261d9a5</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;dst_patch_box, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>computeFillBoxesOverlap</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchInteriorVariableFillPattern.html</anchorfile>
      <anchor>c5e740fa689d89a44195a6bca9d55e9c</anchor>
      <arglist>(const hier::BoxContainer &amp;fill_boxes, const hier::Box &amp;patch_box, const hier::Box &amp;data_box, const hier::PatchDataFactory &amp;pdf) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchInteriorVariableFillPattern.html</anchorfile>
      <anchor>f4423841f40f704ced46a19aa2f081a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getPatternName</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchInteriorVariableFillPattern.html</anchorfile>
      <anchor>657fe1b1b9a20415bb7343223b568c8c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::PatchLevelBorderAndInteriorFillPattern</name>
    <filename>classSAMRAI_1_1xfer_1_1PatchLevelBorderAndInteriorFillPattern.html</filename>
    <base>SAMRAI::xfer::PatchLevelFillPattern</base>
    <member kind="function">
      <type></type>
      <name>PatchLevelBorderAndInteriorFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderAndInteriorFillPattern.html</anchorfile>
      <anchor>b14bcf21f688cf1ddeab299c60405ce6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchLevelBorderAndInteriorFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderAndInteriorFillPattern.html</anchorfile>
      <anchor>dd54bdd1fb0d315db72a376d3c20af37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeFillBoxesAndNeighborhoodSets</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderAndInteriorFillPattern.html</anchorfile>
      <anchor>b7b4dc4acea795be663cb9def8a30890</anchor>
      <arglist>(hier::BoxLevel &amp;fill_mapped_boxes, hier::Connector &amp;dst_to_fill, const hier::BoxLevel &amp;dst_mapped_box_level, const hier::Connector &amp;dst_to_dst, const hier::Connector &amp;dst_to_src, const hier::Connector &amp;src_to_dst, const hier::IntVector &amp;fill_ghost_width)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsToCommunicateDestinationFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderAndInteriorFillPattern.html</anchorfile>
      <anchor>f89f1e826f7766c589981e313deeb209</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doesSourceLevelCommunicateToDestination</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderAndInteriorFillPattern.html</anchorfile>
      <anchor>e7d9880f4839d17d7723f0c0adc8a044</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderAndInteriorFillPattern.html</anchorfile>
      <anchor>71bc0c285a04bbadb7c65c1cefd136f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fillingCoarseFineGhosts</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderAndInteriorFillPattern.html</anchorfile>
      <anchor>600793230c9ace17ebfd35a4ca6232d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fillingEnhancedConnectivityOnly</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderAndInteriorFillPattern.html</anchorfile>
      <anchor>ac0aefa96478e8cc117281e9ce30be91</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::PatchLevelBorderFillPattern</name>
    <filename>classSAMRAI_1_1xfer_1_1PatchLevelBorderFillPattern.html</filename>
    <base>SAMRAI::xfer::PatchLevelFillPattern</base>
    <member kind="function">
      <type></type>
      <name>PatchLevelBorderFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderFillPattern.html</anchorfile>
      <anchor>05c7a062df4683cc269781aa88ec367b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchLevelBorderFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderFillPattern.html</anchorfile>
      <anchor>2e584241682d33725f48747e3d631b78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeFillBoxesAndNeighborhoodSets</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderFillPattern.html</anchorfile>
      <anchor>bf8dba4c851e3bc95f862b73fe4cb190</anchor>
      <arglist>(hier::BoxLevel &amp;fill_mapped_boxes, hier::Connector &amp;dst_to_fill, const hier::BoxLevel &amp;dst_mapped_box_level, const hier::Connector &amp;dst_to_dst, const hier::Connector &amp;dst_to_src, const hier::Connector &amp;src_to_dst, const hier::IntVector &amp;fill_ghost_width)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsToCommunicateDestinationFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderFillPattern.html</anchorfile>
      <anchor>84b49109e3387d95df918825779e632b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doesSourceLevelCommunicateToDestination</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderFillPattern.html</anchorfile>
      <anchor>be9084d8cf1fd7641618129dc2769250</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderFillPattern.html</anchorfile>
      <anchor>fc9889b561eca345edaa5f1507b7a6d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fillingCoarseFineGhosts</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderFillPattern.html</anchorfile>
      <anchor>5ea16fc8dc34fe4f534ab146ea17005d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fillingEnhancedConnectivityOnly</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderFillPattern.html</anchorfile>
      <anchor>c0c1d99f8899a7db22bdafd3c2fe3190</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::PatchLevelEnhancedFillPattern</name>
    <filename>classSAMRAI_1_1xfer_1_1PatchLevelEnhancedFillPattern.html</filename>
    <base>SAMRAI::xfer::PatchLevelFillPattern</base>
    <member kind="function">
      <type></type>
      <name>PatchLevelEnhancedFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelEnhancedFillPattern.html</anchorfile>
      <anchor>42a54939bd2078c22be4a0c378bcaa8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchLevelEnhancedFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelEnhancedFillPattern.html</anchorfile>
      <anchor>b89ed166ff84ab780adc0bcc97af7682</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeFillBoxesAndNeighborhoodSets</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelEnhancedFillPattern.html</anchorfile>
      <anchor>e48277ca5772b9af251083fcd3723100</anchor>
      <arglist>(hier::BoxLevel &amp;fill_mapped_boxes, hier::Connector &amp;dst_to_fill, const hier::BoxLevel &amp;dst_mapped_box_level, const hier::Connector &amp;dst_to_dst, const hier::Connector &amp;dst_to_src, const hier::Connector &amp;src_to_dst, const hier::IntVector &amp;fill_ghost_width)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsToCommunicateDestinationFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelEnhancedFillPattern.html</anchorfile>
      <anchor>bf91d9e2af5934a168685521bbb0e0dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doesSourceLevelCommunicateToDestination</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelEnhancedFillPattern.html</anchorfile>
      <anchor>caf40097b24d517d02d140dfd00ceb22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelEnhancedFillPattern.html</anchorfile>
      <anchor>6de03ad467206ecc3059e0771efebf61</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fillingCoarseFineGhosts</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelEnhancedFillPattern.html</anchorfile>
      <anchor>5ca572c28f071498b11105bacb2bc738</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fillingEnhancedConnectivityOnly</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelEnhancedFillPattern.html</anchorfile>
      <anchor>cc334b708f3d641cb257b9076e1ab9cd</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::PatchLevelFillPattern</name>
    <filename>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; hier::Box &gt;</type>
      <name>BoxVector</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</anchorfile>
      <anchor>3df9a51583817797fa224dcfee2fb003</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hier::NeighborhoodSet</type>
      <name>FillSet</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</anchorfile>
      <anchor>e06e4180fdddd92521b6f91fbe032428</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PatchLevelFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</anchorfile>
      <anchor>654b5f717d55d6bac9c6088e401d3190</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchLevelFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</anchorfile>
      <anchor>f96fefc4290c45ae6a3dcc88f2e87334</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>computeFillBoxesAndNeighborhoodSets</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</anchorfile>
      <anchor>13db97cb834837a51a80c93e6cc1d8ee</anchor>
      <arglist>(hier::BoxLevel &amp;fill_mapped_boxes, hier::Connector &amp;dst_to_fill, const hier::BoxLevel &amp;dst_mapped_box_level, const hier::Connector &amp;dst_to_dst, const hier::Connector &amp;dst_to_src, const hier::Connector &amp;src_to_dst, const hier::IntVector &amp;fill_ghost_width)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>needsToCommunicateDestinationFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</anchorfile>
      <anchor>25c69f091a221ea90cc044b557f23552</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeDestinationFillBoxesOnSourceProc</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</anchorfile>
      <anchor>120297eee24ddc9729d0ae13077cbd87</anchor>
      <arglist>(FillSet &amp;dst_fill_boxes_on_src_proc, const hier::BoxLevel &amp;dst_mapped_box_level, const hier::Connector &amp;src_to_dst, const hier::IntVector &amp;fill_ghost_width)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>doesSourceLevelCommunicateToDestination</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</anchorfile>
      <anchor>553200893e48c553ce9a848f41f8c69d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getMaxFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</anchorfile>
      <anchor>2bd1d013f9fd6788899e80faecda44c8</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>fillingCoarseFineGhosts</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</anchorfile>
      <anchor>0ed70f3a014fdb65ef2c916f21e327a2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>fillingEnhancedConnectivityOnly</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</anchorfile>
      <anchor>8abc22611ede5c8a769019dc68a169d0</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::PatchLevelFullFillPattern</name>
    <filename>classSAMRAI_1_1xfer_1_1PatchLevelFullFillPattern.html</filename>
    <base>SAMRAI::xfer::PatchLevelFillPattern</base>
    <member kind="function">
      <type></type>
      <name>PatchLevelFullFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFullFillPattern.html</anchorfile>
      <anchor>1383f3b8caf5481e100ce3e2272677f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchLevelFullFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFullFillPattern.html</anchorfile>
      <anchor>d40a3c8a10b1f2f2ee2532bbcab82793</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeFillBoxesAndNeighborhoodSets</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFullFillPattern.html</anchorfile>
      <anchor>cafed21c203c8e896a71a66df9cc1431</anchor>
      <arglist>(hier::BoxLevel &amp;fill_mapped_boxes, hier::Connector &amp;dst_to_fill, const hier::BoxLevel &amp;dst_mapped_box_level, const hier::Connector &amp;dst_to_dst, const hier::Connector &amp;dst_to_src, const hier::Connector &amp;src_to_dst, const hier::IntVector &amp;fill_ghost_width)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsToCommunicateDestinationFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFullFillPattern.html</anchorfile>
      <anchor>527dd472234be1c28888cc1ce63a21c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeDestinationFillBoxesOnSourceProc</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFullFillPattern.html</anchorfile>
      <anchor>c471fb45be6ff491392deae9d9247013</anchor>
      <arglist>(FillSet &amp;dst_fill_boxes_on_src_proc, const hier::BoxLevel &amp;dst_mapped_box_level, const hier::Connector &amp;src_to_dst, const hier::IntVector &amp;fill_ghost_width)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doesSourceLevelCommunicateToDestination</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFullFillPattern.html</anchorfile>
      <anchor>67712e7661d9751b1b9cb71b5ba169da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFullFillPattern.html</anchorfile>
      <anchor>d722548e59d1fb106070967fb4eb8634</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fillingCoarseFineGhosts</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFullFillPattern.html</anchorfile>
      <anchor>0443dc1d38a40e38585e7466e02145e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fillingEnhancedConnectivityOnly</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFullFillPattern.html</anchorfile>
      <anchor>54eef0271a76d9cbdfab201de9fe4504</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::PatchLevelInteriorFillPattern</name>
    <filename>classSAMRAI_1_1xfer_1_1PatchLevelInteriorFillPattern.html</filename>
    <base>SAMRAI::xfer::PatchLevelFillPattern</base>
    <member kind="function">
      <type></type>
      <name>PatchLevelInteriorFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelInteriorFillPattern.html</anchorfile>
      <anchor>e2f3e82f9968eb54833714a03801ca27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchLevelInteriorFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelInteriorFillPattern.html</anchorfile>
      <anchor>a8ec210131516ecd451c96a435a22527</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeFillBoxesAndNeighborhoodSets</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelInteriorFillPattern.html</anchorfile>
      <anchor>8700a4519a948362f6be31af020c58a2</anchor>
      <arglist>(hier::BoxLevel &amp;fill_mapped_boxes, hier::Connector &amp;dst_to_fill, const hier::BoxLevel &amp;dst_mapped_box_level, const hier::Connector &amp;dst_to_dst, const hier::Connector &amp;dst_to_src, const hier::Connector &amp;src_to_dst, const hier::IntVector &amp;fill_ghost_width)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsToCommunicateDestinationFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelInteriorFillPattern.html</anchorfile>
      <anchor>e5f9a268dfe19126aa7bced8c3026dea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeDestinationFillBoxesOnSourceProc</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelInteriorFillPattern.html</anchorfile>
      <anchor>1c7a1dcdea7a599fee9dd5e99a18cfc7</anchor>
      <arglist>(FillSet &amp;dst_fill_boxes_on_src_proc, const hier::BoxLevel &amp;dst_mapped_box_level, const hier::Connector &amp;src_to_dst, const hier::IntVector &amp;fill_ghost_width)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doesSourceLevelCommunicateToDestination</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelInteriorFillPattern.html</anchorfile>
      <anchor>6dc4a14832d41cc1a44a84973de2e79d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelInteriorFillPattern.html</anchorfile>
      <anchor>e8e028dfe07c9594fbe4b6c1e8ece54d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fillingCoarseFineGhosts</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelInteriorFillPattern.html</anchorfile>
      <anchor>28a8c2a6739ea3071229a77d65c13ef3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fillingEnhancedConnectivityOnly</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelInteriorFillPattern.html</anchorfile>
      <anchor>9f9c127d014803edbdd94535353a2b2f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::RefineAlgorithm</name>
    <filename>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</filename>
    <member kind="function">
      <type></type>
      <name>RefineAlgorithm</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>bce03a4293e78fea11276b9d579d7631</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RefineAlgorithm</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>0db5776c5e06ca803470563c5bd39368</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerRefine</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>d5ddd7c66c1c63bd3747d5850cdcd9e9</anchor>
      <arglist>(const int dst, const int src, const int scratch, tbox::Pointer&lt; hier::RefineOperator &gt; oprefine, tbox::Pointer&lt; VariableFillPattern &gt; var_fill_pattern=(tbox::Pointer&lt; BoxGeometryVariableFillPattern &gt;) NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerRefine</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>737dd4b085e80c6430ae8c9879f28be3</anchor>
      <arglist>(const int dst, const int src, const int src_told, const int src_tnew, const int scratch, tbox::Pointer&lt; hier::RefineOperator &gt; oprefine, tbox::Pointer&lt; hier::TimeInterpolateOperator &gt; optime, tbox::Pointer&lt; VariableFillPattern &gt; var_fill_pattern=(tbox::Pointer&lt; BoxGeometryVariableFillPattern &gt;) NULL)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; xfer::RefineSchedule &gt;</type>
      <name>createSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>d93735084a5e4c89f3c8e428e74f263d</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; level, RefinePatchStrategy *patch_strategy=((RefinePatchStrategy *) NULL), tbox::Pointer&lt; xfer::RefineTransactionFactory &gt; transaction_factory=tbox::Pointer&lt; xfer::RefineTransactionFactory &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; xfer::RefineSchedule &gt;</type>
      <name>createSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>73e4c931167c8ddac2cba1d6d1d2003a</anchor>
      <arglist>(tbox::Pointer&lt; PatchLevelFillPattern &gt; fill_pattern, tbox::Pointer&lt; hier::PatchLevel &gt; level, RefinePatchStrategy *patch_strategy=((RefinePatchStrategy *) NULL), tbox::Pointer&lt; xfer::RefineTransactionFactory &gt; transaction_factory=tbox::Pointer&lt; xfer::RefineTransactionFactory &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; xfer::RefineSchedule &gt;</type>
      <name>createSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>37d374628fb6243c02389d932871059d</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, xfer::RefinePatchStrategy *patch_strategy=((xfer::RefinePatchStrategy *) NULL), bool use_time_interpolation=false, tbox::Pointer&lt; xfer::RefineTransactionFactory &gt; transaction_factory=tbox::Pointer&lt; xfer::RefineTransactionFactory &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; xfer::RefineSchedule &gt;</type>
      <name>createSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>af269eab663a90ea4e8c09506d31c559</anchor>
      <arglist>(tbox::Pointer&lt; PatchLevelFillPattern &gt; fill_pattern, tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, xfer::RefinePatchStrategy *patch_strategy=((xfer::RefinePatchStrategy *) NULL), bool use_time_interpolation=false, tbox::Pointer&lt; xfer::RefineTransactionFactory &gt; transaction_factory=tbox::Pointer&lt; xfer::RefineTransactionFactory &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; xfer::RefineSchedule &gt;</type>
      <name>createSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>43f962ea2c4c432063d63ed19e6040ae</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; level, const int next_coarser_level, tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, xfer::RefinePatchStrategy *patch_strategy=((xfer::RefinePatchStrategy *) NULL), bool use_time_interpolation=false, tbox::Pointer&lt; xfer::RefineTransactionFactory &gt; transaction_factory=tbox::Pointer&lt; xfer::RefineTransactionFactory &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; xfer::RefineSchedule &gt;</type>
      <name>createSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>fd433a08a1d83554d7035de7003224b2</anchor>
      <arglist>(tbox::Pointer&lt; PatchLevelFillPattern &gt; fill_pattern, tbox::Pointer&lt; hier::PatchLevel &gt; level, const int next_coarser_level, tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, xfer::RefinePatchStrategy *patch_strategy=((xfer::RefinePatchStrategy *) NULL), bool use_time_interpolation=false, tbox::Pointer&lt; xfer::RefineTransactionFactory &gt; transaction_factory=tbox::Pointer&lt; xfer::RefineTransactionFactory &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; xfer::RefineSchedule &gt;</type>
      <name>createSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>b1b2092fc7be89683a29435c27b11eab</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, const int next_coarser_level, tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, xfer::RefinePatchStrategy *patch_strategy=((xfer::RefinePatchStrategy *) NULL), bool use_time_interpolation=false, tbox::Pointer&lt; xfer::RefineTransactionFactory &gt; transaction_factory=tbox::Pointer&lt; xfer::RefineTransactionFactory &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; xfer::RefineSchedule &gt;</type>
      <name>createSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>f082839ee547a7629d4950bae88f07d8</anchor>
      <arglist>(tbox::Pointer&lt; PatchLevelFillPattern &gt; fill_pattern, tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, const int next_coarser_level, tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, xfer::RefinePatchStrategy *patch_strategy=((xfer::RefinePatchStrategy *) NULL), bool use_time_interpolation=false, tbox::Pointer&lt; xfer::RefineTransactionFactory &gt; transaction_factory=tbox::Pointer&lt; xfer::RefineTransactionFactory &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkConsistency</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>a54fbcaf84ed518c929ba6348c4a5d34</anchor>
      <arglist>(tbox::Pointer&lt; xfer::RefineSchedule &gt; schedule) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>96a4ac2a59b4552b902d69e4ceb4b6d0</anchor>
      <arglist>(tbox::Pointer&lt; xfer::RefineSchedule &gt; schedule) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; RefineClasses &gt; &amp;</type>
      <name>getEquivalenceClasses</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>d840d18d23271172731286b3837092d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEquivalenceClasses</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>d974726e43c6dd58241d07497a153861</anchor>
      <arglist>(const tbox::Pointer&lt; RefineClasses &gt; refine_classes)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>4b18d4b99d0a7cdbff613b93fc84875b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>d514085e1f666fa009afff5ab763d8ed</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::RefineClasses</name>
    <filename>classSAMRAI_1_1xfer_1_1RefineClasses.html</filename>
    <member kind="function">
      <type></type>
      <name>RefineClasses</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>35db838902698408316c9bcbafd01a88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RefineClasses</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>81478da7037ebf7404a447526160e481</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfEquivalenceClasses</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>4ff356435219d2325c4f82e87c7215bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfRefineItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>3cad2181a79eb78f6b6cc5b8ea8ff7b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RefineClasses::Data &amp;</type>
      <name>getClassRepresentative</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>a8325c1eff7dcefa8508f32df95c9f2a</anchor>
      <arglist>(int equiv_class_index) const </arglist>
    </member>
    <member kind="function">
      <type>RefineClasses::Data &amp;</type>
      <name>getRefineItem</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>49b76dcdeda5249146720d77830bd0bf</anchor>
      <arglist>(const int refine_item_array_id)</arglist>
    </member>
    <member kind="function">
      <type>tbox::List&lt; int &gt;::Iterator</type>
      <name>getIterator</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>226647fb185303e955592b18ebbfb371</anchor>
      <arglist>(int equiv_class_index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertEquivalenceClassItem</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>225afbaed4313067092fb49b346cee05</anchor>
      <arglist>(RefineClasses::Data &amp;data_item, tbox::Pointer&lt; hier::PatchDescriptor &gt; descriptor=tbox::Pointer&lt; hier::PatchDescriptor &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>itemIsValid</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>4d577a77368c9da98d7543d2fbfe5d48</anchor>
      <arglist>(const RefineClasses::Data &amp;data_item, tbox::Pointer&lt; hier::PatchDescriptor &gt; descriptor=tbox::Pointer&lt; hier::PatchDescriptor &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>classesMatch</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>3155281a67aaa15989995959050e2d26</anchor>
      <arglist>(tbox::Pointer&lt; RefineClasses &gt; test_classes, tbox::Pointer&lt; hier::PatchDescriptor &gt; descriptor=tbox::Pointer&lt; hier::PatchDescriptor &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>itemsAreEquivalent</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>55208924f2cf4c2cf6b60f11e5455557</anchor>
      <arglist>(const RefineClasses::Data &amp;data1, const RefineClasses::Data &amp;data2, tbox::Pointer&lt; hier::PatchDescriptor &gt; descriptor=tbox::Pointer&lt; hier::PatchDescriptor &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRefineItemArraySize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>3eab472fa687c683509770be9a668016</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>increaseRefineItemArraySize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>025472e000a6b51f9ac7b467f74c3e43</anchor>
      <arglist>(const int size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>1edbeec5de49501abd87bd1bf203c99d</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printRefineItem</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>a5957953ab37e3b65d9b69b3a7b8b190</anchor>
      <arglist>(std::ostream &amp;stream, const RefineClasses::Data &amp;data) const </arglist>
    </member>
    <class kind="struct">SAMRAI::xfer::RefineClasses::Data</class>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::xfer::RefineClasses::Data</name>
    <filename>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>d_dst</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>52c129d5888e17c3c8a8227ec4bdde7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_src</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>5397911b46500b6090e80229b6a67ec3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_src_told</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>938191c12f47d4cdbfdbed777d7d41c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_src_tnew</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>da50986466495a4fb0f68a18427618d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_scratch</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>ff364bd9e3a8e67099a7af1af8a5494d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>d_fine_bdry_reps_var</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>d83584793e8e5ce1be0eb793ee760692</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>d_time_interpolate</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>3fc48f87d8e93cf9ac9f4bc7f140d321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tbox::Pointer&lt; hier::RefineOperator &gt;</type>
      <name>d_oprefine</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>163653beab786dd0b36315c9785bdee2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tbox::Pointer&lt; hier::TimeInterpolateOperator &gt;</type>
      <name>d_optime</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>ff3a7842d862398a038fe4f710dafbc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_class_index</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>7f6d4e6fb6498adb18e1adbec8cad6a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_tag</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>dc2c173bf19be552bc2af9fbe2567223</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tbox::Pointer&lt; VariableFillPattern &gt;</type>
      <name>d_var_fill_pattern</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>d99495fa8c51ec5801482c23af1135c7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::RefineCopyTransaction</name>
    <filename>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</filename>
    <base>SAMRAI::tbox::Transaction</base>
    <member kind="function">
      <type></type>
      <name>RefineCopyTransaction</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>93601bd70b5982bb5d41f4b33f20537d</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; &amp;dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; &amp;src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_mapped_box, const hier::Box &amp;src_mapped_box, int refine_item_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RefineCopyTransaction</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>da5d31f79ad3f28e0dab17a570e71179</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>3e8ceeb33f6d1a8b2bbbe10441d3ec35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>25c27122b06172245ce18ddf04e85adb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeOutgoingMessageSize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>b6983a99851f0b15721cd2e6d1296dc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getSourceProcessor</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>5ad657b8f2f554c17798120b5c3cb806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDestinationProcessor</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>c2c613e319ff295dbb5daf1255fa5e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>8dfe176d047f4648a9d9474a16a1c343</anchor>
      <arglist>(tbox::MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>0dce7b7c04a63ad67d0807e2df331702</anchor>
      <arglist>(tbox::MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copyLocalData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>ac681da5ec650223777a52696707d5c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>22850843df4ac545796516592308cfb8</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setRefineItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>619d9f5f70c3098d4e9659010a43441f</anchor>
      <arglist>(const RefineClasses::Data **refine_items, int num_refine_items)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unsetRefineItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>4eec4a06f3987954365d151e5ba697be</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::RefinePatchStrategy</name>
    <filename>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>RefinePatchStrategy</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</anchorfile>
      <anchor>9cc4acc5afdd599bf8c576a676217621</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RefinePatchStrategy</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</anchorfile>
      <anchor>be8a4aae18b924cc8a3fc3f73b739514</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPhysicalBoundaryConditions</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</anchorfile>
      <anchor>428a5d166ab97a9ce9c8344685817b26</anchor>
      <arglist>(hier::Patch &amp;patch, const double fill_time, const hier::IntVector &amp;ghost_width_to_fill)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillSingularityBoundaryConditions</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</anchorfile>
      <anchor>97d1dd43daecbe6dc89b91a1ff3ff0fc</anchor>
      <arglist>(hier::Patch &amp;patch, const hier::PatchLevel &amp;encon_level, const hier::Connector &amp;dst_to_encon, const double fill_time, const hier::Box &amp;fill_box, const hier::BoundaryBox &amp;boundary_box, const tbox::Pointer&lt; hier::GridGeometry &gt; &amp;grid_geometry)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual hier::IntVector</type>
      <name>getRefineOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</anchorfile>
      <anchor>ac3c39692c90393a6748ea7a4f52facd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>preprocessRefine</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</anchorfile>
      <anchor>c5d1588459650fb4ff5f7c5dd66ece46</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>postprocessRefine</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</anchorfile>
      <anchor>bd5a91534d2cd570b23e679555e4cf27</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preprocessRefineBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</anchorfile>
      <anchor>b88f67c936558a3a3718d9e59ed3bdd1</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::BoxContainer &amp;fine_boxes, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessRefineBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</anchorfile>
      <anchor>bd5a5c38eb2dde4ab5970c470f5cc5e0</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::BoxContainer &amp;fine_boxes, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</anchorfile>
      <anchor>f25f980c5219cf7a66f656b6884eb458</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static hier::IntVector</type>
      <name>getMaxRefineOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</anchorfile>
      <anchor>23e8f9fc9761bb80a39d603e7615c5cf</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::RefineSchedule</name>
    <filename>classSAMRAI_1_1xfer_1_1RefineSchedule.html</filename>
    <member kind="function">
      <type></type>
      <name>RefineSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>2431316498c0538a74d655aeba6d2ae6</anchor>
      <arglist>(tbox::Pointer&lt; PatchLevelFillPattern &gt; dst_level_fill_pattern, tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, const tbox::Pointer&lt; xfer::RefineClasses &gt; refine_classes, tbox::Pointer&lt; xfer::RefineTransactionFactory &gt; transaction_factory, xfer::RefinePatchStrategy *patch_strategy, bool use_time_interpolation=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RefineSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>0b710490c3b40b7a6f54a8e99a2e2187</anchor>
      <arglist>(tbox::Pointer&lt; PatchLevelFillPattern &gt; dst_level_fill_pattern, tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, int next_coarser_level, tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const tbox::Pointer&lt; xfer::RefineClasses &gt; refine_classes, tbox::Pointer&lt; xfer::RefineTransactionFactory &gt; transaction_factory, xfer::RefinePatchStrategy *patch_strategy, bool use_time_refinement=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RefineSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>465d53161d0a9d980e101608b249a85a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>09faab237bce78503dbbf3859d0005a0</anchor>
      <arglist>(const tbox::Pointer&lt; xfer::RefineClasses &gt; refine_classes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>ec39a395f97618b72f4619862200468e</anchor>
      <arglist>(double fill_time, bool do_physical_boundary_fill=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeSourceVector</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>296a29173a38575530b9c883b9daf81d</anchor>
      <arglist>(hier::ComponentSelector &amp;allocate_vector) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocateDestinationSpace</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>dd9437273946f62c20e67b7e32d05ab8</anchor>
      <arglist>(hier::ComponentSelector &amp;allocate_vector, double fill_time) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocateScratchSpace</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>4fba09b579ee1f147d38fa2ee72ed69a</anchor>
      <arglist>(hier::ComponentSelector &amp;allocate_vector, tbox::Pointer&lt; hier::PatchLevel &gt; level, double fill_time) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeDestinationVector</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>793fdd35bda77d1853c29c99b1c7ed93</anchor>
      <arglist>(hier::ComponentSelector &amp;allocate_vector) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; RefineClasses &gt; &amp;</type>
      <name>getEquivalenceClasses</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>a6c99587b2a052ed1a46864b880a543e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getBoundaryFillGhostWidth</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>57ca55727603b29357ba2604a19ba141</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>f8136eefa94cfed83af03bae74cc0630</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::RefineScheduleConnectorWidthRequestor</name>
    <filename>classSAMRAI_1_1xfer_1_1RefineScheduleConnectorWidthRequestor.html</filename>
    <base>SAMRAI::hier::PatchHierarchy::ConnectorWidthRequestorStrategy</base>
    <member kind="function">
      <type></type>
      <name>RefineScheduleConnectorWidthRequestor</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineScheduleConnectorWidthRequestor.html</anchorfile>
      <anchor>c993c412762d987a0cb0c979895c5b3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeRequiredConnectorWidths</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineScheduleConnectorWidthRequestor.html</anchorfile>
      <anchor>cf60459fd88bd1f9a4128e8cf3552818</anchor>
      <arglist>(std::vector&lt; hier::IntVector &gt; &amp;self_connector_widths, std::vector&lt; hier::IntVector &gt; &amp;fine_connector_widths, const hier::PatchHierarchy &amp;patch_hierarchy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGhostCellWidthFactor</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineScheduleConnectorWidthRequestor.html</anchorfile>
      <anchor>d40fb87b34cec9ea6441c6a472437d5e</anchor>
      <arglist>(int factor)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::RefineTimeTransaction</name>
    <filename>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</filename>
    <base>SAMRAI::tbox::Transaction</base>
    <member kind="function">
      <type></type>
      <name>RefineTimeTransaction</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>e071daf778ad9a0b56bdc9af441777f9</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; &amp;dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; &amp;src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_mapped_box, const hier::Box &amp;src_mapped_box, const hier::Box &amp;box, int refine_item_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RefineTimeTransaction</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>bf7e5deffbd919acca7b486aad96c5ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>47cf41b83b557f529653839730fb2b11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>61d05fb0b9d32dde1fa4acb7eb6b84ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeOutgoingMessageSize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>614653e7cbfa6cb538f19592b6142b20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getSourceProcessor</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>f2389637fb88560955b268dbfc504d4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDestinationProcessor</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>a63e5e96a692d576470875b238ecb535</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>d5268d6e1d97f121edf98f8c4e13e528</anchor>
      <arglist>(tbox::MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>b3d45d1e8577d4254f79e157a858e410</anchor>
      <arglist>(tbox::MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copyLocalData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>078847890669c9df682c23d4680cf310</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>a6da3f2fe4df6064ff2046a06ef0115f</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setRefineItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>e4f4d323c443c722428e8bba61f4e53b</anchor>
      <arglist>(const RefineClasses::Data **refine_items, int num_refine_items)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unsetRefineItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>0e974515bab01f75152dba310a38acb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setTransactionTime</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>a6dbd0e4a2cc3d50bb5051bc4582ae84</anchor>
      <arglist>(const double time)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::RefineTransactionFactory</name>
    <filename>classSAMRAI_1_1xfer_1_1RefineTransactionFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>RefineTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTransactionFactory.html</anchorfile>
      <anchor>29d7b8e2a82d09eafb2868be8ffa6128</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RefineTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTransactionFactory.html</anchorfile>
      <anchor>e60558af904bb441a7723954281231cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setRefineItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTransactionFactory.html</anchorfile>
      <anchor>b4ddb3c8cda1471b0d84b4a826b20be7</anchor>
      <arglist>(const RefineClasses::Data **refine_items, int num_refine_items)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unsetRefineItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTransactionFactory.html</anchorfile>
      <anchor>ef4a8b855273d3e3663b86dd5e6a4fdc</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tbox::Pointer&lt; tbox::Transaction &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTransactionFactory.html</anchorfile>
      <anchor>50698123f8cb037c04f90154111b3968</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_mapped_box, const hier::Box &amp;src_mapped_box, int ritem_id, const hier::Box &amp;box, bool use_time_interpolation=false) const =0</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; tbox::Transaction &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTransactionFactory.html</anchorfile>
      <anchor>4c2da6314831a04f0512c62c83335fb4</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_mapped_box, const hier::Box &amp;src_mapped_box, int ritem_id) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTransactionTime</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTransactionFactory.html</anchorfile>
      <anchor>2066bac464d225da0879909b2a06d7a9</anchor>
      <arglist>(double fill_time)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preprocessScratchSpace</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTransactionFactory.html</anchorfile>
      <anchor>8b94ab1863e0b935668930db35903f6d</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; level, double fill_time, const hier::ComponentSelector &amp;preprocess_vector) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::StandardCoarsenTransactionFactory</name>
    <filename>classSAMRAI_1_1xfer_1_1StandardCoarsenTransactionFactory.html</filename>
    <base>SAMRAI::xfer::CoarsenTransactionFactory</base>
    <member kind="function">
      <type></type>
      <name>StandardCoarsenTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1StandardCoarsenTransactionFactory.html</anchorfile>
      <anchor>f561dc902ad07f213e0730d760ffef78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StandardCoarsenTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1StandardCoarsenTransactionFactory.html</anchorfile>
      <anchor>07ff3fdd4bbf1860f487abbf7d66972b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoarsenItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1StandardCoarsenTransactionFactory.html</anchorfile>
      <anchor>ea0d1732c172491728f06f160a54cb94</anchor>
      <arglist>(const CoarsenClasses::Data **coarsen_items, int num_coarsen_items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsetCoarsenItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1StandardCoarsenTransactionFactory.html</anchorfile>
      <anchor>e119b70d53bc5ef53452cf4c11277047</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; tbox::Transaction &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1StandardCoarsenTransactionFactory.html</anchorfile>
      <anchor>22b056feffbff67263d4a81eddb26abc</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_mapped_box, const hier::Box &amp;src_mapped_box, int citem_id) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::StandardRefineTransactionFactory</name>
    <filename>classSAMRAI_1_1xfer_1_1StandardRefineTransactionFactory.html</filename>
    <base>SAMRAI::xfer::RefineTransactionFactory</base>
    <member kind="function">
      <type></type>
      <name>StandardRefineTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1StandardRefineTransactionFactory.html</anchorfile>
      <anchor>3bf6d645069ba09fddc9dfc91becbf6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StandardRefineTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1StandardRefineTransactionFactory.html</anchorfile>
      <anchor>cd6efdb1dd0eabded4f716d7c4d8506c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRefineItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1StandardRefineTransactionFactory.html</anchorfile>
      <anchor>a2c9a869db8437e1cc9b9e22df9958f7</anchor>
      <arglist>(const RefineClasses::Data **refine_items, int num_refine_items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsetRefineItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1StandardRefineTransactionFactory.html</anchorfile>
      <anchor>995531470d20c927ae3fa82125238211</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransactionTime</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1StandardRefineTransactionFactory.html</anchorfile>
      <anchor>ccc88a0cab8bf6b153d8fe0e57d8b21f</anchor>
      <arglist>(double fill_time)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; tbox::Transaction &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1StandardRefineTransactionFactory.html</anchorfile>
      <anchor>7f83a20951625d2cdecd38eb2c6497b7</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_mapped_box, const hier::Box &amp;src_mapped_box, int ritem_id, const hier::Box &amp;box, bool use_time_interpolation=false) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::VariableFillPattern</name>
    <filename>classSAMRAI_1_1xfer_1_1VariableFillPattern.html</filename>
    <member kind="function">
      <type></type>
      <name>VariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1VariableFillPattern.html</anchorfile>
      <anchor>07cc84c31e4b226dbd931f765c75bf65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1VariableFillPattern.html</anchorfile>
      <anchor>a65d6ed9e0e201f67e9e8dc7ca889178</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1VariableFillPattern.html</anchorfile>
      <anchor>b53728818228c3fd3709c6a25b40854a</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;dst_patch_box, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>computeFillBoxesOverlap</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1VariableFillPattern.html</anchorfile>
      <anchor>fd3a4f22bd226ea6c791a439e07d711c</anchor>
      <arglist>(const hier::BoxContainer &amp;fill_boxes, const hier::Box &amp;patch_box, const hier::Box &amp;data_box, const hier::PatchDataFactory &amp;patch_data_factory) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const hier::IntVector &amp;</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1VariableFillPattern.html</anchorfile>
      <anchor>05f8f125b550dd79746d8883f35e35b6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>getPatternName</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1VariableFillPattern.html</anchorfile>
      <anchor>30484157e23083990383cfb21c4d6772</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>std</name>
    <filename>namespacestd.html</filename>
  </compound>
</tagfile>
